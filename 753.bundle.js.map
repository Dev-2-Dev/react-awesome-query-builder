{"version":3,"file":"753.bundle.js","mappings":"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CNjxB,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,gBAGJm7B,OAAQ,CACNn7B,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBAGA,UACA,kBAKRg2B,KAAM,CACJp2B,gBAAiB,QACjBgM,QAAS,CACPoqB,KAAM,CACJh2B,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,kBAKR07B,KAAM,CACJ97B,gBAAiB,QACjBgM,QAAS,CACP8vB,KAAM,CACJ17B,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,kBAKR67B,SAAU,CACRj8B,gBAAiB,QACjBgM,QAAS,CACPiwB,SAAU,CACR77B,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,kBAKRo7B,OAAQ,CACN3oB,WAAY,SACZ7S,gBAAiB,gBACjBgM,QAAS,CACPwvB,OAAQ,CACNp7B,UAAW,CACT,gBACA,oBAGA,UACA,gBAGJs7B,YAAa,CACXt7B,UAAW,CACT,gBACA,oBAGA,UACA,kBAKRs7B,YAAa,CACX17B,gBAAiB,qBACjBgM,QAAS,CACP0vB,YAAa,CACXt7B,UAAW,CACT,uBACA,2BACA,qBACA,yBAGA,UACA,kBAKRkxB,QAAS,CACPtxB,gBAAiB,QACjBgM,QAAS,CACPslB,QAAS,CACPlxB,UAAW,CACT,QACA,YACA,UACA,eAEF8U,YAAa,CAGX,GAGJnZ,MAAO,CACLqE,UAAW,CACT,QACA,gBAKR,SAAU,CACRJ,gBAAiB,OACjB6S,WAAY,SACZ7G,QAAS,CACPqlB,OAAQ,CACNnc,YAAa,CACX9I,IAAK,GAEPhM,UAAW,CAET,OACA,MACA,OAGA,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,eAEFmX,QAAS,CACP+gB,MAAO,CACLnnB,MAAO,YAETsnB,UAAW,CACTtnB,MAAO,YAETwnB,KAAM,CACJxnB,MAAO,WAETynB,cAAe,CACbznB,MAAO,YAET0nB,QAAS,CACP1nB,MAAO,WAET2nB,iBAAkB,CA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","sources":["webpack://@react-awesome-query-builder/examples/../core/modules/utils/stuff.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/uuid.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/default.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/listValues.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/defaultUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/treeUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/validation.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/ruleUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/funcUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/queryBuilder.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/mongoDb.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/export.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/sql.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/spel.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/queryString.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/elasticSearch.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/autocomplete.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/funcs.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/index.js","webpack://@react-awesome-query-builder/examples/../core/modules/stores/constants.js","webpack://@react-awesome-query-builder/examples/../core/modules/stores/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/group.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/rule.js","webpack://@react-awesome-query-builder/examples/../core/modules/index.js","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialSelect.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialMultiSelect.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialFieldAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialValueSources.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/index.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialText.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialTextArea.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialDate.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialDateTime.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialTime.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialNumber.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialSlider.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialRange.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialBoolean.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialFieldSelect.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialButton.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialButtonGroup.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialConjs.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialSwitch.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialConfirm.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/config/index.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/tree.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/context.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/constants.js","webpack://@react-awesome-query-builder/examples/../ui/modules/actions/drag.js","webpack://@react-awesome-query-builder/examples/../ui/modules/actions/index.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/configUtils.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/stuff.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/validation.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/reactUtils.js","webpack://@react-awesome-query-builder/examples/../ui/modules/components/Query.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/QueryContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/RuleContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/SortableContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/Draggable.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Operator.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/utils.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/OperatorWrapper.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Field.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FieldWrapper.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/WidgetFactory.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Widget.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/OperatorOptions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Rule.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/GroupContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/GroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Group.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupExtActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupExt.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/SwitchGroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/SwitchGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/CaseGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Item.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/Builder.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/ValueField.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FuncSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FuncWidget.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaBoolean.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaDate.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaDateTime.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaMultiSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/operators/Proximity.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/config/index.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaText.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaTextArea.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaTime.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaNumber.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaSlider.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaFieldSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaConjs.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaButton.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaButtonGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/index.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaValueSources.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaSwitch.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/vanillaConfirm.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/hooks/useListValuesAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ sync [/\\\\](es-us(\\.js)"],"sourcesContent":["import Immutable, { Map } from \"immutable\";\n\n// RegExp.quote = function (str) {\n//     return str.replace(/([.?*+^$[\\]\\\\(){}|-])/g, \"\\\\$1\");\n// };\n\nexport const defaultValue = (value, _default) => {\n  return (typeof value === \"undefined\") ? _default : value;\n};\n\n// const immutableEqual = function(v1, v2) {\n//   if (v1 === v2) {\n//     return true;\n//   } else {\n//     return v1.equals(v2);\n//   }\n// };\n\nexport const deepEqual = function(v1, v2) {\n  if (v1 === v2) {\n    return true;\n  } else if (Map.isMap(v1)) {\n    return v1.equals(v2);\n  } else {\n    return JSON.stringify(v1) == JSON.stringify(v2);\n  }\n};\n\n// //Do sets have same values?\n// const eqSet = function (as, bs) {\n//   if (as.size !== bs.size) return false;\n//   for (var a of as) if (!bs.has(a)) return false;\n//   return true;\n// };\n\n\n// //Do arrays have same values?\n// const eqArrSet = function (arr1, arr2) {\n//   return eqSet(new Set(arr1), new Set(arr2));\n// };\n\nexport const shallowEqual = (a, b, deep = false) => {\n  if (a === b) {\n    return true;\n  } else if (Array.isArray(a))\n    return shallowEqualArrays(a, b, deep);\n  else if (Map.isMap(a))\n    return a.equals(b);\n  else if (typeof a == \"object\")\n    return shallowEqualObjects(a, b, deep);\n  else\n    return a === b;\n};\n\nfunction shallowEqualArrays(arrA, arrB, deep = false) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var isEqual = deep ? shallowEqual(arrA[i], arrB[i], deep) : arrA[i] === arrB[i];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowEqualObjects(objA, objB, deep = false) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n    var isEqual = deep ? shallowEqual(objA[key], objB[key], deep) : objA[key] === objB[key];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nconst isImmutable = (v) => {\n  return typeof v === \"object\" && v !== null && typeof v.toJS === \"function\";\n};\n\nexport function toImmutableList(v) {\n  return (isImmutable(v) ? v : new Immutable.List(v));\n}\n\nexport function applyToJS(v) {\n  return (isImmutable(v) ? v.toJS() : v);\n}\n\nexport const escapeRegExp = (string) => {\n  return string.replace(/[.*+?^${}()|[\\]\\\\/]/g, \"\\\\$&\"); // $& means the whole matched string\n};\n\n\n\nexport const isJsonLogic = (logic) => (\n  typeof logic === \"object\" // An object\n  && logic !== null // but not null\n  && !Array.isArray(logic) // and not an array\n  && Object.keys(logic).length === 1 // with exactly one key\n);\n\nexport function sleep(delay) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\n\n// [1, 4, 9] + [1, 5, 9] => [1, 4, 5, 9]\n// Used for merging arrays of operators for different widgets of 1 type\nexport function mergeArraysSmart(arr1, arr2) {\n  if (!arr1) arr1 = [];\n  if (!arr2) arr2 = [];\n  return arr2\n    .map(op => [op, arr1.indexOf(op)])\n    .map(([op, ind], i, orig) => {\n      if (ind == -1) {\n        const next = orig.slice(i+1);\n        const prev = orig.slice(0, i);\n        const after = prev.reverse().find(([_cop, ci]) => ci != -1);\n        const before = next.find(([_cop, ci]) => ci != -1);\n        if (before)\n          return [op, \"before\", before[0]];\n        else if (after)\n          return [op, \"after\", after[0]];\n        else\n          return [op, \"append\", null];\n      } else {\n      // already exists\n        return null;\n      }\n    })\n    .filter(x => x !== null)\n    .reduce((acc, [newOp, rel, relOp]) => {\n      const ind = acc.indexOf(relOp);\n      if (acc.indexOf(newOp) == -1) {\n        if (ind > -1) {\n        // insert after or before\n          acc.splice( ind + (rel == \"after\" ? 1 : 0), 0, newOp );\n        } else {\n        // insert to end or start\n          acc.splice( (rel == \"append\" ? Infinity : 0), 0, newOp );\n        }\n      }\n      return acc;\n    }, arr1.slice());\n}\n\nconst isDev = () => (typeof process !== \"undefined\" && process.env && process.env.NODE_ENV == \"development\");\n\nexport const getLogger = (devMode = false) => {\n  const verbose = devMode != undefined ? devMode : isDev(); \n  return verbose ? console : {\n    error: () => {},\n    log: () => {},\n    warn: () => {},\n    debug: () => {},\n    info: () => {},\n  };\n};\n\nexport const getFirstDefined = (arr = []) => {\n  let ret;\n  for (let i = 0 ; i < arr.length ; i++) {\n    const v = arr[i];\n    if (v !== undefined) {\n      ret = v;\n      break;\n    }\n  }\n  return ret;\n};\n\nexport const logger = getLogger();\n\n","// Had to make uuid use a constant seed so it would generate same sequence across runs. This was needed\n// so server side rendering and client side rendering yield same results (e.g. the uuid is used when rendering\n// the concunctions with their name and id)\nvar query_builder_seed = 0;\nexport default () => {\n  // Generate a random GUID http://stackoverflow.com/a/2117523.\n  const timePart = (new Date().getTime().toString(16)+\"FF\").substr(0,11);\n  const s = \"ssssssss-xxxx-4xxx-yxxx-x\".replace(/[xys]/g, (c) => {\n    const r = c === \"s\" ? Math.floor(Math.random() * 16) : (query_builder_seed++) & 0xf;\n    const v = c === \"x\" ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n  return s + timePart;\n};\n","\n\nexport const settings = {\n  formatField: (field, parts, label2, fieldDefinition, config, isForDisplay) => {\n    if (isForDisplay)\n      return label2;\n    else\n      return field;\n  },\n\n\n  valueSourcesInfo: {\n    value: {},\n  },\n  fieldSeparator: \".\",\n  fieldSeparatorDisplay: \".\",\n  canReorder: true,\n  canRegroup: true,\n  canDeleteLocked: false,\n  canLeaveEmptyGroup: true,\n  shouldCreateEmptyGroup: false,\n  canShortMongoQuery: true,\n  removeEmptyGroupsOnLoad: true,\n  removeIncompleteRulesOnLoad: true,\n  removeInvalidMultiSelectValuesOnLoad: true,\n  setOpOnChangeField: [\"keep\", \"default\"], // 'default' (default if present), 'keep' (keep prev from last field), 'first', 'none'\n  groupOperators: [\"some\", \"all\", \"none\"],\n\n  defaultGroupConjunction: \"AND\",\n\n  // localization\n  locale: {\n    moment: \"en\",\n  },\n  valueLabel: \"Value\",\n  valuePlaceholder: \"Value\",\n  fieldLabel: \"Field\",\n  operatorLabel: \"Operator\",\n  funcLabel: \"Function\",\n  fieldPlaceholder: \"Select field\",\n  funcPlaceholder: \"Select function\",\n  operatorPlaceholder: \"Select operator\",\n  lockLabel: \"Lock\",\n  lockedLabel: \"Locked\",\n  deleteLabel: null,\n  addGroupLabel: \"Add group\",\n  addCaseLabel: \"Add condition\",\n  addDefaultCaseLabel: \"Add default condition\",\n  defaultCaseLabel: \"Default:\",\n  addRuleLabel: \"Add rule\",\n  addSubRuleLabel: \"Add sub rule\",\n  delGroupLabel: \"\",\n  notLabel: \"Not\",\n  valueSourcesPopupTitle: \"Select value source\",\n  removeRuleConfirmOptions: null,\n  removeGroupConfirmOptions: null,\n\n};\n","\nconst isObject = (v) => (typeof v == \"object\" && v !== null); // object or array\nconst listValue = (v, title) => (isObject(v) ? v : {value: v, title: (title !== undefined ? title : v)});\n\n// convert {<value>: <title>, ..} or [value, ..] to normal [{value, title}, ..]\nexport const listValuesToArray = (listValuesObj) => {\n  if (!isObject(listValuesObj))\n    return listValuesObj;\n  if (Array.isArray(listValuesObj))\n    return listValuesObj.map(v => listValue(v));\n  \n  let listValuesArr = [];\n  for (let v in listValuesObj) {\n    const title = listValuesObj[v];\n    listValuesArr.push(listValue(v, title));\n  }\n  return listValuesArr;\n};\n\n// listValues can be {<value>: <title>, ..} or [{value, title}, ..] or [value, ..]\nexport const getItemInListValues = (listValues, value) => {\n  if (Array.isArray(listValues)) {\n    const values = listValues.map(v => listValue(v));\n    return values.find(v => (v.value === value)) || values.find(v => (`${v.value}` === value));\n  } else {\n    return listValues[value] !== undefined ? listValue(value, listValues[value]) : undefined;\n  }\n};\n\nexport const getTitleInListValues = (listValues, value) => {\n  if (listValues == undefined)\n    return value;\n  const it = getItemInListValues(listValues, value);\n  return it !== undefined ? it.title : value;\n};\n\nexport const getValueInListValues = (listValues, value) => {\n  if (listValues == undefined)\n    return value;\n  const it = getItemInListValues(listValues, value);\n  return it !== undefined ? it.value : value;\n};\n\nexport const mapListValues = (listValues, mapFn) => {\n  let ret = [];\n  if (Array.isArray(listValues)) {\n    for (let v of listValues) {\n      const lv = mapFn(listValue(v));\n      if (lv != null)\n        ret.push(lv);\n    }\n  } else {\n    for (let value in listValues) {\n      const lv = mapFn(listValue(value, listValues[value]));\n      if (lv != null)\n        ret.push(lv);\n    }\n  }\n  return ret;\n};\n","import Immutable from \"immutable\";\nimport uuid from \"./uuid\";\nimport {getFieldConfig, getOperatorConfig} from \"./configUtils\";\nimport {getNewValueForFieldOp, getFirstField, getFirstOperator} from \"../utils/ruleUtils\";\n\n\nexport const defaultField = (config, canGetFirst = true, parentRuleGroupPath = null) => {\n  return typeof config.settings.defaultField === \"function\"\n    ? config.settings.defaultField(parentRuleGroupPath) \n    : (config.settings.defaultField || (canGetFirst ? getFirstField(config, parentRuleGroupPath) : null));\n};\n\nexport const defaultOperator = (config, field, canGetFirst = true) => {\n  let fieldConfig = getFieldConfig(config, field);\n  let fieldOperators = fieldConfig && fieldConfig.operators || [];\n  let fieldDefaultOperator = fieldConfig && fieldConfig.defaultOperator;\n  if (!fieldOperators.includes(fieldDefaultOperator))\n    fieldDefaultOperator = null;\n  if (!fieldDefaultOperator && canGetFirst)\n    fieldDefaultOperator = getFirstOperator(config, field);\n  let op = typeof config.settings.defaultOperator === \"function\"\n    ? config.settings.defaultOperator(field, fieldConfig) : fieldDefaultOperator;\n  return op;\n};\n\n//used for complex operators like proximity\nexport const defaultOperatorOptions = (config, operator, field) => {\n  let operatorConfig = operator ? getOperatorConfig(config, operator, field) : null;\n  if (!operatorConfig)\n    return null; //new Immutable.Map();\n  return operatorConfig.options ? new Immutable.Map(\n    operatorConfig.options\n    && operatorConfig.options.defaults || {}\n  ) : null;\n};\n\nexport const defaultRuleProperties = (config, parentRuleGroupPath = null, item = null) => {\n  let field = null, operator = null;\n  const {setDefaultFieldAndOp, showErrorMessage} = config.settings;\n  if (item) {\n    field = item?.properties?.field;\n    operator = item?.properties?.operator;\n  } else if (setDefaultFieldAndOp) {\n    field = defaultField(config, true, parentRuleGroupPath);\n    operator = defaultOperator(config, field);\n  }\n  let current = new Immutable.Map({\n    field: field,\n    operator: operator,\n    value: new Immutable.List(),\n    valueSrc: new Immutable.List(),\n    //used for complex operators like proximity\n    operatorOptions: defaultOperatorOptions(config, operator, field),\n  });\n  if (showErrorMessage) {\n    current = current.set(\"valueError\", new Immutable.List());\n  }\n  \n  if (field && operator) {\n    let {newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      config, config, current, field, operator, \"operator\", false\n    );\n    current = current\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType);\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError);\n    }\n  }\n  return current; \n};\n\n\nexport const defaultGroupConjunction = (config, fieldConfig = null) => {\n  fieldConfig = getFieldConfig(config, fieldConfig); // if `fieldConfig` is field name, not config\n  const conjs = fieldConfig && fieldConfig.conjunctions || Object.keys(config.conjunctions);\n  if (conjs.length == 1)\n    return conjs[0];\n  return config.settings.defaultGroupConjunction || config.settings.defaultConjunction || conjs[0];\n};\n\nexport const defaultConjunction = (config) =>\n  config.settings.defaultConjunction || Object.keys(config.conjunctions)[0];\n\nexport const defaultGroupProperties = (config, fieldConfig = null) => new Immutable.Map({\n  conjunction: defaultGroupConjunction(config, fieldConfig),\n  not: false\n});\n\nexport const defaultItemProperties = (config, item) => {\n  return item && item.type == \"group\" \n    ? defaultGroupProperties(config, item?.properties?.field) \n    : defaultRuleProperties(config, null, item);\n};\n\nexport const defaultRule = (id, config) => ({\n  [id]: new Immutable.Map({\n    type: \"rule\",\n    id: id,\n    properties: defaultRuleProperties(config)\n  })\n});\n\nexport const defaultRoot = (config) => {\n  return new Immutable.Map({\n    type: \"group\",\n    id: uuid(),\n    children1: new Immutable.OrderedMap({ ...defaultRule(uuid(), config) }),\n    properties: defaultGroupProperties(config)\n  });\n};\n\nexport const createListFromArray = (ids) => {\n  return new Immutable.List(ids);\n};\n\nexport const emptyProperies = () => new Immutable.Map();\n","import Immutable  from \"immutable\";\n\n/**\n * @param {Immutable.List} path\n * @param {...string} suffix\n * @return {Immutable.List}\n */\nexport const expandTreePath = (path, ...suffix) =>\n  path.interpose(\"children1\").withMutations((list) => {\n    list.skip(1);\n    list.push.apply(list, suffix);\n    return list;\n  });\n\n\n/**\n * @param {Immutable.List} path\n * @param {...string} suffix\n * @return {Immutable.List}\n */\nexport const expandTreeSubpath = (path, ...suffix) =>\n  path.interpose(\"children1\").withMutations((list) => {\n    list.push.apply(list, suffix);\n    return list;\n  });\n\n\n/**\n * @param {Immutable.Map} path\n * @param {Immutable.List} path\n * @return {Immutable.Map}\n */\nexport const getItemByPath = (tree, path) => {\n  let children = new Immutable.OrderedMap({ [tree.get(\"id\")] : tree });\n  let res = tree;\n  path.forEach((id) => {\n    res = children.get(id);\n    children = res.get(\"children1\");\n  });\n  return res;\n};\n\n\n/**\n * Remove `path` in every item\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const removePathsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path) {\n    const itemPath = path.push(item.get(\"id\"));\n    if (item.get(\"path\")) {\n      newTree = newTree.removeIn(expandTreePath(itemPath, \"path\"));\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      children.map((child, _childId) => {\n        _processNode(child, itemPath);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List());\n\n  return newTree;\n};\n\n\n/**\n * Remove `isLocked` in items that inherit parent's `isLocked`\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const removeIsLockedInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, isParentLocked = false) {\n    const itemPath = path.push(item.get(\"id\"));\n    const isLocked = item.getIn([\"properties\", \"isLocked\"]);\n    if (isParentLocked && isLocked) {\n      newTree = newTree.deleteIn(expandTreePath(itemPath, \"properties\", \"isLocked\"));\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      children.map((child, _childId) => {\n        _processNode(child, itemPath, isLocked || isParentLocked);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List());\n\n  return newTree;\n};\n\n\n/**\n * Set correct `path` and `id` in every item\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const fixPathsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, lev, nodeId) {\n    if (!item) return;\n    const currPath = item.get(\"path\");\n    const currId = item.get(\"id\");\n    const itemId = currId || nodeId;\n    const itemPath = path.push(itemId);\n    if (!currPath || !currPath.equals(itemPath)) {\n      newTree = newTree.setIn(expandTreePath(itemPath, \"path\"), itemPath);\n    }\n    if (!currId) {\n      newTree = newTree.setIn(expandTreePath(itemPath, \"id\"), itemId);\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      if (children.constructor.name == \"Map\") {\n        // protect: should me OrderedMap, not Map (issue #501)\n        newTree = newTree.setIn(\n          expandTreePath(itemPath, \"children1\"), \n          new Immutable.OrderedMap(children)\n        );\n      }\n      children.map((child, childId) => {\n        _processNode(child, itemPath, lev + 1, childId);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List(), 0);\n\n\n  return newTree;\n};\n\nexport const fixEmptyGroupsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, lev, nodeId) {\n    if (!item) return false;\n    const itemId = item.get(\"id\") || nodeId;\n    const itemPath = path.push(itemId);\n\n    const children = item.get(\"children1\");\n    if (children) {\n      const allChildrenGone = children.map((child, childId) => {\n        return _processNode(child, itemPath, lev + 1, childId);\n      }).reduce((curr, v) => (curr && v), true);\n      if ((children.size == 0 || allChildrenGone) && lev > 0) {\n        newTree = newTree.deleteIn(expandTreePath(itemPath));\n        return true;\n      }\n    }\n    return false;\n  }\n\n  _processNode(tree, new Immutable.List(), 0);\n\n\n  return newTree;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @return {Object} {flat, items}\n */\nexport const getFlatTree = (tree) => {\n  let flat = [];\n  let items = {};\n  let realHeight = 0;\n\n  function _flatizeTree (item, path, insideCollapsed, insideLocked, insideRuleGroup, lev, info, parentType, caseId) {\n    const type = item.get(\"type\");\n    const collapsed = item.get(\"collapsed\");\n    const id = item.get(\"id\");\n    const children = item.get(\"children1\");\n    const isLocked = item.getIn([\"properties\", \"isLocked\"]);\n    const childrenIds = children ? children.map((_child, childId) => childId) : null;\n    const isRuleGroup = type == \"rule_group\";\n    // tip: count rule_group as 1 rule\n    const isLeaf = !insideRuleGroup && (!children || isRuleGroup);\n\n    const itemsBefore = flat.length;\n    const top = realHeight;\n    flat.push(id);\n    if (!insideCollapsed)\n      realHeight += 1;\n    info.height = (info.height || 0) + 1;\n\n    items[id] = {\n      type: type,\n      parent: path.length ? path[path.length-1] : null,\n      parentType: parentType,\n      caseId: type == \"case_group\" ? id : caseId,\n      isDefaultCase: type == \"case_group\" && !children,\n      path: path.concat(id),\n      lev: lev,\n      leaf: !children,\n      index: itemsBefore,\n      id: id,\n      children: childrenIds,\n      leafsCount: 0,\n      _top: itemsBefore,\n      //_height: (itemsAfter - itemsBefore),\n      top: (insideCollapsed ? null : top),\n      //height: height,\n      //bottom: (insideCollapsed ? null : top) + height,\n      collapsed: collapsed,\n      node: item,\n      isLocked: isLocked || insideLocked,\n    };\n\n    if (children) {\n      let subinfo = {};\n      children.map((child, _childId) => {\n        _flatizeTree(\n          child, path.concat(id), \n          insideCollapsed || collapsed, insideLocked || isLocked, insideRuleGroup || isRuleGroup,\n          lev + 1, subinfo, type, type == \"case_group\" ? id : caseId\n        );\n      });\n      if (!collapsed) {\n        info.height = (info.height || 0) + (subinfo.height || 0);\n      }\n    }\n    \n    if (caseId && isLeaf) {\n      items[caseId].leafsCount++;\n    }\n\n    const itemsAfter = flat.length;\n    const _bottom = realHeight;\n    const height = info.height;\n        \n    Object.assign(items[id], {\n      _height: (itemsAfter - itemsBefore),\n      height: height,\n      bottom: (insideCollapsed ? null : top) + height,\n    });\n  }\n\n  _flatizeTree(tree, [], false, false, false, 0, {}, null, null);\n\n  for (let i = 0 ; i < flat.length ; i++) {\n    const prevId = i > 0 ? flat[i-1] : null;\n    const nextId = i < (flat.length-1) ? flat[i+1] : null;\n    let item = items[flat[i]];\n    item.prev = prevId;\n    item.next = nextId;\n  }\n\n  return {flat, items};\n};\n\n\n/**\n * Returns count of reorderable(!) nodes\n * @param {Immutable.Map} tree\n * @return {Integer}\n */\nexport const getTotalReordableNodesCountInTree = (tree) => {\n  if (!tree)\n    return -1;\n  let cnt = 0;\n\n  function _processNode (item, path, lev) {\n    let id, children, type;\n    if (typeof item.get === \"function\") {\n      id = item.get(\"id\");\n      children = item.get(\"children1\");\n      type = item.get(\"type\");\n    } else {\n      id = item.id;\n      children = item.children1;\n      type = item.type;\n    }\n    const isRuleGroup = type == \"rule_group\";\n    cnt++;\n    //tip: rules in rule-group can be reordered only inside\n    if (children && !isRuleGroup) {\n      children.map((child, _childId) => {\n        _processNode(child, path.concat(id), lev + 1);\n      });\n    }\n  }\n\n  _processNode(tree, [], 0);\n    \n  return cnt - 1; // -1 for root\n};\n\n/**\n * Returns count of rules (leafs, i.e. don't count groups)\n * @param {Immutable.Map} tree\n * @return {Integer}\n */\nexport const getTotalRulesCountInTree = (tree) => {\n  if (!tree)\n    return -1;\n  let cnt = 0;\n\n  function _processNode (item, path, lev) {\n    let id, children, type;\n    if (typeof item.get === \"function\") {\n      id = item.get(\"id\");\n      children = item.get(\"children1\");\n      type = item.get(\"type\");\n    } else {\n      id = item.id;\n      children = item.children1;\n      type = item.type;\n    }\n    \n    if (type == \"rule\" || type == \"rule_group\") {\n      // tip: count rule_group as 1 rule\n      cnt++;\n    } else if (children) {\n      children.map((child, _childId) => {\n        _processNode(child, path.concat(id), lev + 1);\n      });\n    }\n  }\n\n  _processNode(tree, [], 0);\n    \n  return cnt;\n};\n\nexport const getTreeBadFields = (tree) => {\n  let badFields = [];\n\n  function _processNode (item, path, lev) {\n    const id = item.get(\"id\");\n    const children = item.get(\"children1\");\n    const valueError = item.getIn([\"properties\", \"valueError\"]);\n    const field = item.getIn([\"properties\", \"field\"]);\n    if (valueError && valueError.size > 0 && valueError.filter(v => v != null).size > 0) {\n      badFields.push(field);\n    }\n    if (children) {\n      children.map((child, _childId) => {\n        _processNode(child, path.concat(id), lev + 1);\n      });\n    }\n  }\n\n  if (tree)\n    _processNode(tree, [], 0);\n    \n  return Array.from(new Set(badFields));\n};\n\n\n// Remove fields that can be calced: \"id\", \"path\"\n// Remove empty fields: \"operatorOptions\"\nexport const getLightTree = (tree, children1AsArray = false) => {\n  let newTree = tree;\n\n  function _processNode (item, itemId) {\n    if (item.path)\n      delete item.path;\n    if (!children1AsArray && itemId)\n      delete item.id;\n    let properties = item.properties;\n    if (properties) {\n      if (properties.operatorOptions == null)\n        delete properties.operatorOptions;\n    }\n\n    const children = item.children1;\n    if (children) {\n      for (let id in children) {\n        _processNode(children[id], id);\n      }\n      if (children1AsArray) {\n        item.children1 = Object.values(children);\n      }\n    }\n  }\n\n  _processNode(tree, null);\n\n  return newTree;\n};\n\nexport const getSwitchValues = (tree) => {\n  let vals = [];\n  const children = tree.get(\"children1\");\n  if (children) {\n    children.map((child) => {\n      const value = child.getIn([\"properties\", \"value\"]);\n      let caseValue;\n      if (value && value.size == 1) {\n        caseValue = value.get(0);\n        if (Array.isArray(caseValue) && caseValue.length == 0) {\n          caseValue = null;\n        }\n      } else {\n        caseValue = null;\n      }\n      vals = [...vals, caseValue];\n    });\n  }\n\n  return vals;\n};\n\nexport const isEmptyTree = (tree) => (!tree.get(\"children1\") || tree.get(\"children1\").size == 0);\n\nexport const hasChildren = (tree, path) => tree.getIn(expandTreePath(path, \"children1\")).size > 0;\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig,\n} from \"./configUtils\";\nimport {getOperatorsForField, getWidgetForFieldOp, getNewValueForFieldOp} from \"../utils/ruleUtils\";\nimport {defaultValue, deepEqual, logger} from \"../utils/stuff\";\nimport {getItemInListValues} from \"../utils/listValues\";\nimport {defaultOperatorOptions} from \"../utils/defaultUtils\";\nimport {fixPathsInTree} from \"../utils/treeUtils\";\nimport omit from \"lodash/omit\";\nimport { List } from \"immutable\";\n\n\nconst typeOf = (v) => {\n  if (typeof v == \"object\" && v !== null && Array.isArray(v))\n    return \"array\";\n  else\n    return (typeof v);\n};\n\nconst isTypeOf = (v, type) => {\n  if (typeOf(v) == type)\n    return true;\n  if (type == \"number\" && !isNaN(v))\n    return true; //can be casted\n  return false;\n};\n\nexport const validateAndFixTree = (newTree, _oldTree, newConfig, oldConfig) => {\n  let tree = validateTree(newTree, _oldTree, newConfig, oldConfig);\n  tree = fixPathsInTree(tree);\n  return tree;\n};\n\nexport const validateTree = (tree, _oldTree, config, oldConfig, removeEmptyGroups, removeIncompleteRules) => {\n  if (removeEmptyGroups === undefined) {\n    removeEmptyGroups = config.settings.removeEmptyGroupsOnLoad;\n  }\n  if (removeIncompleteRules === undefined) {\n    removeIncompleteRules = config.settings.removeIncompleteRulesOnLoad;\n  }\n  const c = {\n    config, oldConfig, removeEmptyGroups, removeIncompleteRules\n  };\n  return validateItem(tree, [], null, {}, c);\n};\n\nfunction validateItem (item, path, itemId, meta, c) {\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\" || type == \"case_group\" || type == \"switch_group\") && children && children.size) {\n    return validateGroup(item, path, itemId, meta, c);\n  } else if (type === \"rule\") {\n    return validateRule(item, path, itemId, meta, c);\n  } else {\n    return item;\n  }\n}\n\nfunction validateGroup (item, path, itemId, meta, c) {\n  const {removeEmptyGroups} = c;\n  let id = item.get(\"id\");\n  let children = item.get(\"children1\");\n  const oldChildren = children;\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  }\n\n  //validate children\n  let submeta = {};\n  children = children\n    .map( (currentChild, childId) => validateItem(currentChild, path.concat(id), childId, submeta, c) );\n  if (removeEmptyGroups)\n    children = children.filter((currentChild) => (currentChild != undefined));\n  let sanitized = submeta.sanitized || (oldChildren.size != children.size);\n  if (!children.size && removeEmptyGroups && path.length) {\n    sanitized = true;\n    item = undefined;\n  }\n\n  if (sanitized)\n    meta.sanitized = true;\n  if (sanitized && item)\n    item = item.set(\"children1\", children);\n  return item;\n}\n\n\nfunction validateRule (item, path, itemId, meta, c) {\n  const {removeIncompleteRules, config, oldConfig} = c;\n  const {showErrorMessage} = config.settings;\n  let id = item.get(\"id\");\n  let properties = item.get(\"properties\");\n  let field = properties.get(\"field\") || null;\n  let operator = properties.get(\"operator\") || null;\n  let operatorOptions = properties.get(\"operatorOptions\");\n  let valueSrc = properties.get(\"valueSrc\");\n  let value = properties.get(\"value\");\n  let valueError = properties.get(\"valueError\");\n  const oldSerialized = {\n    field,\n    operator,\n    operatorOptions: operatorOptions ? operatorOptions.toJS() : {},\n    valueSrc: valueSrc ? valueSrc.toJS() : null,\n    value: value ? value.toJS() : null,\n    valueError: valueError ? valueError.toJS() : null,\n  };\n  let _wasValid = field && operator && value && !value.includes(undefined);\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  }\n\n  //validate field\n  const fieldDefinition = field ? getFieldConfig(config, field) : null;\n  if (field && !fieldDefinition) {\n    logger.warn(`No config for field ${field}`);\n    field = null;\n  }\n  if (field == null) {\n    properties = [\"operator\", \"operatorOptions\", \"valueSrc\", \"value\"].reduce((map, key) => map.delete(key), properties);\n    operator = null;\n  }\n\n  //validate operator\n  // Backward compatibility: obsolete operator range_between\n  if (operator == \"range_between\" || operator == \"range_not_between\") {\n    operator = operator == \"range_between\" ? \"between\" : \"not_between\";\n    console.info(`Fixed operator ${properties.get(\"operator\")} to ${operator}`);\n    properties = properties.set(\"operator\", operator);\n  }\n  const operatorDefinition = operator ? getOperatorConfig(config, operator, field) : null;\n  if (operator && !operatorDefinition) {\n    console.warn(`No config for operator ${operator}`);\n    operator = null;\n  }\n  const availOps = field ? getOperatorsForField(config, field) : [];\n  if (!availOps) {\n    console.warn(`Type of field ${field} is not supported`);\n    operator = null;\n  } else if (operator && availOps.indexOf(operator) == -1) {\n    if (operator == \"is_empty\" || operator == \"is_not_empty\") {\n      // Backward compatibility: is_empty #494\n      operator = operator == \"is_empty\" ? \"is_null\" : \"is_not_null\";\n      console.info(`Fixed operator ${properties.get(\"operator\")} to ${operator} for ${field}`);\n      properties = properties.set(\"operator\", operator);\n    } else {\n      console.warn(`Operator ${operator} is not supported for field ${field}`);\n      operator = null;\n    }\n  }\n  if (operator == null) {\n    properties = properties.delete(\"operatorOptions\");\n    properties = properties.delete(\"valueSrc\");\n    properties = properties.delete(\"value\");\n  }\n\n  //validate operator options\n  operatorOptions = properties.get(\"operatorOptions\");\n  let _operatorCardinality = operator ? defaultValue(operatorDefinition.cardinality, 1) : null;\n  if (!operator || operatorOptions && !operatorDefinition.options) {\n    operatorOptions = null;\n    properties = properties.delete(\"operatorOptions\");\n  } else if (operator && !operatorOptions && operatorDefinition.options) {\n    operatorOptions = defaultOperatorOptions(config, operator, field);\n    properties = properties.set(\"operatorOptions\", operatorOptions);\n  }\n\n  //validate values\n  valueSrc = properties.get(\"valueSrc\");\n  value = properties.get(\"value\");\n  const canFix = !showErrorMessage;\n  const isEndValue = true;\n  let {newValue, newValueSrc, newValueError} = getNewValueForFieldOp(config, oldConfig, properties, field, operator, null, canFix, isEndValue);\n  value = newValue;\n  valueSrc = newValueSrc;\n  valueError = newValueError;\n  properties = properties.set(\"value\", value);\n  properties = properties.set(\"valueSrc\", valueSrc);\n  if (showErrorMessage) {\n    properties = properties.set(\"valueError\", valueError);\n  }\n\n  const newSerialized = {\n    field,\n    operator,\n    operatorOptions: operatorOptions ? operatorOptions.toJS() : {},\n    valueSrc: valueSrc ? valueSrc.toJS() : null,\n    value: value ? value.toJS() : null,\n    valueError: valueError ? valueError.toJS() : null,\n  };\n  const sanitized = !deepEqual(oldSerialized, newSerialized);\n  const isComplete = field && operator && value && !value.includes(undefined);\n  if (sanitized)\n    meta.sanitized = true;\n  if (!isComplete && removeIncompleteRules)\n    item = undefined;\n  else if (sanitized)\n    item = item.set(\"properties\", properties);\n\n  return item;\n}\n\n\n/**\n * \n * @param {bool} canFix true is useful for func values to remove bad args\n * @param {bool} isEndValue false if value is in process of editing by user\n * @param {bool} isRawValue false is used only internally from validateFuncValue\n * @return {array} [validError, fixedValue] - if validError === null and canFix == true, fixedValue can differ from value if was fixed\n */\nexport const validateValue = (config, leftField, field, operator, value, valueType, valueSrc, asyncListValues, canFix = false, isEndValue = false, isRawValue = true) => {\n  let validError = null;\n  let fixedValue = value;\n\n  if (value != null) {\n    if (valueSrc == \"field\") {\n      [validError, fixedValue] = validateFieldValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, isEndValue, canFix);\n    } else if (valueSrc == \"func\") {\n      [validError, fixedValue] = validateFuncValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, isEndValue, canFix);\n    } else if (valueSrc == \"value\" || !valueSrc) {\n      [validError, fixedValue] = validateNormalValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, isEndValue, canFix);\n    }\n\n    if (!validError) {\n      const fieldConfig = getFieldConfig(config, field);\n      const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const operatorDefinition = operator ? getOperatorConfig(config, operator, field) : null;\n      const fieldWidgetDefinition = omit(getFieldWidgetConfig(config, field, operator, w, valueSrc), [\"factory\"]);\n      const rightFieldDefinition = (valueSrc == \"field\" ? getFieldConfig(config, value) : null);\n      const fieldSettings = fieldWidgetDefinition; // widget definition merged with fieldSettings\n\n      const fn = fieldWidgetDefinition.validateValue;\n      if (typeof fn == \"function\") {\n        const args = [\n          fixedValue, \n          fieldSettings,\n          operator,\n          operatorDefinition\n        ];\n        if (valueSrc == \"field\")\n          args.push(rightFieldDefinition);\n        const validResult = fn(...args);\n        if (typeof validResult == \"boolean\") {\n          if (validResult == false)\n            validError = \"Invalid value\";\n        } else {\n          validError = validResult;\n        }\n      }\n    }\n  }\n\n  if (isRawValue && validError) {\n    console.warn(\"[RAQB validate]\", `Field ${field}: ${validError}`);\n  }\n  \n  return [validError, fixedValue];\n};\n\nconst validateValueInList = (value, listValues, canFix, isEndValue, removeInvalidMultiSelectValuesOnLoad) => {\n  const values = List.isList(value) ? value.toJS() : (value instanceof Array ? [...value] : undefined);\n  if (values) {\n    const [goodValues, badValues] = values.reduce(([goodVals, badVals], val) => {\n      const vv = getItemInListValues(listValues, val);\n      if (vv == undefined) {\n        return [goodVals, [...badVals, val]];\n      } else {\n        return [[...goodVals, vv.value], badVals];\n      }\n    }, [[], []]);\n    const plural = badValues.length > 1;\n    const err = badValues.length ? `${plural ? \"Values\" : \"Value\"} ${badValues.join(\", \")} ${plural ? \"are\" : \"is\"} not in list of values` : null;\n    // always remove bad values at tree validation as user can't unselect them (except AntDesign widget)\n    if (removeInvalidMultiSelectValuesOnLoad !== undefined) {\n      canFix = removeInvalidMultiSelectValuesOnLoad;\n    } else {\n      canFix = canFix || isEndValue;\n    }\n    return [err, canFix ? goodValues : value];\n  } else {\n    const vv = getItemInListValues(listValues, value);\n    if (vv == undefined) {\n      return [`Value ${value} is not in list of values`, value];\n    } else {\n      value = vv.value;\n    }\n    return [null, value];\n  }\n};\n\n/**\n* \n*/\nconst validateNormalValue = (leftField, field, value, valueSrc, valueType, asyncListValues, config, operator = null, isEndValue = false, canFix = false) => {\n  if (field) {\n    const fieldConfig = getFieldConfig(config, field);\n    const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const wConfig = config.widgets[w];\n    const wType = wConfig.type;\n    const jsType = wConfig.jsType;\n    const fieldSettings = fieldConfig.fieldSettings;\n\n    if (valueType && valueType != wType)\n      return [`Value should have type ${wType}, but got value of type ${valueType}`, value];\n    if (jsType && !isTypeOf(value, jsType) && !fieldSettings.listValues) { //tip: can skip tye check for listValues\n      return [`Value should have JS type ${jsType}, but got value of type ${typeof value}`, value];\n    }\n\n    if (fieldSettings) {\n      const listValues = asyncListValues || fieldSettings.listValues;\n      if (listValues && !fieldSettings.allowCustomValues) {\n        return validateValueInList(value, listValues, canFix, isEndValue, config.settings.removeInvalidMultiSelectValuesOnLoad);\n      }\n      if (fieldSettings.min != null && value < fieldSettings.min) {\n        return [`Value ${value} < min ${fieldSettings.min}`, canFix ? fieldSettings.min : value];\n      }\n      if (fieldSettings.max != null && value > fieldSettings.max) {\n        return [`Value ${value} > max ${fieldSettings.max}`, canFix ? fieldSettings.max : value];\n      }\n    }\n  }\n\n  return [null, value];\n};\n\n\n/**\n* \n*/\nconst validateFieldValue = (leftField, field, value, _valueSrc, valueType, asyncListValues, config, operator = null, isEndValue = false, canFix = false) => {\n  const {fieldSeparator} = config.settings;\n  const isFuncArg = typeof field == \"object\" && field?._isFuncArg;\n  const leftFieldStr = Array.isArray(leftField) ? leftField.join(fieldSeparator) : leftField;\n  const rightFieldStr = Array.isArray(value) ? value.join(fieldSeparator) : value;\n  const rightFieldDefinition = getFieldConfig(config, value);\n  if (!rightFieldDefinition)\n    return [`Unknown field ${value}`, value];\n  if (rightFieldStr == leftFieldStr && !isFuncArg)\n    return [`Can't compare field ${leftField} with itself`, value];\n  if (valueType && valueType != rightFieldDefinition.type)\n    return [`Field ${value} is of type ${rightFieldDefinition.type}, but expected ${valueType}`, value];\n  return [null, value];\n};\n\n/**\n* \n*/\nconst validateFuncValue = (leftField, field, value, _valueSrc, valueType, asyncListValues, config, operator = null, isEndValue = false, canFix = false) => {\n  let fixedValue = value;\n\n  if (value) {\n    const funcKey = value.get(\"func\");\n    if (funcKey) {\n      const funcConfig = getFuncConfig(config, funcKey);\n      if (funcConfig) {\n        if (valueType && funcConfig.returnType != valueType)\n          return [`Function ${funcKey} should return value of type ${funcConfig.returnType}, but got ${valueType}`, value];\n        for (const argKey in funcConfig.args) {\n          const argConfig = funcConfig.args[argKey];\n          const args = fixedValue.get(\"args\");\n          const argVal = args ? args.get(argKey) : undefined;\n          const fieldDef = getFieldConfig(config, argConfig);\n          const argValue = argVal ? argVal.get(\"value\") : undefined;\n          const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n          if (argValue !== undefined) {\n            const [argValidError, fixedArgVal] = validateValue(\n              config, leftField, fieldDef, operator, argValue, argConfig.type, argValueSrc, asyncListValues, canFix, isEndValue, false\n            );\n            if (argValidError !== null) {\n              if (canFix) {\n                fixedValue = fixedValue.deleteIn([\"args\", argKey]);\n                if (argConfig.defaultValue !== undefined) {\n                  fixedValue = fixedValue.setIn([\"args\", argKey, \"value\"], argConfig.defaultValue);\n                  fixedValue = fixedValue.setIn([\"args\", argKey, \"valueSrc\"], \"value\");\n                }\n              } else {\n                return [`Invalid value of arg ${argKey} for func ${funcKey}: ${argValidError}`, value];\n              }\n            } else if (fixedArgVal !== argValue) {\n              fixedValue = fixedValue.setIn([\"args\", argKey, \"value\"], fixedArgVal);\n            }\n          } else if (isEndValue && argConfig.defaultValue === undefined && !canFix) {\n            return [`Value of arg ${argKey} for func ${funcKey} is required`, value];\n          }\n        }\n      } else return [`Unknown function ${funcKey}`, value];\n    } // else it's not function value\n  } // empty value\n\n  return [null, fixedValue];\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFieldRawConfig\n} from \"./configUtils\";\nimport {defaultValue, getFirstDefined} from \"../utils/stuff\";\nimport Immutable from \"immutable\";\nimport {validateValue} from \"../utils/validation\";\nimport last from \"lodash/last\";\n\nconst selectTypes = [\n  \"select\",\n  \"multiselect\",\n  \"treeselect\",\n  \"treemultiselect\",\n];\n\n/**\n * @param {object} config\n * @param {object} oldConfig\n * @param {Immutable.Map} current\n * @param {string} newField\n * @param {string} newOperator\n * @param {string} changedProp\n * @return {object} - {canReuseValue, newValue, newValueSrc, newValueType, newValueError}\n */\nexport const getNewValueForFieldOp = function (config, oldConfig = null, current, newField, newOperator, changedProp = null, canFix = true, isEndValue = false) {\n  if (!oldConfig)\n    oldConfig = config;\n  const currentField = current.get(\"field\");\n  const currentOperator = current.get(\"operator\");\n  const currentValue = current.get(\"value\");\n  const currentValueSrc = current.get(\"valueSrc\", new Immutable.List());\n  const currentValueType = current.get(\"valueType\", new Immutable.List());\n  const currentAsyncListValues = current.get(\"asyncListValues\");\n\n  //const isValidatingTree = (changedProp === null);\n  const {convertableWidgets, clearValueOnChangeField, clearValueOnChangeOp, showErrorMessage} = config.settings;\n\n  //const currentOperatorConfig = getOperatorConfig(oldConfig, currentOperator, currentField);\n  const newOperatorConfig = getOperatorConfig(config, newOperator, newField);\n  //const currentOperatorCardinality = currentOperator ? defaultValue(currentOperatorConfig.cardinality, 1) : null;\n  const operatorCardinality = newOperator ? defaultValue(newOperatorConfig.cardinality, 1) : null;\n  const currentFieldConfig = getFieldConfig(oldConfig, currentField);\n  const newFieldConfig = getFieldConfig(config, newField);\n\n  let canReuseValue = currentField && currentOperator && newOperator && currentValue != undefined\n    && (!changedProp \n      || changedProp == \"field\" && !clearValueOnChangeField \n      || changedProp == \"operator\" && !clearValueOnChangeOp)\n    && (currentFieldConfig && newFieldConfig && currentFieldConfig.type == newFieldConfig.type);\n  if (canReuseValue && selectTypes.includes(currentFieldConfig.type) && changedProp == \"field\") {\n    // different fields of select types has different listValues\n    canReuseValue = false;\n  }\n\n  // compare old & new widgets\n  for (let i = 0 ; i < operatorCardinality ; i++) {\n    const vs = currentValueSrc.get(i) || null;\n    const currentWidget = getWidgetForFieldOp(oldConfig, currentField, currentOperator, vs);\n    const newWidget = getWidgetForFieldOp(config, newField, newOperator, vs);\n    // need to also check value widgets if we changed operator and current value source was 'field'\n    // cause for select type op '=' requires single value and op 'in' requires array value\n    const currentValueWidget = vs == \"value\" ? currentWidget : getWidgetForFieldOp(oldConfig, currentField, currentOperator, \"value\");\n    const newValueWidget = vs == \"value\" ? newWidget : getWidgetForFieldOp(config, newField, newOperator, \"value\");\n\n    const canReuseWidget = newValueWidget == currentValueWidget || (convertableWidgets[currentValueWidget] || []).includes(newValueWidget);\n    if (!canReuseWidget)\n      canReuseValue = false;\n  }\n\n  if (currentOperator != newOperator && [currentOperator, newOperator].includes(\"proximity\"))\n    canReuseValue = false;\n\n  const firstWidgetConfig = getFieldWidgetConfig(config, newField, newOperator, null, currentValueSrc.first());\n  const valueSources = getValueSourcesForFieldOp(config, newField, newOperator);\n  \n  let valueFixes = {};\n  let valueErrors = Array.from({length: operatorCardinality}, () => null);\n  if (canReuseValue) {\n    for (let i = 0 ; i < operatorCardinality ; i++) {\n      const v = currentValue.get(i);\n      const vType = currentValueType.get(i) || null;\n      const vSrc = currentValueSrc.get(i) || null;\n      let isValidSrc = (valueSources.find(v => v == vSrc) != null);\n      if (!isValidSrc && i > 0 && vSrc == null)\n        isValidSrc = true; // make exception for range widgets (when changing op from '==' to 'between')\n      const asyncListValues = currentAsyncListValues;\n      const [validateError, fixedValue] = validateValue(\n        config, newField, newField, newOperator, v, vType, vSrc, asyncListValues, canFix, isEndValue\n      );\n      const isValid = !validateError;\n      // Allow bad value with error message\n      // But not on field change - in that case just drop bad value that can't be reused\n      // ? Maybe we should also drop bad value on op change?\n      // For bad multiselect value we have both error message + fixed value.\n      //  If we show error message, it will gone on next tree validation\n      const fixValue = fixedValue !== v;\n      const dropValue = !isValidSrc || !isValid && (changedProp == \"field\" || !showErrorMessage && !fixValue);\n      const showValueError = !!validateError && showErrorMessage && !dropValue && !fixValue;\n      if (showValueError) {\n        valueErrors[i] = validateError;\n      }\n      if (fixValue) {\n        valueFixes[i] = fixedValue;\n      }\n      if (dropValue) {\n        canReuseValue = false;\n        break;\n      }\n    }\n  }\n\n  // reuse value OR get defaultValue for cardinality 1 (it means default range values is not supported yet, todo)\n  let newValue = null, newValueSrc = null, newValueType = null, newValueError = null;\n  newValue = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n    let v = undefined;\n    if (canReuseValue) {\n      if (i < currentValue.size) {\n        v = currentValue.get(i);\n        if (valueFixes[i] !== undefined) {\n          v = valueFixes[i];\n        }\n      }\n    } else if (operatorCardinality == 1) {\n      v = getFirstDefined([\n        newFieldConfig?.defaultValue,\n        newFieldConfig?.fieldSettings?.defaultValue,\n        firstWidgetConfig?.defaultValue\n      ]);\n    }\n    return v;\n  }));\n\n  newValueSrc = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n    let vs = null;\n    if (canReuseValue) {\n      if (i < currentValueSrc.size)\n        vs = currentValueSrc.get(i);\n    } else if (valueSources.length == 1) {\n      vs = valueSources[0];\n    } else if (valueSources.length > 1) {\n      vs = valueSources[0];\n    }\n    return vs;\n  }));\n\n  if (showErrorMessage) {\n    if (newOperatorConfig && newOperatorConfig.validateValues && newValueSrc.toJS().filter(vs => vs == \"value\" || vs == null).length == operatorCardinality) {\n      // last element in `valueError` list is for range validation error\n      const jsValues = firstWidgetConfig && firstWidgetConfig.toJS \n        ? newValue.toJS().map(v => firstWidgetConfig.toJS(v, firstWidgetConfig)) \n        : newValue.toJS();\n      const rangeValidateError = newOperatorConfig.validateValues(jsValues);\n      if (showErrorMessage) {\n        valueErrors.push(rangeValidateError);\n      }\n    }\n    newValueError = new Immutable.List(valueErrors);\n  }\n\n  newValueType = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n    let vt = null;\n    if (canReuseValue) {\n      if (i < currentValueType.size)\n        vt = currentValueType.get(i);\n    } else if (operatorCardinality == 1 && firstWidgetConfig && firstWidgetConfig.type !== undefined) {\n      vt = firstWidgetConfig.type;\n    } else if (operatorCardinality == 1 && newFieldConfig && newFieldConfig.type !== undefined) {\n      vt = newFieldConfig.type == \"!group\" ? \"number\" : newFieldConfig.type;\n    }\n    return vt;\n  }));\n\n  return {canReuseValue, newValue, newValueSrc, newValueType, newValueError, operatorCardinality};\n};\n\nexport const getFirstField = (config, parentRuleGroupPath = null) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parentPathArr = typeof parentRuleGroupPath == \"string\" ? parentRuleGroupPath.split(fieldSeparator) : parentRuleGroupPath;\n  const parentField = parentRuleGroupPath ? getFieldRawConfig(config, parentRuleGroupPath) : config;\n\n  let firstField = parentField, key = null, keysPath = [];\n  do {\n    const subfields = firstField === config ? config.fields : firstField.subfields;\n    if (!subfields || !Object.keys(subfields).length) {\n      firstField = key = null;\n      break;\n    }\n    key = Object.keys(subfields)[0];\n    keysPath.push(key);\n    firstField = subfields[key];\n  } while (firstField.type == \"!struct\" || firstField.type == \"!group\");\n  return (parentPathArr || []).concat(keysPath).join(fieldSeparator);\n};\n\nexport const getOperatorsForField = (config, field) => {\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldOps = fieldConfig ? fieldConfig.operators : [];\n  return fieldOps;\n};\n\nexport const getFirstOperator = (config, field) => {\n  const fieldOps = getOperatorsForField(config, field);\n  return fieldOps ? fieldOps[0] : null;\n};\n\nexport const getFieldPath = (field, config, onlyKeys = false) => {\n  if (!field)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = Array.isArray(field) ? field : field.split(fieldSeparator);\n  if (onlyKeys)\n    return parts;\n  else\n    return parts\n      .map((_curr, ind, arr) => arr.slice(0, ind+1))\n      .map((parts) => parts.join(fieldSeparator));\n};\n\nexport const getFuncPathLabels = (field, config, parentField = null) => {\n  return getFieldPathLabels(field, config, parentField, \"funcs\", \"subfields\");\n};\n\nexport const getFieldPathLabels = (field, config, parentField = null, fieldsKey = \"fields\", subfieldsKey = \"subfields\") => {\n  if (!field)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = Array.isArray(field) ? field : field.split(fieldSeparator);\n  const parentParts = parentField ? (Array.isArray(parentField) ? parentField : parentField.split(fieldSeparator)) : [];\n  return parts\n    .slice(parentParts.length)\n    .map((_curr, ind, arr) => arr.slice(0, ind+1))\n    .map((parts) => [...parentParts, ...parts].join(fieldSeparator))\n    .map(part => {\n      const cnf = getFieldRawConfig(config, part, fieldsKey, subfieldsKey);\n      return cnf && cnf.label || cnf && last(part.split(fieldSeparator));\n    })\n    .filter(label => label != null);\n};\n\nexport const getFieldPartsConfigs = (field, config, parentField = null) => {\n  if (!field)\n    return null;\n  const parentFieldDef = parentField && getFieldRawConfig(config, parentField) || null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = Array.isArray(field) ? field : field.split(fieldSeparator);\n  const parentParts = parentField ? (Array.isArray(parentField) ? parentField : parentField.split(fieldSeparator)) : [];\n  return parts\n    .slice(parentParts.length)\n    .map((_curr, ind, arr) => arr.slice(0, ind+1))\n    .map((parts) => ({\n      part: [...parentParts, ...parts].join(fieldSeparator),\n      key: parts[parts.length - 1]\n    }))\n    .map(({part, key}) => {\n      const cnf = getFieldRawConfig(config, part);\n      return {key, cnf};\n    })\n    .map(({key, cnf}, ind, arr) => {\n      const parentCnf = ind > 0 ? arr[ind - 1].cnf : parentFieldDef;\n      return [key, cnf, parentCnf];\n    });\n};\n\nexport const getValueLabel = (config, field, operator, delta, valueSrc = null, isSpecialRange = false) => {\n  const isFuncArg = field && typeof field == \"object\" && !!field.func && !!field.arg;\n  const {showLabels} = config.settings;\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldWidgetConfig = getFieldWidgetConfig(config, field, operator, null, valueSrc) || {};\n  const mergedOpConfig = getOperatorConfig(config, operator, field) || {};\n    \n  const cardinality = isSpecialRange ? 1 : mergedOpConfig.cardinality;\n  let ret = null;\n  if (cardinality > 1) {\n    const valueLabels = fieldWidgetConfig.valueLabels || mergedOpConfig.valueLabels;\n    if (valueLabels)\n      ret = valueLabels[delta];\n    if (ret && typeof ret != \"object\") {\n      ret = {label: ret, placeholder: ret};\n    }\n    if (!ret) {\n      ret = {\n        label: config.settings.valueLabel + \" \" + (delta+1),\n        placeholder: config.settings.valuePlaceholder + \" \" + (delta+1),\n      };\n    }\n  } else {\n    let label = fieldWidgetConfig.valueLabel;\n    let placeholder = fieldWidgetConfig.valuePlaceholder;\n    if (isFuncArg) {\n      if (!label)\n        label = fieldConfig.label || field.arg;\n      if (!placeholder && !showLabels)\n        placeholder = fieldConfig.label || field.arg;\n    }\n\n    ret = {\n      label: label || config.settings.valueLabel, \n      placeholder: placeholder || config.settings.valuePlaceholder,\n    };\n  }\n  return ret;\n};\n\nfunction _getWidgetsAndSrcsForFieldOp (config, field, operator = null, valueSrc = null) {\n  let widgets = [];\n  let valueSrcs = [];\n  if (!field)\n    return {widgets, valueSrcs};\n  const isFuncArg = typeof field == \"object\" && (!!field.func && !!field.arg || field._isFuncArg);\n  const fieldConfig = getFieldConfig(config, field);\n  const opConfig = operator ? config.operators[operator] : null;\n  \n  if (fieldConfig && fieldConfig.widgets) {\n    for (const widget in fieldConfig.widgets) {\n      const widgetConfig = fieldConfig.widgets[widget];\n      // if (!config.widgets[widget]) {\n      //   continue;\n      // }\n      const widgetValueSrc = config.widgets[widget].valueSrc || \"value\";\n      let canAdd = true;\n      if (widget == \"field\") {\n        canAdd = canAdd && filterValueSourcesForField(config, [\"field\"], fieldConfig).length > 0;\n      }\n      if (widget == \"func\") {\n        canAdd = canAdd && filterValueSourcesForField(config, [\"func\"], fieldConfig).length > 0;\n      }\n      // If can't check operators, don't add\n      // Func args don't have operators\n      if (valueSrc == \"value\" && !widgetConfig.operators && !isFuncArg && field != \"!case_value\")\n        canAdd = false;\n      if (widgetConfig.operators && operator)\n        canAdd = canAdd && widgetConfig.operators.indexOf(operator) != -1;\n      if (valueSrc && valueSrc != widgetValueSrc && valueSrc != \"const\")\n        canAdd = false;\n      if (opConfig && opConfig.cardinality == 0 && (widgetValueSrc != \"value\"))\n        canAdd = false;\n      if (canAdd) {\n        widgets.push(widget);\n        let canAddValueSrc = fieldConfig.valueSources && fieldConfig.valueSources.indexOf(widgetValueSrc) != -1;\n        if (opConfig && opConfig.valueSources && opConfig.valueSources.indexOf(widgetValueSrc) == -1)\n          canAddValueSrc = false;\n        if (canAddValueSrc && !valueSrcs.find(v => v == widgetValueSrc))\n          valueSrcs.push(widgetValueSrc);\n      }\n    }\n  }\n\n  const widgetWeight = (w) => {\n    let wg = 0;\n    if (fieldConfig.preferWidgets) {\n      if (fieldConfig.preferWidgets.includes(w))\n        wg += (10 - fieldConfig.preferWidgets.indexOf(w));\n    } else if (w == fieldConfig.mainWidget) {\n      wg += 100;\n    }\n    if (w == \"field\") {\n      wg -= 1;\n    }\n    if (w == \"func\") {\n      wg -= 2;\n    }\n    return wg;\n  };\n\n  widgets.sort((w1, w2) => (widgetWeight(w2) - widgetWeight(w1)));\n    \n  return {widgets, valueSrcs};\n}\n\nexport const getWidgetsForFieldOp = (config, field, operator, valueSrc = null) => {\n  const {widgets} = _getWidgetsAndSrcsForFieldOp(config, field, operator, valueSrc);\n  return widgets;\n};\n\nexport const filterValueSourcesForField = (config, valueSrcs, fieldDefinition) => {\n  if (!fieldDefinition)\n    return valueSrcs;\n  return valueSrcs.filter(vs => {\n    let canAdd = true;\n    if (vs == \"field\") {\n      if (config._fieldsCntByType) {\n        // tip: LHS field can be used as arg in RHS function\n        const minCnt = fieldDefinition._isFuncArg ? 0 : 1;\n        canAdd = canAdd && config._fieldsCntByType[fieldDefinition.type] > minCnt;\n      }\n    }\n    if (vs == \"func\") {\n      if (config._funcsCntByType)\n        canAdd = canAdd && !!config._funcsCntByType[fieldDefinition.type];\n      if (fieldDefinition.funcs)\n        canAdd = canAdd && fieldDefinition.funcs.length > 0;\n    }\n    return canAdd;\n  });\n};\n\nexport const getValueSourcesForFieldOp = (config, field, operator, fieldDefinition = null, leftFieldForFunc = null) => {\n  const {valueSrcs} = _getWidgetsAndSrcsForFieldOp(config, field, operator, null);\n  const filteredValueSrcs = filterValueSourcesForField(config, valueSrcs, fieldDefinition);\n  return filteredValueSrcs;\n};\n\nexport const getWidgetForFieldOp = (config, field, operator, valueSrc = null) => {\n  const {widgets} = _getWidgetsAndSrcsForFieldOp(config, field, operator, valueSrc);\n  let widget = null;\n  if (widgets.length)\n    widget = widgets[0];\n  return widget;\n};\n\nexport const formatFieldName = (field, config, meta, parentField = null) => {\n  if (!field) return;\n  const fieldDef = getFieldConfig(config, field) || {};\n  const {fieldSeparator} = config.settings;\n  const fieldParts = Array.isArray(field) ? field : field.split(fieldSeparator);\n  let fieldName = Array.isArray(field) ? field.join(fieldSeparator) : field;\n  if (fieldDef.tableName) { // legacy\n    const fieldPartsCopy = [...fieldParts];\n    fieldPartsCopy[0] = fieldDef.tableName;\n    fieldName = fieldPartsCopy.join(fieldSeparator);\n  }\n  if (fieldDef.fieldName) {\n    fieldName = fieldDef.fieldName;\n  }\n  if (parentField) {\n    const parentFieldDef = getFieldConfig(config, parentField) || {};\n    let parentFieldName = parentField;\n    if (parentFieldDef.fieldName) {\n      parentFieldName = parentFieldDef.fieldName;\n    }\n    if (fieldName.indexOf(parentFieldName + fieldSeparator) == 0) {\n      fieldName = fieldName.slice((parentFieldName + fieldSeparator).length);\n    } else {\n      meta.errors.push(`Can't cut group ${parentFieldName} from field ${fieldName}`);\n    }\n  }\n  return fieldName;\n};\n\n","import merge from \"lodash/merge\";\nimport uuid from \"../utils/uuid\";\nimport mergeWith from \"lodash/mergeWith\";\nimport {settings as defaultSettings} from \"../config/default\";\nimport moment from \"moment\";\nimport {mergeArraysSmart} from \"./stuff\";\nimport {getWidgetForFieldOp} from \"./ruleUtils\";\nimport clone from \"clone\";\n\n\nexport const extendConfig = (config, configId) => {\n  //operators, defaultOperator - merge\n  //widgetProps (including valueLabel, valuePlaceholder, hideOperator, operatorInlineLabel) - concrete by widget\n\n  if (config.__configId) {\n    return config;\n  }\n  \n  config = {...config};\n  config.settings = merge({}, defaultSettings, config.settings);\n  config._fieldsCntByType = {};\n  config._funcsCntByType = {};\n\n  config.types = clone(config.types);\n  _extendTypesConfig(config.types, config);\n\n  config.fields = clone(config.fields);\n  config.__fieldNames = {};\n  _extendFieldsConfig(config.fields, config);\n\n  config.funcs = clone(config.funcs);\n  _extendFuncArgsConfig(config.funcs, config);\n\n  moment.locale(config.settings.locale.moment);\n\n  Object.defineProperty(config, \"__configId\", {\n    enumerable: false,\n    writable: false,\n    value: configId || uuid()\n  });\n\n  return config;\n};\n\nfunction _extendTypesConfig(typesConfig, config) {\n  for (let type in typesConfig) {\n    let typeConfig = typesConfig[type];\n    _extendTypeConfig(type, typeConfig, config);\n  }\n}\n\nfunction _extendTypeConfig(type, typeConfig, config) {\n  let operators = null, defaultOperator = null;\n  typeConfig.mainWidget = typeConfig.mainWidget || Object.keys(typeConfig.widgets).filter(w => w != \"field\" && w != \"func\")[0];\n  for (let widget in typeConfig.widgets) {\n    let typeWidgetConfig = typeConfig.widgets[widget];\n    if (typeWidgetConfig.operators) {\n      let typeWidgetOperators = typeWidgetConfig.operators;\n      if (typeConfig.excludeOperators) {\n        typeWidgetOperators = typeWidgetOperators.filter(op => !typeConfig.excludeOperators.includes(op));\n      }\n      operators = mergeArraysSmart(operators, typeWidgetOperators);\n    }\n    if (typeWidgetConfig.defaultOperator)\n      defaultOperator = typeWidgetConfig.defaultOperator;\n    if (widget == typeConfig.mainWidget) {\n      typeWidgetConfig = merge({}, {widgetProps: typeConfig.mainWidgetProps || {}}, typeWidgetConfig);\n    }\n    typeConfig.widgets[widget] = typeWidgetConfig;\n  }\n  if (!typeConfig.valueSources)\n    typeConfig.valueSources = Object.keys(config.settings.valueSourcesInfo);\n  for (let valueSrc of typeConfig.valueSources) {\n    if (valueSrc != \"value\" && !typeConfig.widgets[valueSrc]) {\n      typeConfig.widgets[valueSrc] = {\n      };\n    }\n  }\n  if (!typeConfig.operators && operators)\n    typeConfig.operators = Array.from(new Set(operators)); //unique\n  if (!typeConfig.defaultOperator && defaultOperator)\n    typeConfig.defaultOperator = defaultOperator;\n}\n\nfunction _extendFieldsConfig(subconfig, config, path = []) {\n  for (let field in subconfig) {\n    _extendFieldConfig(subconfig[field], config, [...path, field]);\n    if (subconfig[field].subfields) {\n      _extendFieldsConfig(subconfig[field].subfields, config, [...path, field]);\n    }\n  }\n}\n\nfunction _extendFuncArgsConfig(subconfig, config) {\n  if (!subconfig) return;\n  for (let funcKey in subconfig) {\n    const funcDef = subconfig[funcKey];\n    if (funcDef.returnType) {\n      if (!config._funcsCntByType[funcDef.returnType])\n        config._funcsCntByType[funcDef.returnType] = 0;\n      config._funcsCntByType[funcDef.returnType]++;\n    }\n    for (let argKey in funcDef.args) {\n      _extendFieldConfig(funcDef.args[argKey], config, null, true);\n    }\n\n    // isOptional can be only in the end\n    if (funcDef.args) {\n      const argKeys = Object.keys(funcDef.args);\n      let tmpIsOptional = true;\n      for (const argKey of argKeys.reverse()) {\n        const argDef = funcDef.args[argKey];\n        if (!tmpIsOptional && argDef.isOptional) {\n          delete argDef.isOptional;\n        }\n        if (!argDef.isOptional)\n          tmpIsOptional = false;\n      }\n    }\n\n    if (funcDef.subfields) {\n      _extendFuncArgsConfig(funcDef.subfields, config);\n    }\n  }\n}\n\nfunction _extendFieldConfig(fieldConfig, config, path = null, isFuncArg = false) {\n  let operators = null, defaultOperator = null;\n  const typeConfig = config.types[fieldConfig.type];\n  const excludeOperatorsForField = fieldConfig.excludeOperators || [];\n  if (fieldConfig.type != \"!struct\" && fieldConfig.type != \"!group\") {\n    const keysToPutInFieldSettings = [\"listValues\", \"allowCustomValues\", \"validateValue\"];\n    if (!fieldConfig.fieldSettings)\n      fieldConfig.fieldSettings = {};\n    for (const k of keysToPutInFieldSettings) {\n      if (fieldConfig[k]) {\n        fieldConfig.fieldSettings[k] = fieldConfig[k];\n        delete fieldConfig[k];\n      }\n    }\n\n    if (fieldConfig.fieldSettings.listValues) {\n      if (config.settings.normalizeListValues) {\n        fieldConfig.fieldSettings.listValues = config.settings.normalizeListValues(\n          fieldConfig.fieldSettings.listValues, fieldConfig.type, fieldConfig.fieldSettings\n        );\n      }\n    }\n\n    if (!typeConfig) {\n      //console.warn(`No type config for ${fieldConfig.type}`);\n      fieldConfig.disabled = true;\n      return;\n    }\n    if (!isFuncArg) {\n      if (!config._fieldsCntByType[fieldConfig.type])\n        config._fieldsCntByType[fieldConfig.type] = 0;\n      config._fieldsCntByType[fieldConfig.type]++;\n    }\n\n    if (!fieldConfig.widgets)\n      fieldConfig.widgets = {};\n    if (isFuncArg)\n      fieldConfig._isFuncArg = true;\n    fieldConfig.mainWidget = fieldConfig.mainWidget || typeConfig.mainWidget;\n    fieldConfig.valueSources = fieldConfig.valueSources || typeConfig.valueSources;\n    const excludeOperatorsForType = typeConfig.excludeOperators || [];\n    for (let widget in typeConfig.widgets) {\n      let fieldWidgetConfig = fieldConfig.widgets[widget] || {};\n      const typeWidgetConfig = typeConfig.widgets[widget] || {};\n      if (!isFuncArg) {\n        //todo: why I've excluded isFuncArg ?\n        const excludeOperators = [...excludeOperatorsForField, ...excludeOperatorsForType];\n        const shouldIncludeOperators = fieldConfig.preferWidgets\n          && (widget == \"field\" || fieldConfig.preferWidgets.includes(widget))\n          || excludeOperators.length > 0;\n        if (fieldWidgetConfig.operators) {\n          const addOperators = fieldWidgetConfig.operators.filter(o => !excludeOperators.includes(o));\n          operators = [...(operators || []), ...addOperators];\n        } else if (shouldIncludeOperators && typeWidgetConfig.operators) {\n          const addOperators = typeWidgetConfig.operators.filter(o => !excludeOperators.includes(o));\n          operators = [...(operators || []), ...addOperators];\n        }\n        if (fieldWidgetConfig.defaultOperator)\n          defaultOperator = fieldWidgetConfig.defaultOperator;\n      }\n\n      if (widget == fieldConfig.mainWidget) {\n        fieldWidgetConfig = merge({}, {widgetProps: fieldConfig.mainWidgetProps || {}}, fieldWidgetConfig);\n      }\n      fieldConfig.widgets[widget] = fieldWidgetConfig;\n    }\n    if (!isFuncArg) {\n      if (!fieldConfig.operators && operators)\n        fieldConfig.operators = Array.from(new Set(operators));\n      if (!fieldConfig.defaultOperator && defaultOperator)\n        fieldConfig.defaultOperator = defaultOperator;\n    }\n  }\n\n  const computedFieldName = computeFieldName(config, path);\n  if (computedFieldName) {\n    fieldConfig.fieldName = computedFieldName;\n  }\n\n  if (path && fieldConfig.fieldName) {\n    config.__fieldNames[fieldConfig.fieldName] = path;\n  }\n}\n\nexport const getFieldRawConfig = (config, field, fieldsKey = \"fields\", subfieldsKey = \"subfields\") => {\n  if (!field)\n    return null;\n  if (field == \"!case_value\") {\n    return {\n      type: \"case_value\",\n      mainWidget: \"case_value\",\n      widgets: {\n        \"case_value\": config.widgets[\"case_value\"]\n      }\n    };\n  }\n  const fieldSeparator = config.settings.fieldSeparator;\n  //field = normalizeField(config, field);\n  const parts = Array.isArray(field) ? field : field.split(fieldSeparator);\n  const targetFields = config[fieldsKey];\n  if (!targetFields)\n    return null;\n\n  let fields = targetFields;\n  let fieldConfig = null;\n  let path = [];\n  for (let i = 0 ; i < parts.length ; i++) {\n    const part = parts[i];\n    path.push(part);\n    const pathKey = path.join(fieldSeparator);\n    fieldConfig = fields[pathKey];\n    if (i < parts.length-1) {\n      if (fieldConfig && fieldConfig[subfieldsKey]) {\n        fields = fieldConfig[subfieldsKey];\n        path = [];\n      } else {\n        fieldConfig = null;\n      }\n    }\n  }\n\n  return fieldConfig;\n};\n\nconst computeFieldName = (config, path) => {\n  if (!path)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  let l = [...path], r = [], f, fConfig;\n  while ((f = l.pop()) !== undefined && l.length > 0) {\n    r.unshift(f);\n    fConfig = getFieldRawConfig(config, l);\n    if (fConfig.fieldName) {\n      return [fConfig.fieldName, ...r].join(fieldSeparator);\n    }\n  }\n  return null;\n};\n\nexport const normalizeField = (config, field) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  const fieldStr = Array.isArray(field) ? field.join(fieldSeparator) : field;\n  if (config.__fieldNames[fieldStr]) {\n    return config.__fieldNames[fieldStr].join(fieldSeparator);\n  }\n  return fieldStr;\n};\n\nexport const getFuncConfig = (config, func) => {\n  if (!func)\n    return null;\n  const funcConfig = getFieldRawConfig(config, func, \"funcs\", \"subfields\");\n  if (!funcConfig)\n    return null; //throw new Error(\"Can't find func \" + func + \", please check your config\");\n  return funcConfig;\n};\n\nexport const getFuncArgConfig = (config, funcKey, argKey) => {\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig)\n    return null; //throw new Error(`Can't find func ${funcKey}, please check your config`);\n  const argConfig = funcConfig.args && funcConfig.args[argKey] || null;\n  if (!argConfig)\n    return null; //throw new Error(`Can't find arg ${argKey} for func ${funcKey}, please check your config`);\n\n  //merge, but don't merge operators (rewrite instead)\n  const typeConfig = config.types[argConfig.type] || {};\n  let ret = mergeWith({}, typeConfig, argConfig || {}, (objValue, srcValue, _key, _object, _source, _stack) => {\n    if (Array.isArray(objValue)) {\n      return srcValue;\n    }\n  });\n\n  return ret;\n};\n\nexport const getFieldConfig = (config, field) => {\n  if (!field)\n    return null;\n  if (typeof field == \"object\" && !field.func && !!field.type)\n    return field;\n  if (typeof field == \"object\" && field.func && field.arg)\n    return getFuncArgConfig(config, field.func, field.arg);\n  const fieldConfig = getFieldRawConfig(config, field);\n  if (!fieldConfig)\n    return null; //throw new Error(\"Can't find field \" + field + \", please check your config\");\n\n  //merge, but don't merge operators (rewrite instead)\n  const typeConfig = config.types[fieldConfig.type] || {};\n  let ret = mergeWith({}, typeConfig, fieldConfig || {}, (objValue, srcValue, _key, _object, _source, _stack) => {\n    if (Array.isArray(objValue)) {\n      return srcValue;\n    }\n  });\n\n  return ret;\n};\n\nexport const getOperatorConfig = (config, operator, field = null) => {\n  if (!operator)\n    return null;\n  const opConfig = config.operators[operator];\n  if (field) {\n    const fieldConfig = getFieldConfig(config, field);\n    const widget = getWidgetForFieldOp(config, field, operator);\n    const widgetConfig = config.widgets[widget] || {};\n    const fieldWidgetConfig = (fieldConfig && fieldConfig.widgets ? fieldConfig.widgets[widget] : {}) || {};\n    const widgetOpProps = (widgetConfig.opProps || {})[operator];\n    const fieldWidgetOpProps = (fieldWidgetConfig.opProps || {})[operator];\n    const mergedOpConfig = merge({}, opConfig, widgetOpProps, fieldWidgetOpProps);\n    return mergedOpConfig;\n  } else {\n    return opConfig;\n  }\n};\n\nexport const getFieldWidgetConfig = (config, field, operator, widget = null, valueSrc = null) => {\n  if (!field)\n    return null;\n  if (!(operator || widget) && valueSrc != \"const\" && field != \"!case_value\")\n    return null;\n  const fieldConfig = getFieldConfig(config, field);\n  if (!widget)\n    widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n  const widgetConfig = config.widgets[widget] || {};\n  const fieldWidgetConfig = (fieldConfig && fieldConfig.widgets ? fieldConfig.widgets[widget] : {}) || {};\n  const fieldWidgetProps = (fieldWidgetConfig.widgetProps || {});\n  const valueFieldSettings = (valueSrc == \"value\" || !valueSrc) && fieldConfig && fieldConfig.fieldSettings || {}; // useful to take 'validateValue'\n  const mergedConfig = merge({}, widgetConfig, fieldWidgetProps, valueFieldSettings);\n  return mergedConfig;\n};\n","\nimport {getFieldConfig, getFuncConfig} from \"../utils/configUtils\";\nimport {filterValueSourcesForField} from \"../utils/ruleUtils\";\nimport Immutable from \"immutable\";\n\n// helpers\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\n/**\n * @param {*} value\n * @param {string} valueSrc - 'value' | 'field' | 'func'\n * @param {object} config\n * @return {* | undefined} - undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport const completeValue = (value, valueSrc, config) => {\n  if (valueSrc == \"func\")\n    return completeFuncValue(value, config);\n  else\n    return value;\n};\n\n/**\n * @param {Immutable.Map} value\n * @param {object} config\n * @return {Immutable.Map | undefined} - undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport const completeFuncValue = (value, config) => {\n  const _checkFuncValue = (value) => {\n    if (!value)\n      return undefined;\n    const funcKey = value.get(\"func\");\n    const funcConfig = funcKey && getFuncConfig(config, funcKey);\n    if (!funcConfig)\n      return undefined;\n    let complValue = value;\n    let tmpHasOptional = false;\n    for (const argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      const {valueSources, isOptional, defaultValue} = argConfig;\n      const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n      const args = complValue.get(\"args\");\n      const argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n      const argVal = args ? args.get(argKey) : undefined;\n      const argValue = argVal ? argVal.get(\"value\") : undefined;\n      const argValueSrc = (argVal ? argVal.get(\"valueSrc\") : undefined) || argDefaultValueSrc;\n      if (argValue !== undefined) {\n        const completeArgValue = completeValue(argValue, argValueSrc, config);\n        if (completeArgValue === undefined) {\n          return undefined;\n        } else if (completeArgValue !== argValue) {\n          complValue = complValue.setIn([\"args\", argKey, \"value\"], completeArgValue);\n        }\n        if (tmpHasOptional) {\n          // has gap\n          return undefined;\n        }\n      } else if (defaultValue !== undefined && !isObject(defaultValue)) {\n        complValue = complValue.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n        complValue = complValue.setIn([\"args\", argKey, \"valueSrc\"], \"value\");\n      } else if (isOptional) {\n        // optional\n        tmpHasOptional = true;\n      } else {\n        // missing value\n        return undefined;\n      }\n    }\n    return complValue;\n  };\n\n  return _checkFuncValue(value);\n};\n\n\n/**\n * @param {Immutable.Map} value \n * @return {array} - [usedFields, badFields]\n */\nconst getUsedFieldsInFuncValue = (value, config) => {\n  let usedFields = [];\n  let badFields = [];\n\n  const _traverse = (value) => {\n    const args = value && value.get(\"args\");\n    if (!args) return;\n    for (const arg of args.values()) {\n      if (arg.get(\"valueSrc\") == \"field\") {\n        const rightField = arg.get(\"value\");\n        if (rightField) {\n          const rightFieldDefinition = config ? getFieldConfig(config, rightField) : undefined;\n          if (config && !rightFieldDefinition)\n            badFields.push(rightField);\n          else\n            usedFields.push(rightField);\n        }\n      } else if (arg.get(\"valueSrc\") == \"func\") {\n        _traverse(arg.get(\"value\"));\n      }\n    }\n  };\n\n  _traverse(value);\n\n  return [usedFields, badFields];\n};\n\n\n/**\n * Used @ FuncWidget\n * @param {Immutable.Map} value \n * @param {string} funcKey \n * @param {object} config \n */\nexport const setFunc = (value, funcKey, config) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  value = value || new Immutable.Map();\n  if (Array.isArray(funcKey)) {\n    // fix for cascader\n    funcKey = funcKey.join(fieldSeparator);\n  }\n  value = value.set(\"func\", funcKey);\n  value = value.set(\"args\", new Immutable.Map());\n\n  // defaults\n  const funcConfig = funcKey && getFuncConfig(config, funcKey);\n  if (funcConfig) {\n    for (const argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      const {valueSources, defaultValue} = argConfig;\n      const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n      const firstValueSrc = filteredValueSources.length ? filteredValueSources[0] : undefined;\n      const defaultValueSrc = defaultValue ? (isObject(defaultValue) && !!defaultValue.func ? \"func\" : \"value\") : undefined;\n      const argDefaultValueSrc = defaultValueSrc || firstValueSrc;\n      if (defaultValue !== undefined) {\n        value = value.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n      }\n      if (argDefaultValueSrc) {\n        value = value.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n      }\n    }\n  }\n\n  return value;\n};\n\nconst getDefaultArgValue = ({defaultValue: value}) => {\n  if (isObject(value) && !Immutable.Map.isMap(value) && value.func) {\n    return Immutable.fromJS(value, function (k, v) {\n      return Immutable.Iterable.isIndexed(v) ? v.toList() : v.toOrderedMap();\n    });\n  }\n  return value;\n};\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {*} argVal \n* @param {object} argConfig \n*/\nexport const setArgValue = (value, argKey, argVal, argConfig, config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey, \"value\"], argVal);\n\n    // set default arg value sorce\n    const {valueSources} = argConfig;\n    const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n    const argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n    if (argDefaultValueSrc) {\n      value = value.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n    }\n  }\n  return value;\n};\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {string} argValSrc \n* @param {object} argConfig \n*/\nexport const setArgValueSrc = (value, argKey, argValSrc, _argConfig, _config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey], new Immutable.Map({valueSrc: argValSrc}));\n  }\n  return value;\n};\n","import {defaultValue} from \"../utils/stuff\";\nimport {getFieldConfig, getOperatorConfig} from \"../utils/configUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {formatFieldName} from \"../utils/ruleUtils\";\nimport {completeValue} from \"../utils/funcUtils\";\nimport {Map} from \"immutable\";\n\n/*\n Build tree to http://querybuilder.js.org/ like format\n\n Example:\n {\n    \"condition\": \"AND\",\n    \"rules\": [\n        {\n            \"id\": \"price\",\n            \"field\": \"price\",\n            \"type\": \"double\",\n            \"input\": \"text\",\n            \"operator\": \"less\",\n            \"value\": \"10.25\"\n        },\n        {\n            \"condition\": \"OR\",\n            \"rules\": [\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"2\"\n                },\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"1\"\n                }\n            ]\n        }\n    ]\n }\n */\n\n\nexport const queryBuilderFormat = (item, config) => {\n  //meta is mutable\n  let meta = {\n    usedFields: []\n  };\n  const res = formatItem(item, config, meta);\n  if (!res)\n    return undefined;\n  return {\n    ...res, \n    ...meta\n  };\n};\n\n\nconst formatItem = (item, config, meta) => {\n  if (!item) return undefined;\n\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") && children && children.size) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  const id = item.get(\"id\");\n\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const not = properties.get(\"not\");\n\n  const resultQuery = {\n    id,\n    rules: list.toList(),\n    condition: conjunction.toUpperCase(),\n    not,\n  };\n  return resultQuery;\n};\n\n\nconst formatRule = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const id = item.get(\"id\");\n\n  const operator = properties.get(\"operator\");\n  const options = properties.get(\"operatorOptions\");\n  let field = properties.get(\"field\");\n  let value = properties.get(\"value\");\n  let valueSrc = properties.get(\"valueSrc\");\n  let valueType = properties.get(\"valueType\");\n  const hasUndefinedValues = value.filter(v => v === undefined).size > 0;\n\n  if (field == null || operator == null || hasUndefinedValues)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const fieldType = fieldDefinition.type || \"undefined\";\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  const typeConfig = config.types[fieldDefinition.type] || {};\n  const fieldName = formatFieldName(field, config, meta);\n\n  if (value.size < cardinality)\n    return undefined;\n\n  if (meta.usedFields.indexOf(field) == -1)\n    meta.usedFields.push(field);\n  value = value.toArray();\n  valueSrc = valueSrc.toArray();\n  valueType = valueType.toArray();\n  let values = [];\n  for (let i = 0 ; i < value.length ; i++) {\n    const val = {\n      type: valueType[i],\n      value: value[i],\n    };\n    values.push(val);\n    if (valueSrc[i] == \"field\") {\n      const secondField = value[i];\n      if (meta.usedFields.indexOf(secondField) == -1)\n        meta.usedFields.push(secondField);\n    }\n  }\n  let operatorOptions = options ? options.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length)\n    operatorOptions = null;\n      \n  let ruleQuery = {\n    id,\n    fieldName,\n    type: fieldType,\n    input: typeConfig.mainWidget,\n    operator,\n  };\n  if (operatorOptions)\n    ruleQuery.operatorOptions = operatorOptions;\n  ruleQuery.values = values;\n  return ruleQuery;\n};\n","import {defaultValue} from \"../utils/stuff\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig\n} from \"../utils/configUtils\";\nimport {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {completeValue} from \"../utils/funcUtils\";\nimport {Map} from \"immutable\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\n\n// http://jsonlogic.com/\n\n\nexport const jsonLogicFormat = (item, config) => {\n  //meta is mutable\n  let meta = {\n    usedFields: [],\n    errors: []\n  };\n  \n  const logic = formatItem(item, config, meta, true);\n  \n  // build empty data\n  const {errors, usedFields} = meta;\n  const {fieldSeparator} = config.settings;\n  let data = {};\n  for (let ff of usedFields) {\n    const def = getFieldConfig(config, ff) || {};\n    const parts = ff.split(fieldSeparator);\n    let tmp = data;\n    for (let i = 0 ; i < parts.length ; i++) {\n      const p = parts[i];\n      const pdef = getFieldConfig(config, parts.slice(0, i+1)) || {};\n      if (i != parts.length - 1) {\n        if (pdef.type == \"!group\" && pdef.mode != \"struct\") {\n          if (!tmp[p])\n            tmp[p] = [{}];\n          tmp = tmp[p][0];\n        } else {\n          if (!tmp[p])\n            tmp[p] = {};\n          tmp = tmp[p];\n        }\n      } else {\n        if (!tmp[p])\n          tmp[p] = null; // can use def.type for sample values\n      }\n    }\n  }\n    \n  return {\n    errors,\n    logic,\n    data,\n  };\n};\n\n\nconst formatItem = (item, config, meta, isRoot, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const isLocked = properties.get(\"isLocked\");\n  const {lockedOp} = config.settings.jsonLogic;\n  let ret;\n  if (type === \"group\" || type === \"rule_group\") {\n    ret = formatGroup(item, config, meta, isRoot, parentField);\n  } else if (type === \"rule\") {\n    ret = formatRule(item, config, meta, parentField);\n  }\n  if (isLocked && ret && lockedOp) {\n    ret = { [lockedOp] : ret };\n  }\n  return ret;\n};\n\n\nconst formatGroup = (item, config, meta, isRoot, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\");\n  const field = properties.get(\"field\");\n  if (!children) return undefined;\n  \n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n  const conj = conjunctionDefinition.jsonLogicConj || conjunction.toLowerCase();\n  const not = properties.get(\"not\");\n  if (conj != \"and\" && conj != \"or\") {\n    meta.errors.push(`Conjunction ${conj} is not supported`);\n    return undefined;\n  }\n\n  const isRuleGroup = (type === \"rule_group\" && !isRoot);\n  const groupField = isRuleGroup && mode != \"struct\" ? field : parentField;\n  const groupOperator = properties.get(\"operator\");\n  const groupOperatorDefinition = groupOperator && getOperatorConfig(config, groupOperator, field) || null;\n  const formattedValue = formatItemValue(config, properties, meta, groupOperator, parentField);\n  const isGroup0 = isRuleGroup && (!groupOperator || groupOperatorDefinition.cardinality == 0);\n\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, false, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  \n  if (isRuleGroup && mode != \"struct\" && !isGroup0) {\n    // \"count\" rule can have no \"having\" children, but should have number value\n    if (formattedValue == undefined)\n      return undefined;\n  } else {\n    if (!list.size)\n      return undefined;\n  }\n\n  let resultQuery = {};\n  if (list.size == 1 && !isRoot)\n    resultQuery = list.first();\n  else\n    resultQuery[conj] = list.toList().toJS();\n  \n  // revert\n  if (not) {\n    resultQuery = { \"!\": resultQuery };\n  }\n\n  // rule_group (issue #246)\n  if (isRuleGroup && mode != \"struct\") {\n    const formattedField = formatField(meta, config, field, parentField);\n    if (isGroup0) {\n      // config.settings.groupOperators\n      const op = groupOperator || \"some\";\n      resultQuery = {\n        [op]: [\n          formattedField,\n          resultQuery\n        ]\n      };\n    } else {\n      // there is rule for count\n      const filter = !list.size \n        ? formattedField\n        : {\n          \"filter\": [\n            formattedField,\n            resultQuery\n          ]\n        };\n      const count = {\n        \"reduce\": [\n          filter,\n          { \"+\": [1, { var: \"accumulator\" }] },\n          0\n        ]\n      };\n      resultQuery = formatLogic(config, properties, count, formattedValue, groupOperator);\n    }\n  }\n  \n  return resultQuery;\n};\n\n\nconst formatRule = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n\n  let operator = properties.get(\"operator\");\n  let operatorOptions = properties.get(\"operatorOptions\");\n  operatorOptions = operatorOptions ? operatorOptions.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length)\n    operatorOptions = null;\n\n  if (field == null || operator == null)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  let operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDefinition.reversedOp;\n  let revOperatorDefinition = getOperatorConfig(config, reversedOp, field) || {};\n\n  // check op\n  let isRev = false;\n  if (!operatorDefinition.jsonLogic && !revOperatorDefinition.jsonLogic) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  if (!operatorDefinition.jsonLogic && revOperatorDefinition.jsonLogic) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [operatorDefinition, revOperatorDefinition] = [revOperatorDefinition, operatorDefinition];\n  }\n\n  const formattedValue = formatItemValue(config, properties, meta, operator, parentField);\n  if (formattedValue === undefined)\n    return undefined;\n\n  const formattedField = formatField(meta, config, field, parentField);\n\n  return formatLogic(config, properties, formattedField, formattedValue, operator, operatorOptions, fieldDefinition, isRev);\n};\n\n\nconst formatItemValue = (config, properties, meta, operator, parentField) => {\n  const field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  if (iValue == undefined)\n    return undefined;\n  \n  let valueSrcs = [];\n  let valueTypes = [];\n  let oldUsedFields = meta.usedFields;\n  const fvalue = iValue.map((currentValue, ind) => {\n    const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n    const valueType = iValueType ? iValueType.get(ind) : null;\n    const cValue = completeValue(currentValue, valueSrc, config);\n    const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDef = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n    const fv = formatValue(\n      meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDefinition, operator, operatorDefinition, parentField, asyncListValues\n    );\n    if (fv !== undefined) {\n      valueSrcs.push(valueSrc);\n      valueTypes.push(valueType);\n    }\n    return fv;\n  });\n  const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n  if (fvalue.size < cardinality || hasUndefinedValues) {\n    meta.usedFields = oldUsedFields; // restore\n    return undefined;\n  }\n  return cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField = null, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue, parentField);\n  } else if (typeof fieldWidgetDef.jsonLogic === \"function\") {\n    const fn = fieldWidgetDef.jsonLogic;\n    const args = [\n      currentValue,\n      {\n        ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n        asyncListValues\n      },\n      //useful options: valueFormat for date/time\n      omit(fieldWidgetDef, [\"formatValue\", \"mongoFormatValue\", \"sqlFormatValue\", \"jsonLogic\", \"elasticSearchFormatValue\", \"spelFormatValue\"]),\n    ];\n    if (operator) {\n      args.push(operator);\n      args.push(operatorDef);\n    }\n    ret = fn(...args);\n  } else {\n    ret = currentValue;\n  }\n  return ret;\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentField = null) => {\n  const funcKey = currentValue.get(\"func\");\n  const args = currentValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig.jsonLogic) {\n    meta.errors.push(`Func ${funcKey} is not supported`);\n    return undefined;\n  }\n\n  let formattedArgs = {};\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldDef, argConfig, null, null, parentField\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    if (formattedArgVal !== undefined) { // skip optional in the end\n      formattedArgs[argKey] = formattedArgVal;\n    }\n  }\n  const formattedArgsArr = Object.values(formattedArgs);\n\n  let ret;\n  if (typeof funcConfig.jsonLogic === \"function\") {\n    const fn = funcConfig.jsonLogic;\n    const args = [\n      formattedArgs,\n    ];\n    ret = fn(...args);\n  } else {\n    const funcName = funcConfig.jsonLogic || funcKey;\n    const isMethod = !!funcConfig.jsonLogicIsMethod;\n    if (isMethod) {\n      const [obj, ...params] = formattedArgsArr;\n      if (params.length) {\n        ret = { \"method\": [ obj, funcName, params ] };\n      } else {\n        ret = { \"method\": [ obj, funcName ] };\n      }\n    } else {\n      ret = { [funcName]: formattedArgsArr };\n    }\n  }\n  return ret;\n};\n\n\nconst formatField = (meta, config, field, parentField = null) => {\n  const {fieldSeparator, jsonLogic} = config.settings;\n\n  let ret;\n  if (field) {\n    if (Array.isArray(field))\n      field = field.join(fieldSeparator);\n    const fieldDef = getFieldConfig(config, field) || {};\n    let fieldName = field;\n    if (fieldDef.fieldName) {\n      fieldName = fieldDef.fieldName;\n    }\n    if (parentField) {\n      const parentFieldDef = getFieldConfig(config, parentField) || {};\n      let parentFieldName = parentField;\n      if (parentFieldDef.fieldName) {\n        parentFieldName = parentFieldDef.fieldName;\n      }\n      if (fieldName.indexOf(parentFieldName + fieldSeparator) == 0) {\n        fieldName = fieldName.slice((parentFieldName + fieldSeparator).length);\n      } else {\n        meta.errors.push(`Can't cut group ${parentFieldName} from field ${fieldName}`);\n      }\n    }\n    let varName = fieldDef.jsonLogicVar || (fieldDef.type == \"!group\" ? jsonLogic.groupVarKey : \"var\");\n    ret = { [varName] : fieldName };\n    if (meta.usedFields.indexOf(field) == -1)\n      meta.usedFields.push(field);\n  }\n  return ret;\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, formattedField, formattedValue) => {\n  let formatteOp = operator;\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  const isReverseArgs = defaultValue(operatorDefinition._jsonLogicIsRevArgs, false);\n  if (typeof operatorDefinition.jsonLogic == \"string\")\n    formatteOp = operatorDefinition.jsonLogic;\n  const rangeOps = [\"<\", \"<=\", \">\", \">=\"];\n  const eqOps = [\"==\", \"!=\"];\n  const fn = (field, op, val, opDef, opOpts) => {\n    if (cardinality == 0 && eqOps.includes(formatteOp))\n      return { [formatteOp]: [formattedField, null] };\n    else if (cardinality == 0)\n      return { [formatteOp]: formattedField };\n    else if (cardinality == 1 && isReverseArgs)\n      return { [formatteOp]: [formattedValue, formattedField] };\n    else if (cardinality == 1)\n      return { [formatteOp]: [formattedField, formattedValue] };\n    else if (cardinality == 2 && rangeOps.includes(formatteOp))\n      return { [formatteOp]: [formattedValue[0], formattedField, formattedValue[1]] };\n    else\n      return { [formatteOp]: [formattedField, ...formattedValue] };\n  };\n  return fn;\n};\n\nconst formatLogic = (config, properties, formattedField, formattedValue, operator, operatorOptions = null, fieldDefinition = null, isRev = false) => {\n  const field = properties.get(\"field\");\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  let fn = typeof operatorDefinition.jsonLogic == \"function\" \n    ? operatorDefinition.jsonLogic \n    : buildFnToFormatOp(operator, operatorDefinition, formattedField, formattedValue);\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    omit(operatorDefinition, [\"formatOp\", \"mongoFormatOp\", \"sqlFormatOp\", \"jsonLogic\", \"spelFormatOp\"]),\n    operatorOptions,\n    fieldDefinition,\n  ];\n  let ruleQuery = fn(...args);\n\n  if (isRev) {\n    ruleQuery = { \"!\": ruleQuery };\n  }\n\n  return ruleQuery;\n};\n","import {defaultValue} from \"../utils/stuff\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig\n} from \"../utils/configUtils\";\nimport {getFieldPath, getFieldPathLabels, getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {completeValue} from \"../utils/funcUtils\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\nimport {Map} from \"immutable\";\n\n\n// helpers\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\nexport const mongodbFormat = (tree, config) => {\n  return _mongodbFormat(tree, config, false);\n};\n\nexport const _mongodbFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const res = formatItem([], tree, config, meta);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to MongoDb:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (parents, item, config, meta, _not = false, _canWrapExpr = true, _fieldName = undefined, _value = undefined) => {\n  if (!item) return undefined;\n\n  const type = item.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(parents, item, config, meta, _not, _canWrapExpr, _fieldName, _value);\n  } else if (type === \"rule\") {\n    return formatRule(parents, item, config, meta, _not, _canWrapExpr, _fieldName, _value);\n  }\n  return undefined;\n};\n\n\nconst formatGroup = (parents, item, config, meta, _not = false, _canWrapExpr = true, _fieldName = undefined, _value = undefined) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  const {canShortMongoQuery} = config.settings;\n  if (!children) return undefined;\n\n  const hasParentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\").length > 0;\n  const parentPath = parents\n    .filter(it => it.get(\"type\") == \"rule_group\")\n    .map(it => it.get(\"properties\").get(\"field\"))\n    .slice(-1).pop();\n  const realParentPath = hasParentRuleGroup && parentPath;\n\n  const groupField = type === \"rule_group\" ? properties.get(\"field\") : null;\n  const groupFieldName = formatFieldName(groupField, config, meta, realParentPath);\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const mode = groupFieldDef.mode; //properties.get(\"mode\");\n  const canHaveEmptyChildren = groupField && mode == \"array\";\n\n  const not = _not ? !(properties.get(\"not\")) : (properties.get(\"not\"));\n  const list = children\n    .map((currentChild) => formatItem(\n      [...parents, item], currentChild, config, meta, not, true, mode == \"array\" ? (f => `$$el.${f}`) : undefined)\n    )\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  let conjunctionDefinition = config.conjunctions[conjunction];\n  const reversedConj = conjunctionDefinition.reversedConj;\n  if (not && reversedConj) {\n    conjunction = reversedConj;\n    conjunctionDefinition = config.conjunctions[conjunction];\n  }\n  const mongoConj = conjunctionDefinition.mongoConj;\n\n  let resultQuery;\n  if (list.size == 1) {\n    resultQuery = list.first();\n  } else if (list.size > 1) {\n    const rules = list.toList().toJS();\n    const canShort = canShortMongoQuery && (mongoConj == \"$and\");\n    if (canShort) {\n      resultQuery = rules.reduce((acc, rule) => {\n        if (!acc) return undefined;\n        for (let k in rule) {\n          if (k[0] == \"$\") {\n            acc = undefined;\n            break;\n          }\n          if (acc[k] == undefined) {\n            acc[k] = rule[k];\n          } else {\n            // https://github.com/ukrbublik/react-awesome-query-builder/issues/182\n            let prev = acc[k], next = rule[k];\n            if (!isObject(prev)) {\n              prev = {\"$eq\": prev};\n            }\n            if (!isObject(next)) {\n              next = {\"$eq\": next};\n            }\n            const prevOp = Object.keys(prev)[0], nextOp = Object.keys(next)[0];\n            if (prevOp == nextOp) {\n              acc = undefined;\n              break;\n            }\n            acc[k] = Object.assign({}, prev, next);\n          }\n        }\n        return acc;\n      }, {});\n    }\n    if (!resultQuery) // can't be shorten\n      resultQuery = { [mongoConj] : rules };\n  }\n\n  if (groupField) {\n    if (mode == \"array\") {\n      const totalQuery = {\n        \"$size\": groupFieldName\n      };\n      const filterQuery = resultQuery ? {\n        \"$size\": {\n          \"$filter\": {\n            input: \"$\" + groupFieldName,\n            as: \"el\",\n            cond: resultQuery\n          }\n        }\n      } : totalQuery;\n      resultQuery = formatItem(\n        parents, item.set(\"type\", \"rule\"), config, meta, false, false, (_f => filterQuery), totalQuery\n      );\n      resultQuery = { \"$expr\": resultQuery };\n    } else {\n      resultQuery = { [groupFieldName]: {\"$elemMatch\": resultQuery} };\n    }\n  }\n  return resultQuery;\n};\n\n\nconst formatRule = (parents, item, config, meta, _not = false, _canWrapExpr = true, _fieldName = undefined, _value = undefined) => {\n  const properties = item.get(\"properties\") || new Map();\n\n  const hasParentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\").length > 0;\n  const parentPath = parents\n    .filter(it => it.get(\"type\") == \"rule_group\")\n    .map(it => it.get(\"properties\").get(\"field\"))\n    .slice(-1).pop();\n  const realParentPath = hasParentRuleGroup && parentPath;\n\n  let operator = properties.get(\"operator\");\n  const operatorOptions = properties.get(\"operatorOptions\");\n  const field = properties.get(\"field\");\n  const iValue = properties.get(\"value\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n\n  if (field == null || operator == null || iValue === undefined)\n    return undefined;\n\n  const fieldDef = getFieldConfig(config, field) || {};\n  let operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDefinition.reversedOp;\n  let revOperatorDefinition = getOperatorConfig(config, reversedOp, field) || {};\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n\n  let not = _not;\n  if (not && reversedOp) {\n    [operator, reversedOp] = [reversedOp, operator];\n    [operatorDefinition, revOperatorDefinition] = [revOperatorDefinition, operatorDefinition];\n    not = false;\n  }\n\n  const fieldName = formatFieldName(field, config, meta, realParentPath);\n\n  //format value\n  let valueSrcs = [];\n  let valueTypes = [];\n  let useExpr = false;\n  const fvalue = iValue.map((currentValue, ind) => {\n    const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n    const valueType = iValueType ? iValueType.get(ind) : null;\n    const cValue = completeValue(currentValue, valueSrc, config);\n    const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDef = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n    const [fv, fvUseExpr] = formatValue(\n      meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, realParentPath,  operator, operatorDefinition, asyncListValues\n    );\n    if (fv !== undefined) {\n      useExpr = useExpr || fvUseExpr;\n      valueSrcs.push(valueSrc);\n      valueTypes.push(valueType);\n    }\n    return fv;\n  });\n  if (_fieldName)\n    useExpr = true;\n  const wrapExpr = useExpr && _canWrapExpr;\n  const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n  if (fvalue.size < cardinality || hasUndefinedValues)\n    return undefined;\n  const formattedValue = cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n  \n  //build rule\n  const fn = operatorDefinition.mongoFormatOp;\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  const args = [\n    _fieldName ? _fieldName(fieldName) : fieldName,\n    operator,\n    _value !== undefined && formattedValue == null ? _value : formattedValue,\n    useExpr,\n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n    omit(operatorDefinition, [\"formatOp\", \"mongoFormatOp\", \"sqlFormatOp\", \"jsonLogic\", \"spelFormatOp\"]),\n    operatorOptions,\n    fieldDef,\n  ];\n  let ruleQuery = fn(...args);\n  if (wrapExpr) {\n    ruleQuery = { \"$expr\": ruleQuery };\n  }\n  if (not) {\n    ruleQuery = { \"$not\": ruleQuery };\n  }\n  return ruleQuery;\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, parentPath, operator, operatorDef, asyncListValues) => {\n  if (currentValue === undefined)\n    return [undefined, false];\n  \n  let ret;\n  let useExpr = false;\n\n  if (valueSrc == \"field\") {\n    [ret, useExpr] = formatRightField(meta, config, currentValue, parentPath);\n  } else if (valueSrc == \"func\") {\n    [ret, useExpr] = formatFunc(meta, config, currentValue, parentPath);\n  } else {\n    if (typeof fieldWidgetDef.mongoFormatValue === \"function\") {\n      const fn = fieldWidgetDef.mongoFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, [\"formatValue\", \"mongoFormatValue\", \"sqlFormatValue\", \"jsonLogic\", \"elasticSearchFormatValue\", \"spelFormatValue\"]),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      ret = fn(...args);\n    } else {\n      ret = currentValue;\n    }\n  }\n\n  return [ret, useExpr];\n};\n\n\n\nconst formatFieldName = (field, config, meta, parentPath) => {\n  if (!field) return;\n  const fieldDef = getFieldConfig(config, field) || {};\n  const {fieldSeparator} = config.settings;\n  const fieldParts = Array.isArray(field) ? field : field.split(fieldSeparator);\n  let fieldName = Array.isArray(field) ? field.join(fieldSeparator) : field;\n  // if (fieldDef.tableName) { // legacy\n  //     const fieldPartsCopy = [...fieldParts];\n  //     fieldPartsCopy[0] = fieldDef.tableName;\n  //     fieldName = fieldPartsCopy.join(fieldSeparator);\n  // }\n  if (fieldDef.fieldName) {\n    fieldName = fieldDef.fieldName;\n  }\n\n  if (parentPath) {\n    const parentFieldDef = getFieldConfig(config, parentPath) || {};\n    let parentFieldName = parentPath;\n    if (parentFieldDef.fieldName) {\n      parentFieldName = parentFieldDef.fieldName;\n    }\n    if (fieldName.indexOf(parentFieldName+\".\") == 0) {\n      fieldName = fieldName.slice((parentFieldName+\".\").length);\n    } else {\n      meta.errors.push(`Can't cut group ${parentFieldName} from field ${fieldName}`);\n    }\n  }\n  return fieldName;\n};\n\nconst formatRightField = (meta, config, rightField, parentPath) => {\n  const {fieldSeparator} = config.settings;\n  let ret;\n  const useExpr = true;\n\n  if (rightField) {\n    const rightFieldDefinition = getFieldConfig(config, rightField) || {};\n    const fieldParts = Array.isArray(rightField) ? rightField : rightField.split(fieldSeparator);\n    const _fieldKeys = getFieldPath(rightField, config);\n    const fieldPartsLabels = getFieldPathLabels(rightField, config);\n    const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparator) : null;\n    const formatFieldFn = config.settings.formatField;\n    const rightFieldName = formatFieldName(rightField, config, meta, parentPath);\n    const formattedField = formatFieldFn(rightFieldName, fieldParts, fieldFullLabel, rightFieldDefinition, config, false);\n    ret = \"$\" + formattedField;\n  }\n\n  return [ret, useExpr];\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentPath) => {\n  const useExpr = true;\n  let ret;\n\n  const funcKey = currentValue.get(\"func\");\n  const args = currentValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  const funcName = funcConfig.mongoFunc || funcKey;\n  const mongoArgsAsObject = funcConfig.mongoArgsAsObject;\n\n  let formattedArgs = {};\n  let argsCnt = 0;\n  let lastArg = undefined;\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const widget = getWidgetForFieldOp(config, fieldDef, null, argValueSrc);\n    const fieldWidgetDef = omit(getFieldWidgetConfig(config, fieldDef, null, widget, argValueSrc), [\"factory\"]);\n    const [formattedArgVal, _argUseExpr] = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, parentPath, null, null, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return [undefined, false];\n    }\n    argsCnt++;\n    if (formattedArgVal !== undefined) { // skip optional in the end\n      formattedArgs[argKey] = formattedArgVal;\n      lastArg = formattedArgVal;\n    }\n  }\n\n  if (typeof funcConfig.mongoFormatFunc === \"function\") {\n    const fn = funcConfig.mongoFormatFunc;\n    const args = [\n      formattedArgs,\n    ];\n    ret = fn(...args);\n  } else if (funcConfig.mongoFormatFunc === null) {\n    meta.errors.push(`Functon ${funcName} is not supported`);\n    return [undefined, false];\n  } else {\n    if (mongoArgsAsObject)\n      ret = { [funcName]: formattedArgs };\n    else if (argsCnt == 1 && lastArg !== undefined)\n      ret = { [funcName]: lastArg };\n    else\n      ret = { [funcName]: Object.values(formattedArgs) };\n  }\n\n  return [ret, useExpr];\n};\n\n\n","import SqlStringOrig from \"sqlstring\";\n\nexport const SqlString = SqlStringOrig;\n\nSqlString.trim = (val) => {\n  if (val.charAt(0) == \"'\")\n    return val.substring(1, val.length-1);\n  else\n    return val;\n};\n\nSqlString.escapeLike = (val, any_start = true, any_end = true) => {\n  // normal escape\n  let res = SqlString.escape(val);\n  // unwrap ''\n  res = SqlString.trim(res);\n  // escape % and _\n  res = res.replace(/[%_]/g, \"\\\\$&\");\n  // wrap with % for LIKE\n  res = (any_start ? \"%\" : \"\") + res + (any_end ? \"%\" : \"\");\n  // wrap ''\n  res = \"'\" + res + \"'\";\n  return res;\n};\n\nexport const sqlEmptyValue = (fieldDef) => {\n  let v = \"''\";\n  const type = fieldDef?.type;\n  if (type == \"date\") {\n    //todo: support other SQL dialects?  0001-01-01 for oracle, 1970-01-01 for timestamp\n    v = \"'0000-00-00'\";\n  } else if (type == \"datetime\") {\n    v = \"'0000-00-00 00:00'\";\n  } else if (type == \"time\") {\n    v = \"'00:00'\";\n  } else if (type == \"number\") {\n    v = \"0\";\n  }\n  return v;\n};\n\nexport const mongoEmptyValue = (fieldDef) => {\n  let v = \"\";\n  const type = fieldDef?.type;\n  if (type == \"number\") {\n    v = 0;\n  }\n  return v;\n};\n\n\nconst spelEscapeString = (val) => {\n  // Strings are delimited by single quotes. To put a single quote itself in a string, use two single quote characters. \n  return \"'\" + val.replace(/'/g, \"''\") + \"'\";\n};\n\nconst spelInlineList = (vals, toArray = false) => {\n  // find java type of values\n  let javaType;\n  let jt;\n  const numberJavaTypes = [\"int\", \"float\"];\n  vals.map(v => {\n    if (v !== undefined && v !== null) {\n      if (typeof v === \"string\") {\n        jt = \"String\";\n      } else if (typeof v === \"number\") {\n        jt = Number.isInteger(v) ? \"int\" : \"float\";\n      } else throw new Error(`spelEscape: Can't use value ${v} in array`);\n\n      if (!javaType) {\n        javaType = jt;\n      } else if (javaType != jt) {\n        if (numberJavaTypes.includes(javaType) && numberJavaTypes.includes(jt)) {\n          // found int and float in collecton - use float\n          javaType = \"float\";\n        } else throw new Error(`spelEscape: Can't use different types in array: found ${javaType} and ${jt}`);\n      }\n    }\n  });\n  if (!javaType) {\n    javaType = \"String\"; //default if empty array\n  }\n\n  // for floats we should add 'f' to all items\n  let escapedVals;\n  if (javaType == \"float\") {\n    escapedVals = vals.map(v => spelEscape(v, true));\n  } else {\n    escapedVals = vals.map(v => spelEscape(v));\n  }\n\n  // build inline list or array\n  let res;\n  if (toArray) {\n    res = `new ${javaType}[]{${escapedVals.join(\", \")}}`;\n  } else {\n    res = `{${escapedVals.join(\", \")}}`;\n  }\n  \n  return res;\n};\n\nexport const spelFixList = (val) => {\n  // `{1,2}.contains(1)` NOT works\n  // `{1,2}.?[true].contains(1)` works\n  return `${val}.?[true]`;\n};\n\nexport const spelEscape = (val, numberToFloat = false, arrayToArray = false) => {\n  // https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions-ref-literal\n  if (val === undefined || val === null) {\n    return \"null\";\n  }\n  switch (typeof val) {\n  case \"boolean\":\n    return (val) ? \"true\" : \"false\";\n  case \"number\":\n    if (!Number.isFinite(val) || isNaN(val))\n      return undefined;\n    return val + (!Number.isInteger(val) || numberToFloat ? \"f\" : \"\");\n  case \"object\":\n    if (Array.isArray(val)) {\n      return spelInlineList(val, arrayToArray);\n    } else {\n      // see `spelFormatValue` for Date, LocalTime\n      throw new Error(\"spelEscape: Object is not supported\");\n    }\n  default: return spelEscapeString(val);\n  }\n};\n\nexport const spelFormatConcat = (parts) => {\n  if (parts && Array.isArray(parts) && parts.length) {\n    return parts\n      .map(part => {\n        if (part.type == \"const\") {\n          return spelEscape(part.value);\n        } else if (part.type == \"property\") {\n          return \"\"+part.value;\n        } else if (part.type == \"variable\") {\n          return \"#\"+part.value;\n        } return undefined;\n      })\n      .filter(r => r != undefined)\n      .join(\" + \");\n  } else {\n    return \"null\";\n  }\n};\n\n// `val` is {value, valueType, valueSrc}\n// If `valueType` == \"case_value\", `value` is array of such items (to be considered as concatenation)\nexport const spelImportConcat = (val) => {\n  if (val == undefined)\n    return [undefined, []];\n  let errors = [];\n  const parts = val.valueType == \"case_value\" ? val.value : [val];\n  const res = parts.map(child => {\n    if (child.valueSrc == \"value\") {\n      if (child.value === null) {\n        return undefined;\n      } else {\n        return {\n          type: \"const\", \n          value: child.value\n        };\n      }\n    } else if (child.valueSrc == \"field\") {\n      return {\n        type: (child.isVariable ? \"variable\" : \"property\"), \n        value: child.value\n      };\n    } else {\n      errors.push(`Unsupported valueSrc ${child.valueSrc} in concatenation`);\n    }\n  }).filter(v => v != undefined);\n  return [res, errors];\n};\n\nexport const stringifyForDisplay = (v) => (v == null ? \"NULL\" : v.toString());\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig\n} from \"../utils/configUtils\";\nimport {\n  getFieldPath, getFieldPathLabels, getWidgetForFieldOp, formatFieldName\n} from \"../utils/ruleUtils\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\nimport {defaultValue} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {completeValue} from \"../utils/funcUtils\";\nimport {Map} from \"immutable\";\nimport {SqlString} from \"../utils/export\";\n\nexport const sqlFormat = (tree, config) => {\n  return _sqlFormat(tree, config, false);\n};\n\nexport const _sqlFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const res = formatItem(tree, config, meta);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to SQL:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (item, config, meta) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") && children && children.size) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n\n  const groupField = type === \"rule_group\" ? properties.get(\"field\") : null;\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  if (groupFieldDef.mode == \"array\") {\n    meta.errors.push(`Aggregation is not supported for ${groupField}`);\n  }\n\n  const not = properties.get(\"not\");\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n\n  return conjunctionDefinition.sqlFormatConj(list, conjunction, not);\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition) => {\n  const sqlOp = operatorDefinition.sqlOp || operator;\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  let fn;\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sqlOp}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, value, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sqlOp} ${value}`;\n    };\n  } else if (cardinality == 2) {\n    // between\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values.first();\n      const valTo = values.get(1);\n      return `${field} ${sqlOp} ${valFrom} AND ${valTo}`;\n    };\n  }\n  return fn;\n};\n\nconst formatRule = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  let operator = properties.get(\"operator\");\n  const operatorOptions = properties.get(\"operatorOptions\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  if (field == null || operator == null)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  let opDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = opDef.reversedOp;\n  let revOpDef = getOperatorConfig(config, reversedOp, field) || {};\n  const cardinality = defaultValue(opDef.cardinality, 1);\n\n  // check op\n  let isRev = false;\n  const canFormatOp = opDef.sqlOp || opDef.sqlFormatOp;\n  const canFormatRevOp = revOpDef.sqlOp || revOpDef.sqlFormatOp;\n  if (!canFormatOp && !canFormatRevOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  if (!canFormatRevOp && canFormatRevOp) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [opDef, revOpDef] = [revOpDef, opDef];\n  }\n\n  //format value\n  let valueSrcs = [];\n  let valueTypes = [];\n  const fvalue = iValue.map((currentValue, ind) => {\n    const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n    const valueType = iValueType ? iValueType.get(ind) : null;\n    const cValue = completeValue(currentValue, valueSrc, config);\n    const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDefinition = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n    let fv = formatValue(\n      meta, config, cValue, valueSrc, valueType, fieldWidgetDefinition, fieldDefinition, operator, opDef, asyncListValues\n    );\n    if (fv !== undefined) {\n      valueSrcs.push(valueSrc);\n      valueTypes.push(valueType);\n    }\n    return fv;\n  });\n  const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n  if (hasUndefinedValues || fvalue.size < cardinality)\n    return undefined;\n  const formattedValue = (cardinality == 1 ? fvalue.first() : fvalue);\n\n  //find fn to format expr\n  const fn = opDef.sqlFormatOp || buildFnToFormatOp(operator, opDef);\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n      \n  //format field\n  const formattedField = formatField(meta, config, field);\n      \n  //format expr\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n    omit(opDef, [\"formatOp\", \"mongoFormatOp\", \"sqlFormatOp\", \"jsonLogic\", \"spelFormatOp\"]),\n    operatorOptions,\n    fieldDefinition,\n  ];\n\n  let ret;\n  ret = fn(...args);\n  if (isRev) {\n    ret = config.settings.sqlFormatReverse(ret);\n  }\n  if (ret === undefined) {\n    meta.errors.push(`Operator ${operator} is not supported for value source ${valueSrcs.join(\", \")}`);\n    return undefined;\n  }\n  return ret;\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue);\n  } else {\n    if (typeof fieldWidgetDef.sqlFormatValue === \"function\") {\n      const fn = fieldWidgetDef.sqlFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, [\"formatValue\", \"mongoFormatValue\", \"sqlFormatValue\", \"jsonLogic\", \"elasticSearchFormatValue\", \"spelFormatValue\"]),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, currentValue) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn(...args);\n    } else {\n      if (Array.isArray(currentValue)) {\n        ret = currentValue.map(v => SqlString.escape(v));\n      } else {\n        ret = SqlString.escape(currentValue);\n      }\n    }\n  }\n  return ret;\n};\n\nconst formatField = (meta, config, field) => {\n  if (!field) return;\n  const {fieldSeparator} = config.settings;\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const fieldParts = Array.isArray(field) ? field : field.split(fieldSeparator);\n  const _fieldKeys = getFieldPath(field, config);\n  const fieldPartsLabels = getFieldPathLabels(field, config);\n  const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparator) : null;\n  const formatFieldFn = config.settings.formatField;\n  const fieldName = formatFieldName(field, config, meta);\n  const formattedField = formatFieldFn(fieldName, fieldParts, fieldFullLabel, fieldDefinition, config);\n  return formattedField;\n};\n\n\nconst formatFunc = (meta, config, currentValue) => {\n  const funcKey = currentValue.get(\"func\");\n  const args = currentValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  const funcName = funcConfig.sqlFunc || funcKey;\n\n  let formattedArgs = {};\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldDef, argConfig, null, null, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    if (formattedArgVal !== undefined) { // skip optional in the end\n      formattedArgs[argKey] = formattedArgVal;\n    }\n  }\n\n  let ret;\n  if (typeof funcConfig.sqlFormatFunc === \"function\") {\n    const fn = funcConfig.sqlFormatFunc;\n    const args = [\n      formattedArgs\n    ];\n    ret = fn(...args);\n  } else {\n    const argsStr = Object.entries(formattedArgs)\n      .map(([k, v]) => v)\n      .join(\", \");\n    ret = `${funcName}(${argsStr})`;\n  }\n  return ret;\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig\n} from \"../utils/configUtils\";\nimport {\n  getFieldPath, getWidgetForFieldOp, formatFieldName, getFieldPartsConfigs\n} from \"../utils/ruleUtils\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\nimport {defaultValue, logger} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {completeValue} from \"../utils/funcUtils\";\nimport {Map} from \"immutable\";\nimport {spelEscape} from \"../utils/export\";\n\nexport const spelFormat = (tree, config) => {\n  return _spelFormat(tree, config, false);\n};\n\nexport const _spelFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const res = formatItem(tree, config, meta, null);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to SpEL:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (item, config, meta, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(item, config, meta, parentField);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta, parentField);\n  } else if (type == \"switch_group\") {\n    return formatSwitch(item, config, meta, parentField);\n  } else if (type == \"case_group\") {\n    return formatCase(item, config, meta, parentField);\n  }\n\n  return undefined;\n};\n\nconst formatCase = (item, config, meta, parentField = null) => {\n  const type = item.get(\"type\");\n  if (type != \"case_group\") {\n    meta.errors.push(`Unexpected child of type ${type} inside switch`);\n    return undefined;\n  }\n  const properties = item.get(\"properties\") || new Map();\n  \n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, null, parentField, \"!case_value\"\n  );\n\n  const cond = formatGroup(item, config, meta, parentField);\n  return [cond, formattedValue];\n};\n\nconst formatSwitch = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  if (!children) return undefined;\n  const cases = children\n    .map((currentChild) => formatCase(currentChild, config, meta, null))\n    .filter((currentChild) => typeof currentChild !== \"undefined\")\n    .toArray();\n  \n  if (!cases.length) return undefined;\n\n  if (cases.length == 1 && !cases[0][0]) {\n    // only 1 case without condition\n    return cases[0][1];\n  }\n\n  let filteredCases = [];\n  for (let i = 0 ; i < cases.length ; i++) {\n    if (i != (cases.length - 1) && !cases[i][0]) {\n      meta.errors.push(`No condition for case ${i}`);\n    } else {\n      filteredCases.push(cases[i]);\n      if (i == (cases.length - 1) && cases[i][0]) {\n        // no default - add null as default\n        filteredCases.push([undefined, null]);\n      }\n    }\n  }\n\n  let left = \"\", right = \"\";\n  for (let i = 0 ; i < filteredCases.length ; i++) {\n    let [cond, value] = filteredCases[i];\n    if (value == undefined)\n      value = \"null\";\n    if (cond == undefined)\n      cond = \"true\";\n    if (i != (filteredCases.length - 1)) {\n      left += `(${cond} ? ${value} : `;\n      right += \")\";\n    } else {\n      left += `${value}`;\n    }\n  }\n  return left + right;\n};\n\nconst formatGroup = (item, config, meta, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\");\n  const field = properties.get(\"field\");\n  if (!children) return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n  const not = properties.get(\"not\");\n\n  const isRuleGroup = type === \"rule_group\";\n  const isRuleGroupArray = isRuleGroup && mode != \"struct\";\n  const groupField = isRuleGroupArray ? field : parentField;\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const isSpelArray = groupFieldDef.isSpelArray;\n  \n  // check op for reverse\n  let groupOperator = properties.get(\"operator\");\n  if (!groupOperator && (!mode || mode == \"some\")) {\n    groupOperator = \"some\";\n  }\n  const realGroupOperator = checkOp(config, groupOperator, field);\n  const isGroupOpRev = realGroupOperator != groupOperator;\n  const realGroupOperatorDefinition = groupOperator && getOperatorConfig(config, realGroupOperator, field) || null;\n  const isGroup0 = isRuleGroup && (!realGroupOperator || realGroupOperatorDefinition.cardinality == 0);\n  \n  // build value for aggregation op\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, realGroupOperator, parentField, null\n  );\n  \n  // build filter in aggregation\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n\n  if (isRuleGroupArray && !isGroup0) {\n    // \"count\" rule can have no \"having\" children, but should have number value\n    if (formattedValue == undefined)\n      return undefined;\n  } else {\n    if (!list.size)\n      return undefined;\n  }\n\n  const omitBrackets = isRuleGroup;\n  const filter = list.size ? conjunctionDefinition.spelFormatConj(list, conjunction, not, omitBrackets) : null;\n\n  // build result\n  let ret;\n  if (isRuleGroupArray) {\n    const formattedField = formatField(meta, config, field, parentField);\n    const getSize = isSpelArray ? \".length\" : \".size()\";\n    const fullSize = `${formattedField}${getSize}`;\n    // https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions-collection-selection\n    const filteredSize = filter ? `${formattedField}.?[${filter}]${getSize}` : fullSize;\n    const groupValue = isGroup0 ? fullSize : formattedValue;\n    // format expression\n    ret = formatExpression(\n      meta, config, properties, filteredSize, groupValue, realGroupOperator, valueSrc, valueType, isGroupOpRev\n    );\n  } else {\n    ret = filter;\n  }\n  \n  return ret;\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition) => {\n  const spelOp = operatorDefinition.spelOp;\n  if (!spelOp) return undefined;\n  const objectIsFirstArg = spelOp[0] == \"$\";\n  const isMethod = spelOp[0] == \".\" || objectIsFirstArg;\n  const isFunction = spelOp.substring(spelOp.length - 2) == \"()\";\n  const sop = isMethod ? spelOp.slice(1) : (isFunction ? spelOp.substring(0, spelOp.length - 2) : spelOp);\n  let fn;\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (isMethod)\n        return `${field}.${sop}()`;\n      else\n        return `${field} ${sop}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (objectIsFirstArg)\n        return `${values}.${sop}(${field})`;\n      else if (isFunction)\n        return `${sop}(${field}, ${values})`;\n      else if (isMethod)\n        return `${field}.${sop}(${values})`;\n      else\n        return `${field} ${sop} ${values}`;\n    };\n  }\n  return fn;\n};\n\nconst formatExpression = (meta, config, properties, formattedField, formattedValue, operator, valueSrc, valueType, isRev = false) => {\n  const field = properties.get(\"field\");\n  const opDef = getOperatorConfig(config, operator, field) || {};\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operatorOptions = properties.get(\"operatorOptions\");\n\n  //find fn to format expr\n  const fn = opDef.spelFormatOp || buildFnToFormatOp(operator, opDef);\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n\n  //format expr\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    valueSrc,\n    valueType,\n    omit(opDef, [\"formatOp\", \"mongoFormatOp\", \"sqlFormatOp\", \"jsonLogic\", \"spelFormatOp\"]),\n    operatorOptions,\n    fieldDef,\n  ];\n  let ret;\n  ret = fn(...args);\n\n  //rev\n  if (isRev) {\n    ret = config.settings.spelFormatReverse(ret);\n  }\n\n  if (ret === undefined) {\n    meta.errors.push(`Operator ${operator} is not supported for value source ${valueSrc}`);\n  }\n\n  return ret;\n};\n\nconst checkOp = (config, operator, field) => {\n  if (!operator) return undefined;\n  let opDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = opDef.reversedOp;\n  let revOpDef = getOperatorConfig(config, reversedOp, field) || {};\n\n  let isRev = false;\n  const canFormatOp = opDef.spelOp || opDef.spelFormatOp;\n  const canFormatRevOp = revOpDef.spelOp || revOpDef.spelFormatOp;\n  if (!canFormatOp && !canFormatRevOp) {\n    return undefined;\n  }\n  if (!canFormatOp && canFormatRevOp) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [opDef, revOpDef] = [revOpDef, opDef];\n  }\n  return operator;\n};\n\nconst formatRule = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  let operator = properties.get(\"operator\");\n  if (field == null || operator == null)\n    return undefined;\n\n  // check op for reverse\n  const realOp = checkOp(config, operator, field);\n  if (!realOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  const isRev = realOp != operator;\n\n  //format value\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, realOp, parentField, null\n  );\n  if (formattedValue === undefined)\n    return undefined;\n      \n  //format field\n  const formattedField = formatField(meta, config, field, parentField);\n  \n  // format expression\n  let res = formatExpression(\n    meta, config, properties, formattedField, formattedValue, realOp, valueSrc, valueType, isRev\n  );\n  return res;\n};\n\nconst formatItemValue = (config, properties, meta, operator, parentField, expectedValueType = null) => {\n  let field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  if (expectedValueType == \"!case_value\" || iValueType && iValueType.get(0) == \"case_value\") {\n    field = \"!case_value\";\n  }\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  \n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  \n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n      const fv = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDefinition, parentField, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (!( fvalue.size < cardinality || hasUndefinedValues )) {\n      formattedValue = cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n    }\n  }\n  \n  return [\n    formattedValue, \n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n  ];\n};\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField = null, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue, parentField);\n  } else {\n    if (typeof fieldWidgetDef.spelFormatValue === \"function\") {\n      const fn = fieldWidgetDef.spelFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, [\"formatValue\", \"mongoFormatValue\", \"sqlFormatValue\", \"jsonLogic\", \"elasticSearchFormatValue\", \"spelFormatValue\"]),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, currentValue) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn(...args);\n    } else {\n      ret = spelEscape(currentValue);\n    }\n  }\n  return ret;\n};\n\nconst formatField = (meta, config, field, parentField = null) => {\n  if (!field) return;\n  const {fieldSeparator} = config.settings;\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const fieldParts = Array.isArray(field) ? field : field.split(fieldSeparator);\n  const _fieldKeys = getFieldPath(field, config, parentField);\n  const fieldPartsConfigs = getFieldPartsConfigs(field, config, parentField);\n  const formatFieldFn = config.settings.formatSpelField;\n  let fieldName = formatFieldName(field, config, meta);\n  if (parentField) {\n    const parentFieldDef = getFieldConfig(config, parentField) || {};\n    let parentFieldName = parentField;\n    if (parentFieldDef.fieldName) {\n      parentFieldName = parentFieldDef.fieldName;\n    }\n    if (fieldName.indexOf(parentFieldName + fieldSeparator) == 0) {\n      fieldName = fieldName.slice((parentFieldName + fieldSeparator).length);\n      // fieldName = \"#this.\" + fieldName;\n    } else {\n      meta.errors.push(`Can't cut group ${parentFieldName} from field ${fieldName}`);\n    }\n  }\n  const fieldPartsMeta = fieldPartsConfigs.map(([key, cnf, parentCnf]) => {\n    let parent;\n    if (parentCnf) {\n      if (parentCnf.type == \"!struct\" || parentCnf.type == \"!group\" && parentCnf.mode == \"struct\")\n        parent = cnf.isSpelMap ? \"map\" : \"class\";\n      else if (parentCnf.type == \"!group\")\n        parent = cnf.isSpelItemMap ? \"[map]\" : \"[class]\";\n      else\n        parent = \"class\";\n    }\n    const isSpelVariable = cnf?.isSpelVariable;\n    return {\n      key,\n      parent,\n      isSpelVariable\n    };\n  });\n  const formattedField = formatFieldFn(fieldName, parentField, fieldParts, fieldPartsMeta, fieldDefinition, config);\n  return formattedField;\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentField = null) => {\n  const funcKey = currentValue.get(\"func\");\n  const args = currentValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  const funcName = funcConfig.spelFunc || funcKey;\n\n  let formattedArgs = {};\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldDef, argConfig, null, null, parentField, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    if (formattedArgVal !== undefined) { // skip optional in the end\n      formattedArgs[argKey] = formattedArgVal;\n    }\n  }\n\n  let ret;\n  if (typeof funcConfig.spelFormatFunc === \"function\") {\n    const fn = funcConfig.spelFormatFunc;\n    const args = [\n      formattedArgs\n    ];\n    ret = fn(...args);\n  } else {\n    const args = Object.entries(formattedArgs).map(([k, v]) => v);\n    if (funcName[0] == \".\" && args.length) {\n      const [obj, ...params] = args;\n      ret = `${obj}${funcName}(${params.join(\", \")})`;\n    } else {\n      ret = `${funcName}(${args.join(\", \")})`;\n    }\n  }\n  return ret;\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig\n} from \"../utils/configUtils\";\nimport {\n  getFieldPath, getFieldPathLabels, getWidgetForFieldOp, formatFieldName\n} from \"../utils/ruleUtils\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\nimport {defaultValue} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {completeValue} from \"../utils/funcUtils\";\nimport {Map} from \"immutable\";\n\n\nexport const queryString = (item, config, isForDisplay = false) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const res = formatItem(item, config, meta, isForDisplay, null);\n\n  if (meta.errors.length)\n    console.warn(\"Errors while exporting to string:\", meta.errors);\n  return res;\n};\n\n\nconst formatItem = (item, config, meta, isForDisplay = false, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") ) {\n    return formatGroup(item, config, meta, isForDisplay, parentField);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta, isForDisplay, parentField);\n  }\n\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta, isForDisplay = false, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\");\n  if (!children) return undefined;\n\n  const isRuleGroup = (type === \"rule_group\");\n  // TIP: don't cut group for mode == 'struct' and don't do aggr format (maybe later)\n  const groupField = isRuleGroup && mode == \"array\" ? properties.get(\"field\") : null;\n  const canHaveEmptyChildren = isRuleGroup && mode == \"array\";\n  const not = properties.get(\"not\");\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, isForDisplay, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n\n  const conjStr = list.size ? conjunctionDefinition.formatConj(list, conjunction, not, isForDisplay) : null;\n  \n  let ret;\n  if (groupField) {\n    const aggrArgs = formatRule(item, config, meta, isForDisplay, parentField, true);\n    if (aggrArgs) {\n      const isRev = aggrArgs.pop();\n      const args = [\n        conjStr,\n        ...aggrArgs\n      ];\n      ret = config.settings.formatAggr(...args);\n      if (isRev) {\n        ret = config.settings.formatReverse(ret, null, null, null, null, isForDisplay);\n      }\n    }\n  } else {\n    ret = conjStr;\n  }\n\n  return ret;\n};\n\n\nconst formatItemValue = (config, properties, meta, _operator, isForDisplay, parentField) => {\n  const field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operator = _operator || properties.get(\"operator\");\n  const operatorDef = getOperatorConfig(config, operator, field) || {};\n  const cardinality = defaultValue(operatorDef.cardinality, 1);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n\n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n      let fv = formatValue(\n        config, meta, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, isForDisplay, parentField, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (!( hasUndefinedValues || fvalue.size < cardinality )) {\n      formattedValue = (cardinality == 1 ? fvalue.first() : fvalue);\n    }\n  }\n\n  return [\n    formattedValue, \n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n  ];\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition) => {\n  const fop = operatorDefinition.labelForFormat || operator;\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  let fn;\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} ${fop}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} ${fop} ${values}`;\n    };\n  } else if (cardinality == 2) {\n    // between\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const valFrom = values.first();\n      const valTo = values.get(1);\n      return `${field} ${fop} ${valFrom} AND ${valTo}`;\n    };\n  }\n  return fn;\n};\n\nconst formatRule = (item, config, meta, isForDisplay = false, parentField = null, returnArgs = false) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  let operator = properties.get(\"operator\");\n  let operatorOptions = properties.get(\"operatorOptions\");\n  if (field == null || operator == null)\n    return undefined;\n  \n  const fieldDef = getFieldConfig(config, field) || {};\n  let operatorDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDef.reversedOp;\n  let revOperatorDef = getOperatorConfig(config, reversedOp, field) || {};\n  \n  //check op\n  let isRev = false;\n  let fn = operatorDef.formatOp;\n  if (!fn && reversedOp) {\n    fn = revOperatorDef.formatOp;\n    if (fn) {\n      isRev = true;\n      [operator, reversedOp] = [reversedOp, operator];\n      [operatorDef, revOperatorDef] = [revOperatorDef, operatorDef];\n    }\n  }\n\n  //find fn to format expr\n  if (!fn)\n    fn = buildFnToFormatOp(operator, operatorDef);\n  if (!fn)\n    return undefined;\n\n  //format field\n  const formattedField = formatField(config, meta, field, isForDisplay, parentField);\n\n  //format value\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, operator, isForDisplay, parentField\n  );\n  if (formattedValue === undefined)\n    return undefined;\n\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    valueSrc,\n    valueType,\n    omit(operatorDef, [\"formatOp\", \"mongoFormatOp\", \"sqlFormatOp\", \"jsonLogic\", \"spelFormatOp\"]),\n    operatorOptions,\n    isForDisplay,\n    fieldDef,\n    isRev,\n  ];\n\n  if (returnArgs) {\n    return args;\n  } else {\n    //format expr\n    let ret = fn(...args);\n\n    //rev\n    if (isRev) {\n      ret = config.settings.formatReverse(ret, operator, reversedOp, operatorDef, revOperatorDef, isForDisplay);\n    }\n\n    return ret;\n  }\n};\n\n\nconst formatValue = (config, meta, value, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, opDef, isForDisplay, parentField = null, asyncListValues) => {\n  if (value === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(config, meta, value, isForDisplay, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(config, meta, value, isForDisplay, parentField);\n  } else {\n    if (typeof fieldWidgetDef.formatValue === \"function\") {\n      const fn = fieldWidgetDef.formatValue;\n      const args = [\n        value,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, [\"formatValue\", \"mongoFormatValue\", \"sqlFormatValue\", \"jsonLogic\", \"elasticSearchFormatValue\", \"spelFormatValue\"]),\n        isForDisplay\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(opDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, value) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn(...args);\n    } else {\n      ret = value;\n    }\n  }\n  return ret;\n};\n\n\nconst formatField = (config, meta, field, isForDisplay, parentField = null, cutParentField = true) => {\n  const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n  let ret = null;\n  if (field) {\n    const fieldDefinition = getFieldConfig(config, field) || {};\n    const fieldParts = Array.isArray(field) ? field : field.split(fieldSeparator);\n    const _fieldKeys = getFieldPath(field, config);\n    const fieldPartsLabels = getFieldPathLabels(field, config, cutParentField ? parentField : null);\n    const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparatorDisplay) : null;\n    const fieldLabel2 = fieldDefinition.label2 || fieldFullLabel;\n    const formatFieldFn = config.settings.formatField;\n    const fieldName = formatFieldName(field, config, meta, cutParentField ? parentField : null);\n    ret = formatFieldFn(fieldName, fieldParts, fieldLabel2, fieldDefinition, config, isForDisplay);\n  }\n  return ret;\n};\n\n\nconst formatFunc = (config, meta, funcValue, isForDisplay, parentField = null) => {\n  const funcKey = funcValue.get(\"func\");\n  const args = funcValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  const funcName = isForDisplay && funcConfig.label || funcKey;\n\n  let formattedArgs = {};\n  let formattedArgsWithNames = {};\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      config, meta, argValue, argValueSrc, argConfig.type, fieldDef, argConfig, null, null, isForDisplay, parentField, argAsyncListValues\n    );\n    const argName = isForDisplay && argConfig.label || argKey;\n    if (formattedArgVal !== undefined) { // skip optional in the end\n      formattedArgs[argKey] = formattedArgVal;\n      formattedArgsWithNames[argName] = formattedArgVal;\n    }\n  }\n\n  let ret = null;\n  if (typeof funcConfig.formatFunc === \"function\") {\n    const fn = funcConfig.formatFunc;\n    const args = [\n      formattedArgs,\n      isForDisplay\n    ];\n    ret = fn(...args);\n  } else {\n    const argsStr = Object.entries(formattedArgsWithNames)\n      .map(([k, v]) => (isForDisplay ? `${k}: ${v}` : `${v}`))\n      .join(\", \");\n    ret = `${funcName}(${argsStr})`;\n  }\n  return ret;\n};\n","import {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\n\n\n/**\n * Converts a string representation of top_left and bottom_right cords to\n * a ES geo_point required for query\n *\n * @param {string} geoPointString - comma separated string of lat/lon coods\n * @returns {{top_left: {lon: number, lat: number}, bottom_right: {lon: number, lat: number}}} - ES geoPoint formatted object\n * @private\n */\nfunction buildEsGeoPoint(geoPointString) {\n  if (geoPointString == null) {\n    return null;\n  }\n\n  const coordsNumberArray = geoPointString.split(\",\").map(Number);\n  return {\n    top_left: {\n      lat: coordsNumberArray[0],\n      lon: coordsNumberArray[1]\n    },\n    bottom_right: {\n      lat: coordsNumberArray[2],\n      lon: coordsNumberArray[3]\n    }\n  };\n}\n\n/**\n * Converts a dateTime string from the query builder to a ES range formatted object\n *\n * @param {string} dateTime - dateTime formatted string\n * @param {string} operator - query builder operator type, see constants.js and query builder docs\n * @returns {{lt: string}|{lte: string}|{gte: string}|{gte: string, lte: string}|undefined} - ES range query parameter\n *\n * @private\n */\nfunction buildEsRangeParameters(value, operator) {\n  // -- if value is greater than 1 then we assume this is a between operator : BUG this is wrong, a selectable list can have multiple values\n  if (value.length > 1) {\n    return {\n      gte: \"\".concat(value[0]),\n      lte: \"\".concat(value[1])\n    };\n  } // -- if value is only one we assume this is a date time query for a specific day\n\n  const dateTime = value[0]; //TODO: Rethink about this part, what if someone adds a new type of opperator\n\n  //todo: move this logic into config\n  switch (operator) {\n  case \"on_date\": //todo: not used\n  case \"not_on_date\":\n  case \"equal\":\n  case \"select_equals\":\n  case \"not_equal\":\n    return {\n      gte: \"\".concat(dateTime, \"||/d\"),\n      lte: \"\".concat(dateTime, \"||+1d\")\n    };\n\n  case \"less_or_equal\":\n    return {\n      lte: \"\".concat(dateTime)\n    };\n\n  case \"greater_or_equal\":\n    return {\n      gte: \"\".concat(dateTime)\n    };\n\n  case \"less\":\n    return {\n      lt: \"\".concat(dateTime)\n    };\n\n  case \"greater\":\n    return {\n      gt: \"\".concat(dateTime)\n    };\n\n  default:\n    return undefined;\n  }\n}\n\n/**\n * Builds the DSL parameters for a Wildcard query\n *\n * @param {string} value - The match value\n * @returns {{value: string}} - The value = value parameter surrounded with * on each end\n * @private\n */\nfunction buildEsWildcardParameters(value) {\n  return {\n    value: \"*\" + value + \"*\"\n  };\n}\n\n/**\n * Takes the match type string from awesome query builder like 'greater_or_equal' and\n * returns the ES occurrence required for bool queries\n *\n * @param {string} combinator - query group type or rule condition\n * @param {bool} not\n * @returns {string} - ES occurrence type. See constants.js\n * @private\n */\nfunction determineOccurrence(combinator, not) {\n  //todo: move into config, like mongoConj\n  switch (combinator) {\n  case \"AND\":\n    return not ? \"must_not\" : \"must\";\n    // -- AND\n\n  case \"OR\":\n    return not ? \"should_not\" : \"should\";\n    // -- OR\n\n  case \"NOT\":\n    return not ? \"must\" : \"must_not\";\n    // -- NOT AND\n\n  default:\n    return undefined;\n  }\n}\n\n/**\n * Determines what field to query off of given the operator type\n *\n * @param {string} fieldDataType - The type of data\n * @param {string} fullFieldName - A '.' separated string containing the property lineage (including self)\n * @param {string} queryType - The query type\n * @returns {string|*} - will be either the fullFieldName or fullFieldName.keyword\n * @private\n */\n//todo: not used\nfunction determineQueryField(fieldDataType, fullFieldName, queryType) {\n  if (fieldDataType === \"boolean\") {\n    return fullFieldName;\n  }\n\n  switch (queryType) {\n  case \"term\":\n  case \"wildcard\":\n    return \"\".concat(fullFieldName, \".keyword\");\n\n  case \"geo_bounding_box\":\n  case \"range\":\n  case \"match\":\n    return fullFieldName;\n\n  default:\n    console.error(\"Can't determine query field for query type \".concat(queryType));\n    return null;\n  }\n}\n\nfunction buildRegexpParameters(value) {\n  return {\n    value: value\n  };\n}\n\nfunction determineField(fieldName, config) {\n  //todo: ElasticSearchTextField - not used\n  //return config.fields[fieldName].ElasticSearchTextField || fieldName;\n  return fieldName;\n}\n\nfunction buildParameters(queryType, value, operator, fieldName, config) {\n  const textField = determineField(fieldName, config);\n  switch (queryType) {\n  case \"filter\":\n    //todo: elasticSearchScript - not used\n    return {\n      script: config.operators[operator].elasticSearchScript(fieldName, value)\n    };\n\n  case \"exists\":\n    return { field: fieldName };\n\n  case \"match\":\n    return { [textField]: value[0] };\n\n  case \"term\":\n    return { [fieldName]: value[0] };\n\n  //todo: not used\n  // need to add geo type into RAQB or remove this code\n  case \"geo_bounding_box\":\n    return { [fieldName]: buildEsGeoPoint(value[0]) };\n\n  case \"range\":\n    return { [fieldName]: buildEsRangeParameters(value, operator) };\n\n  case \"wildcard\":\n    return { [fieldName]: buildEsWildcardParameters(value[0]) };\n\n  case \"regexp\":\n    return { [fieldName]: buildRegexpParameters(value[0]) };\n\n  default:\n    return undefined;\n  }\n}\n/**\n * Handles the building of the group portion of the DSL\n *\n * @param {string} fieldName - The name of the field you are building a rule for\n * @param {string} fieldDataType - The type of data this field holds\n * @param {string} value - The value of this rule\n * @param {string} operator - The condition on how the value is matched\n * @returns {object} - The ES rule\n * @private\n */\nfunction buildEsRule(fieldName, value, operator, config, valueSrc) {\n  if (!fieldName || !operator || value == undefined)\n    return undefined; // rule is not fully entered\n  let op = operator;\n  let opConfig = config.operators[op];\n  if (!opConfig)\n    return undefined; // unknown operator\n  let { elasticSearchQueryType } = opConfig;\n\n  // not\n  let not = false;\n  if (!elasticSearchQueryType && opConfig.reversedOp) {\n    not = true;\n    op = opConfig.reversedOp;\n    opConfig = config.operators[op];\n    ({ elasticSearchQueryType } = opConfig);\n  }\n  \n  // handle if value 0 has multiple values like a select in a array\n  const widget = getWidgetForFieldOp(config, fieldName, op, valueSrc);\n  const widgetConfig = config.widgets[widget];\n  if (!widgetConfig)\n    return undefined; // unknown widget\n  const { elasticSearchFormatValue } = widgetConfig;\n\n  /** In most cases the queryType will be static however in some casese (like between) the query type will change\n   * based on the data type. i.e. a between time will be different than between number, date, letters etc... */\n  let queryType;\n  if (typeof elasticSearchQueryType === \"function\") {\n    queryType = elasticSearchQueryType(widget);\n  } else {\n    queryType = elasticSearchQueryType;\n  }\n\n  if (!queryType) {\n    // Not supported\n    return undefined;\n  }\n\n  /** If a widget has a rule on how to format that data then use that otherwise use default way of determineing search parameters\n   * */\n  let parameters;\n  if (typeof elasticSearchFormatValue === \"function\") {\n    parameters = elasticSearchFormatValue(queryType, value, op, fieldName, config);\n  } else {\n    parameters = buildParameters(queryType, value, op, fieldName, config);\n  }\n\n  if (not) {\n    return {\n      bool: {\n        must_not: {\n          [queryType]: {...parameters}\n        }\n      }\n    };\n  } else {\n    return {\n      [queryType]: {...parameters}\n    };\n  }\n}\n\n/**\n * Handles the building of the group portion of the DSL\n *\n * @param {object} children - The contents of the group\n * @param {string} conjunction - The way the contents of the group are joined together i.e. AND OR\n * @param {bool} not\n * @param {Function} recursiveFxn - The recursive fxn to build the contents of the groups children\n * @private\n * @returns {object} - The ES group\n */\nfunction buildEsGroup(children, conjunction, not, recursiveFxn, config) {\n  if (!children || !children.size)\n    return undefined;\n  const childrenArray = children.valueSeq().toArray();\n  const occurrence = determineOccurrence(conjunction, not);\n  const result = childrenArray.map((c) => recursiveFxn(c, config)).filter(v => v !== undefined);\n  if (!result.length)\n    return undefined;\n  const resultFlat = result.flat(Infinity);\n  return {\n    bool: {\n      [occurrence]: resultFlat\n    }\n  };\n}\n\nexport function elasticSearchFormat(tree, config) {\n  // -- format the es dsl here\n  if (!tree) return undefined;\n  const type = tree.get(\"type\");\n  const properties = tree.get(\"properties\") || new Map();\n\n  if (type === \"rule\" && properties.get(\"field\")) {\n    // -- field is null when a new blank rule is added\n    const operator = properties.get(\"operator\");\n    const field = properties.get(\"field\");\n    const value = properties.get(\"value\").toJS();\n    const _valueType = properties.get(\"valueType\")?.get(0);\n    const valueSrc = properties.get(\"valueSrc\")?.get(0);\n\n    if (valueSrc === \"func\") {\n      // -- elastic search doesn't support functions (that is post processing)\n      return;\n    }\n\n    if (value && Array.isArray(value[0])) {\n      //TODO : Handle case where the value has multiple values such as in the case of a list\n      return value[0].map((val) => \n        buildEsRule(field, [val], operator, config, valueSrc)\n      );\n    } else {\n      return buildEsRule(field, value, operator, config, valueSrc);\n    }\n  }\n\n  if (type === \"group\" || type === \"rule_group\") {\n    const not = properties.get(\"not\");\n    let conjunction = properties.get(\"conjunction\");\n    if (!conjunction)\n      conjunction = defaultConjunction(config);\n    const children = tree.get(\"children1\");\n    return buildEsGroup(children, conjunction, not, elasticSearchFormat, config);\n  }\n}\n","import Immutable, { fromJS, Map } from \"immutable\";\nimport {validateTree} from \"../utils/validation\";\nimport {extendConfig} from \"../utils/configUtils\";\nimport {getTreeBadFields, getLightTree} from \"../utils/treeUtils\";\nimport {isJsonLogic} from \"../utils/stuff\";\n\nexport const getTree = (immutableTree, light = true, children1AsArray = true) => {\n  if (!immutableTree) return undefined;\n  let tree = immutableTree;\n  tree = tree.toJS();\n  if (light)\n    tree = getLightTree(tree, children1AsArray);\n  return tree;\n};\n\nexport const loadTree = (serTree) => {\n  if (isImmutableTree(serTree)) {\n    return serTree;\n  } else if (isTree(serTree)) {\n    return jsTreeToImmutable(serTree);\n  } else if (typeof serTree == \"string\" && serTree.startsWith('[\"~#iM\"')) {\n    //tip: old versions of RAQB were saving tree with `transit.toJSON()`\n    // https://github.com/ukrbublik/react-awesome-query-builder/issues/69\n    throw \"You are trying to load query in obsolete serialization format (Immutable string) which is not supported in versions starting from 2.1.17\";\n  } else if (typeof serTree == \"string\") {\n    return jsTreeToImmutable(JSON.parse(serTree));\n  } else throw \"Can't load tree!\";\n};\n\nexport const checkTree = (tree, config) => {\n  if (!tree) return undefined;\n  const extendedConfig = extendConfig(config);\n  return validateTree(tree, null, extendedConfig, extendedConfig);\n};\n\nexport const isValidTree = (tree) => {\n  return getTreeBadFields(tree).length == 0;\n};\n\nexport const isImmutableTree = (tree) => {\n  return Map.isMap(tree);\n};\n\nexport const isTree = (tree) => {\n  return typeof tree == \"object\" && (tree.type == \"group\" || tree.type == \"switch_group\");\n};\n\nexport {isJsonLogic};\n\nfunction jsTreeToImmutable(tree) {\n  return fromJS(tree, function (key, value) {\n    let outValue;\n    if (key == \"properties\") {\n      outValue = value.toOrderedMap();\n\n      // `value` should be undefined instead of null\n      // JSON doesn't support undefined and replaces undefined -> null\n      // So fix: null -> undefined\n      for (let i = 0 ; i < 2 ; i++) {\n        if (outValue.get(\"value\")?.get(i) === null) {\n          outValue = outValue.setIn([\"value\", i], undefined);\n        }\n      }\n    } else if (key == \"value\" && value.get(0) && value.get(0).toJS !== undefined) {\n      const valueJs = value.get(0).toJS();\n      if (valueJs.func) {\n        outValue = value.toOrderedMap();\n      } else {\n        // only for raw values keep JS representation\n        outValue = Immutable.List.of(valueJs);\n      }\n    } else if (key == \"asyncListValues\") {\n      // keep in JS format\n      outValue = value.toJS();\n    } else if (key == \"children1\" && Immutable.Iterable.isIndexed(value)) {\n      outValue = new Immutable.OrderedMap(value.map(child => [child.get(\"id\"), child]));\n    } else {\n      outValue = Immutable.Iterable.isIndexed(value) ? value.toList() : value.toOrderedMap();\n    }\n    return outValue;\n  });\n}\n\n","import uuid from \"../utils/uuid\";\nimport {defaultValue, isJsonLogic, shallowEqual, logger} from \"../utils/stuff\";\nimport {getFieldConfig, extendConfig, normalizeField} from \"../utils/configUtils\";\nimport {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {loadTree} from \"./tree\";\nimport {defaultConjunction, defaultGroupConjunction} from \"../utils/defaultUtils\";\n\nimport moment from \"moment\";\n\n// http://jsonlogic.com/\n\n// helpers\nconst arrayUniq = (arr) => Array.from(new Set(arr));\nconst arrayToObject = (arr) => arr.reduce((acc, [f, fc]) => ({ ...acc, [f]: fc }), {});\n\nexport const loadFromJsonLogic = (logicTree, config) => {\n  return _loadFromJsonLogic(logicTree, config, false);\n};\n\nexport const _loadFromJsonLogic = (logicTree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n  const extendedConfig = extendConfig(config);\n  const conv = buildConv(extendedConfig);\n  let jsTree = logicTree ? convertFromLogic(logicTree, conv, extendedConfig, \"rule\", meta) : undefined;\n  if (jsTree && jsTree.type != \"group\") {\n    jsTree = wrapInDefaultConj(jsTree, extendedConfig);\n  }\n  const immTree = jsTree ? loadTree(jsTree) : undefined;\n\n  if (returnErrors) {\n    return [immTree, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while importing from JsonLogic:\", meta.errors);\n    return immTree;\n  }\n};\n\n\nconst buildConv = (config) => {\n  let operators = {};\n  for (let opKey in config.operators) {\n    const opConfig = config.operators[opKey];\n    if (typeof opConfig.jsonLogic == \"string\") {\n      // example: \"</2\", \"#in/1\"\n      const opk = (opConfig._jsonLogicIsRevArgs ? \"#\" : \"\") + opConfig.jsonLogic + \"/\" + defaultValue(opConfig.cardinality, 1);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    } else if(typeof opConfig.jsonLogic2 == \"string\") {\n      // example: all-in/1\"\n      const opk = opConfig.jsonLogic2 + \"/\" + defaultValue(opConfig.cardinality, 1);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    }\n  }\n\n  let conjunctions = {};\n  for (let conjKey in config.conjunctions) {\n    const conjunctionDefinition = config.conjunctions[conjKey];\n    const ck = conjunctionDefinition.jsonLogicConj || conjKey.toLowerCase();\n    conjunctions[ck] = conjKey;\n  }\n\n  let funcs = {};\n  for (let funcKey in config.funcs) {\n    const funcConfig = config.funcs[funcKey];\n    let fk;\n    if (funcConfig.jsonLogicIsMethod) {\n      fk = \"#\" + funcConfig.jsonLogic;\n    } else if (typeof funcConfig.jsonLogic == \"string\") {\n      fk = funcConfig.jsonLogic;\n    }\n    if (fk) {\n      if (!funcs[fk])\n        funcs[fk] = [];\n      funcs[fk].push(funcKey);\n    }\n  }\n\n  const {groupVarKey, altVarKey} = config.settings.jsonLogic;\n\n  return {\n    operators,\n    conjunctions,\n    funcs,\n    varKeys: [\"var\", groupVarKey, altVarKey],\n  };\n};\n\n\nconst convertFromLogic = (logic, conv, config, expectedType, meta, not = false, fieldConfig, widget, parentField = null, _isLockedLogic = false) => {\n  let op, vals;\n  if (isJsonLogic(logic)) {\n    op = Object.keys(logic)[0];\n    vals = logic[op];\n    if (!Array.isArray(vals))\n      vals = [ vals ];\n  }\n  \n  let ret;\n  let beforeErrorsCnt = meta.errors.length;\n\n  const {lockedOp} = config.settings.jsonLogic;\n  const isEmptyOp = op == \"!\" && (vals.length == 1 && vals[0] && isJsonLogic(vals[0]) && conv.varKeys.includes(Object.keys(vals[0])[0]));\n  const isRev = op == \"!\" && !isEmptyOp;\n  const isLocked = lockedOp && op == lockedOp;\n  if (isLocked) {\n    ret = convertFromLogic(vals[0], conv, config, expectedType, meta, not, fieldConfig, widget, parentField, true);\n  } else if (isRev) {\n    // reverse with not\n    ret = convertFromLogic(vals[0], conv, config, expectedType, meta, !not, fieldConfig, widget, parentField);\n  } else if(expectedType == \"val\") {\n    // not is not used here\n    ret = convertField(op, vals, conv, config, not, meta, parentField) \n      || convertFunc(op, vals, conv, config, not, fieldConfig, meta, parentField) \n      || convertVal(logic, fieldConfig, widget, config, meta);\n  } else if(expectedType == \"rule\") {\n    ret = convertConj(op, vals, conv, config, not, meta, parentField, false) \n    || convertOp(op, vals, conv, config, not, meta, parentField);\n  }\n\n  let afterErrorsCnt = meta.errors.length;\n  if (op != \"!\" && ret === undefined && afterErrorsCnt == beforeErrorsCnt) {\n    meta.errors.push(`Can't parse logic ${JSON.stringify(logic)}`);\n  }\n\n  if (isLocked) {\n    ret.properties.isLocked = true;\n  }\n\n  return ret;\n};\n\n\nconst convertVal = (val, fieldConfig, widget, config, meta) => {\n  if (val === undefined) return undefined;\n  const widgetConfig = config.widgets[widget || fieldConfig.mainWidget];\n\n  if (!widgetConfig) {\n    meta.errors.push(`No widget for type ${fieldConfig.type}`);\n    return undefined;\n  }\n\n  if (isJsonLogic(val)) {\n    meta.errors.push(`Unexpected logic in value: ${JSON.stringify(val)}`);\n    return undefined;\n  }\n\n  // number of seconds -> time string\n  if (fieldConfig && fieldConfig.type == \"time\" && typeof val == \"number\") {\n    const [h, m, s] = [Math.floor(val / 60 / 60) % 24, Math.floor(val / 60) % 60, val % 60];\n    const valueFormat = widgetConfig.valueFormat;\n    if (valueFormat) {\n      const dateVal = new Date(val);\n      dateVal.setMilliseconds(0);\n      dateVal.setHours(h);\n      dateVal.setMinutes(m);\n      dateVal.setSeconds(s);\n      val = moment(dateVal).format(valueFormat);\n    } else {\n      val = `${h}:${m}:${s}`;\n    }\n  }\n\n  // \"2020-01-08T22:00:00.000Z\" -> Date object\n  if (fieldConfig && [\"date\", \"datetime\"].includes(fieldConfig.type) && val && !(val instanceof Date)) {\n    try {\n      const dateVal = new Date(val);\n      if (dateVal instanceof Date && dateVal.toISOString() === val) {\n        val = dateVal;\n      }\n    } catch(e) {\n      meta.errors.push(`Can't convert value ${val} as Date`);\n      val = undefined;\n    }\n  }\n\n  // Date object -> formatted string\n  if (val instanceof Date && fieldConfig) {\n    const valueFormat = widgetConfig.valueFormat;\n    if (valueFormat) {\n      val = moment(val).format(valueFormat);\n    }\n  }\n\n  let asyncListValues;\n  if (val && fieldConfig.fieldSettings && fieldConfig.fieldSettings.asyncFetch) {\n    const vals = Array.isArray(val) ? val : [val];\n    asyncListValues = vals;\n  }\n\n  return {\n    valueSrc: \"value\",\n    value: val,\n    valueType: widgetConfig.type,\n    asyncListValues\n  };\n};\n\n\nconst convertField = (op, vals, conv, config, not, meta, parentField = null) => {\n  const {fieldSeparator} = config.settings;\n  if (conv.varKeys.includes(op) && typeof vals[0] == \"string\") {\n    let field = vals[0];\n    if (parentField)\n      field = [parentField, field].join(fieldSeparator);\n    field = normalizeField(config, field);\n    const fieldConfig = getFieldConfig(config, field);\n    if (!fieldConfig) {\n      meta.errors.push(`No config for field ${field}`);\n      return undefined;\n    }\n\n    return {\n      valueSrc: \"field\",\n      value: field,\n      valueType: fieldConfig.type,\n    };\n  }\n\n  return undefined;\n};\n\n\nconst convertFunc = (op, vals, conv, config, not, fieldConfig, meta, parentField = null) => {\n  if (!op) return undefined;\n  let func, argsArr, funcKey;\n  const jsonLogicIsMethod = (op == \"method\");\n  if (jsonLogicIsMethod) {\n    let obj, opts;\n    [obj, func, ...opts] = vals;\n    argsArr = [obj, ...opts];\n  } else {\n    func = op;\n    argsArr = vals;\n  }\n\n  const fk = (jsonLogicIsMethod ? \"#\" : \"\") + func;\n  const funcKeys = (conv.funcs[fk] || []).filter(k => \n    (fieldConfig ? config.funcs[k].returnType == fieldConfig.type : true)\n  );\n  if (funcKeys.length) {\n    funcKey = funcKeys[0];\n  } else {\n    const v = {[op]: vals};\n    for (const [f, fc] of Object.entries(config.funcs || {})) {\n      if (fc.jsonLogicImport && fc.returnType == fieldConfig.type) {\n        let parsed;\n        try {\n          parsed = fc.jsonLogicImport(v);\n        } catch(_e) {\n          // given expression `v` can't be parsed into function\n        }\n        if (parsed) {\n          funcKey = f;\n          argsArr = parsed;\n        }\n      }\n    }\n  }\n  if (!funcKey)\n    return undefined;\n\n  if (funcKey) {\n    const funcConfig = config.funcs[funcKey];\n    const argKeys = Object.keys(funcConfig.args || {});\n    let args = argsArr.reduce((acc, val, ind) => {\n      const argKey = argKeys[ind];\n      const argConfig = funcConfig.args[argKey];\n      let argVal = convertFromLogic(val, conv, config, \"val\", meta, false, argConfig, null, parentField);\n      if (argVal === undefined) {\n        argVal = argConfig.defaultValue;\n        if (argVal === undefined) {\n          meta.errors.push(`No value for arg ${argKey} of func ${funcKey}`);\n          return undefined;\n        }\n      }\n      return {...acc, [argKey]: argVal};\n    }, {});\n\n    return {\n      valueSrc: \"func\",\n      value: {\n        func: funcKey,\n        args: args\n      },\n      valueType: funcConfig.returnType,\n    };\n  }\n\n  return undefined;\n};\n\n\nconst convertConj = (op, vals, conv, config, not, meta, parentField = null, isRuleGroup = false) => {\n  const conjKey = conv.conjunctions[op];\n  const {fieldSeparator} = config.settings;\n  const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n  const isParentGroup = parentFieldConfig?.type == \"!group\";\n  if (conjKey) {\n    let type = \"group\";\n    const children = vals\n      .map(v => convertFromLogic(v, conv, config, \"rule\", meta, false, null, null, parentField))\n      .filter(r => r !== undefined)\n      .reduce((acc, r) => ({...acc, [r.id] : r}), {});\n    const complexFields = Object.values(children)\n      .map(v => v?.properties?.field)\n      .filter(f => f && f.includes(fieldSeparator));\n    const complexFieldsGroupAncestors = Object.fromEntries(\n      arrayUniq(complexFields).map(f => {\n        const parts = f.split(fieldSeparator);\n        const ancs = Object.fromEntries(\n          parts.slice(0, -1)\n            .map((f, i, parts) => [...parts.slice(0, i), f])\n            .map(fp => [fp.join(fieldSeparator), getFieldConfig(config, fp)])\n            .filter(([_f, fc]) => fc.type == \"!group\")\n        );\n        return [f, Object.keys(ancs)];\n      })\n    );\n    const childrenInRuleGroup = Object.values(children)\n      .map(v => v?.properties?.field)\n      .map(f => complexFieldsGroupAncestors[f])\n      .filter(ancs => ancs && ancs.length);\n    const usedRuleGroups = arrayUniq(Object.values(complexFieldsGroupAncestors).flat());\n    const usedTopRuleGroups = topLevelFieldsFilter(usedRuleGroups);\n    \n    let properties = {\n      conjunction: conjKey,\n      not: not\n    };\n    const id = uuid();\n\n    let children1 = {};\n    let groupToId = {};\n    Object.entries(children).map(([k, v]) => {\n      if (v.type == \"group\" || v.type == \"rule_group\") {\n        // put as-is\n        children1[k] = v;\n      } else {\n        const field = v?.properties?.field;\n        const groupAncestors = complexFieldsGroupAncestors[field];\n        const groupField = groupAncestors?.at(-1);\n        if (!groupField) {\n          // not in rule_group (can be simple field or in struct) - put as-is\n          children1[k] = v;\n        } else {\n          // wrap field in rule_group (with creating hierarchy if need)\n          let ch = children1;\n          let parentFieldParts = parentField ? parentField.split(fieldSeparator) : [];\n          const isInParent = shallowEqual(parentFieldParts, groupField.split(fieldSeparator).slice(0, parentFieldParts.length));\n          if (!isInParent)\n            parentFieldParts = []; // should not be\n          const traverseGroupFields = groupField\n            .split(fieldSeparator)\n            .slice(parentFieldParts.length)\n            .map((f, i, parts) => [...parentFieldParts, ...parts.slice(0, i), f].join(fieldSeparator))\n            .map(f => normalizeField(config, f))\n            .map((f) => ({f, fc: getFieldConfig(config, f) || {}}))\n            .filter(({fc}) => (fc.type != \"!struct\"));\n          traverseGroupFields.map(({f: gf, fc: gfc}, i) => {\n            let groupId = groupToId[gf];\n            if (!groupId) {\n              groupId = uuid();\n              groupToId[gf] = groupId;\n              ch[groupId] = {\n                type: \"rule_group\",\n                id: groupId,\n                children1: {},\n                properties: {\n                  conjunction: conjKey,\n                  not: false,\n                  field: gf,\n                  mode: gfc.mode,\n                }\n              };\n            }\n            ch = ch[groupId].children1;\n          });\n          ch[k] = v;\n        }\n      }\n    });\n\n    // tip: for isRuleGroup=true correct type and properties will be set out of this func\n\n    return {\n      type: type,\n      id: id,\n      children1: children1,\n      properties: properties\n    };\n  }\n\n  return undefined;\n};\n\n\nconst topLevelFieldsFilter = (fields) => {\n  let arr = [...fields].sort((a, b) => (a.length - b.length));\n  for (let i = 0 ; i < arr.length ; i++) {\n    for (let j = i + 1 ; j < arr.length ; j++) {\n      if (arr[j].indexOf(arr[i]) == 0) {\n        // arr[j] is inside arr[i] (eg. \"a.b\" inside \"a\")\n        arr.splice(j, 1);\n        j--;\n      }\n    }\n  }\n  return arr;\n};\n\nconst wrapInDefaultConjRuleGroup = (rule, parentField, parentFieldConfig, config, conj) => {\n  if (!rule) return undefined;\n  return {\n    type: \"rule_group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: conj || defaultGroupConjunction(config, parentFieldConfig),\n      not: false,\n      field: parentField,\n    }\n  };\n};\n\nconst wrapInDefaultConj = (rule, config, not = false) => {\n  return {\n    type: \"group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: defaultConjunction(config),\n      not: not\n    }\n  };\n};\n\nconst parseRule = (op, arity, vals, parentField, conv, config, meta) => {\n  let errors = [];\n  let res = _parseRule(op, arity, vals, parentField, conv, config, errors, false) \n         || _parseRule(op, arity, vals, parentField, conv, config, errors, true) ;\n\n  if (!res) {\n    meta.errors.push(errors.join(\"; \") || `Unknown op ${op}/${arity}`);\n    return undefined;\n  }\n  \n  return res;\n};\n\nconst _parseRule = (op, arity, vals, parentField, conv, config, errors, isRevArgs) => {\n  // config.settings.groupOperators are used for group count (cardinality = 0 is exception)\n  // but don't confuse with \"all-in\" or \"some-in\" for multiselect\n  const isAllOrSomeInForMultiselect = (op == \"all\" || op == \"some\") && isJsonLogic(vals[1]) && Object.keys(vals[1])[0] == \"in\";\n  const isGroup0 = !isAllOrSomeInForMultiselect && config.settings.groupOperators.includes(op);\n  const eqOps = [\"==\", \"!=\"];\n  let cardinality = isGroup0 ? 0 : arity - 1;\n  if (isGroup0)\n    cardinality = 0;\n  else if (eqOps.includes(op) && cardinality == 1 && vals[1] === null)\n    cardinality = 0;\n\n  const opk = op + \"/\" + cardinality;\n  const {fieldSeparator} = config.settings;\n  let opKeys = conv.operators[(isRevArgs ? \"#\" : \"\") + opk];\n  if (!opKeys)\n    return;\n  \n  let jlField, args = [];\n  const rangeOps = [\"<\", \"<=\", \">\", \">=\"];\n  if (rangeOps.includes(op) && arity == 3) {\n    jlField = vals[1];\n    args = [ vals[0], vals[2] ];\n  } else if (isRevArgs) {\n    jlField = vals[1];\n    args = [ vals[0] ];\n  } else {\n    [jlField, ...args] = vals;\n  }\n\n  if (!isJsonLogic(jlField)) {\n    errors.push(`Incorrect operands for ${op}: ${JSON.stringify(vals)}`);\n    return;\n  }\n  let k = Object.keys(jlField)[0];\n  let v = Object.values(jlField)[0];\n  \n  let field, having, isGroup;\n  if (conv.varKeys.includes(k) && typeof v == \"string\") {\n    field = v;\n  }\n  if (isGroup0) {\n    isGroup = true;\n    having = args[0];\n    args = [];\n  }\n  // reduce/filter for group ext\n  if (k == \"reduce\" && Array.isArray(v) && v.length == 3) {\n    let [filter, acc, init] = v;\n    if (isJsonLogic(filter) && init == 0 && isJsonLogic(acc) && Array.isArray(acc[\"+\"]) && acc[\"+\"][0] == 1 && isJsonLogic(acc[\"+\"][1]) && acc[\"+\"][1][\"var\"] == \"accumulator\") {\n      k = Object.keys(filter)[0];\n      v = Object.values(filter)[0];\n      if (k == \"filter\") {\n        let [group, filter] = v;\n        if (isJsonLogic(group)) {\n          k = Object.keys(group)[0];\n          v = Object.values(group)[0];\n          if (conv.varKeys.includes(k) && typeof v == \"string\") {\n            field = v;\n            having = filter;\n            isGroup = true;\n          }\n        }\n      } else if (conv.varKeys.includes(k) && typeof v == \"string\") {\n        field = v;\n        isGroup = true;\n      }\n    }\n  }\n  \n  if (!field) {\n    errors.push(`Unknown field ${JSON.stringify(jlField)}`);\n    return;\n  }\n  if (parentField)\n    field = [parentField, field].join(fieldSeparator);\n  field = normalizeField(config, field);\n\n  const fieldConfig = getFieldConfig(config, field);\n  if (!fieldConfig) {\n    errors.push(`No config for field ${field}`);\n    return;\n  }\n\n  let opKey = opKeys[0];\n  if (opKeys.length > 1 && fieldConfig && fieldConfig.operators) {\n    // eg. for \"equal\" and \"select_equals\"\n    opKeys = opKeys\n      .filter(k => fieldConfig.operators.includes(k));\n    if (opKeys.length == 0) {\n      errors.push(`No corresponding ops for field ${field}`);\n      return;\n    }\n    opKey = opKeys[0];\n  }\n  \n  return {\n    field, fieldConfig, opKey, args, having\n  };\n};\n\nconst convertOp = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (!op) return undefined;\n\n  const arity = vals.length;\n  if ((op == \"all\" || op == \"some\") && isJsonLogic(vals[1])) {\n    // special case for \"all-in\" and \"some-in\"\n    const op2 = Object.keys(vals[1])[0];\n    if (op2 == \"in\") {\n      vals = [\n        vals[0],\n        vals[1][op2][1]\n      ];\n      op = op + \"-\" + op2; // \"all-in\" and \"some-in\"\n    }\n  }\n\n  const parseRes = parseRule(op, arity, vals, parentField, conv, config, meta);\n  if (!parseRes) return undefined;\n  let {field, fieldConfig, opKey, args, having} = parseRes;\n  let opConfig = config.operators[opKey];\n\n  // Group component in array mode can show NOT checkbox, so do nothing in this case\n  // Otherwise try to revert\n  const showNot = fieldConfig.showNot !== undefined ? fieldConfig.showNot : config.settings.showNot; \n  let canRev = true;\n  // if (fieldConfig.type == \"!group\" && fieldConfig.mode == \"array\" && showNot)\n  //   canRev = false;\n\n  let conj;\n  let havingVals;\n  if (fieldConfig.type == \"!group\" && having) {\n    conj = Object.keys(having)[0];\n    havingVals = having[conj];\n    if (!Array.isArray(havingVals))\n      havingVals = [ havingVals ];\n\n    // Preprocess \"!\": Try to reverse op in single rule in having\n    // Eg. use `not_equal` instead of `not` `equal`\n    const isEmptyOp = conj == \"!\" && (havingVals.length == 1 && havingVals[0] && isJsonLogic(havingVals[0]) && conv.varKeys.includes(Object.keys(havingVals[0])[0]));\n    if (conj == \"!\" && !isEmptyOp) {\n      not = !not;\n      having = having[\"!\"];\n      conj = Object.keys(having)[0];\n      havingVals = having[conj];\n      if (!Array.isArray(havingVals))\n        havingVals = [ havingVals ];\n    }\n  }\n\n  // Use reversed op\n  if (not && canRev && opConfig.reversedOp) {\n    not = false;\n    opKey = opConfig.reversedOp;\n    opConfig = config.operators[opKey];\n  }\n\n  const widget = getWidgetForFieldOp(config, field, opKey);\n\n  const convertedArgs = args\n    .map(v => convertFromLogic(v, conv, config, \"val\", meta, false, fieldConfig, widget, parentField));\n  if (convertedArgs.filter(v => v === undefined).length) {\n    //meta.errors.push(`Undefined arg for field ${field} and op ${opKey}`);\n    return undefined;\n  }\n\n  let res;\n\n  if (fieldConfig.type == \"!group\" && having) {\n    if (conv.conjunctions[conj] !== undefined) {\n      res = convertConj(conj, havingVals, conv, config, not, meta, field, true);\n      not = false; // not was applied to group\n    } else {\n      // need to be wrapped in `rule_group`\n      const rule = convertOp(conj, havingVals, conv, config, not && canRev, meta, field);\n      if (not && canRev && !rule?.properties?.not) {\n        not = false; // op was reversed in rule\n      }\n      res = wrapInDefaultConjRuleGroup(rule, field, fieldConfig, config, conv.conjunctions[\"and\"]);\n    }\n    if (!res)\n      return undefined;\n    \n    res.type = \"rule_group\";\n    if (not) {\n      Object.assign(res.properties, {\n        not: not,\n      });\n    }\n    Object.assign(res.properties, {\n      field: field,\n      mode: fieldConfig.mode,\n      operator: opKey,\n    });\n    if (fieldConfig.mode == \"array\") {\n      Object.assign(res.properties, {\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n      });\n    }\n  } else if (fieldConfig.type == \"!group\" && !having) {\n    res = {\n      type: \"rule_group\",\n      id: uuid(),\n      children1: {},\n      properties: {\n        conjunction: defaultGroupConjunction(config, fieldConfig),\n        not: not,\n        mode: fieldConfig.mode,\n        field: field,\n        operator: opKey,\n      }\n    };\n    if (fieldConfig.mode == \"array\") {\n      Object.assign(res.properties, {\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n      });\n    }\n  } else {\n    const asyncListValuesArr = convertedArgs.map(v => v.asyncListValues).filter(v => v != undefined);\n    const asyncListValues = asyncListValuesArr.length ? asyncListValuesArr[0] : undefined;\n    res = {\n      type: \"rule\",\n      id: uuid(),\n      properties: {\n        field: field,\n        operator: opKey,\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n        asyncListValues,\n      }\n    };\n    if (not) {\n      //meta.errors.push(`No rev op for ${opKey}`);\n      res = wrapInDefaultConj(res, config, not);\n    }\n  }\n\n  return res;\n};\n\n","import { SpelExpressionEvaluator } from \"spel2js\";\nimport uuid from \"../utils/uuid\";\nimport {getFieldConfig, extendConfig, normalizeField} from \"../utils/configUtils\";\nimport {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {loadTree} from \"./tree\";\nimport {defaultConjunction, defaultGroupConjunction} from \"../utils/defaultUtils\";\nimport {logger} from \"../utils/stuff\";\nimport moment from \"moment\";\n\nexport const loadFromSpel = (logicTree, config) => {\n  return _loadFromSpel(logicTree, config, true);\n};\n\nexport const _loadFromSpel = (spelStr, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n  const extendedConfig = extendConfig(config);\n  const conv = buildConv(extendedConfig);\n  \n  let compiledExpression;\n  let convertedObj;\n  let jsTree = undefined;\n  try {\n    const compileRes = SpelExpressionEvaluator.compile(spelStr);\n    compiledExpression = compileRes._compiledExpression;\n  } catch (e) {\n    meta.errors.push(e);\n  }\n  \n  if (compiledExpression) {\n    logger.debug(\"compiledExpression:\", compiledExpression);\n    convertedObj = convertCompiled(compiledExpression, meta);\n    logger.debug(\"convertedObj:\", convertedObj, meta);\n\n    jsTree = convertToTree(convertedObj, conv, extendedConfig, meta);\n    if (jsTree && jsTree.type != \"group\" && jsTree.type != \"switch_group\") {\n      jsTree = wrapInDefaultConj(jsTree, extendedConfig, convertedObj[\"not\"]);\n    }\n    logger.debug(\"jsTree:\", jsTree);\n  }\n\n  const immTree = jsTree ? loadTree(jsTree) : undefined;\n\n  if (returnErrors) {\n    return [immTree, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while importing from SpEL:\", meta.errors);\n    return immTree;\n  }\n};\n\nconst convertCompiled = (expr, meta, parentExpr = null) => {\n  const type = expr.getType();\n  let children = expr.getChildren().map(child => convertCompiled(child, meta, expr));\n\n  // flatize OR/AND\n  if (type == \"op-or\" || type == \"op-and\") {\n    children = children.reduce((acc, child) => {\n      const canFlatize = child.type == type && !child.not;\n      const flat = canFlatize ? child.children : [child];\n      return [...acc, ...flat];\n    }, []);\n  }\n\n  // unwrap NOT\n  if (type == \"op-not\") {\n    if (children.length != 1) {\n      meta.errors.push(`Operator NOT should have 1 child, but got ${children.length}}`);\n    }\n    return {\n      ...children[0],\n      not: !(children[0].not || false)\n    };\n  }\n\n  if (type == \"compound\") {\n    // remove `.?[true]`\n    children = children.filter(child => {\n      const isListFix = child.type == \"selection\" && child.children.length == 1 && child.children[0].type == \"boolean\" && child.children[0].val == true;\n      return !isListFix;\n    });\n    // aggregation\n    // eg. `results.?[product == 'abc'].length`\n    const selection = children.find(child => \n      child.type == \"selection\"\n    );\n    if (selection && selection.children.length != 1) {\n      meta.errors.push(`Selection should have 1 child, but got ${selection.children.length}`);\n    }\n    const filter = selection ? selection.children[0] : null;\n    const lastChild = children[children.length - 1];\n    const isSize = lastChild.type == \"method\" && lastChild.val.methodName == \"size\" \n      || lastChild.type == \"!func\" && lastChild.methodName == \"size\" ;\n    const isLength = lastChild.type == \"property\" && lastChild.val == \"length\";\n    const sourceParts = children.filter(child => \n      child !== selection && child !== lastChild\n    );\n    const source = {\n      type: \"compound\",\n      children: sourceParts\n    };\n    if (isSize || isLength) {\n      return {\n        type: \"!aggr\",\n        filter,\n        source\n      };\n    }\n    // remove `#this`, `#root`\n    children = children.filter(child => {\n      const isThis = child.type == \"variable\" && child.val == \"this\";\n      const isRoot = child.type == \"variable\" && child.val == \"root\";\n      return !(isThis || isRoot);\n    });\n    // indexer\n    children = children.map(child => {\n      if (child.type == \"indexer\" && child.children.length == 1) {\n        return {\n          type: \"indexer\", \n          val: child.children[0].val,\n          itype: child.children[0].type\n        };\n      } else {\n        return child;\n      }\n    });\n    // method\n    if (lastChild.type == \"method\") {\n      const obj = children.filter(child => \n        child !== lastChild\n      );\n      return {\n        type: \"!func\",\n        obj,\n        methodName: lastChild.val.methodName,\n        args: lastChild.val.args\n      };\n    }\n    // !func\n    if (lastChild.type == \"!func\") {\n      const obj = children.filter(child => \n        child !== lastChild\n      );\n      return {\n        ...lastChild,\n        obj,\n      };\n    }\n  }\n\n  // getRaw || getValue\n  let val;\n  try {\n    if (expr.getRaw) { // use my fork\n      val = expr.getRaw();\n    } else if (expr.getValue.length == 0) { // getValue not requires context arg -> can use\n      val = expr.getValue();\n    }\n  } catch(e) {\n    logger.error(\"[spel2js] Error in getValue()\", e);\n  }\n\n  // ternary\n  if (type == \"ternary\") {\n    val = flatizeTernary(children);\n  }\n\n  // convert method/function args\n  if (typeof val === \"object\" && val !== null) {\n    if (val.methodName || val.functionName) {\n      val.args = val.args.map(child => convertCompiled(child, meta, expr));\n    }\n  }\n  // convert list\n  if (type == \"list\") {\n    val = val.map(item => convertCompiled(item, meta, expr));\n\n    // fix whole expression wrapped in `{}`\n    if (!parentExpr && val.length == 1) {\n      return val[0];\n    }\n  }\n  // convert constructor\n  if (type == \"constructorref\") {\n    const qid = children.find(child => child.type == \"qualifiedidentifier\");\n    const cls = qid?.val;\n    if (!cls) {\n      meta.errors.push(`Can't find qualifiedidentifier in constructorref children: ${JSON.stringify(children)}`);\n      return undefined;\n    }\n    const args = children.filter(child => child.type != \"qualifiedidentifier\");\n    return {\n      type: \"!new\",\n      cls,\n      args\n    };\n  }\n  // convert type\n  if (type == \"typeref\") {\n    const qid = children.find(child => child.type == \"qualifiedidentifier\");\n    const cls = qid?.val;\n    if (!cls) {\n      meta.errors.push(`Can't find qualifiedidentifier in typeref children: ${JSON.stringify(children)}`);\n      return undefined;\n    }\n    const _args = children.filter(child => child.type != \"qualifiedidentifier\");\n    return {\n      type: \"!type\",\n      cls\n    };\n  }\n  // convert function/method\n  if (type == \"function\" || type == \"method\") {\n    // `foo()` is method, `#foo()` is function\n    // let's use common property `methodName` and just add `isVar` for function\n    const {functionName, methodName, args} = val;\n    return {\n      type: \"!func\",\n      methodName: functionName || methodName,\n      isVar: type == \"function\",\n      args\n    };\n  }\n\n  return {\n    type,\n    children,\n    val,\n  };\n};\n\nconst flatizeTernary = (children) => {\n  let flat = [];\n  function _processTernaryChildren(tern) {\n    let [cond, if_val, else_val] = tern;\n    flat.push([cond, if_val]);\n    if (else_val?.type == \"ternary\") {\n      _processTernaryChildren(else_val.children);\n    } else {\n      flat.push([undefined, else_val]);\n    }\n  }\n  _processTernaryChildren(children);\n  return flat;\n};\n\nconst buildConv = (config) => {\n  let operators = {};\n  for (let opKey in config.operators) {\n    const opConfig = config.operators[opKey];\n    if (opConfig.spelOps) {\n      // examples: \"==\", \"eq\", \".contains\", \"matches\" (can be used for starts_with, ends_with)\n      opConfig.spelOps.forEach(spelOp => {\n        const opk = spelOp; // + \"/\" + defaultValue(opConfig.cardinality, 1);\n        if (!operators[opk])\n          operators[opk] = [];\n        operators[opk].push(opKey);\n      });\n    } else if (opConfig.spelOp) {\n      const opk = opConfig.spelOp; // + \"/\" + defaultValue(opConfig.cardinality, 1);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    } else {\n      logger.log(`[spel] No spelOp for operator ${opKey}`);\n    }\n  }\n\n  let conjunctions = {};\n  for (let conjKey in config.conjunctions) {\n    const conjunctionDefinition = config.conjunctions[conjKey];\n    const ck = conjunctionDefinition.spelConj || conjKey.toLowerCase();\n    conjunctions[ck] = conjKey;\n  }\n\n  let funcs = {};\n  for (let funcKey in config.funcs) {\n    const funcConfig = config.funcs[funcKey];\n    let fk;\n    if (typeof funcConfig.spelFunc == \"string\") {\n      fk = funcConfig.spelFunc;\n    }\n    if (fk) {\n      if (!funcs[fk])\n        funcs[fk] = [];\n      funcs[fk].push(funcKey);\n    }\n  }\n\n  return {\n    operators,\n    conjunctions,\n    funcs,\n  };\n};\n\nconst convertPath = (parts, meta) => {\n  let isError = false;\n  const res = parts.map(c => {\n    if (c.type == \"variable\" || c.type == \"property\" || c.type == \"indexer\" && c.itype == \"string\") {\n      return c.val;\n    } else {\n      isError = true;\n      meta.errors.push(`Unexpected item in compound: ${JSON.stringify(c)}`);\n    }\n  });\n  return !isError ? res : undefined;\n};\n\nconst convertArg = (spel, conv, config, meta, parentSpel) => {\n  if (spel == undefined)\n    return undefined;\n  const {fieldSeparator} = config.settings;\n  const literalTypes = {\n    number: \"number\",\n    string: \"text\",\n    boolean: \"boolean\",\n    null: \"null\" // should not be\n  };\n  \n  const groupFieldParts = parentSpel?._groupField ? [parentSpel?._groupField] : [];\n  if (spel.type == \"compound\") {\n    // complex field\n    const parts = convertPath(spel.children, meta);\n    if (!parts) {\n      return undefined;\n    }\n    const fullParts = [...groupFieldParts, ...parts];\n    const isVariable = spel.children?.[0]?.type == \"variable\";\n    return {\n      valueSrc: \"field\",\n      //valueType: todo\n      isVariable,\n      value: fullParts.join(fieldSeparator),\n    };\n  } else if (spel.type == \"variable\" || spel.type == \"property\") {\n    // normal field\n    const fullParts = [...groupFieldParts, spel.val];\n    const isVariable = spel.type == \"variable\";\n    return {\n      valueSrc: \"field\",\n      //valueType: todo\n      isVariable,\n      value: fullParts.join(fieldSeparator),\n    };\n  } else if (literalTypes[spel.type]) {\n    let value = spel.val;\n    let valueType = literalTypes[spel.type];\n    if (parentSpel?.isUnary) {\n      value = -value;\n    }\n    return {\n      valueSrc: \"value\",\n      valueType,\n      value,\n    };\n  } else if (spel.type == \"list\") {\n    const values = spel.val.map(v => convertArg(v, conv, config, meta, spel));\n    const _itemType = values.length ? values[0]?.valueType : null;\n    const value = values.map(v => v?.value);\n    const valueType = \"multiselect\";\n    return {\n      valueSrc: \"value\",\n      valueType,\n      value,\n    };\n  } else if (spel.type == \"!func\") {\n    const {obj, methodName, args, isVar} = spel;\n    \n    // todo: get from conv\n    const funcToOpMap = {\n      [\".contains\"]: \"like\",\n      [\".startsWith\"]: \"starts_with\",\n      [\".endsWith\"]: \"ends_with\",\n      [\"$contains\"]: \"select_any_in\",\n      [\".equals\"]: \"multiselect_equals\",\n      //[\".containsAll\"]: \"multiselect_contains\",\n      [\"CollectionUtils.containsAny()\"]: \"multiselect_contains\"\n    };\n\n    const convertedArgs = args.map(v => convertArg(v, conv, config, meta, {\n      ...spel,\n      _groupField: parentSpel?._groupField\n    }));\n    \n    //todo: make dynamic: use funcToOpMap and check obj type in basic config\n    if (methodName == \"contains\" && obj && obj[0].type == \"list\") {\n      const convertedObj = obj.map(v => convertArg(v, conv, config, meta, spel));\n      // {'yellow', 'green'}.?[true].contains(color)\n      if (!( convertedArgs.length == 1 && convertedArgs[0].valueSrc == \"field\" )) {\n        meta.errors.push(`Expected arg to method ${methodName} to be field but got: ${JSON.stringify(convertedArgs)}`);\n        return undefined;\n      }\n      const field = convertedArgs[0].value;\n      if (!( convertedObj.length == 1 && convertedObj[0].valueType == \"multiselect\" )) {\n        meta.errors.push(`Expected object of method ${methodName} to be inline list but got: ${JSON.stringify(convertedObj)}`);\n        return undefined;\n      }\n      const opKey = funcToOpMap[\"$\"+methodName];\n      const list = convertedObj[0];\n      return buildRule(config, meta, field, opKey, [list]);\n    } else if (obj && obj[0].type == \"property\" && funcToOpMap[obj[0].val + \".\" + methodName + \"()\"]) {\n      // CollectionUtils.containsAny(multicolor, {'yellow', 'green'})\n      const opKey = funcToOpMap[obj[0].val + \".\" + methodName + \"()\"];\n      const field = convertedArgs[0].value;\n      const args = convertedArgs.slice(1);\n      return buildRule(config, meta, field, opKey, args);\n    } else if (funcToOpMap[\".\"+methodName]) {\n      // user.login.startsWith('gg')\n      const opKey = funcToOpMap[\".\"+methodName];\n      const parts = convertPath(obj, meta);\n      if (parts && convertedArgs.length == 1) {\n        const fullParts = [...groupFieldParts, ...parts];\n        const field = fullParts.join(fieldSeparator);\n        return buildRule(config, meta, field, opKey, convertedArgs);\n      }\n    } else if (methodName == \"parse\" && obj && obj[0].type == \"!new\" && obj[0].cls.at(-1) == \"SimpleDateFormat\") {\n      // new java.text.SimpleDateFormat('yyyy-MM-dd').parse('2022-01-15')\n      const args = obj[0].args.map(v => convertArg(v, conv, config, meta, {\n        ...spel,\n        _groupField: parentSpel?._groupField\n      }));\n      if (!( args.length == 1 && args[0].valueType == \"text\" )) {\n        meta.errors.push(`Expected args of ${obj[0].cls.join(\".\")}.${methodName} to be 1 string but got: ${JSON.stringify(args)}`);\n        return undefined;\n      }\n      if (!( convertedArgs.length == 1 && convertedArgs[0].valueType == \"text\" )) {\n        meta.errors.push(`Expected args of ${obj[0].cls.join(\".\")} to be 1 string but got: ${JSON.stringify(convertedArgs)}`);\n        return undefined;\n      }\n      const dateFormat = args[0].value;\n      const dateString = convertedArgs[0].value;\n      const valueType = dateFormat.includes(\" \") ? \"datetime\" : \"date\";\n      const field = null; // todo\n      const widget = valueType;\n      const fieldConfig = getFieldConfig(config, field);\n      const widgetConfig = config.widgets[widget || fieldConfig?.mainWidget];\n      const valueFormat = widgetConfig.valueFormat;\n      const dateVal = moment(dateString, moment.ISO_8601);\n      const value = dateVal.isValid() ? dateVal.format(valueFormat) : undefined;\n      return {\n        valueSrc: \"value\",\n        valueType,\n        value,\n      };\n    } else if (methodName == \"parse\" && obj && obj[0].type == \"!type\" && obj[0].cls.at(-1) == \"LocalTime\") {\n      // time == T(java.time.LocalTime).parse('02:03:00')\n      if (!( convertedArgs.length == 1 && convertedArgs[0].valueType == \"text\" )) {\n        meta.errors.push(`Expected args of ${obj[0].cls.join(\".\")} to be 1 string but got: ${JSON.stringify(convertedArgs)}`);\n        return undefined;\n      }\n      const timeString = convertedArgs[0].value;\n      const valueType = \"time\";\n      const field = null; // todo\n      const widget = valueType;\n      const fieldConfig = getFieldConfig(config, field);\n      const widgetConfig = config.widgets[widget || fieldConfig?.mainWidget];\n      const valueFormat = widgetConfig.valueFormat;\n      const dateVal = moment(timeString, \"HH:mm:ss\");\n      const value = dateVal.isValid() ? dateVal.format(valueFormat) : undefined;\n      return {\n        valueSrc: \"value\",\n        valueType,\n        value,\n      };\n    } else {\n      // todo: conv.funcs\n      meta.errors.push(`Unsupported method ${methodName}`);\n    }\n  } else if (spel.type == \"op-plus\" && parentSpel?.type == \"ternary\") {\n    return buildCaseValueConcat(spel, conv, config, meta);\n  } else {\n    meta.errors.push(`Can't convert arg of type ${spel.type}`);\n  }\n  return undefined;\n};\n\nconst buildRule = (config, meta, field, opKey, convertedArgs) => {\n  if (convertedArgs.filter(v => v === undefined).length) {\n    return undefined;\n  }\n  const fieldConfig = getFieldConfig(config, field);\n  if (!fieldConfig) {\n    meta.errors.push(`No config for field ${field}`);\n    return undefined;\n  }\n  const widget = getWidgetForFieldOp(config, field, opKey);\n  const widgetConfig = config.widgets[widget || fieldConfig.mainWidget];\n  const asyncListValuesArr = convertedArgs.map(v => v.asyncListValues).filter(v => v != undefined);\n  const asyncListValues = asyncListValuesArr.length ? asyncListValuesArr[0] : undefined;\n  let res = {\n    type: \"rule\",\n    id: uuid(),\n    properties: {\n      field: field,\n      operator: opKey,\n      value: convertedArgs.map(v => v.value),\n      valueSrc: convertedArgs.map(v => v.valueSrc),\n      valueType: convertedArgs.map(v => {\n        if (v.valueSrc == \"value\") {\n          return widgetConfig?.type || fieldConfig?.type || v.valueType;\n        }\n        return v.valueType;\n      }),\n      asyncListValues,\n    }\n  };\n  return res;\n};\n\nconst buildRuleGroup = ({groupFilter, groupFieldValue}, opKey, convertedArgs, config, meta) => {\n  if (groupFieldValue.valueSrc != \"field\")\n    throw `Bad groupFieldValue: ${JSON.stringify(groupFieldValue)}`;\n  const groupField = groupFieldValue.value;\n  let groupOpRule = buildRule(config, meta, groupField, opKey, convertedArgs);\n  if (!groupOpRule)\n    return undefined;\n  const fieldConfig = getFieldConfig(config, groupField);\n  const mode = fieldConfig?.mode;\n  let res = {\n    ...(groupFilter || {}),\n    type: \"rule_group\",\n    properties: {\n      ...groupOpRule.properties,\n      ...(groupFilter?.properties || {}),\n      mode\n    }\n  };\n  if (!res.id)\n    res.id = uuid();\n  return res;\n};\n\n\nconst compareArgs = (left, right,  spel, conv, config, meta, parentSpel = null) => {\n  if (left.type == right.type) {\n    if (left.type == \"!aggr\") {\n      const [leftSource, rightSource] = [left.source, right.source].map(v => convertArg(v, conv, config, meta, {\n        ...spel,\n        _groupField: parentSpel?._groupField\n      }));\n      //todo: check same filter\n      return leftSource.value == rightSource.value;\n    } else {\n      const [leftVal, rightVal] = [left, right].map(v => convertArg(v, conv, config, meta, {\n        ...spel,\n        _groupField: parentSpel?._groupField\n      }));\n      return leftVal.value == rightVal.value;\n    }\n  }\n  return false;\n};\n\nconst convertToTree = (spel, conv, config, meta, parentSpel = null) => {\n  if(!spel) return undefined;\n  let res;\n  if (spel.type.indexOf(\"op-\") == 0) {\n    let op = spel.type.slice(\"op-\".length);\n\n    // unary\n    const isUnary = (op == \"minus\" || op == \"plus\") && spel.children.length == 1;\n    if (isUnary) {\n      spel.isUnary = true;\n      return convertToTree(spel.children[0], conv, config, meta, spel);\n    }\n\n    // between\n    let isBetweenNormal = (op == \"and\" && spel.children.length == 2 && spel.children[0].type == \"op-ge\" && spel.children[1].type == \"op-le\");\n    let isBetweenRev = (op == \"or\" && spel.children.length == 2 && spel.children[0].type == \"op-lt\" && spel.children[1].type == \"op-gt\");\n    let isBetween = isBetweenNormal || isBetweenRev;\n    if (isBetween) {\n      const [left, from] = spel.children[0].children;\n      const [right, to] = spel.children[1].children;\n      const isNumbers = from.type == \"number\" && to.type == \"number\";\n      const isSameSource = compareArgs(left, right,  spel, conv, config, meta, parentSpel);\n      if (isNumbers && isSameSource) {\n        const _fromValue = from.val;\n        const _toValue = to.val;\n        const oneSpel = {\n          type: \"op-between\",\n          children: [\n            left,\n            from,\n            to\n          ]\n        };\n        return convertToTree(oneSpel, conv, config, meta, parentSpel);\n      }\n    }\n\n    // find op\n    let opKeys = conv.operators[op];\n    let opKey;\n    // todo: make dynamic, use basic config\n    if (op == \"eq\" && spel.children[1].type == \"null\") {\n      opKey = \"is_null\";\n    } else if (op == \"ne\" && spel.children[1].type == \"null\") {\n      opKey = \"is_not_null\";\n    } else if (op == \"le\" && spel.children[1].type == \"string\" && spel.children[1].val == \"\") {\n      opKey = \"is_empty\";\n      opKeys = [\"is_empty\"];\n    } else if (op == \"gt\" && spel.children[1].type == \"string\" && spel.children[1].val == \"\") {\n      opKey = \"is_not_empty\";\n      opKeys = [\"is_not_empty\"];\n    } else if (op == \"between\") {\n      opKey = \"between\";\n      opKeys = [\"between\"];\n    }\n\n    // convert children\n    const convertChildren = () => spel.children.map(child => \n      convertToTree(child, conv, config, meta, {\n        ...spel,\n        _groupField: parentSpel?._groupField\n      })\n    );\n    \n    if (op == \"and\" || op == \"or\") {\n      const children1 = {};\n      const vals = convertChildren();\n      vals.forEach(v => {\n        if (v) {\n          const id = uuid();\n          v.id = id;\n          if (v.type != undefined) {\n            children1[id] = v;\n          } else {\n            meta.errors.push(`Bad item in AND/OR: ${JSON.stringify(v)}`);\n          }\n        }\n      });\n      res = {\n        type: \"group\",\n        id: uuid(),\n        children1,\n        properties: {\n          conjunction: conv.conjunctions[op],\n          not: spel.not\n        }\n      };\n    } else if (opKeys) {\n      const vals = convertChildren();\n      const fieldObj = vals[0];\n      let convertedArgs = vals.slice(1);\n      opKey = opKeys[0];\n      \n      if (!fieldObj) {\n        // LHS can't be parsed\n      } else if (fieldObj.groupFieldValue) {\n        // 1. group\n        if (fieldObj.groupFieldValue.valueSrc != \"field\") {\n          meta.errors.push(`Expected group field ${JSON.stringify(fieldObj)}`);\n        }\n        const groupField = fieldObj.groupFieldValue.value;\n        \n        // some/all/none\n        const opArg = convertedArgs[0];\n        if (opArg && opArg.groupFieldValue && opArg.groupFieldValue.valueSrc == \"field\" && opArg.groupFieldValue.value == groupField) {\n          // group.?[...].size() == group.size()\n          opKey = \"all\";\n          convertedArgs = [];\n        } else if (opKey == \"equal\" && opArg.valueSrc == \"value\" && opArg.valueType == \"number\" && opArg.value == 0) {\n          opKey = \"none\";\n          convertedArgs = [];\n        } else if (opKey == \"greater\" && opArg.valueSrc == \"value\" && opArg.valueType == \"number\" && opArg.value == 0) {\n          opKey = \"some\";\n          convertedArgs = [];\n        }\n\n        res = buildRuleGroup(fieldObj, opKey, convertedArgs, config, meta);\n      } else {\n        // 2. not group\n        if (fieldObj.valueSrc != \"field\") {\n          meta.errors.push(`Expected field ${JSON.stringify(fieldObj)}`);\n        }\n        const field = fieldObj.value;\n\n        if (opKeys.length > 1) {\n          logger.warn(`[spel] Spel operator ${op} can be mapped to ${opKeys}`);\n\n          //todo: it's naive\n          const widgets = opKeys.map(op => ({op, widget: getWidgetForFieldOp(config, field, op)}));\n          \n          if (op == \"eq\" || op == \"ne\") {\n            const ws = widgets.find(({ op, widget }) => (widget && widget != \"field\"));\n            opKey = ws.op;\n          }\n        }\n        res = buildRule(config, meta, field, opKey, convertedArgs);\n      }\n    } else {\n      if (!parentSpel) {\n        // try to parse whole `\"str\" + prop + #var` as ternary\n        res = buildSimpleSwitch(spel, conv, config, meta);\n      }\n      if (!res) {\n        meta.errors.push(`Can't convert op ${op}`);\n      }\n    }\n  } else if (spel.type == \"!aggr\") {\n    const groupFieldValue = convertToTree(spel.source, conv, config, meta, {\n      ...spel, \n      _groupField: parentSpel?._groupField\n    });\n    let groupFilter = convertToTree(spel.filter, conv, config, meta, {\n      ...spel, \n      _groupField: groupFieldValue?.value\n    });\n    if (groupFilter?.type == \"rule\") {\n      groupFilter = wrapInDefaultConj(groupFilter, config);\n    }\n    res = {\n      groupFilter,\n      groupFieldValue\n    };\n    if (!parentSpel) {\n      // !aggr can't be in root, it should be compared with something\n      res = undefined;\n      meta.errors.push(\"Unexpected !aggr in root\");\n    }\n  } else if (spel.type == \"ternary\") {\n    const children1 = {};\n    spel.val.forEach(v => {\n      const [cond, val] = v;\n      const caseI = buildCase(cond, val, conv, config, meta, spel);\n      if (caseI) {\n        children1[caseI.id] = caseI;\n      }\n    });\n    res = {\n      type: \"switch_group\",\n      id: uuid(),\n      children1,\n      properties: {}\n    };\n  } else {\n    res = convertArg(spel, conv, config, meta, parentSpel);\n    if (res && !res.type && !parentSpel) {\n      // try to parse whole `\"1\"` as ternary\n      const sw = buildSimpleSwitch(spel, conv, config, meta);\n      if (sw) {\n        res = sw;\n      } else {\n        res = undefined;\n        meta.errors.push(`Can't convert rule of type ${spel.type}, it looks like var/literal`);\n      }\n    }\n  }\n  return res;\n};\n\nconst buildSimpleSwitch = (val, conv, config, meta) => {\n  let children1 = {};\n  const cond = null;\n  const caseI = buildCase(cond, val, conv, config, meta);\n  if (caseI) {\n    children1[caseI.id] = caseI;\n  }\n  let res = {\n    type: \"switch_group\",\n    id: uuid(),\n    children1,\n    properties: {}\n  };\n  return res;\n};\n\nconst buildCase = (cond, val, conv, config, meta, spel = null) => {\n  const valProperties = buildCaseValProperties(config, meta, conv, val, spel);\n\n  let caseI;\n  if (cond) {\n    caseI = convertToTree(cond, conv, config, meta, spel);\n    if (caseI && caseI.type) {\n      if (caseI.type != \"group\") {\n        caseI = wrapInDefaultConj(caseI, config);\n      }\n      caseI.type = \"case_group\";\n    } else {\n      meta.errors.push(`Unexpected case: ${JSON.stringify(caseI)}`);\n      caseI = undefined;\n    }\n  } else {\n    caseI = {\n      id: uuid(),\n      type: \"case_group\",\n      properties: {}\n    };\n  }\n\n  if (caseI) {\n    caseI.properties = {\n      ...caseI.properties,\n      ...valProperties\n    };\n  }\n\n  return caseI;\n};\n\nconst buildCaseValueConcat = (spel, conv, config, meta) => {\n  let flat = [];\n  function _processConcatChildren(children) {\n    children.map(child => {\n      if (child.type == \"op-plus\") {\n        _processConcatChildren(child.children);\n      } else {\n        const convertedChild = convertArg(child, conv, config, meta, spel);\n        if (convertedChild) {\n          flat.push(convertedChild);\n        } else {\n          meta.errors.push(`Can't convert ${child.type} in concatenation`);\n        }\n      }\n    });\n  }\n  _processConcatChildren(spel.children);\n  return {\n    valueSrc: \"value\",\n    valueType: \"case_value\",\n    value: flat,\n  };\n};\n\nconst buildCaseValProperties = (config, meta, conv, val, spel = null) => {\n  let valProperties = {};\n  let convVal;\n  if (val?.type == \"op-plus\") {\n    convVal = buildCaseValueConcat(val, conv, config, meta);\n  } else {\n    convVal = convertArg(val, conv, config, meta, spel);\n  }\n  const widgetDef = config.widgets[\"case_value\"];\n  const importCaseValue = widgetDef?.spelImportValue;\n  if (importCaseValue) {\n    const [normVal, normErrors] = importCaseValue(convVal);\n    normErrors.map(e => meta.errors.push(e));\n    if (normVal) {\n      valProperties = {\n        value: [normVal],\n        valueSrc: [\"value\"],\n        valueType: [\"case_value\"]\n      };\n    }\n  } else {\n    meta.errors.push(\"No fucntion to import case value\");\n  }\n  return valProperties;\n};\n\nconst wrapInDefaultConjRuleGroup = (rule, parentField, parentFieldConfig, config, conj) => {\n  if (!rule) return undefined;\n  return {\n    type: \"rule_group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: conj || defaultGroupConjunction(config, parentFieldConfig),\n      not: false,\n      field: parentField,\n    }\n  };\n};\n\nconst wrapInDefaultConj = (rule, config, not = false) => {\n  return {\n    type: \"group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: defaultConjunction(config),\n      not: not || false\n    }\n  };\n};\n","import {sleep} from \"./stuff\";\nimport {listValuesToArray, mapListValues} from \"./listValues\";\n\nexport const simulateAsyncFetch = (all, cPageSize = 0, delay = 1000) => async (search, offset, meta) => {\n  const pageSize = meta.pageSize != undefined ? meta.pageSize : cPageSize;\n  const filtered = listValuesToArray(all)\n    .filter(({title}) => search == null ? true : title.toUpperCase().indexOf(search.toUpperCase()) != -1);\n  const pages = pageSize ? Math.ceil(filtered.length / pageSize) : 0;\n  const currentOffset = offset || 0;\n  const currentPage = pageSize ? Math.ceil(currentOffset / pageSize) : null;\n  const values = pageSize ? filtered.slice(currentOffset, currentOffset + pageSize) : filtered;\n  const newOffset = pageSize ? currentOffset + values.length : null;\n  const hasMore = pageSize ? (newOffset < filtered.length) : false;\n  console.debug(\"simulateAsyncFetch\", {\n    search, offset, values, hasMore, filtered\n  });\n  await sleep(delay);\n  return {\n    values,\n    hasMore\n  };\n};\n\nexport const mergeListValues = (values, newValues, toStart = false) => {\n  if (!newValues)\n    return values;\n  const old = values || [];\n  const newFiltered = newValues.filter(v => old.find(av => av.value == v.value) == undefined);\n  const merged = toStart ? [...newFiltered, ...old] : [...old, ...newFiltered];\n  return merged;\n};\n\nexport const listValueToOption = (lv) => {\n  if (lv == null) return null;\n  const {title, value, disabled, groupTitle, renderTitle} = lv;\n  let option = {title, value};\n  if (disabled)\n    option.disabled = disabled;\n  if (groupTitle)\n    option.groupTitle = groupTitle;\n  if (renderTitle)\n    option.renderTitle = renderTitle;\n  return option;\n};\n\nexport const getListValue = (selectedValue, listValues) => \n  mapListValues(listValues, (lv) => (lv.value === selectedValue ? lv : null))\n    .filter(v => v !== null)\n    .shift();\n","import moment from \"moment\";\n\nconst NOW = {\n  label: \"Now\",\n  returnType: \"datetime\",\n  jsonLogic: \"now\",\n  //todo: document option `jsonLogicCustomOps`\n  //todo: add util to return all used custom ops to be added by user with `jsonLogic.add_operation`\n  jsonLogicCustomOps: {\n    now: () => new Date(),\n  },\n  spelFunc: \"new java.util.Date()\",\n  sqlFormatFunc: () => \"NOW()\",\n  mongoFormatFunc: () => new Date(),\n  formatFunc: () => \"NOW\",\n};\n\nconst RELATIVE_DATETIME = {\n  label: \"Relative\",\n  returnType: \"datetime\",\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\"\", \"\", \"\"],\n  jsonLogic: ({date, op, val, dim}) => ({\n    \"date_add\": [\n      date,\n      val * (op == \"minus\" ? -1 : +1),\n      dim\n    ]\n  }),\n  jsonLogicImport: (v) => {\n    const date = v[\"date_add\"][0];\n    const val = Math.abs(v[\"date_add\"][1]);\n    const op = v[\"date_add\"][1] >= 0 ? \"plus\" : \"minus\";\n    const dim = v[\"date_add\"][2];\n    return [date, op, val, dim];\n  },\n  jsonLogicCustomOps: {\n    date_add: (date, val, dim) => moment(date).add(val, dim).toDate()\n  },\n  // MySQL\n  //todo: other SQL dialects?\n  sqlFormatFunc: ({date, op, val, dim}) => `DATE_ADD(${date}, INTERVAL ${parseInt(val) * (op == \"minus\" ? -1 : +1)} ${dim.replace(/^'|'$/g, \"\")})`,\n  mongoFormatFunc: null, //todo: support?\n  //todo: spel\n  formatFunc: ({date, op, val, dim}) => (!val ? date : `${date} ${op == \"minus\" ? \"-\" : \"+\"} ${val} ${dim}`),\n  args: {\n    date: {\n      label: \"Date\",\n      type: \"datetime\",\n      defaultValue: {func: \"NOW\", args: []},\n      valueSources: [\"func\", \"field\"],\n    },\n    op: {\n      label: \"Op\",\n      type: \"select\",\n      defaultValue: \"plus\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: {\n          plus: \"+\",\n          minus: \"-\",\n        },\n      }\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      fieldSettings: {\n        min: 0,\n      },\n      defaultValue: 0,\n      valueSources: [\"value\"],\n    },\n    dim: {\n      label: \"Dimension\",\n      type: \"select\",\n      defaultValue: \"day\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: {\n          day: \"day\",\n          week: \"week\",\n          month: \"month\",\n          year: \"year\",\n        },\n      }\n    },\n  }\n};\n\nconst LOWER = {\n  label: \"Lowercase\",\n  mongoFunc: \"$toLower\",\n  jsonLogic: \"toLowerCase\",\n  spelFunc: \".toLowerCase\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toLowerCase: (str) => str.toLowerCase(),\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\"],\n    },\n  }\n};\n\nconst UPPER = {\n  label: \"Uppercase\",\n  mongoFunc: \"$toUpper\",\n  jsonLogic: \"toUpperCase\",\n  spelFunc: \".toUpperCase\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toUpperCase: (str) => str.toUpperCase(),\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\"],\n    },\n  }\n};\n\nconst LINEAR_REGRESSION = {\n  label: \"Linear regression\",\n  returnType: \"number\",\n  formatFunc: ({coef, bias, val}, _) => `(${coef} * ${val} + ${bias})`,\n  sqlFormatFunc: ({coef, bias, val}) => `(${coef} * ${val} + ${bias})`,\n  spelFormatFunc: ({coef, bias, val}) => `(${coef} * ${val} + ${bias})`,\n  mongoFormatFunc: ({coef, bias, val}) => ({\"$sum\": [{\"$multiply\": [coef, val]}, bias]}),\n  jsonLogic: ({coef, bias, val}) => ({ \"+\": [ {\"*\": [coef, val]}, bias ] }),\n  jsonLogicImport: (v) => {\n    const coef = v[\"+\"][0][\"*\"][0];\n    const val = v[\"+\"][0][\"*\"][1];\n    const bias = v[\"+\"][1];\n    return [coef, val, bias];\n  },\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\" * \", \" + \"],\n  args: {\n    coef: {\n      label: \"Coef\",\n      type: \"number\",\n      defaultValue: 1,\n      valueSources: [\"value\"],\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      valueSources: [\"value\", \"field\"],\n    },\n    bias: {\n      label: \"Bias\",\n      type: \"number\",\n      defaultValue: 0,\n      valueSources: [\"value\"],\n    }\n  }\n};\n\nexport {\n  LOWER,\n  UPPER,\n  NOW,\n  RELATIVE_DATETIME,\n  LINEAR_REGRESSION,\n};\n","import {\n  SqlString, sqlEmptyValue, mongoEmptyValue, spelEscape, spelFixList,\n  stringifyForDisplay\n} from \"../utils/export\";\nimport {escapeRegExp} from \"../utils/stuff\";\nimport {getTitleInListValues} from \"../utils/listValues\";\nimport moment from \"moment\";\nimport {settings as defaultSettings} from \"./default\";\n\n\n\n//----------------------------  conjunctions\n\nconst conjunctions = {\n  AND: {\n    label: \"And\",\n    mongoConj: \"$and\",\n    jsonLogicConj: \"and\",\n    sqlConj: \"AND\",\n    spelConj: \"and\",\n    spelConjs: [\"and\", \"&&\"],\n    reversedConj: \"OR\",\n    formatConj: (children, conj, not, isForDisplay) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + (isForDisplay ? \"AND\" : \"&&\") + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    sqlFormatConj: (children, conj, not) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + \"AND\" + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    spelFormatConj: (children, conj, not, omitBrackets) => {\n      if (not) omitBrackets = false;\n      return children.size > 1\n        ? (not ? \"!\" : \"\") + (omitBrackets ? \"\" : \"(\") + children.join(\" \" + \"&&\" + \" \") + (omitBrackets ? \"\" : \")\")\n        : (not ? \"!(\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n  },\n  OR: {\n    label: \"Or\",\n    mongoConj: \"$or\",\n    jsonLogicConj: \"or\",\n    sqlConj: \"OR\",\n    spelConj: \"or\",\n    spelConjs: [\"or\", \"||\"],\n    reversedConj: \"AND\",\n    formatConj: (children, conj, not, isForDisplay) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + (isForDisplay ? \"OR\" : \"||\") + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    sqlFormatConj: (children, conj, not) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + \"OR\" + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    spelFormatConj: (children, conj, not, omitBrackets) => {\n      if (not) omitBrackets = false;\n      return children.size > 1\n        ? (not ? \"!\" : \"\") + (omitBrackets ? \"\" : \"(\") + children.join(\" \" + \"||\" + \" \") + (omitBrackets ? \"\" : \")\")\n        : (not ? \"!(\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n  },\n};\n\n//----------------------------  operators\n\n// helpers for mongo format\nexport const mongoFormatOp1 = (mop, mc, not,  field, _op, value, useExpr, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n  const $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\"+field : field;\n  const mv = mc(value, fieldDef);\n  if (mv === undefined)\n    return undefined;\n  if (not) {\n    if (!useExpr && (!mop || mop == \"$eq\"))\n      return { [field]: { \"$ne\": mv } }; // short form\n    return !useExpr\n      ? { [field]: { \"$not\": { [mop]: mv } } } \n      : { \"$not\": { [mop]: [$field, mv] } };\n  } else {\n    if (!useExpr && (!mop || mop == \"$eq\"))\n      return { [field]: mv }; // short form\n    return !useExpr\n      ? { [field]: { [mop]: mv } } \n      : { [mop]: [$field, mv] };\n  }\n};\n\nexport const mongoFormatOp2 = (mops, not,  field, _op, values, useExpr, valueSrcs, valueTypes, opDef, operatorOptions, fieldDef) => {\n  const $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\"+field : field;\n  if (not) {\n    return !useExpr\n      ? { [field]: { \"$not\": { [mops[0]]: values[0], [mops[1]]: values[1] } } } \n      : {\"$not\":\n                {\"$and\": [\n                  { [mops[0]]: [ $field, values[0] ] },\n                  { [mops[1]]: [ $field, values[1] ] },\n                ]}\n      };\n  } else {\n    return !useExpr\n      ? { [field]: { [mops[0]]: values[0], [mops[1]]: values[1] } } \n      : {\"$and\": [\n        { [mops[0]]: [ $field, values[0] ] },\n        { [mops[1]]: [ $field, values[1] ] },\n      ]};\n  }\n};\n\n\nconst operators = {\n  equal: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    reversedOp: \"not_equal\",\n    formatOp: (field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) => {\n      const opStr = isForDisplay ? \"=\" : opDef.label;\n      if (valueTypes == \"boolean\" && isForDisplay)\n        return value == \"No\" ? `NOT ${field}` : `${field}`;\n      else\n        return `${field} ${opStr} ${value}`;\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", v => v, false),\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\",\n  },\n  not_equal: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    reversedOp: \"equal\",\n    formatOp: (field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) => {\n      if (valueTypes == \"boolean\" && isForDisplay)\n        return value == \"No\" ? `${field}` : `NOT ${field}`;\n      else\n        return `${field} ${opDef.label} ${value}`;\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$ne\", v => v, false),\n    jsonLogic: \"!=\",\n  },\n  less: {\n    label: \"<\",\n    labelForFormat: \"<\",\n    sqlOp: \"<\",\n    spelOp: \"<\",\n    spelOps: [\"<\", \"lt\"],\n    reversedOp: \"greater_or_equal\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$lt\", v => v, false),\n    jsonLogic: \"<\",\n    elasticSearchQueryType: \"range\",\n  },\n  less_or_equal: {\n    label: \"<=\",\n    labelForFormat: \"<=\",\n    sqlOp: \"<=\",\n    spelOp: \"<=\",\n    spelOps: [\"<=\", \"le\"],\n    reversedOp: \"greater\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$lte\", v => v, false),\n    jsonLogic: \"<=\",\n    elasticSearchQueryType: \"range\",\n  },\n  greater: {\n    label: \">\",\n    labelForFormat: \">\",\n    sqlOp: \">\",\n    spelOp: \">\",\n    spelOps: [\">\", \"gt\"],\n    reversedOp: \"less_or_equal\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$gt\", v => v, false),\n    jsonLogic: \">\",\n    elasticSearchQueryType: \"range\",\n  },\n  greater_or_equal: {\n    label: \">=\",\n    labelForFormat: \">=\",\n    sqlOp: \">=\",\n    spelOp: \">=\",\n    spelOps: [\">=\", \"ge\"],\n    reversedOp: \"less\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$gte\", v => v, false),\n    jsonLogic: \">=\",\n    elasticSearchQueryType: \"range\",\n  },\n  like: {\n    label: \"Contains\",\n    labelForFormat: \"Contains\",\n    reversedOp: \"not_like\",\n    sqlOp: \"LIKE\",\n    spelOp: \".contains\",\n    spelOps: [\"matches\", \".contains\"],\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$regex\", v => (typeof v == \"string\" ? escapeRegExp(v) : undefined), false),\n    //jsonLogic: (field, op, val) => ({ \"in\": [val, field] }),\n    jsonLogic: \"in\",\n    _jsonLogicIsRevArgs: true,\n    valueSources: [\"value\"],\n    elasticSearchQueryType: \"regexp\",\n  },\n  not_like: {\n    isNotOp: true,\n    label: \"Not contains\",\n    reversedOp: \"like\",\n    labelForFormat: \"Not Contains\",\n    sqlOp: \"NOT LIKE\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$regex\", v => (typeof v == \"string\" ? escapeRegExp(v) : undefined), true),\n    valueSources: [\"value\"],\n  },\n  starts_with: {\n    label: \"Starts with\",\n    labelForFormat: \"Starts with\",\n    sqlOp: \"LIKE\",\n    spelOp: \".startsWith\",\n    spelOps: [\"matches\", \".startsWith\"],\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$regex\", v => (typeof v == \"string\" ? \"^\" + escapeRegExp(v) : undefined), false),\n    jsonLogic: undefined, // not supported\n    valueSources: [\"value\"],\n  },\n  ends_with: {\n    label: \"Ends with\",\n    labelForFormat: \"Ends with\",\n    sqlOp: \"LIKE\",\n    spelOp: \".endsWith\",\n    spelOps: [\"matches\", \".endsWith\"],\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$regex\", v => (typeof v == \"string\" ? escapeRegExp(v) + \"$\" : undefined), false),\n    jsonLogic: undefined, // not supported\n    valueSources: [\"value\"],\n  },\n  between: {\n    label: \"Between\",\n    labelForFormat: \"BETWEEN\",\n    sqlOp: \"BETWEEN\",\n    cardinality: 2,\n    formatOp: (field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) => {\n      let valFrom = values.first();\n      let valTo = values.get(1);\n      if (isForDisplay)\n        return `${field} BETWEEN ${valFrom} AND ${valTo}`;\n      else\n        return `${field} >= ${valFrom} && ${field} <= ${valTo}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values[0];\n      const valTo = values[1];\n      return `${field} >= ${valFrom} && ${field} <= ${valTo}`;\n    },\n    mongoFormatOp: mongoFormatOp2.bind(null, [\"$gte\", \"$lte\"], false),\n    valueLabels: [\n      \"Value from\",\n      \"Value to\"\n    ],\n    textSeparators: [\n      null,\n      \"and\"\n    ],\n    reversedOp: \"not_between\",\n    jsonLogic: \"<=\",\n    validateValues: (values) => {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1] ? null : \"Invalid range\";\n      }\n      return null;\n    },\n    elasticSearchQueryType: function elasticSearchQueryType(type) {\n      return type === \"time\" ? \"filter\" : \"range\";\n    },\n  },\n  not_between: {\n    isNotOp: true,\n    label: \"Not between\",\n    labelForFormat: \"NOT BETWEEN\",\n    sqlOp: \"NOT BETWEEN\",\n    cardinality: 2,\n    formatOp: (field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) => {\n      let valFrom = values.first();\n      let valTo = values.get(1);\n      if (isForDisplay)\n        return `${field} NOT BETWEEN ${valFrom} AND ${valTo}`;\n      else\n        return `(${field} < ${valFrom} || ${field} > ${valTo})`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values[0];\n      const valTo = values[1];\n      return `(${field} < ${valFrom} || ${field} > ${valTo})`;\n    },\n    mongoFormatOp: mongoFormatOp2.bind(null, [\"$gte\", \"$lte\"], true),\n    valueLabels: [\n      \"Value from\",\n      \"Value to\"\n    ],\n    textSeparators: [\n      null,\n      \"and\"\n    ],\n    reversedOp: \"between\",\n    validateValues: (values) => {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1] ? null : \"Invalid range\";\n      }\n      return null;\n    },\n  },\n  is_empty: {\n    label: \"Is empty\",\n    labelForFormat: \"IS EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_not_empty\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS EMPTY` : `!${field}`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const empty = sqlEmptyValue(fieldDef);\n      return `COALESCE(${field}, ${empty}) = ${empty}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      //tip: is empty or null\n      return `${field} <= ''`;\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$in\", (v, fieldDef) => [mongoEmptyValue(fieldDef), null], false),\n    jsonLogic: \"!\",\n  },\n  is_not_empty: {\n    isNotOp: true,\n    label: \"Is not empty\",\n    labelForFormat: \"IS NOT EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_empty\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NOT EMPTY` : `!!${field}`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const empty = sqlEmptyValue(fieldDef);\n      return `COALESCE(${field}, ${empty}) <> ${empty}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      //tip: is not empty and not null\n      return `${field} > ''`;\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$nin\", (v, fieldDef) => [mongoEmptyValue(fieldDef), null], false),\n    jsonLogic: \"!!\",\n    elasticSearchQueryType: \"exists\",\n  },\n  is_null: {\n    label: \"Is null\",\n    labelForFormat: \"IS NULL\",\n    sqlOp: \"IS NULL\",\n    cardinality: 0,\n    reversedOp: \"is_not_null\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NULL` : `!${field}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      return `${field} == null`;\n    },\n    // check if value is null OR not exists\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", v => null, false),\n    jsonLogic: \"==\",\n  },\n  is_not_null: {\n    label: \"Is not null\",\n    labelForFormat: \"IS NOT NULL\",\n    sqlOp: \"IS NOT NULL\",\n    cardinality: 0,\n    reversedOp: \"is_null\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NOT NULL` : `!!${field}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      return `${field} != null`;\n    },\n    // check if value exists and is not null\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$ne\", v => null, false),\n    jsonLogic: \"!=\",\n    elasticSearchQueryType: \"exists\",\n  },\n  select_equals: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\", // enum/set\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const opStr = isForDisplay ? \"=\" : \"==\";\n      return `${field} ${opStr} ${value}`;\n    },\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", v => v, false),\n    reversedOp: \"select_not_equals\",\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\",\n  },\n  select_not_equals: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\", // enum/set\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} != ${value}`;\n    },\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$ne\", v => v, false),\n    reversedOp: \"select_equals\",\n    jsonLogic: \"!=\",\n  },\n  select_any_in: {\n    label: \"Any in\",\n    labelForFormat: \"IN\",\n    sqlOp: \"IN\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} IN (${values.join(\", \")})`;\n      else\n        return `${field} IN (${values})`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\") {\n        return `${field} IN (${values.join(\", \")})`;\n      } else return undefined; // not supported\n    },\n    spelOp: \"$contains\", // tip: $ means first arg is object\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$in\", v => v, false),\n    reversedOp: \"select_not_any_in\",\n    jsonLogic: \"in\",\n    elasticSearchQueryType: \"term\",\n  },\n  select_not_any_in: {\n    isNotOp: true,\n    label: \"Not in\",\n    labelForFormat: \"NOT IN\",\n    sqlOp: \"NOT IN\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} NOT IN (${values.join(\", \")})`;\n      else\n        return `${field} NOT IN (${values})`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\") {\n        return `${field} NOT IN (${values.join(\", \")})`;\n      } else return undefined; // not supported\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$nin\", v => v, false),\n    reversedOp: \"select_any_in\",\n  },\n  // it's not \"contains all\", but \"contains any\" operator\n  multiselect_contains: {\n    label: \"Contains\",\n    labelForFormat: \"CONTAINS\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} CONTAINS [${values.join(\", \")}]`;\n      else\n        return `${field} CONTAINS ${values}`;\n    },\n    reversedOp: \"multiselect_not_contains\",\n    jsonLogic2: \"some-in\",\n    jsonLogic: (field, op, vals) => ({\n      \"some\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]\n    }),\n    //spelOp: \".containsAll\",\n    spelOp: \"CollectionUtils.containsAny()\",\n    elasticSearchQueryType: \"term\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$in\", v => v, false),\n  },\n  multiselect_not_contains: {\n    isNotOp: true,\n    label: \"Not contains\",\n    labelForFormat: \"NOT CONTAINS\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} NOT CONTAINS [${values.join(\", \")}]`;\n      else\n        return `${field} NOT CONTAINS ${values}`;\n    },\n    reversedOp: \"multiselect_contains\"\n  },\n  multiselect_equals: {\n    label: \"Equals\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const opStr = isForDisplay ? \"=\" : \"==\";\n      if (valueSrc == \"value\")\n        return `${field} ${opStr} [${values.join(\", \")}]`;\n      else\n        return `${field} ${opStr} ${values}`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\")\n      // set\n        return `${field} = '${values.map(v => SqlString.trim(v)).join(\",\")}'`;\n      else\n        return undefined; //not supported\n    },\n    spelOp: \".equals\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", v => v, false),\n    reversedOp: \"multiselect_not_equals\",\n    jsonLogic2: \"all-in\",\n    jsonLogic: (field, op, vals) => ({\n      // it's not \"equals\", but \"includes\" operator - just for example\n      \"all\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]\n    }),\n    elasticSearchQueryType: \"term\",\n  },\n  multiselect_not_equals: {\n    isNotOp: true,\n    label: \"Not equals\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} != [${values.join(\", \")}]`;\n      else\n        return `${field} != ${values}`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\")\n      // set\n        return `${field} != '${values.map(v => SqlString.trim(v)).join(\",\")}'`;\n      else\n        return undefined; //not supported\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$ne\", v => v, false),\n    reversedOp: \"multiselect_equals\",\n  },\n  proximity: {\n    label: \"Proximity search\",\n    cardinality: 2,\n    valueLabels: [\n      { label: \"Word 1\", placeholder: \"Enter first word\" },\n      { label: \"Word 2\", placeholder: \"Enter second word\" },\n    ],\n    textSeparators: [\n      //'Word 1',\n      //'Word 2'\n    ],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const val1 = values.first();\n      const val2 = values.get(1);\n      const prox = operatorOptions.get(\"proximity\");\n      return `${field} ${val1} NEAR/${prox} ${val2}`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const val1 = values.first();\n      const val2 = values.get(1);\n      const aVal1 = SqlString.trim(val1);\n      const aVal2 = SqlString.trim(val2);\n      const prox = operatorOptions.get(\"proximity\");\n      return `CONTAINS(${field}, 'NEAR((${aVal1}, ${aVal2}), ${prox})')`;\n    },\n    mongoFormatOp: undefined, // not supported\n    jsonLogic: undefined, // not supported\n    options: {\n      optionLabel: \"Near\", // label on top of \"near\" selectbox (for config.settings.showLabels==true)\n      optionTextBefore: \"Near\", // label before \"near\" selectbox (for config.settings.showLabels==false)\n      optionPlaceholder: \"Select words between\", // placeholder for \"near\" selectbox\n      minProximity: 2,\n      maxProximity: 10,\n      defaults: {\n        proximity: 2\n      },\n    },\n  },\n  some: {\n    label: \"Some\",\n    labelForFormat: \"SOME\",\n    cardinality: 0,\n    jsonLogic: \"some\",\n    spelFormatOp: (filteredSize) => `${filteredSize} > 0`,\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$gt\", v => 0, false),\n  },\n  all: {\n    label: \"All\",\n    labelForFormat: \"ALL\",\n    cardinality: 0,\n    jsonLogic: \"all\",\n    spelFormatOp: (filteredSize, op, fullSize) => `${filteredSize} == ${fullSize}`,\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", v => v, false),\n  },\n  none: {\n    label: \"None\",\n    labelForFormat: \"NONE\",\n    cardinality: 0,\n    jsonLogic: \"none\",\n    spelFormatOp: (filteredSize) => `${filteredSize} == 0`,\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", v => 0, false),\n  }\n};\n\n\n//----------------------------  widgets\n\nconst widgets = {\n  text: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"String\",\n    valuePlaceholder: \"Enter string\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      return isForDisplay ? stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    spelFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      if (opDef.spelOp == \"matches\" && op != \"regex\") {\n        let regex;\n        if (op == \"starts_with\") {\n          regex = `(?s)^${escapeRegExp(val)}.*`;\n        } else if (op == \"ends_with\") {\n          regex = `(?s).*${escapeRegExp(val)}$`;\n        } else { // op == 'like'\n          regex = `(?s).*${escapeRegExp(val)}.*`; //tip: can use (?sui) for case-insensitive\n        }\n        return spelEscape(regex);\n      } else {\n        return spelEscape(val);\n      }\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\");\n      } else {\n        return SqlString.escape(val);\n      }\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  textarea: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Text\",\n    valuePlaceholder: \"Enter text\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      return isForDisplay ? stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\");\n      } else {\n        return SqlString.escape(val);\n      }\n    },\n    spelFormatValue: (val) => spelEscape(val),\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n    fullWidth: true,\n  },\n  number: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number\",\n    valueLabels: [\n      { label: \"Number from\", placeholder: \"Enter number from\" },\n      { label: \"Number to\", placeholder: \"Enter number to\" },\n    ],\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      return isForDisplay ? stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return SqlString.escape(val);\n    },\n    spelFormatValue: (val, fieldDef, wgtDef) => {\n      const isFloat = wgtDef.step && !Number.isInteger(wgtDef.step);\n      return spelEscape(val, isFloat);\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  slider: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number or move slider\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      return isForDisplay ? stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return SqlString.escape(val);\n    },\n    spelFormatValue: (val) => spelEscape(val),\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  select: {\n    type: \"select\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Value\",\n    valuePlaceholder: \"Select value\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      let valLabel = getTitleInListValues(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, val);\n      return isForDisplay ? stringifyForDisplay(valLabel) : JSON.stringify(val);\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return SqlString.escape(val);\n    },\n    spelFormatValue: (val) => spelEscape(val),\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  multiselect: {\n    type: \"multiselect\",\n    jsType: \"array\",\n    valueSrc: \"value\",\n    valueLabel: \"Values\",\n    valuePlaceholder: \"Select values\",\n    formatValue: (vals, fieldDef, wgtDef, isForDisplay) => {\n      let valsLabels = vals.map(v => getTitleInListValues(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, v));\n      return isForDisplay ? valsLabels.map(stringifyForDisplay) : vals.map(JSON.stringify);\n    },\n    sqlFormatValue: (vals, fieldDef, wgtDef, op, opDef) => {\n      return vals.map(v => SqlString.escape(v));\n    },\n    spelFormatValue: (vals, fieldDef, wgtDef, op, opDef) => {\n      const isCallable = opDef.spelOp && opDef.spelOp[0] == \"$\";\n      let res = spelEscape(vals); // inline list\n      if (isCallable) {\n        // `{1,2}.contains(1)` NOT works\n        // `{1,2}.?[true].contains(1)` works\n        res = spelFixList(res);\n      }\n      return res;\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  date: {\n    type: \"date\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD\",\n    useKeyboard: true,\n    valueLabel: \"Date\",\n    valuePlaceholder: \"Enter date\",\n    valueLabels: [\n      { label: \"Date from\", placeholder: \"Enter date from\" },\n      { label: \"Date to\", placeholder: \"Enter date to\" },\n    ],\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return SqlString.escape(dateVal.format(\"YYYY-MM-DD\"));\n    },\n    spelFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return `new java.text.SimpleDateFormat('yyyy-MM-dd').parse('${dateVal.format(\"YYYY-MM-DD\")}')`;\n    },\n    jsonLogic: (val, fieldDef, wgtDef) => moment(val, wgtDef.valueFormat).toDate(),\n    toJS: (val, fieldSettings) => {\n      const dateVal = moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: (val, fieldDef, wgtDef) => {\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  time: {\n    type: \"time\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    timeFormat: \"HH:mm\",\n    valueFormat: \"HH:mm:ss\",\n    use12Hours: false,\n    useKeyboard: true,\n    valueLabel: \"Time\",\n    valuePlaceholder: \"Enter time\",\n    valueLabels: [\n      { label: \"Time from\", placeholder: \"Enter time from\" },\n      { label: \"Time to\", placeholder: \"Enter time to\" },\n    ],\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return SqlString.escape(dateVal.format(\"HH:mm:ss\"));\n    },\n    spelFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return `T(java.time.LocalTime).parse('${dateVal.format(\"HH:mm:ss\")}')`;\n      //return `new java.text.SimpleDateFormat('HH:mm:ss').parse('${dateVal.format(\"HH:mm:ss\")}')`;\n    },\n    jsonLogic: (val, fieldDef, wgtDef) => {\n      // return seconds of day\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    toJS: (val, fieldSettings) => {\n      // return seconds of day\n      const dateVal = moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\") : undefined;\n    },\n    mongoFormatValue: (val, fieldDef, wgtDef) => {\n      // return seconds of day\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    elasticSearchFormatValue: function elasticSearchFormatValue(queryType, value, operator, fieldName) {\n      return {\n        script: {\n          script: {\n            source: \"doc[\".concat(fieldName, \"][0].getHour() >== params.min && doc[\").concat(fieldName, \"][0].getHour() <== params.max\"),\n            params: {\n              min: value[0],\n              max: value[1]\n            }\n          }\n        }\n      };\n    },\n  },\n  datetime: {\n    type: \"datetime\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    timeFormat: \"HH:mm\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD HH:mm:ss\",\n    use12Hours: false,\n    useKeyboard: true,\n    valueLabel: \"Datetime\",\n    valuePlaceholder: \"Enter datetime\",\n    valueLabels: [\n      { label: \"Datetime from\", placeholder: \"Enter datetime from\" },\n      { label: \"Datetime to\", placeholder: \"Enter datetime to\" },\n    ],\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat + \" \" + wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return SqlString.escape(dateVal.toDate());\n    },\n    spelFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return `new java.text.SimpleDateFormat('yyyy-MM-dd HH:mm:ss').parse('${dateVal.format(\"YYYY-MM-DD HH:mm:ss\")}')`;\n    },\n    jsonLogic: (val, fieldDef, wgtDef) => moment(val, wgtDef.valueFormat).toDate(),\n    toJS: (val, fieldSettings) => {\n      const dateVal = moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: (val, fieldDef, wgtDef) => {\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  boolean: {\n    type: \"boolean\",\n    jsType: \"boolean\",\n    valueSrc: \"value\",\n    labelYes: \"Yes\",\n    labelNo: \"No\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      return isForDisplay ? (val ? \"Yes\" : \"No\") : JSON.stringify(!!val);\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return SqlString.escape(val);\n    },\n    spelFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return spelEscape(val);\n    },\n    defaultValue: false,\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  field: {\n    valueSrc: \"field\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay, op, opDef, rightFieldDef) => {\n      return isForDisplay ? (rightFieldDef.label || val) : val;\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef, rightFieldDef) => {\n      return val;\n    },\n    spelFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return val;\n    },\n    valueLabel: \"Field to compare\",\n    valuePlaceholder: \"Select field to compare\",\n  },\n  func: {\n    valueSrc: \"func\",\n    valueLabel: \"Function\",\n    valuePlaceholder: \"Select function\",\n  },\n  case_value: {\n    valueSrc: \"value\",\n    type: \"case_value\",\n    spelFormatValue: (val) => {\n      return spelEscape(val === \"\" ? null : val);\n    },\n    spelImportValue: (val) => {\n      return [val.value, []];\n    }\n  }\n};\n\n//----------------------------  types\n\nconst types = {\n  text: {\n    defaultOperator: \"equal\",\n    mainWidget: \"text\",\n    widgets: {\n      text: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"like\",\n          \"not_like\",\n          \"starts_with\",\n          \"ends_with\",\n          \"proximity\",\n          \"is_empty\",\n          \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {},\n        opProps: {},\n      },\n      textarea: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"like\",\n          \"not_like\",\n          \"starts_with\",\n          \"ends_with\",\n          \"is_empty\",\n          \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {},\n        opProps: {},\n      },\n      field: {\n        operators: [\n          //unary ops (like `is_empty`) will be excluded anyway, see getWidgetsForFieldOp()\n          \"equal\",\n          \"not_equal\",\n          \"proximity\", //can exclude if you want\n        ],\n      }\n    },\n  },\n  number: {\n    defaultOperator: \"equal\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n      slider: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\"\n        ],\n      },\n    },\n  },\n  date: {\n    defaultOperator: \"equal\",\n    widgets: {\n      date: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\"\n        ]\n      }\n    },\n  },\n  time: {\n    defaultOperator: \"equal\",\n    widgets: {\n      time: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ]\n      }\n    },\n  },\n  datetime: {\n    defaultOperator: \"equal\",\n    widgets: {\n      datetime: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      }\n    },\n  },\n  select: {\n    mainWidget: \"select\",\n    defaultOperator: \"select_equals\",\n    widgets: {\n      select: {\n        operators: [\n          \"select_equals\",\n          \"select_not_equals\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n      multiselect: {\n        operators: [\n          \"select_any_in\",\n          \"select_not_any_in\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n    },\n  },\n  multiselect: {\n    defaultOperator: \"multiselect_equals\",\n    widgets: {\n      multiselect: {\n        operators: [\n          \"multiselect_contains\",\n          \"multiselect_not_contains\",\n          \"multiselect_equals\",\n          \"multiselect_not_equals\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ]\n      }\n    },\n  },\n  boolean: {\n    defaultOperator: \"equal\",\n    widgets: {\n      boolean: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {\n          //you can enable this if you don't use fields as value sources\n          // hideOperator: true,\n          // operatorInlineLabel: \"is\",\n        }\n      },\n      field: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n        ],\n      }\n    },\n  },\n  \"!group\": {\n    defaultOperator: \"some\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        widgetProps: {\n          min: 0\n        },\n        operators: [\n          // w/o operand\n          \"some\",\n          \"all\",\n          \"none\",\n\n          // w/ operand - count\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n        ],\n        opProps: {\n          equal: {\n            label: \"Count ==\"\n          },\n          not_equal: {\n            label: \"Count !=\"\n          },\n          less: {\n            label: \"Count <\"\n          },\n          less_or_equal: {\n            label: \"Count <=\"\n          },\n          greater: {\n            label: \"Count >\"\n          },\n          greater_or_equal: {\n            label: \"Count >=\"\n          },\n          between: {\n            label: \"Count between\"\n          },\n          not_between: {\n            label: \"Count not between\"\n          }\n        }\n      }\n    }\n  },\n  \"case_value\": {\n    mainWidget: \"case_value\",\n    widgets: {\n      case_value: {}\n    }\n  },\n};\n\n//----------------------------  settings\n\nconst settings = {\n  ...defaultSettings,\n\n  convertableWidgets: {\n    \"number\": [\"slider\", \"rangeslider\"],\n    \"slider\": [\"number\", \"rangeslider\"],\n    \"rangeslider\": [\"number\", \"slider\"],\n    \"text\": [\"textarea\"],\n    \"textarea\": [\"text\"]\n  },\n\n  formatSpelField: (field, parentField, parts, partsExt, fieldDefinition, config) => {\n    let fieldName = partsExt.map(({key, parent}, ind) => {\n      if (ind == 0) {\n        if (parent == \"[map]\")\n          return `#this[${spelEscape(key)}]`;\n        else if (parent == \"[class]\")\n          return key;\n        else\n          return key;\n      } else {\n        if (parent == \"map\" || parent == \"[map]\")\n          return `[${spelEscape(key)}]`;\n        else if (parent == \"class\" || parent == \"[class]\")\n          return `.${key}`;\n        else\n          return `.${key}`;\n      }\n    }).join(\"\");\n    if (fieldDefinition.isSpelVariable) {\n      fieldName = \"#\" + fieldName;\n    }\n    return fieldName;\n  },\n  sqlFormatReverse: (q) => {\n    if (q == undefined) return undefined;\n    return \"NOT(\" + q + \")\";\n  },\n  spelFormatReverse: (q) => {\n    if (q == undefined) return undefined;\n    return \"!(\" + q + \")\";\n  },\n  formatReverse: (q, operator, reversedOp, operatorDefinition, revOperatorDefinition, isForDisplay) => {\n    if (q == undefined) return undefined;\n    if (isForDisplay)\n      return \"NOT (\" + q + \")\";\n    else\n      return \"!(\" + q + \")\";\n  },\n  formatAggr: (whereStr, aggrField, operator, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay, aggrFieldDef) => {\n    const {labelForFormat, cardinality} = opDef;\n    if (cardinality == 0) {\n      const cond = whereStr ? ` HAVE ${whereStr}` : \"\";\n      return `${labelForFormat} OF ${aggrField}${cond}`;\n    } else if (cardinality == undefined || cardinality == 1) {\n      const cond = whereStr ? ` WHERE ${whereStr}` : \"\";\n      return `COUNT OF ${aggrField}${cond} ${labelForFormat} ${value}`;\n    } else if (cardinality == 2) {\n      const cond = whereStr ? ` WHERE ${whereStr}` : \"\";\n      let valFrom = value.first();\n      let valTo = value.get(1);\n      return `COUNT OF ${aggrField}${cond} ${labelForFormat} ${valFrom} AND ${valTo}`;\n    }\n  },\n  jsonLogic: {\n    groupVarKey: \"var\",\n    altVarKey: \"var\",\n    lockedOp: \"locked\"\n  },\n  \n  canCompareFieldWithField: (leftField, leftFieldConfig, rightField, rightFieldConfig) => {\n    //for type == 'select'/'multiselect' you can check listValues\n    return true;\n  },\n\n  // enable compare fields\n  valueSourcesInfo: {\n    value: {\n      label: \"Value\"\n    },\n    field: {\n      label: \"Field\",\n      widget: \"field\",\n    },\n    func: {\n      label: \"Function\",\n      widget: \"func\",\n    }\n  },\n\n};\n\n//----------------------------\n\nexport default {\n  conjunctions,\n  operators,\n  widgets,\n  types,\n  settings,\n};\n","export const ADD_GROUP = \"ADD_GROUP\";\nexport const ADD_CASE_GROUP = \"ADD_CASE_GROUP\";\nexport const REMOVE_GROUP = \"REMOVE_GROUP\";\nexport const SET_CONJUNCTION = \"SET_CONJUNCTION\";\nexport const SET_NOT = \"SET_NOT\";\nexport const ADD_RULE = \"ADD_RULE\";\nexport const REMOVE_RULE = \"REMOVE_RULE\";\nexport const SET_FIELD = \"SET_FIELD\";\nexport const SET_OPERATOR = \"SET_OPERATOR\";\nexport const SET_VALUE = \"SET_VALUE\";\nexport const SET_VALUE_SRC = \"SET_VALUE_SRC\";\nexport const SET_OPERATOR_OPTION = \"SET_OPERATOR_OPTION\";\nexport const SET_LOCK = \"SET_LOCK\";\n\nexport const SET_TREE = \"SET_TREE\";\n\nexport const MOVE_ITEM = \"MOVE_ITEM\";\n\nexport const PLACEMENT_AFTER = \"after\";\nexport const PLACEMENT_BEFORE = \"before\";\nexport const PLACEMENT_APPEND = \"append\";\nexport const PLACEMENT_PREPEND = \"prepend\";\n\nexport const SET_DRAG_PROGRESS = \"SET_DRAG_PROGRESS\";\nexport const SET_DRAG_START = \"SET_DRAG_START\";\nexport const SET_DRAG_END = \"SET_DRAG_END\";\n","import Immutable from \"immutable\";\nimport {\n  expandTreePath, expandTreeSubpath, getItemByPath, fixPathsInTree, \n  getTotalRulesCountInTree, fixEmptyGroupsInTree, isEmptyTree, hasChildren, removeIsLockedInTree\n} from \"../utils/treeUtils\";\nimport {\n  defaultRuleProperties, defaultGroupProperties, defaultOperator, \n  defaultOperatorOptions, defaultRoot, defaultItemProperties\n} from \"../utils/defaultUtils\";\nimport * as constants from \"./constants\";\nimport uuid from \"../utils/uuid\";\nimport {\n  getFuncConfig, getFieldConfig, getFieldWidgetConfig, getOperatorConfig\n} from \"../utils/configUtils\";\nimport {\n  getOperatorsForField, getFirstOperator, getWidgetForFieldOp,\n  getNewValueForFieldOp\n} from \"../utils/ruleUtils\";\nimport {deepEqual, defaultValue, applyToJS} from \"../utils/stuff\";\nimport {validateValue} from \"../utils/validation\";\nimport omit from \"lodash/omit\";\nimport mapValues from \"lodash/mapValues\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nconst addNewGroup = (state, path, type, groupUuid, properties, config, children = null, meta = {}) => {\n  const {shouldCreateEmptyGroup} = config.settings;\n  const groupPath = path.push(groupUuid);\n  const canAddNewRule = !shouldCreateEmptyGroup;\n  const isDefaultCase = !!meta?.isDefaultCase;\n\n  const origState = state;\n  state = addItem(state, path, type, groupUuid, defaultGroupProperties(config).merge(properties || {}), config, children);\n  if (state !== origState) {\n    if (!children && !isDefaultCase) {\n      state = state.setIn(expandTreePath(groupPath, \"children1\"), new Immutable.OrderedMap());\n\n      // Add one empty rule into new group\n      if (canAddNewRule) {\n        state = addItem(state, groupPath, \"rule\", uuid(), defaultRuleProperties(config), config);\n      }\n    }\n\n    state = fixPathsInTree(state);\n  }\n  \n  return state;\n};\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nconst removeGroup = (state, path, config) => {\n  state = removeItem(state, path);\n\n  const {canLeaveEmptyGroup} = config.settings;\n  const parentPath = path.slice(0, -1);\n  const isEmptyParentGroup = !hasChildren(state, parentPath);\n  if (isEmptyParentGroup && !canLeaveEmptyGroup) {\n    // check ancestors for emptiness (and delete 'em if empty)\n    state = fixEmptyGroupsInTree(state);\n    \n    if (isEmptyTree(state) && !canLeaveEmptyGroup) {\n      // if whole query is empty, add one empty rule to root\n      state = addItem(state, new Immutable.List(), \"rule\", uuid(), defaultRuleProperties(config), config);\n    }\n  }\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nconst removeRule = (state, path, config) => {\n  state = removeItem(state, path);\n\n  const {canLeaveEmptyGroup} = config.settings;\n  const parentPath = path.pop();\n  const parent = state.getIn(expandTreePath(parentPath));\n\n  const parentField = parent.getIn([\"properties\", \"field\"]);\n  const parentOperator = parent.getIn([\"properties\", \"operator\"]);\n  const parentValue = parent.getIn([\"properties\", \"value\", 0]);\n  const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n  const parentOperatorConfig = parentOperator ? getOperatorConfig(config, parentOperator, parentField) : null;\n  const hasGroupCountRule = parentField && parentOperator && parentOperatorConfig.cardinality != 0; // && parentValue != undefined;\n  \n  const isParentRuleGroup = parent.get(\"type\") == \"rule_group\";\n  const isEmptyParentGroup = !hasChildren(state, parentPath);\n  const canLeaveEmpty = isParentRuleGroup \n    ? hasGroupCountRule && parentFieldConfig.initialEmptyWhere\n    : canLeaveEmptyGroup;\n  \n  if (isEmptyParentGroup && !canLeaveEmpty) {\n    if (isParentRuleGroup) {\n      // deleted last rule from rule_group, so delete whole rule_group\n      state = state.deleteIn(expandTreePath(parentPath));\n    }\n\n    // check ancestors for emptiness (and delete 'em if empty)\n    state = fixEmptyGroupsInTree(state);\n\n    if (isEmptyTree(state) && !canLeaveEmptyGroup) {\n      // if whole query is empty, add one empty rule to root\n      state = addItem(state, new Immutable.List(), \"rule\", uuid(), defaultRuleProperties(config), config);\n    }\n  }\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {bool} not\n */\nconst setNot = (state, path, not) =>\n  state.setIn(expandTreePath(path, \"properties\", \"not\"), not);\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {bool} lock\n */\nconst setLock = (state, path, lock) =>\n  removeIsLockedInTree(state.setIn(expandTreePath(path, \"properties\", \"isLocked\"), lock));\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} conjunction\n */\nconst setConjunction = (state, path, conjunction) =>\n  state.setIn(expandTreePath(path, \"properties\", \"conjunction\"), conjunction);\n\n// convert children deeply from JS to Immutable\nconst _addChildren1 = (config, item, children) => {\n  if (children && Array.isArray(children)) {\n    item.children1 = new Immutable.OrderedMap(\n      children.reduce((map, it) => {\n        const id1 = uuid();\n        const it1 = {\n          ...it,\n          properties: defaultItemProperties(config, it).merge(it.properties || {}),\n          id: id1\n        };\n        _addChildren1(config, it1, it1.children1);\n        //todo: guarantee order\n        return {\n          ...map,\n          [id1]: new Immutable.Map(it1)\n        };\n      }, {})\n    );\n  }\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} type\n * @param {string} id\n * @param {Immutable.OrderedMap} properties\n * @param {object} config\n */\nconst addItem = (state, path, type, id, properties, config, children = null) => {\n  if (type == \"switch_group\")\n    throw new Error(\"Can't add switch_group programmatically\");\n  const { maxNumberOfCases, maxNumberOfRules, maxNesting } = config.settings;\n  const rootType = state.get(\"type\");\n  const isTernary = rootType == \"switch_group\";\n  const targetItem = state.getIn(expandTreePath(path));\n  const caseGroup = isTernary ? state.getIn(expandTreePath(path.take(2))) : null;\n  const childrenPath = expandTreePath(path, \"children1\");\n  const targetChildren = state.getIn(childrenPath);\n  const hasChildren = !!targetChildren && targetChildren.size;\n  const targetChildrenSize = hasChildren ? targetChildren.size : null;\n  let currentNumber, maxNumber;\n  if (type == \"case_group\") {\n    currentNumber = targetChildrenSize;\n    maxNumber = maxNumberOfCases;\n  } else if (type == \"group\") {\n    currentNumber = path.size;\n    maxNumber = maxNesting;\n  } else if (targetItem?.get(\"type\") == \"rule_group\") {\n    // don't restrict\n  } else {\n    currentNumber = isTernary ? getTotalRulesCountInTree(caseGroup) : getTotalRulesCountInTree(state);\n    maxNumber = maxNumberOfRules;\n  }\n  const canAdd = maxNumber && currentNumber ? (currentNumber < maxNumber) : true;\n  \n  const item = {type, id, properties};\n  _addChildren1(config, item, children);\n\n  const isLastDefaultCase = type == \"case_group\" && hasChildren && targetChildren.last().get(\"children1\") == null;\n\n  if (canAdd) {\n    const newChildren = new Immutable.OrderedMap({\n      [id]: new Immutable.Map(item)\n    });\n    if (!hasChildren) {\n      state = state.setIn(childrenPath, newChildren);\n    } else if (isLastDefaultCase) {\n      const last = targetChildren.last();\n      const newChildrenWithLast = new Immutable.OrderedMap({\n        [id]: new Immutable.Map(item),\n        [last.get(\"id\")]: last\n      });\n      state = state.deleteIn(expandTreePath(childrenPath, \"children1\", last.get(\"id\")));\n      state = state.mergeIn(childrenPath, newChildrenWithLast);\n    } else {\n      state = state.mergeIn(childrenPath, newChildren);\n    }\n    state = fixPathsInTree(state);\n  }\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n */\nconst removeItem = (state, path) => {\n  state = state.deleteIn(expandTreePath(path));\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} fromPath\n * @param {Immutable.List} toPath\n * @param {string} placement, see constants PLACEMENT_*: PLACEMENT_AFTER, PLACEMENT_BEFORE, PLACEMENT_APPEND, PLACEMENT_PREPEND\n * @param {object} config\n */\nconst moveItem = (state, fromPath, toPath, placement, config) => {\n  const from = getItemByPath(state, fromPath);\n  const sourcePath = fromPath.pop();\n  const source = fromPath.size > 1 ? getItemByPath(state, sourcePath) : null;\n  const sourceChildren = source ? source.get(\"children1\") : null;\n\n  const to = getItemByPath(state, toPath);\n  const targetPath = (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND) ? toPath : toPath.pop();\n  const target = (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND) \n    ? to\n    : toPath.size > 1 ? getItemByPath(state, targetPath) : null;\n  const targetChildren = target ? target.get(\"children1\") : null;\n\n  if (!source || !target || !from)\n    return state;\n\n  const isSameParent = (source.get(\"id\") == target.get(\"id\"));\n  const isSourceInsideTarget = targetPath.size < sourcePath.size \n        && deepEqual(targetPath.toArray(), sourcePath.toArray().slice(0, targetPath.size));\n  const isTargetInsideSource = targetPath.size > sourcePath.size \n        && deepEqual(sourcePath.toArray(), targetPath.toArray().slice(0, sourcePath.size));\n  let sourceSubpathFromTarget = null;\n  let targetSubpathFromSource = null;\n  if (isSourceInsideTarget) {\n    sourceSubpathFromTarget = Immutable.List(sourcePath.toArray().slice(targetPath.size));\n  } else if (isTargetInsideSource) {\n    targetSubpathFromSource = Immutable.List(targetPath.toArray().slice(sourcePath.size));\n  }\n\n  let newTargetChildren = targetChildren, newSourceChildren = sourceChildren;\n  if (!isTargetInsideSource)\n    newSourceChildren = newSourceChildren.delete(from.get(\"id\"));\n  if (isSameParent) {\n    newTargetChildren = newSourceChildren;\n  } else if (isSourceInsideTarget) {\n    newTargetChildren = newTargetChildren.updateIn(expandTreeSubpath(sourceSubpathFromTarget, \"children1\"), (_oldChildren) => newSourceChildren);\n  }\n\n  if (placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER) {\n    newTargetChildren = Immutable.OrderedMap().withMutations(r => {\n      for (let [itemId, item] of newTargetChildren.entries()) {\n        if (itemId == to.get(\"id\") && placement == constants.PLACEMENT_BEFORE) {\n          r.set(from.get(\"id\"), from);\n        }\n                \n        r.set(itemId, item);\n\n        if (itemId == to.get(\"id\") && placement == constants.PLACEMENT_AFTER) {\n          r.set(from.get(\"id\"), from);\n        }\n      }\n    });\n  } else if (placement == constants.PLACEMENT_APPEND) {\n    newTargetChildren = newTargetChildren.merge({[from.get(\"id\")]: from});\n  } else if (placement == constants.PLACEMENT_PREPEND) {\n    newTargetChildren = Immutable.OrderedMap({[from.get(\"id\")]: from}).merge(newTargetChildren);\n  }\n\n  if (isTargetInsideSource) {\n    newSourceChildren = newSourceChildren.updateIn(expandTreeSubpath(targetSubpathFromSource, \"children1\"), (_oldChildren) => newTargetChildren);\n    newSourceChildren = newSourceChildren.delete(from.get(\"id\"));\n  }\n\n  if (!isSameParent && !isSourceInsideTarget)\n    state = state.updateIn(expandTreePath(sourcePath, \"children1\"), (_oldChildren) => newSourceChildren);\n  if (!isTargetInsideSource)\n    state = state.updateIn(expandTreePath(targetPath, \"children1\"), (_oldChildren) => newTargetChildren);\n\n  state = fixPathsInTree(state);\n  return state;\n};\n\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} field\n */\nconst setField = (state, path, newField, config) => {\n  if (!newField)\n    return removeItem(state, path);\n\n  const {fieldSeparator, setOpOnChangeField, showErrorMessage} = config.settings;\n  if (Array.isArray(newField))\n    newField = newField.join(fieldSeparator);\n\n  const currentType = state.getIn(expandTreePath(path, \"type\"));\n  const currentProperties = state.getIn(expandTreePath(path, \"properties\"));\n  const wasRuleGroup = currentType == \"rule_group\";\n  const newFieldConfig = getFieldConfig(config, newField);\n  const isRuleGroup = newFieldConfig.type == \"!group\";\n  const isRuleGroupExt = isRuleGroup && newFieldConfig.mode == \"array\";\n  const isChangeToAnotherType = wasRuleGroup != isRuleGroup;\n  \n  const currentOperator = currentProperties.get(\"operator\");\n  const currentOperatorOptions = currentProperties.get(\"operatorOptions\");\n  const _currentField = currentProperties.get(\"field\");\n  const _currentValue = currentProperties.get(\"value\");\n  const _currentValueSrc = currentProperties.get(\"valueSrc\", new Immutable.List());\n  const _currentValueType = currentProperties.get(\"valueType\", new Immutable.List());\n\n  // If the newly selected field supports the same operator the rule currently\n  // uses, keep it selected.\n  const lastOp = newFieldConfig && newFieldConfig.operators.indexOf(currentOperator) !== -1 ? currentOperator : null;\n  let newOperator = null;\n  const availOps = getOperatorsForField(config, newField);\n  if (availOps && availOps.length == 1)\n    newOperator = availOps[0];\n  else if (availOps && availOps.length > 1) {\n    for (let strategy of setOpOnChangeField || []) {\n      if (strategy == \"keep\" && !isChangeToAnotherType)\n        newOperator = lastOp;\n      else if (strategy == \"default\")\n        newOperator = defaultOperator(config, newField, false);\n      else if (strategy == \"first\")\n        newOperator = getFirstOperator(config, newField);\n      if (newOperator) //found op for strategy\n        break;\n    }\n  }\n\n  if (!isRuleGroup && !newFieldConfig.operators) {\n    console.warn(`Type ${newFieldConfig.type} is not supported`);\n    return state;\n  }\n\n  if (wasRuleGroup && !isRuleGroup) {\n    state = state.setIn(expandTreePath(path, \"type\"), \"rule\");\n    state = state.deleteIn(expandTreePath(path, \"children1\"));\n    state = state.setIn(expandTreePath(path, \"properties\"), new Immutable.OrderedMap());\n  }\n\n  if (isRuleGroup) {\n    state = state.setIn(expandTreePath(path, \"type\"), \"rule_group\");\n    const {canReuseValue, newValue, newValueSrc, newValueType, operatorCardinality} = getNewValueForFieldOp(\n      config, config, currentProperties, newField, newOperator, \"field\", true\n    );\n    let groupProperties = defaultGroupProperties(config, newFieldConfig).merge({\n      field: newField,\n      mode: newFieldConfig.mode,\n    });\n    if (isRuleGroupExt) {\n      groupProperties = groupProperties.merge({\n        operator: newOperator,\n        value: newValue,\n        valueSrc: newValueSrc,\n        valueType: newValueType,\n      });\n    }\n    state = state.setIn(expandTreePath(path, \"children1\"), new Immutable.OrderedMap());\n    state = state.setIn(expandTreePath(path, \"properties\"), groupProperties);\n    if (newFieldConfig.initialEmptyWhere && operatorCardinality == 1) { // just `COUNT(grp) > 1` without `HAVING ..`\n      // no childeren\n    } else {\n      state = addItem(state, path, \"rule\", uuid(), defaultRuleProperties(config, newField), config);\n    }\n    state = fixPathsInTree(state);\n\n    return state;\n  }\n\n  return state.updateIn(expandTreePath(path, \"properties\"), (map) => map.withMutations((current) => {\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      config, config, current, newField, newOperator, \"field\", true\n    );\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError);\n    }\n    const newOperatorOptions = canReuseValue ? currentOperatorOptions : defaultOperatorOptions(config, newOperator, newField);\n\n    return current\n      .set(\"field\", newField)\n      .set(\"operator\", newOperator)\n      .set(\"operatorOptions\", newOperatorOptions)\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType)\n      .delete(\"asyncListValues\");\n  }));\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} operator\n */\nconst setOperator = (state, path, newOperator, config) => {\n  const {showErrorMessage} = config.settings;\n\n  const properties = state.getIn(expandTreePath(path, \"properties\"));\n  const children = state.getIn(expandTreePath(path, \"children1\"));\n  const currentField = properties.get(\"field\");\n  const fieldConfig = getFieldConfig(config, currentField);\n  const isRuleGroup = fieldConfig.type == \"!group\";\n  const operatorConfig = getOperatorConfig(config, newOperator, currentField);\n  const operatorCardinality = operatorConfig ? defaultValue(operatorConfig.cardinality, 1) : null;\n\n  state = state.updateIn(expandTreePath(path, \"properties\"), (map) => map.withMutations((current) => {\n    const currentField = current.get(\"field\");\n    const currentOperatorOptions = current.get(\"operatorOptions\");\n    const _currentValue = current.get(\"value\", new Immutable.List());\n    const _currentValueSrc = current.get(\"valueSrc\", new Immutable.List());\n    const _currentOperator = current.get(\"operator\");\n\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      config, config, current, currentField, newOperator, \"operator\", true\n    );\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError);\n    }\n    const newOperatorOptions = canReuseValue ? currentOperatorOptions : defaultOperatorOptions(config, newOperator, currentField);\n\n    if (!canReuseValue) {\n      current = current\n        .delete(\"asyncListValues\");\n    }\n\n    return current\n      .set(\"operator\", newOperator)\n      .set(\"operatorOptions\", newOperatorOptions)\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType);\n  }));\n\n  if (isRuleGroup) {\n    if (operatorCardinality == 0 && children.size == 0) {\n      state = addItem(state, path, \"rule\", uuid(), defaultRuleProperties(config, currentField), config);\n    }\n  }\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} value\n * @param {string} valueType\n * @param {*} asyncListValues\n * @param {boolean} __isInternal\n */\nconst setValue = (state, path, delta, value, valueType, config, asyncListValues, __isInternal) => {\n  const {fieldSeparator, showErrorMessage} = config.settings;\n  let isInternalValueChange;\n  const valueSrc = state.getIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\")) || null;\n  if (valueSrc === \"field\" && Array.isArray(value))\n    value = value.join(fieldSeparator);\n\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? defaultValue(operatorConfig.cardinality, 1) : null;\n\n  const isEndValue = false;\n  const calculatedValueType = valueType || calculateValueType(value, valueSrc, config);\n  const canFix = false;\n  const [validateError, fixedValue] = validateValue(\n    config, field, field, operator, value, calculatedValueType, valueSrc, asyncListValues, canFix, isEndValue\n  );\n  const isValid = !validateError;\n  if (fixedValue !== value) {\n    // eg, get exact value from listValues (not string)\n    value = fixedValue;\n  }\n\n  // Additional validation for range values\n  if (showErrorMessage) {\n    const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDefinition = getFieldWidgetConfig(config, field, operator, w, valueSrc);\n    const valueSrcs = Array.from({length: operatorCardinality}, (_, i) => (state.getIn(expandTreePath(path, \"properties\", \"valueSrc\", i + \"\")) || null));\n        \n    if (operatorConfig && operatorConfig.validateValues && valueSrcs.filter(vs => vs == \"value\" || vs == null).length == operatorCardinality) {\n      const values = Array.from({length: operatorCardinality}, (_, i) => (i == delta ? value : state.getIn(expandTreePath(path, \"properties\", \"value\", i + \"\")) || null));\n      const jsValues = fieldWidgetDefinition && fieldWidgetDefinition.toJS ? values.map(v => fieldWidgetDefinition.toJS(v, fieldWidgetDefinition)) : values;\n      const rangeValidateError = operatorConfig.validateValues(jsValues);\n\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality), rangeValidateError);\n    }\n  }\n  \n  const lastValueArr = state.getIn(expandTreePath(path, \"properties\", \"value\"));\n  if (!lastValueArr) {\n    state = state\n      .setIn(expandTreePath(path, \"properties\", \"value\"), new Immutable.List(new Array(operatorCardinality)))\n      .setIn(expandTreePath(path, \"properties\", \"valueType\"), new Immutable.List(new Array(operatorCardinality)))\n      .setIn(expandTreePath(path, \"properties\", \"valueError\"), new Immutable.List(new Array(operatorCardinality)));\n  }\n\n  const lastValue = state.getIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"));\n  const lastError = state.getIn(expandTreePath(path, \"properties\", \"valueError\", delta));\n  const isLastEmpty = lastValue == undefined;\n  const isLastError = !!lastError;\n  if (isValid || showErrorMessage) {\n    state = state.deleteIn(expandTreePath(path, \"properties\", \"asyncListValues\"));\n    // set only good value\n    if (typeof value === \"undefined\") {\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), undefined);\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), null);\n    } else {\n      if (asyncListValues) {\n        state = state.setIn(expandTreePath(path, \"properties\", \"asyncListValues\"), asyncListValues);\n      }\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), value);\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), calculatedValueType);\n      isInternalValueChange = __isInternal && !isLastEmpty && !isLastError;\n    }\n  }\n  if (showErrorMessage) {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), validateError);\n  }\n  if (__isInternal && (isValid && isLastError || !isValid && !isLastError)) {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), validateError);\n    isInternalValueChange = false;\n  }\n  \n  return {tree: state, isInternalValueChange};\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nconst setValueSrc = (state, path, delta, srcKey, config) => {\n  const {showErrorMessage} = config.settings;\n\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n\n  state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), undefined);\n  state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), null);\n  state = state.deleteIn(expandTreePath(path, \"properties\", \"asyncListValues\"));\n\n  if (showErrorMessage) {\n    // clear value error\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), null);\n\n    // if current operator is range, clear possible range error\n    const operatorConfig = getOperatorConfig(config, operator, field);\n    const operatorCardinality = operator ? defaultValue(operatorConfig.cardinality, 1) : null;\n    if (operatorConfig.validateValues) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality), null);\n    }\n  }\n  \n  // set valueSrc\n  if (typeof srcKey === \"undefined\") {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\"), null);\n  } else {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\"), srcKey);\n  }\n\n  // maybe set default value\n  if (srcKey) {\n    const properties = state.getIn(expandTreePath(path, \"properties\"));\n    // this call should return canReuseValue = false and provide default value\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      config, config, properties, field, operator, \"valueSrc\", true\n    );\n    if (!canReuseValue && newValueSrc.get(delta) == srcKey) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), newValue.get(delta));\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), newValueType.get(delta));\n    }\n  }\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} name\n * @param {*} value\n */\nconst setOperatorOption = (state, path, name, value) => {\n  return state.setIn(expandTreePath(path, \"properties\", \"operatorOptions\", name), value);\n};\n\n/**\n * @param {Immutable.Map} state\n */\nconst checkEmptyGroups = (state, config) => {\n  const {canLeaveEmptyGroup} = config.settings;\n  if (!canLeaveEmptyGroup) {\n    state = fixEmptyGroupsInTree(state);\n  }\n  return state;\n};\n\n\n/**\n * \n */\nconst calculateValueType = (value, valueSrc, config) => {\n  let calculatedValueType = null;\n  if (value) {\n    if (valueSrc === \"field\") {\n      const fieldConfig = getFieldConfig(config, value);\n      if (fieldConfig) {\n        calculatedValueType = fieldConfig.type;\n      }\n    } else if (valueSrc === \"func\") {\n      const funcKey = value.get(\"func\");\n      if (funcKey) {\n        const funcConfig = getFuncConfig(config, funcKey);\n        if (funcConfig) {\n          calculatedValueType = funcConfig.returnType;\n        }\n      }\n    }\n  }\n  return calculatedValueType;\n};\n\nconst getField = (state, path) => {\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  return field;\n};\n\nconst emptyDrag = {\n  dragging: {\n    id: null,\n    x: null,\n    y: null,\n    w: null,\n    h: null\n  },\n  mousePos: {},\n  dragStart: {\n    id: null,\n  },\n};\n\nconst getActionMeta = (action, state) => {\n  if (!action || !action.type)\n    return null;\n  const actionKeysToOmit = [\n    \"config\", \"asyncListValues\", \"__isInternal\"\n  ];\n  const actionTypesToIgnore = [\n    constants.SET_TREE,\n    constants.SET_DRAG_START,\n    constants.SET_DRAG_PROGRESS,\n    constants.SET_DRAG_END,\n  ];\n  let meta = mapValues(omit(action, actionKeysToOmit), applyToJS);\n  let affectedField = action.path && getField(state.tree, action.path) || action.field;\n  if (affectedField)\n    meta.affectedField = affectedField;\n  if (actionTypesToIgnore.includes(action.type) || action.type.indexOf(\"@@redux\") == 0)\n    meta = null;\n  return meta;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {object} action\n */\nexport default (config, tree, getMemoizedTree) => {\n  const emptyTree = defaultRoot(config);\n  const initTree = tree || emptyTree;\n  const emptyState = {\n    tree: initTree, \n    ...emptyDrag\n  };\n    \n  return (state = emptyState, action) => {\n    const unset = {__isInternalValueChange: undefined, __lastAction: undefined};\n    let set = {};\n    let actionMeta = getActionMeta(action, state);\n\n    switch (action?.type) {\n    case constants.SET_TREE: {\n      const validatedTree = getMemoizedTree(action.config, action.tree);\n      set.tree = validatedTree;\n      break;\n    }\n\n    case constants.ADD_CASE_GROUP: {\n      set.tree = addNewGroup(state.tree, action.path, \"case_group\", action.id, action.properties, action.config,  action.children, action.meta);\n      break;\n    }\n\n    case constants.ADD_GROUP: {\n      set.tree = addNewGroup(state.tree, action.path, \"group\", action.id, action.properties, action.config,  action.children, action.meta);\n      break;\n    }\n\n    case constants.REMOVE_GROUP: {\n      set.tree = removeGroup(state.tree, action.path, action.config);\n      break;\n    }\n\n    case constants.ADD_RULE: {\n      set.tree = addItem(state.tree, action.path, action.ruleType, action.id, action.properties, action.config, action.children);\n      break;\n    }\n\n    case constants.REMOVE_RULE: {\n      set.tree = removeRule(state.tree, action.path, action.config);\n      break;\n    }\n\n    case constants.SET_CONJUNCTION: {\n      set.tree = setConjunction(state.tree, action.path, action.conjunction);\n      break;\n    }\n\n    case constants.SET_NOT: {\n      set.tree = setNot(state.tree, action.path, action.not);\n      break;\n    }\n\n    case constants.SET_FIELD: {\n      set.tree = setField(state.tree, action.path, action.field, action.config);\n      break;\n    }\n\n    case constants.SET_LOCK: {\n      set.tree = setLock(state.tree, action.path, action.lock);\n      break;\n    }\n\n    case constants.SET_OPERATOR: {\n      set.tree = setOperator(state.tree, action.path, action.operator, action.config);\n      break;\n    }\n\n    case constants.SET_VALUE: {\n      const {tree, isInternalValueChange} = setValue(\n        state.tree, action.path, action.delta, action.value, action.valueType, action.config, action.asyncListValues, action.__isInternal\n      );\n      set.__isInternalValueChange = isInternalValueChange;\n      set.tree = tree;\n      break;\n    }\n\n    case constants.SET_VALUE_SRC: {\n      set.tree = setValueSrc(state.tree, action.path, action.delta, action.srcKey, action.config);\n      break;\n    }\n\n    case constants.SET_OPERATOR_OPTION: {\n      set.tree = setOperatorOption(state.tree, action.path, action.name, action.value);\n      break;\n    }\n\n    case constants.MOVE_ITEM: {\n      set.tree = moveItem(state.tree, action.fromPath, action.toPath, action.placement, action.config);\n      break;\n    }\n\n    case constants.SET_DRAG_START: {\n      set.dragStart = action.dragStart;\n      set.dragging = action.dragging;\n      set.mousePos = action.mousePos;\n      break;\n    }\n\n    case constants.SET_DRAG_PROGRESS: {\n      set.mousePos = action.mousePos;\n      set.dragging = action.dragging;\n      break;\n    }\n\n    case constants.SET_DRAG_END: {\n      set.tree = checkEmptyGroups(state.tree, config);\n      set = { ...set, ...emptyDrag };\n      break;\n    }\n\n    default: {\n      break;\n    }\n    }\n\n    if (actionMeta) {\n      set.__lastAction = actionMeta;\n    }\n    \n    return {...state, ...unset, ...set};\n  };\n\n};\n","import Immutable from \"immutable\";\nimport {toImmutableList} from \"../utils/stuff\";\nimport * as constants from \"../stores/constants\";\nimport { defaultRuleProperties, defaultGroupProperties } from \"../utils/defaultUtils\";\nimport uuid from \"../utils/uuid\";\n\n\n/**\n * @param {object} config\n * @param {Immutable.Map} tree\n */\nexport const setTree = (config, tree) => ({\n  type: constants.SET_TREE,\n  tree: tree,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addRule = (config, path, properties, ruleType = \"rule\", children = null) => ({\n  type: constants.ADD_RULE,\n  ruleType: ruleType,\n  children: children,\n  path: toImmutableList(path),\n  id: uuid(),\n  properties: defaultRuleProperties(config).merge(properties || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nexport const removeRule = (config, path) => ({\n  type: constants.REMOVE_RULE,\n  path: toImmutableList(path),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addDefaultCaseGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_CASE_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(properties || {}),\n  config: config,\n  meta: {\n    isDefaultCase: true\n  }\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addCaseGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_CASE_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(properties || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(properties || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nexport const removeGroup = (config, path) => ({\n  type: constants.REMOVE_GROUP,\n  path: toImmutableList(path),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Array} fromPath\n * @param {Array} toPath\n * @param {String} placement, see constants PLACEMENT_*\n */\nexport const moveItem = (config, fromPath, toPath, placement) => ({\n  type: constants.MOVE_ITEM,\n  fromPath: toImmutableList(fromPath),\n  toPath: toImmutableList(toPath),\n  placement: placement,\n  config: config,\n});\n","import * as constants from \"../stores/constants\";\nimport {toImmutableList} from \"../utils/stuff\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} conjunction\n */\nexport const setConjunction = (config, path, conjunction) => ({\n  type: constants.SET_CONJUNCTION,\n  path: toImmutableList(path),\n  conjunction: conjunction\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {bool} not\n */\nexport const setNot = (config, path, not) => ({\n  type: constants.SET_NOT,\n  path: toImmutableList(path),\n  not: not\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {bool} lock\n */\nexport const setLock = (config, path, lock) => ({\n  type: constants.SET_LOCK,\n  path: toImmutableList(path),\n  lock: lock\n});","import * as constants from \"../stores/constants\";\nimport {toImmutableList} from \"../utils/stuff\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} field\n */\nexport const setField = (config, path, field) => ({\n  type: constants.SET_FIELD,\n  path: toImmutableList(path),\n  field: field,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} operator\n */\nexport const setOperator = (config, path, operator) => ({\n  type: constants.SET_OPERATOR,\n  path: toImmutableList(path),\n  operator: operator,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} value\n * @param {string} valueType\n * @param {*} asyncListValues\n * @param {boolean} __isInternal\n */\nexport const setValue = (config, path, delta, value, valueType, asyncListValues, __isInternal) => ({\n  type: constants.SET_VALUE,\n  path: toImmutableList(path),\n  delta: delta,\n  value: value,\n  valueType: valueType,\n  asyncListValues: asyncListValues,\n  config: config,\n  __isInternal: __isInternal\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nexport const setValueSrc = (config, path, delta, srcKey) => ({\n  type: constants.SET_VALUE_SRC,\n  path: toImmutableList(path),\n  delta: delta,\n  srcKey: srcKey,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} name\n * @param {*} value\n */\nexport const setOperatorOption = (config, path, name, value) => ({\n  type: constants.SET_OPERATOR_OPTION,\n  path: toImmutableList(path),\n  name: name,\n  value: value,\n  config: config\n});\n","import * as Export from \"./export\";\nimport * as Import from \"./import\";\nimport * as BasicUtils from \"./utils\";\nimport * as BasicFuncs from \"./config/funcs\";\nimport CoreConfig from \"./config\";\nimport TreeStore from \"./stores/tree\";\nimport * as TreeActions from \"./actions\";\n\nconst Utils = {...BasicUtils, ...Export, ...Import};\n\nexport {Utils, Export, Import, BasicFuncs, CoreConfig, TreeStore, TreeActions};\n","import React from \"react\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport omit from \"lodash/omit\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, placeholder, customProps}) => {\n  const renderOptions = () =>\n    mapListValues(listValues, ({title, value}) => {\n      return <MenuItem key={value} value={value}>{title}</MenuItem>;\n    });\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValue(e.target.value);\n  };\n\n  const renderValue = (selectedValue) => {\n    if (!readonly && selectedValue == null)\n      return placeholder;\n    return getListValueTitle(selectedValue);\n  };\n\n  const getListValueTitle = (selectedValue) => \n    mapListValues(listValues, ({title, value}) => \n      (value === selectedValue ? title : null)\n    )\n      .filter(v => v !== null)\n      .shift();\n  \n  const hasValue = value != null;\n\n  return (\n    <FormControl>\n      <Select\n        autoWidth\n        displayEmpty\n        label={!readonly ? placeholder : \"\"}\n        onChange={onChange}\n        value={hasValue ? value : \"\"}\n        disabled={readonly}\n        readOnly={readonly}\n        renderValue={renderValue}\n        {...omit(customProps, [\"showSearch\", \"input\"])}\n      >\n        {renderOptions()}\n      </Select>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport omit from \"lodash/omit\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, placeholder, customProps}) => {\n  const renderOptions = (selectedValues) => \n    mapListValues(listValues, ({title, value}) => {\n      return (\n        <MenuItem key={value} value={value}>\n          <Checkbox checked={selectedValues.indexOf(value) > -1} />\n          <ListItemText primary={title} />\n        </MenuItem>\n      );\n    });\n\n  const renderValue = (selectedValues) => {\n    if (!readonly && !selectedValues.length)\n      return placeholder;\n    const selectedTitles = mapListValues(listValues, ({title, value}) => (\n      selectedValues.indexOf(value) > -1 ? title : null\n    )).filter(v => v !== null);\n    return selectedTitles.join(\", \");\n  };\n\n  const hasValue = value != null && value.length > 0;\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValue(e.target.value);\n  };\n\n  return (\n    <FormControl>\n      <Select multiple\n        autoWidth\n        displayEmpty\n        label={!readonly ? placeholder : \"\"}\n        onChange={onChange}\n        value={hasValue ? value : []}\n        disabled={readonly}\n        readOnly={readonly}\n        renderValue={renderValue}\n        {...omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])}\n      >\n        {renderOptions(hasValue ? value : [])}\n      </Select>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport omit from \"lodash/omit\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Autocomplete, { createFilterOptions } from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport { Hooks } from \"@react-awesome-query-builder/ui\";\nconst { useListValuesAutocomplete } = Hooks;\n\nconst nonCheckedIcon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\nconst defaultFilterOptions = createFilterOptions();\nconst emptyArray = [];\n\nexport default (props) => {\n  const {\n    allowCustomValues, multiple,\n    value: selectedValue, customProps, readonly, config, groupBy, filterOptionsConfig\n  } = props;\n  const filterOptionsFn = filterOptionsConfig ? createFilterOptions(filterOptionsConfig) : defaultFilterOptions;\n\n  // hook\n  const {\n    open,\n    onOpen,\n    onClose,\n    onChange,\n    onInputChange,\n    inputValue,\n    options,\n    isInitialLoading,\n    isLoading,\n    aPlaceholder,\n    extendOptions,\n    getOptionSelected,\n    getOptionDisabled,\n    getOptionLabel,\n  } = useListValuesAutocomplete(props, {\n    debounceTimeout: 100,\n    multiple\n  });\n\n  // setings\n  const {defaultSelectWidth, defaultSearchWidth} = config.settings;\n  const {width, showCheckboxes, ...rest} = customProps || {};\n  let customInputProps = rest.input || {};\n  const inputWidth = customInputProps.width || defaultSearchWidth;\n  customInputProps = omit(customInputProps, [\"width\"]);\n  const customAutocompleteProps = omit(rest, [\"showSearch\", \"showCheckboxes\"]);\n\n  const fullWidth = true;\n  const minWidth = width || defaultSelectWidth;\n  const style = {\n    width: (multiple ? undefined : minWidth),\n    minWidth: minWidth\n  };\n  const placeholder = !readonly ? aPlaceholder : \"\";\n  const hasValue = selectedValue != null;\n  // should be simple value to prevent re-render!s\n  const value = hasValue ? selectedValue : (multiple ? emptyArray : null);\n  \n  const filterOptions = (options, params) => {\n    const filtered = filterOptionsFn(options, params);\n    const extended = extendOptions(filtered);\n    return extended;\n  };\n\n  // styles\n  const useStyles = makeStyles((theme) => ({\n    // fix too small width\n    input: {\n      minWidth: inputWidth + \" !important\",\n    }\n  }));\n\n  const useStylesChip = makeStyles((theme) => ({\n    // fix height\n    root: {\n      height: \"auto\"\n    },\n    label: {\n      marginTop: \"3px\",\n      marginBottom: \"3px\",\n    }\n  }));\n\n  const classesChip = useStylesChip();\n  const classes = useStyles();\n\n  // render\n  const renderInput = (params) => {\n    return (\n      <TextField \n        {...params} \n        InputProps={{\n          ...params.InputProps,\n          readOnly: readonly,\n          endAdornment: (\n            <React.Fragment>\n              {isLoading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n              {params.InputProps.endAdornment}\n            </React.Fragment>\n          ),\n        }}\n        disabled={readonly}\n        placeholder={placeholder}\n        //onChange={onInputChange}\n        {...customInputProps}\n      />\n    );\n  };\n\n  const renderTags = (value, getTagProps) => value.map((option, index) => {\n    return <Chip\n      key={index}\n      classes={classesChip}\n      label={getOptionLabel(option)}\n      {...getTagProps({ index })}\n    />;\n  });\n\n  const renderOption = (option, { selected }) => {\n    if (option.specialValue) {\n      return <React.Fragment>{option.renderTitle || option.title}</React.Fragment>;\n    } else if (multiple && showCheckboxes != false) {\n      return <React.Fragment>\n        <Checkbox\n          icon={nonCheckedIcon}\n          checkedIcon={checkedIcon}\n          style={{ marginRight: 8 }}\n          checked={selected}\n        />\n        {option.title}\n      </React.Fragment>;\n    } else {\n      return <React.Fragment>{option.renderTitle || option.title}</React.Fragment>;\n    }\n  };\n\n  return (\n    <FormControl fullWidth={fullWidth}>\n      <Autocomplete\n        disableCloseOnSelect={multiple}\n        fullWidth={fullWidth}\n        multiple={multiple}\n        style={style}\n        classes={classes}\n        freeSolo={allowCustomValues}\n        loading={isInitialLoading}\n        open={open}\n        onOpen={onOpen}\n        onClose={onClose}\n        inputValue={inputValue}\n        onInputChange={onInputChange}\n        label={placeholder}\n        onChange={onChange}\n        value={value}\n        getOptionSelected={getOptionSelected}\n        disabled={readonly}\n        readOnly={readonly}\n        options={options}\n        groupBy={groupBy}\n        getOptionLabel={getOptionLabel}\n        getOptionDisabled={getOptionDisabled}\n        renderInput={renderInput}\n        renderTags={renderTags}\n        renderOption={renderOption}\n        filterOptions={filterOptions}\n        {...customAutocompleteProps}\n      ></Autocomplete>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport MaterialAutocomplete from \"../value/MaterialAutocomplete\";\n\nconst itemsToListValues = (items, level = 0) => (\n  items.map(item => {\n    const {items, path, label, disabled, grouplabel} = item;\n    const prefix = \"\\u00A0\\u00A0\".repeat(level);\n    if (items) {\n      return itemsToListValues(items, level+1);\n    } else {\n      return {\n        title: label,\n        renderTitle: prefix+label,\n        value: path,\n        disabled,\n        groupTitle: level > 0 ? prefix+grouplabel : null,\n      };\n    }\n  }).flat(Infinity)\n);\n\nconst filterOptionsConfig = {\n  stringify: (option) => {\n    const keysForFilter = [\"title\", \"value\", \"grouplabel\", \"label\"];\n    const valueForFilter = keysForFilter\n      .map(k => (typeof option[k] == \"string\" ? option[k] : \"\"))\n      .join(\"\\0\");\n    return valueForFilter;\n  }\n};\n\nconst fieldAdapter = ({items, selectedKey, setField, ...rest}) => {\n  const listValues = itemsToListValues(items);\n  const groupBy = (option) => option.groupTitle;\n  const value = selectedKey;\n  const setValue = (value, _asyncValues) => {\n    if (!value) return undefined;\n    return setField(value);\n  };\n\n  return {\n    ...rest,\n    listValues,\n    setValue,\n    groupBy,\n    filterOptionsConfig,\n    allowCustomValues: false,\n    multiple: false,\n    value,\n  };\n};\n\nexport default (props) => {\n  return <MaterialAutocomplete  {...fieldAdapter(props)} />;\n};\n","import React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ExpandMoreSharpIcon from \"@material-ui/icons/ExpandMoreSharp\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(1),\n  },\n}));\n\nexport default ({ valueSources, valueSrc, title, setValueSrc, readonly}) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const classes = useStyles();\n\n\n  const handleOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const toggleOpenClose = (event) => {\n    anchorEl ? handleClose() : handleOpen(event);\n  };\n\n  const handleChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValueSrc(e.target.value);\n    handleClose();\n  };\n\n  const renderOptions = (valueSources) => (\n    valueSources.map(([srcKey, info]) => (\n      <FormControlLabel \n        key={srcKey} \n        value={srcKey} \n        checked={valueSrc == srcKey || !valueSrc && srcKey == \"value\"} \n        control={<Radio />} \n        label={info.label}\n      />\n    ))\n  );\n\n  const open = Boolean(anchorEl);\n\n  return (\n    <div>\n      <IconButton size=\"small\" onClick={toggleOpenClose}>\n        <ExpandMoreSharpIcon />\n      </IconButton>\n    \n      <Popover    \n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"left\",\n        }}\n        onClose={handleClose}\n        classes={{\n          paper: classes.paper,\n        }}\n        disablePortal\n      >\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">{title}</FormLabel>\n          <RadioGroup value={valueSrc || \"value\"} onChange={handleChange}>\n            {renderOptions(valueSources)}\n          </RadioGroup>\n        </FormControl>\n      </Popover>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { ThemeProvider, createTheme } from \"@material-ui/core/styles\";\nimport { ConfirmProvider, useConfirm } from \"material-ui-confirm\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\n\n\n// value widgets\nimport MaterialTextWidget from \"./value/MaterialText\";\nimport MaterialTextAreaWidget from \"./value/MaterialTextArea\";\nimport MaterialDateWidget from \"./value/MaterialDate\";\nimport MaterialDateTimeWidget from \"./value/MaterialDateTime\";\nimport MaterialTimeWidget from \"./value/MaterialTime\";\nimport MaterialSelectWidget from \"./value/MaterialSelect\";\nimport MaterialNumberWidget from \"./value/MaterialNumber\";\nimport MaterialSliderWidget from \"./value/MaterialSlider\";\nimport MaterialRangeWidget from \"./value/MaterialRange\";\nimport MaterialBooleanWidget from \"./value/MaterialBoolean\";\nimport MaterialMultiSelectWidget from \"./value/MaterialMultiSelect\";\nimport MaterialAutocompleteWidget from \"./value/MaterialAutocomplete\";\n\n// field select widgets\nimport MaterialFieldSelect from \"./core/MaterialFieldSelect\";\nimport MaterialFieldAutocomplete from \"./core/MaterialFieldAutocomplete\";\n\n// core components\nimport MaterialButton from \"./core/MaterialButton\";\nimport MaterialButtonGroup from \"./core/MaterialButtonGroup\";\nimport MaterialConjs from \"./core/MaterialConjs\";\nimport MaterialSwitch from \"./core/MaterialSwitch\";\nimport MaterialValueSources from \"./core/MaterialValueSources\";\nimport MaterialConfirm from \"./core/MaterialConfirm\";\n\n// provider\nconst MaterialProvider = ({config, children}) => {\n  const settingsTheme = config.settings.theme || {};\n  const settingsLocale = config.settings.locale || {};\n  const themeConfig = settingsTheme.material;\n  const locale = settingsLocale.material;\n  const useTheme = themeConfig || locale;\n  const theme = useTheme ? createTheme(themeConfig, locale) : null;\n\n  const base = (<div className=\"mui\">{children}</div>);\n  const withProviders = (\n    <MuiPickersUtilsProvider utils={MomentUtils}>\n      <ConfirmProvider>\n        {base}\n      </ConfirmProvider>\n    </MuiPickersUtilsProvider>\n  );\n  const withTheme = theme ? (\n    <ThemeProvider theme={theme}>\n      {withProviders}\n    </ThemeProvider>\n  ) : withProviders;\n\n  return withTheme;\n};\n\n\nexport default {\n  MaterialTextWidget,\n  MaterialTextAreaWidget,\n  MaterialDateWidget,\n  MaterialDateTimeWidget,\n  MaterialTimeWidget,\n  MaterialSelectWidget,\n  MaterialNumberWidget,\n  MaterialSliderWidget,\n  MaterialRangeWidget,\n  MaterialBooleanWidget,\n  MaterialMultiSelectWidget,\n  MaterialAutocompleteWidget,\n\n  MaterialFieldSelect,\n  MaterialFieldAutocomplete,\n\n  MaterialButton,\n  MaterialButtonGroup,\n  MaterialConjs,\n  MaterialSwitch,\n  MaterialValueSources,\n  MaterialConfirm,\n  MaterialUseConfirm: useConfirm,\n\n  MaterialProvider,\n};\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, customProps, maxLength} = props;\n\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n\n  const textValue = value || \"\";\n\n  return (\n    <FormControl>\n      <TextField \n        value={textValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          maxLength: maxLength,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, customProps, maxLength, maxRows, fullWidth} = props;\n  const {defaultMaxRows} = config.settings;\n\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  \n  const textValue = value || \"\";\n\n  return (\n    <FormControl fullWidth={fullWidth}>\n      <TextField \n        fullWidth={fullWidth}\n        maxRows={maxRows || defaultMaxRows}\n        multiline={true}\n        value={textValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          maxLength: maxLength,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport { KeyboardDatePicker, DatePicker } from \"@material-ui/pickers\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, readonly, customProps, dateFormat, valueFormat, placeholder, useKeyboard} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const Picker = useKeyboard ? KeyboardDatePicker : DatePicker;\n\n  return (\n    <FormControl>\n      <Picker\n        readOnly={readonly}\n        disabled={readonly}\n        placeholder={!readonly ? placeholder : \"\"}\n        format={dateFormat}\n        value={value || null}\n        onChange={handleChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};","import React from \"react\";\nimport { DateTimePicker, KeyboardDateTimePicker } from \"@material-ui/pickers\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, use12Hours, readonly, placeholder, dateFormat, timeFormat, valueFormat, customProps, useKeyboard} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const Picker = useKeyboard ? KeyboardDateTimePicker : DateTimePicker;\n  const dateTimeFormat = dateFormat + \" \" + timeFormat;\n  \n  return (\n    <FormControl>\n      <Picker\n        readOnly={readonly}\n        disabled={readonly}\n        ampm={!!use12Hours}\n        placeholder={!readonly ? placeholder : \"\"}\n        format={dateTimeFormat}\n        value={value || null}\n        onChange={handleChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport { TimePicker, KeyboardTimePicker } from \"@material-ui/pickers\";\nimport moment from \"moment\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, use12Hours, readonly, placeholder, timeFormat, valueFormat, customProps, useKeyboard} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const Picker = useKeyboard ? KeyboardTimePicker : TimePicker;\n  const hasSeconds = timeFormat.indexOf(\":ss\") != -1;\n  const timeValue = value ? moment(value, timeFormat) : null;\n\n  return (\n    <FormControl>\n      <Picker\n        readOnly={readonly}\n        disabled={readonly}\n        ampm={!!use12Hours}\n        placeholder={!readonly ? placeholder : \"\"}\n        format={timeFormat}\n        value={timeValue || null}\n        onChange={handleChange}\n        views={hasSeconds ? [\"hours\", \"minutes\", \"seconds\"] : [\"hours\", \"minutes\"]}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps} = props;\n  \n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n\n  const numberValue = value == undefined ? \"\" : value;\n  \n  return (\n    <FormControl>\n      <TextField \n        type=\"number\"\n        value={numberValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          min: min,\n          max: max,\n          step: step,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Slider from \"@material-ui/core/Slider\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {config, placeholder, customProps, value, setValue, min, max, step, marks, readonly} = props;\n  const {defaultSliderWidth} = config.settings;\n\n  const handleSliderChange = (_e, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleInputChange = (e) => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n\n  const handleInputBlur = () => {\n    // TIP: Fix if typed value out of range in input\n    if (value < min) {\n      setValue(min);\n    } else if (value > max) {\n      setValue(max);\n    }\n  };\n\n\n  const {width, ...rest} =  customProps || {};\n  const customInputProps = rest.input || {};\n  const customSliderProps = rest.slider || rest;\n  \n  // TIP: Can't pass undefined to MUI, cause it means uncontrolled component use.\n  //      For empty value input needs \"\", slider needs null or 0\n  const inputValue = typeof value === \"number\" ? value : \"\";\n  const sliderValue = typeof value === \"number\" ? value : null;\n\n  // marks example: { 0: \"0%\", 100: React.createElement('strong', null, \"100%\") }\n  const muiMarks = marks ? Object.keys(marks).map(v => ({value: v, label: marks[v]})) : false;\n\n\n  const InputCmp = (\n    <TextField \n      type=\"number\"\n      value={inputValue}\n      placeholder={placeholder}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChange}\n      onBlur={handleInputBlur}\n      {...customInputProps}\n    />\n  );\n\n  const SliderCmp = (\n    <Slider \n      value={sliderValue}\n      onChange={handleSliderChange}\n      disabled={readonly}\n      min={min}\n      max={max}\n      step={step}\n      marks={muiMarks}\n      valueLabelDisplay=\"auto\"\n      {...customSliderProps}\n    />\n  );\n\n  const stylesWrapper = {\n    display: \"inline-flex\", \n    alignItems: \"center\"\n  };\n\n  const stylesInputWrapper = {\n    marginLeft: \"5px\",\n  };\n\n  const stylesSliderWrapper = {\n    marginLeft: \"5px\", \n    paddingLeft: \"12px\", \n    marginBottom: muiMarks && \"-16px\", \n    width: width || defaultSliderWidth,\n  };\n\n  return (\n    <FormControl>\n      <div style={stylesWrapper}>\n        <div style={stylesInputWrapper}>\n          {InputCmp}\n        </div>\n        <div style={stylesSliderWrapper}>\n          {SliderCmp}\n        </div>\n      </div>\n    </FormControl>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport Slider from \"@material-ui/core/Slider\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {config, placeholders, customProps, value, setValue, min, max, step, marks, readonly, textSeparators} = props;\n  const {defaultSliderWidth} = config.settings;\n\n  useEffect(() => {\n    const [valueFrom, valueTo] = props.value || [undefined, undefined];\n    if (props.value && (valueFrom == undefined || valueTo == undefined)) {\n      // happens if we changed op from '==' to 'between'\n      // (I know, timeout is dirty hack..)\n      setTimeout(() => {\n        const oneValue = valueFrom || valueTo;\n        const value = [oneValue, oneValue];\n        setValue(value);\n      }, 1);\n    }\n  }, []);\n\n  const handleSliderChange = (_e, newValues) => {\n    setValue(newValues);\n  };\n\n  const handleInputChangeFrom = (e) => {\n    // TIP: need to use props.value instead of value\n    let valueFrom = e.target.value;\n    if (valueFrom === \"\" || valueFrom == null)\n      valueFrom = undefined;\n    else\n      valueFrom = Number(valueFrom);\n    let value = props.value ? [...props.value] : [undefined, undefined];\n    value[0] = valueFrom;\n    setValue(value);\n  };\n\n  const handleInputChangeTo = (e) => {\n    let valueTo = e.target.value;\n    if (valueTo === \"\" || valueTo == null)\n      valueTo = undefined;\n    else\n      valueTo = Number(valueTo);\n    let value = props.value ? [...props.value] : [undefined, undefined];\n    value[1] = valueTo;\n    setValue(value);\n  };\n\n  const handleInputBlur = () => {\n    // TIP: Fix if typed value out of range in inputs\n    if (!value) return;\n    if (value[0] < min) {\n      setValue([min, value[1]]);\n    } else if (value[1] > max) {\n      setValue([value[0], max]);\n    }\n  };\n\n  const {width, ...rest} =  customProps || {};\n  const customInputProps = rest.input || {};\n  const customSliderProps = rest.slider || rest;\n\n  // marks example: { 0: \"0%\", 100: React.createElement('strong', null, \"100%\") }\n  const muiMarks = marks ? Object.keys(marks).map(v => ({value: v, label: marks[v]})) : false;\n\n  // TIP: Can't pass undefined to MUI, cause it means uncontrolled component use.\n  //      For empty value input needs \"\", slider needs null or 0, but null will cause problems with range mode\n  let sliderValue = value ? [...value] : [undefined, undefined];\n  let [valueFrom, valueTo] = sliderValue;\n  if (valueFrom == undefined) {\n    valueFrom = \"\";\n    sliderValue[0] = 0;\n  }\n  if (valueTo == undefined) {\n    valueTo = \"\";\n    sliderValue[1] = 0;\n  }\n  \n\n  const FromInputCmp = (\n    <TextField \n      type=\"number\"\n      value={valueFrom}\n      placeholder={placeholders[0]}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChangeFrom}\n      onBlur={handleInputBlur}\n      {...customInputProps}\n    />\n  );\n\n  const ToInputCmp = (\n    <TextField \n      type=\"number\"\n      value={valueTo}\n      placeholder={placeholders[1]}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChangeTo}\n      onBlur={handleInputBlur}\n      {...customInputProps}\n    />\n  );\n\n  const SliderCmp = (\n    <Slider \n      value={sliderValue}\n      onChange={handleSliderChange}\n      disabled={readonly}\n      min={min}\n      max={max}\n      step={step}\n      marks={muiMarks}\n      valueLabelDisplay=\"auto\"\n      {...customSliderProps}\n    />\n  );\n\n  const stylesWrapper = {\n    display: \"inline-flex\", \n  };\n\n  const stylesInputWrapper = {\n    marginLeft: \"5px\",\n  };\n\n  const stylesSliderWrapper = {\n    marginLeft: \"5px\", \n    paddingLeft: \"12px\", \n    marginBottom: muiMarks && \"-16px\", \n    width: width || defaultSliderWidth,\n  };\n\n  return (\n    <FormControl>\n      <div style={stylesWrapper}>\n        <div style={stylesInputWrapper}>\n          {FromInputCmp}\n        </div>\n        <div className={\"widget--sep\"}>\n          <span>{ textSeparators[1] }</span>\n        </div>\n        <div style={stylesInputWrapper}>\n          {ToInputCmp}\n        </div>\n        <div style={stylesSliderWrapper}>\n          {SliderCmp}\n        </div>\n      </div>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default (props) => {\n  const { customProps, value, setValue, labelYes, labelNo, readonly } = props;\n\n  const onChange = () => {\n    setValue(!value);\n  };\n  \n  return (\n    <FormControl>\n      <Typography component=\"div\">\n        <Grid component=\"label\" container alignItems=\"center\" spacing={0}>\n          <Grid item component=\"span\">{labelNo}</Grid>\n          <Grid item component=\"span\">\n            <Switch\n              checked={!!value}\n              onChange={onChange}\n              disabled={readonly}\n              {...customProps}\n            />\n          </Grid>\n          <Grid item component=\"span\">{labelYes}</Grid>\n        </Grid>\n      </Typography>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default ({items, setField, selectedKey, readonly, placeholder}) => {\n  const renderOptions = (fields, level = 0) => (\n    fields.map(field => {\n      const {items, path, label, disabled} = field;\n      const prefix = \"\\u00A0\\u00A0\".repeat(level);\n      if (items) {\n        return [\n          <ListSubheader disabled={disabled} key={path} disableSticky={true}>\n            {prefix && <span>{prefix}</span>}\n            {label}\n          </ListSubheader>,\n          renderOptions(items, level+1),\n        ];\n      } else {\n        return <MenuItem disabled={disabled} key={path} value={path}>\n          {prefix && <span>{prefix}</span>}\n          {label}\n        </MenuItem>;\n      }\n    })\n  );\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setField(e.target.value);\n  };\n\n  const renderValue = (selectedValue) => {\n    if (!readonly && !selectedValue)\n      return placeholder;\n    const findLabel = (fields) => {\n      return fields.map(field => {\n        if(!field.items) return field.path === selectedValue ? field.label : null;\n        return findLabel(field.items);\n      });\n    };\n    return findLabel(items).filter((v) => {\n      if (Array.isArray(v)) {\n        return v.some((value) => value !== null);\n      } else {\n        return v !== null;\n      }\n    }).pop();\n  };\n  \n  const hasValue = selectedKey != null;\n  return (\n    <FormControl>\n      <Select\n        autoWidth\n        displayEmpty\n        label={placeholder}\n        onChange={onChange}\n        value={hasValue ? selectedKey : \"\"}\n        disabled={readonly}\n        renderValue={renderValue}\n      >\n        {renderOptions(items)}\n      </Select>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nexport default ({type, label, onClick, readonly, config}) => {\n  const typeToOnlyIcon = {\n    \"delGroup\": <DeleteIcon />,\n    \"delRuleGroup\": <DeleteIcon />,\n    \"delRule\": <DeleteIcon />,\n    \"addRuleGroup\": <AddIcon />,\n  };\n  const typeToIcon = {\n    \"addRule\": <AddIcon />,\n    \"addGroup\": <AddIcon />,\n    \"addRuleGroupExt\": <AddIcon />,\n  };\n  const typeToColor = {\n    \"addRule\": \"default\",\n    \"addGroup\": \"primary\",\n    \"delGroup\": \"secondary\",\n    \"delRuleGroup\": \"secondary\",\n    \"delRule\": \"secondary\",\n  };\n  if (typeToOnlyIcon[type])\n    return <IconButton size=\"small\" disabled={readonly} onClick={onClick} color={typeToColor[type]}>{typeToOnlyIcon[type]}</IconButton>;\n  else\n    return <Button size=\"small\" disabled={readonly} onClick={onClick} color={typeToColor[type]} startIcon={typeToIcon[type]}>{label}</Button>;\n};\n","import React from \"react\";\n\nexport default ({children, config}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default ({id, not, setNot, conjunctionOptions, setConjunction, disabled, readonly, config, showNot, notLabel}) => {\n  //TIP: disabled=true if only 1 rule; readonly=true if immutable mode\n  const conjsCount = Object.keys(conjunctionOptions).length;\n  const lessThenTwo = disabled;\n  const {forceShowConj} = config.settings;\n  const showConj = forceShowConj || conjsCount > 1 && !lessThenTwo;\n\n  const renderOptions = () => \n    Object.keys(conjunctionOptions).map(key => {\n      const {id, name, label, checked} = conjunctionOptions[key];\n      const postfix = setConjunction.isDummyFn ? \"__dummy\" : \"\";\n      if ((readonly || disabled) && !checked)\n        return null;\n      return (\n        <Button \n          key={id+postfix} \n          id={id+postfix} \n          color={checked ? \"primary\" : \"default\"} \n          value={key} \n          onClick={onClick.bind(null, key)} \n          disabled={readonly || disabled}\n        >\n          {label}\n        </Button>\n      );\n    });\n  \n  const renderNot = () => {\n    if (readonly && !not)\n      return null;\n    return (\n      <Button \n        key={id}\n        id={id + \"__not\"}\n        color={not ? \"secondary\" : \"default\"} \n        onClick={onNotClick.bind(null, !not)} \n        disabled={readonly}\n      >\n        {notLabel || \"NOT\"}\n      </Button>\n    );\n  };\n\n  const onClick = value => setConjunction(value);\n  const onNotClick = checked => setNot(checked);\n\n  return (\n    <FormControl>\n      <ButtonGroup \n        disableElevation \n        variant=\"contained\" \n        size=\"small\" \n        disabled={readonly}\n      >\n        {showNot && renderNot()}\n        {showConj && renderOptions()}\n      </ButtonGroup>\n    </FormControl>\n  );\n  \n};\n","import React from \"react\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport LockIcon from \"@material-ui/icons/Lock\";\n\nexport default ({value, setValue, label, checkedLabel, hideLabel, id, config, type}) => {\n  const {renderSize} = config.settings;\n  const onChange = e => setValue(e.target.checked);\n  const onClick = () => setValue(!value);\n  const postfix = type;\n  const showLabel = value ? (checkedLabel || label) : label;\n  const icon = value ? <LockIcon /> : <LockOpenIcon />;\n\n  if (type == \"lock\") {\n    if (hideLabel) {\n      return <IconButton\n        key={id+postfix}\n        onClick={onClick}\n        size={\"small\"}\n      >{icon}</IconButton>;\n    } else {\n      return <Button\n        key={id+postfix}\n        onClick={onClick}\n        size={\"small\"}\n        startIcon={icon}\n      >{showLabel}</Button>;\n    }\n  }\n\n  return <FormControlLabel \n    control={<Switch\n      checked={!!value}\n      size={\"small\"}\n      onChange={onChange}\n    />} \n    label={showLabel} \n  />;\n};\n","export default ({onOk, okText, cancelText, title, confirmFn}) => {\n  confirmFn({ \n    description: title || \"Are you sure?\",\n    title: null,\n    confirmationText: okText || \"Ok\",\n    cancellationText: cancelText || \"Cancel\",\n  })\n    .then(onOk)\n    .catch(() => {});\n};\n","import MaterialWidgets from \"../widgets\";\nimport { Utils, BasicConfig } from \"@react-awesome-query-builder/ui\";\nimport React from \"react\";\nconst { SqlString, spelEscape, stringifyForDisplay } = Utils.ExportUtils;\n\n\nconst {\n  MaterialBooleanWidget,\n  MaterialTextWidget,\n  MaterialTextAreaWidget,\n  MaterialDateWidget,\n  MaterialTimeWidget,\n  MaterialDateTimeWidget,\n  MaterialMultiSelectWidget,\n  MaterialSelectWidget,\n  MaterialNumberWidget,\n  MaterialSliderWidget,\n  MaterialRangeWidget,\n  MaterialAutocompleteWidget,\n\n  MaterialFieldSelect,\n  MaterialFieldAutocomplete,\n  MaterialConjs,\n  MaterialSwitch,\n  MaterialButton,\n  MaterialButtonGroup,\n  MaterialValueSources,\n\n  MaterialProvider,\n  MaterialConfirm,\n  MaterialUseConfirm,\n} = MaterialWidgets;\n\n\nconst settings = {\n  ...BasicConfig.settings,\n\n  renderField: (props) => props?.customProps?.showSearch \n    ? <MaterialFieldAutocomplete {...props} /> \n    : <MaterialFieldSelect {...props} />,\n  renderOperator: (props) => <MaterialFieldSelect {...props} />,\n  renderFunc: (props) => <MaterialFieldSelect {...props} />,\n  renderConjs: (props) => <MaterialConjs {...props} />,\n  renderSwitch: (props) => <MaterialSwitch {...props} />,\n  renderButton: (props) => <MaterialButton {...props} />,\n  renderButtonGroup: (props) => <MaterialButtonGroup {...props} />,\n  renderValueSources: (props) => <MaterialValueSources {...props} />,\n  renderProvider: (props) => <MaterialProvider {...props} />,\n  renderConfirm: MaterialConfirm,\n  useConfirm: MaterialUseConfirm,\n};\n\n\nconst widgets = {\n  ...BasicConfig.widgets,\n  text: {\n    ...BasicConfig.widgets.text,\n    factory: (props) => <MaterialTextWidget {...props} />,\n  },\n  textarea: {\n    ...BasicConfig.widgets.textarea,\n    factory: (props) => <MaterialTextAreaWidget {...props} />,\n  },\n  number: {\n    ...BasicConfig.widgets.number,\n    factory: (props) => <MaterialNumberWidget {...props} />,\n  },\n  multiselect: {\n    ...BasicConfig.widgets.multiselect,\n    factory: (props) => {\n      return (props.asyncFetch || props.showSearch) \n        ? <MaterialAutocompleteWidget multiple {...props} /> \n        : <MaterialMultiSelectWidget {...props} />;\n    },\n  },\n  select: {\n    ...BasicConfig.widgets.select,\n    factory: (props) => {\n      return (props.asyncFetch || props.showSearch) \n        ? <MaterialAutocompleteWidget {...props} /> \n        : <MaterialSelectWidget {...props} />;\n    },\n  },\n  slider: {\n    ...BasicConfig.widgets.slider,\n    factory: (props) => <MaterialSliderWidget {...props} />,\n  },\n  boolean: {\n    ...BasicConfig.widgets.boolean,\n    factory: (props) => <MaterialBooleanWidget {...props} />,\n  },\n  date: {\n    ...BasicConfig.widgets.date,\n    factory: (props) => <MaterialDateWidget {...props} />,\n  },\n  time: {\n    ...BasicConfig.widgets.time,\n    factory: (props) => <MaterialTimeWidget {...props} />,\n  },\n  datetime: {\n    ...BasicConfig.widgets.datetime,\n    factory: (props) => <MaterialDateTimeWidget {...props} />,\n  },\n\n  rangeslider: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    factory: (props) => <MaterialRangeWidget {...props} />,\n    valueLabel: \"Range\",\n    valuePlaceholder: \"Select range\",\n    valueLabels: [\n      { label: \"Number from\", placeholder: \"Enter number from\" },\n      { label: \"Number to\", placeholder: \"Enter number to\" },\n    ],\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      return isForDisplay ? stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return SqlString.escape(val);\n    },\n    spelFormatValue: (val) => spelEscape(val),\n    singleWidget: \"slider\",\n    toJS: (val, fieldSettings) => (val),\n  },\n};\n\n\nconst types = {\n  ...BasicConfig.types,\n  number: {\n    ...BasicConfig.types.number,\n    widgets: {\n      ...BasicConfig.types.number.widgets,\n      rangeslider: {\n        opProps: {\n          between: {\n            isSpecialRange: true,\n          },\n          not_between: {\n            isSpecialRange: true,\n          }\n        },\n        operators: [\n          \"between\",\n          \"not_between\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      }\n    },\n  },\n};\n\nexport default {\n  ...BasicConfig,\n  types,\n  widgets,\n  settings,\n};","import { TreeStore } from \"@react-awesome-query-builder/core\";\nexport default TreeStore;\n","import React from \"react\";\n\nexport default React.createContext(); ","export const ADD_GROUP = \"ADD_GROUP\";\nexport const ADD_CASE_GROUP = \"ADD_CASE_GROUP\";\nexport const REMOVE_GROUP = \"REMOVE_GROUP\";\nexport const SET_CONJUNCTION = \"SET_CONJUNCTION\";\nexport const SET_NOT = \"SET_NOT\";\nexport const ADD_RULE = \"ADD_RULE\";\nexport const REMOVE_RULE = \"REMOVE_RULE\";\nexport const SET_FIELD = \"SET_FIELD\";\nexport const SET_OPERATOR = \"SET_OPERATOR\";\nexport const SET_VALUE = \"SET_VALUE\";\nexport const SET_VALUE_SRC = \"SET_VALUE_SRC\";\nexport const SET_OPERATOR_OPTION = \"SET_OPERATOR_OPTION\";\nexport const SET_LOCK = \"SET_LOCK\";\n\nexport const SET_TREE = \"SET_TREE\";\n\nexport const MOVE_ITEM = \"MOVE_ITEM\";\n\nexport const PLACEMENT_AFTER = \"after\";\nexport const PLACEMENT_BEFORE = \"before\";\nexport const PLACEMENT_APPEND = \"append\";\nexport const PLACEMENT_PREPEND = \"prepend\";\n\nexport const SET_DRAG_PROGRESS = \"SET_DRAG_PROGRESS\";\nexport const SET_DRAG_START = \"SET_DRAG_START\";\nexport const SET_DRAG_END = \"SET_DRAG_END\";\n","import * as constants from \"../stores/constants\";\n\n\n/**\n * @param {Object} mousePos\n * @param {Object} dragging\n */\nexport const setDragProgress = (mousePos, dragging) => ({\n  type: constants.SET_DRAG_PROGRESS,\n  mousePos: mousePos,\n  dragging: dragging,\n});\n\n/**\n * @param {Object} dragStart\n * @param {Object} dragging\n * @param {Object} mousePos\n */\nexport const setDragStart = (dragStart, dragging, mousePos) => ({\n  type: constants.SET_DRAG_START,\n  dragStart: dragStart,\n  dragging: dragging,\n  mousePos: mousePos,\n});\n\n/**\n *\n */\nexport const setDragEnd = () => ({\n  type: constants.SET_DRAG_END,\n});\n","import { TreeActions } from \"@react-awesome-query-builder/core\";\nimport * as drag from \"./drag\";\nconst { tree, group, rule } = TreeActions;\nexport {\n  tree,\n  group,\n  rule,\n  drag\n};\n","import pick from \"lodash/pick\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { extendConfig } = Utils.ConfigUtils;\n\nconst configKeys = [\"conjunctions\", \"fields\", \"types\", \"operators\", \"widgets\", \"settings\", \"funcs\"];\n\nconst pickConfig = (props) => {\n  return pick(props, configKeys);\n};\n\nexport const createConfigMemo = () => {\n  const configStore = new Map();\n  const maxSize = 2; // current and prev\n  let configId = 0;\n\n  const extendAndStore = (config) => {\n    const extendedConfig = extendConfig(config, ++configId);\n    if ((configStore.size + 1) > maxSize) {\n      configStore.delete(configStore.keys()[0]);\n    }\n    configStore.set(config, extendedConfig);\n    return extendedConfig;\n  };\n\n  const findExtended = (findConfig) => {\n    // strict find:\n    // return configStore.get(findConfig) || configStore.values().find(ec => ec === findConfig);\n\n    for (const savedConfig of configStore.keys()) {\n      const found = configKeys.map(k => savedConfig[k] === findConfig[k]).filter(v => !v).length === 0;\n      if (found) {\n        return configStore.get(savedConfig);\n      }\n    }\n\n    for (const extendedConfig of configStore.values()) {\n      const found = configKeys.map(k => extendedConfig[k] === findConfig[k]).filter(v => !v).length === 0;\n      if (found) {\n        return extendedConfig;\n      }\n    }\n\n    return null;\n  };\n\n  const findOrExtend = (config) => {\n    return findExtended(config) || extendAndStore(config);\n  };\n  \n  return (props) => findOrExtend(pickConfig(props));\n};\n","\nexport const defaultValue = (value, _default) => {\n  return (typeof value === \"undefined\") ? _default : value;\n};\n\nexport const truncateString = (str, n, useWordBoundary) => {\n  if (!n || str.length <= n) { return str; }\n  var subString = str.substr(0, n-1);\n  return (useWordBoundary \n    ? subString.substr(0, subString.lastIndexOf(\" \")) \n    : subString) + \"...\";\n};\n\nexport const immutableEqual = function(v1, v2) {\n  if (v1 === v2) {\n    return true;\n  } else {\n    return v1.equals(v2);\n  }\n};\n\n// const deepEqual = function(v1, v2) {\n//   if (v1 === v2) {\n//     return true;\n//   } else if (Map.isMap(v1)) {\n//     return v1.equals(v2);\n//   } else {\n//     return JSON.stringify(v1) == JSON.stringify(v2);\n//   }\n// };\n\n\nexport const shallowEqual = (a, b, deep = false) => {\n  if (a === b) {\n    return true;\n  } else if (Array.isArray(a))\n    return shallowEqualArrays(a, b, deep);\n  else if (a && typeof a.equals === \"function\")\n    return a.equals(b);\n  else if (typeof a === \"object\")\n    return shallowEqualObjects(a, b, deep);\n  else\n    return a === b;\n};\n\nfunction shallowEqualArrays(arrA, arrB, deep = false) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var isEqual = deep ? shallowEqual(arrA[i], arrB[i], deep) : arrA[i] === arrB[i];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowEqualObjects(objA, objB, deep = false) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n    var isEqual = deep ? shallowEqual(objA[key], objB[key], deep) : objA[key] === objB[key];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n\nconst isImmutable = (v) => {\n  return typeof v === \"object\" && v !== null && typeof v.toJS === \"function\";\n};\n\n\n// export function toImmutableList(v) {\n//   return (isImmutable(v) ? v : new Immutable.List(v));\n// }\n\n\nconst isDev = () => (typeof process !== \"undefined\" && process.env && process.env.NODE_ENV == \"development\");\n\nexport const getLogger = (devMode = false) => {\n  const verbose = devMode != undefined ? devMode : isDev(); \n  return verbose ? console : {\n    error: () => {},\n    log: () => {},\n    warn: () => {},\n    debug: () => {},\n    info: () => {},\n  };\n};\n\n\nexport const logger = getLogger();\n\n","import {immutableEqual} from \"../utils/stuff\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { validateAndFixTree } = Utils;\n\nexport const createValidationMemo = () => {\n  let originalTree;\n  let validatedTree;\n  let configId;\n\n  return (config, tree, oldConfig) => {\n    if (!tree) {\n      return null;\n    }\n    if (config.__configId === configId && (immutableEqual(tree, originalTree) || immutableEqual(tree, validatedTree))) {\n      return validatedTree;\n    } else {\n      configId = config.__configId;\n      originalTree = tree;\n      validatedTree = validateAndFixTree(tree, null, config, oldConfig || config);\n      return validatedTree;\n    }\n  };\n};\n","import React from \"react\";\nimport mapValues from \"lodash/mapValues\";\nimport {shallowEqual} from \"./stuff\";\n\nconst getReactContainerType = (el) => {\n  if (el._reactRootContainer) {\n    return \"root\";\n  }\n  if (Object.getOwnPropertyNames(el).filter(k => k.startsWith(\"__reactContainer\")).length > 0) {\n    return \"container\";\n  }\n  return undefined;\n};\n\nconst getReactRootNodeType = (node) => {\n  if (!node) {\n    return undefined;\n  }\n  const type = getReactContainerType(node);\n  if (type !== undefined) {\n    return type;\n  } else {\n    return getReactRootNodeType(node.parentNode);\n  }\n};\n\nexport const isUsingLegacyReactDomRender = (node) => {\n  return getReactRootNodeType(node) === \"root\";\n};\n\n\nexport const liteShouldComponentUpdate = (self, config) => (nextProps, nextState) => {\n  const prevProps = self.props;\n  const prevState = self.state;\n\n  let should = nextProps != prevProps || nextState != prevState;\n  if (should) {\n    if (prevState == nextState && prevProps != nextProps) {\n      let chs = [];\n      for (let k in nextProps) {\n        let changed = (nextProps[k] != prevProps[k]);\n        if (changed) {\n          if (config[k] == \"ignore\")\n            changed = false;\n          else if (config[k] == \"shallow_deep\")\n            changed = !shallowEqual(nextProps[k], prevProps[k], true);\n          else if (config[k] == \"shallow\")\n            changed = !shallowEqual(nextProps[k], prevProps[k]);\n          else if (typeof config[k] == \"function\")\n            changed = config[k](nextProps[k], prevProps[k], nextState);\n        }\n        if (changed)\n          chs.push(k);\n      }\n      if (!chs.length)\n        should = false;\n    }\n  }\n  return should;\n};\n\nexport const pureShouldComponentUpdate = (self) => function(nextProps, nextState) {\n  return (\n    !shallowEqual(self.props, nextProps)\n    || !shallowEqual(self.state, nextState)\n  );\n};\n\nconst canUseUnsafe = () => {\n  const v = React.version.split(\".\").map(parseInt.bind(null, 10));\n  return v[0] == 16 && v[1] >= 3 || v[0] > 16;\n};\n\nexport const useOnPropsChanged = (obj) => {\n  if (canUseUnsafe) {\n    obj.UNSAFE_componentWillReceiveProps = (nextProps) => {\n      obj.onPropsChanged(nextProps);\n    };\n  } else {\n    obj.componentWillReceiveProps = (nextProps) => {\n      obj.onPropsChanged(nextProps);\n    };\n  }\n};\n\nexport const bindActionCreators = (actionCreators, config, dispatch) =>\n  mapValues(actionCreators, (actionCreator) =>\n    (...args) => dispatch(actionCreator(config, ...args))\n  );\n","import React, { Component } from \"react\";\nimport {connect} from \"react-redux\";\nimport context from \"../stores/context\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../actions\";\nimport {immutableEqual} from \"../utils/stuff\";\nimport {useOnPropsChanged, liteShouldComponentUpdate, bindActionCreators} from \"../utils/reactUtils\";\n\n\nclass Query extends Component {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    onChange: PropTypes.func,\n    renderBuilder: PropTypes.func,\n    tree: PropTypes.any, //instanceOf(Immutable.Map)\n    //dispatch: PropTypes.func.isRequired,\n    //__isInternalValueChange\n    //__lastAction\n    //getMemoizedTree: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this._updateActions(props);\n\n    // For preventive validation (tree and config consistency)\n    // When config has chnaged from QueryContainer, \n    //  but new dispatched validated tree value is not in redux store yet (tree prop is old)\n    this.validatedTree = props.getMemoizedTree(props.config, props.tree);\n    this.oldValidatedTree = this.validatedTree;\n\n    //props.onChange && props.onChange(this.validatedTree, props.config);\n  }\n\n  _updateActions (props) {\n    const {config, dispatch} = props;\n    this.actions = bindActionCreators({...actions.tree, ...actions.group, ...actions.rule}, config, dispatch);\n  }\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    tree: (nextValue) => {\n      if (nextValue === this.oldValidatedTree && this.oldValidatedTree === this.validatedTree) {\n        // Got value dispatched from QueryContainer\n        // Ignore, because we've just rendered it\n        return false;\n      }\n      return true;\n    }\n  });\n\n  onPropsChanged(nextProps) {\n    const {onChange} = nextProps;\n    const oldConfig = this.props.config;\n    const newTree = nextProps.tree;\n    const oldTree = this.props.tree;\n    const newConfig = nextProps.config;\n\n    this.oldValidatedTree = this.validatedTree;\n    this.validatedTree = newTree;\n    if (oldConfig !== newConfig) {\n      this._updateActions(nextProps);\n      this.validatedTree = nextProps.getMemoizedTree(newConfig, newTree, oldConfig);\n    }\n\n    const validatedTreeChanged = !immutableEqual(this.validatedTree, this.oldValidatedTree);\n    if (validatedTreeChanged) {\n      onChange && onChange(this.validatedTree, newConfig, nextProps.__lastAction);\n    }\n  }\n\n  render() {\n    const {config, renderBuilder, dispatch, __isInternalValueChange} = this.props;\n    const builderProps = {\n      tree: this.validatedTree,\n      actions: this.actions,\n      config: config,\n      dispatch: dispatch,\n      __isInternalValueChange\n    };\n\n    return renderBuilder(builderProps);\n  }\n}\n\n\nconst ConnectedQuery = connect(\n  (state) => {\n    return {\n      tree: state.tree,\n      __isInternalValueChange: state.__isInternalValueChange,\n      __lastAction: state.__lastAction,\n    };\n  },\n  null,\n  null,\n  {\n    context\n  }\n)(Query);\nConnectedQuery.displayName = \"ConnectedQuery\";\n\n\nexport default ConnectedQuery;\n","import React, { Component, PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport treeStoreReducer from \"../stores/tree\";\nimport context from \"../stores/context\";\nimport {createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport * as actions from \"../actions\";\nimport {createConfigMemo} from \"../utils/configUtils\";\nimport {immutableEqual} from \"../utils/stuff\";\nimport {createValidationMemo} from \"../utils/validation\";\nimport {liteShouldComponentUpdate, useOnPropsChanged} from \"../utils/reactUtils\";\nimport ConnectedQuery from \"./Query\";\nconst {defaultRoot} = Utils.DefaultUtils;\n\n\nexport default class QueryContainer extends Component {\n  static propTypes = {\n    //config\n    conjunctions: PropTypes.object.isRequired,\n    fields: PropTypes.object.isRequired,\n    types: PropTypes.object.isRequired,\n    operators: PropTypes.object.isRequired,\n    widgets: PropTypes.object.isRequired,\n    settings: PropTypes.object.isRequired,\n\n    onChange: PropTypes.func,\n    renderBuilder: PropTypes.func,\n    value: PropTypes.any, //instanceOf(Immutable.Map)\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    useOnPropsChanged(this);\n\n    this.getMemoizedConfig = createConfigMemo();\n    this.getMemoizedTree = createValidationMemo();\n    \n    const config = this.getMemoizedConfig(props);\n    const tree = props.value;\n    const validatedTree = this.getMemoizedTree(config, tree);\n\n    const reducer = treeStoreReducer(config, validatedTree, this.getMemoizedTree);\n    const store = createStore(reducer);\n\n    this.state = {\n      store,\n      config\n    };\n  }\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    value: (nextValue, prevValue, state) => { return false; }\n  });\n\n  onPropsChanged(nextProps) {\n    // compare configs\n    const oldConfig = this.state.config;\n    const nextConfig = this.getMemoizedConfig(nextProps);\n    const isConfigChanged = oldConfig !== nextConfig;\n\n    // compare trees\n    const storeValue = this.state.store.getState().tree;\n    const isTreeChanged = !immutableEqual(nextProps.value, this.props.value) && !immutableEqual(nextProps.value, storeValue);\n    const currentTree = isTreeChanged ? nextProps.value || defaultRoot(nextProps) : storeValue;\n\n    if (isConfigChanged) {\n      this.setState({config: nextConfig});\n    }\n    \n    if (isTreeChanged || isConfigChanged) {\n      const validatedTree = this.getMemoizedTree(nextConfig, currentTree, oldConfig);\n      return Promise.resolve().then(() => {\n        this.state.store.dispatch(\n          actions.tree.setTree(nextConfig, validatedTree)\n        );\n      });\n    }\n  }\n\n  render() {\n    // `get_children` is deprecated!\n    const {renderBuilder, get_children, onChange, settings} = this.props;\n    const {config, store} = this.state;\n    const {renderProvider: QueryWrapper} = settings;\n\n    return (\n      <QueryWrapper config={config}>\n        <Provider store={store} context={context}>\n          <ConnectedQuery\n            config={config}\n            getMemoizedTree={this.getMemoizedTree}\n            onChange={onChange}\n            renderBuilder={renderBuilder || get_children}\n          />\n        </Provider>\n      </QueryWrapper>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport context from \"../../stores/context\";\nimport {pureShouldComponentUpdate} from \"../../utils/reactUtils\";\nimport {connect} from \"react-redux\";\nimport classNames from \"classnames\";\nconst {getFieldConfig} = Utils.ConfigUtils;\n\n\nconst createRuleContainer = (Rule) => \n  class RuleContainer extends Component {\n    static propTypes = {\n      id: PropTypes.string.isRequired,\n      groupId: PropTypes.string,\n      config: PropTypes.object.isRequired,\n      path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n      operator: PropTypes.string,\n      field: PropTypes.string,\n      actions: PropTypes.object.isRequired, //{removeRule: Funciton, setField, setOperator, setOperatorOption, setValue, setValueSrc, ...}\n      onDragStart: PropTypes.func,\n      value: PropTypes.any, //depends on widget\n      valueSrc: PropTypes.any,\n      asyncListValues: PropTypes.array,\n      valueError: PropTypes.any,\n      operatorOptions: PropTypes.object,\n      reordableNodesCnt: PropTypes.number,\n      parentField: PropTypes.string, //from RuleGroup\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n      //connected:\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isDraggingTempo: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      \n      this.dummyFn.isDummyFn = true;\n    }\n\n    dummyFn = () => {};\n\n    removeSelf = () => {\n      this.props.actions.removeRule(this.props.path);\n    };\n\n    setLock = (lock = null) => {\n      this.props.actions.setLock(this.props.path, lock);\n    };\n\n    setField = (field) => {\n      this.props.actions.setField(this.props.path, field);\n    };\n\n    setOperator = (operator) => {\n      this.props.actions.setOperator(this.props.path, operator);\n    };\n\n    setOperatorOption = (name, value) => {\n      this.props.actions.setOperatorOption(this.props.path, name, value);\n    };\n\n    setValue = (delta, value, type, asyncListValues, __isInternal) => {\n      this.props.actions.setValue(this.props.path, delta, value, type, asyncListValues, __isInternal);\n    };\n\n    setValueSrc = (delta, srcKey) => {\n      this.props.actions.setValueSrc(this.props.path, delta, srcKey);\n    };\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = pureShouldComponentUpdate(this)(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          const draggingId = (nextProps.dragging.id || prevProps.dragging.id);\n          const isDraggingMe = draggingId == nextProps.id;\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (k == \"dragging\" && !isDraggingMe) {\n              changed = false; //dragging another item -> ignore\n            }\n            if (changed) {\n              chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    render() {\n      const isDraggingMe = this.props.dragging.id == this.props.id;\n      const fieldConfig = getFieldConfig(this.props.config, this.props.field);\n      const {showErrorMessage} = this.props.config.settings;\n      const _isGroup = fieldConfig && fieldConfig.type == \"!struct\";\n      const isInDraggingTempo = !isDraggingMe && this.props.isDraggingTempo;\n\n      const valueError = this.props.valueError;\n      const oneValueError = valueError && valueError.toArray().filter(e => !!e).shift() || null;\n      const hasError = oneValueError != null && showErrorMessage;\n\n      return (\n        <div\n          className={classNames(\"group-or-rule-container\", \"rule-container\", hasError ? \"rule-with-error\" : null)}\n          data-id={this.props.id}\n        >\n          {[\n            isDraggingMe ? <Rule\n              key={\"dragging\"}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={true}\n              isDraggingTempo={true}\n              dragging={this.props.dragging}\n              setField={this.dummyFn}\n              setOperator={this.dummyFn}\n              setOperatorOption={this.dummyFn}\n              setLock={this.dummyFn}\n              removeSelf={this.dummyFn}\n              setValue={this.dummyFn}\n              setValueSrc={this.dummyFn}\n              selectedField={this.props.field || null}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              value={this.props.value || null}\n              valueSrc={this.props.valueSrc || null}\n              valueError={this.props.valueError || null}\n              operatorOptions={this.props.operatorOptions}\n              config={this.props.config}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              asyncListValues={this.props.asyncListValues}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            /> : null\n            ,\n            <Rule\n              key={this.props.id}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={isDraggingMe}\n              isDraggingTempo={isInDraggingTempo}\n              onDragStart={this.props.onDragStart}\n              setLock={isInDraggingTempo ? this.dummyFn : this.setLock}\n              removeSelf={isInDraggingTempo ? this.dummyFn : this.removeSelf}\n              setField={isInDraggingTempo ? this.dummyFn : this.setField}\n              setOperator={isInDraggingTempo ? this.dummyFn : this.setOperator}\n              setOperatorOption={isInDraggingTempo ? this.dummyFn : this.setOperatorOption}\n              setValue={isInDraggingTempo ? this.dummyFn : this.setValue}\n              setValueSrc={isInDraggingTempo ? this.dummyFn : this.setValueSrc}\n              selectedField={this.props.field || null}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              value={this.props.value || null}\n              valueSrc={this.props.valueSrc || null}\n              valueError={this.props.valueError || null}\n              operatorOptions={this.props.operatorOptions}\n              config={this.props.config}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              asyncListValues={this.props.asyncListValues}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            />\n          ]}\n        </div>\n      );\n    }\n\n  };\n\n\nexport default (Rule) => {\n  const ConnectedRuleContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n      };\n    },\n    null,\n    null,\n    {\n      context\n    }\n  )(createRuleContainer(Rule));\n  ConnectedRuleContainer.displayName = \"ConnectedRuleContainer\";\n\n  return ConnectedRuleContainer;\n};\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport {connect} from \"react-redux\";\nimport {logger} from \"../../utils/stuff\";\nimport context from \"../../stores/context\";\nimport * as constants from \"../../stores/constants\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../../actions\";\nimport {pureShouldComponentUpdate, useOnPropsChanged, isUsingLegacyReactDomRender} from \"../../utils/reactUtils\";\nconst {clone} = Utils;\nconst {getFlatTree} = Utils.TreeUtils;\n\nlet _isReorderingTree = false;\n\nconst createSortableContainer = (Builder, CanMoveFn = null) => \n  class SortableContainer extends Component {\n    static propTypes = {\n      tree: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n      actions: PropTypes.object.isRequired, // {moveItem: Function, ..}\n      //... see Builder\n    };\n\n    constructor(props) {\n      super(props);\n      useOnPropsChanged(this);\n\n      this.onPropsChanged(props);\n    }\n\n    onPropsChanged(nextProps) {\n      this.tree = getFlatTree(nextProps.tree);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = pureShouldComponentUpdate(this)(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (changed) {\n              //don't render <Builder> on dragging - appropriate redux-connected components will do it\n              if(k != \"dragging\" && k != \"mousePos\")\n                chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    componentDidUpdate(_prevProps, _prevState) {\n      let dragging = this.props.dragging;\n      let startDragging = this.props.dragStart;\n      _isReorderingTree = false;\n      if (startDragging && startDragging.id) {\n        dragging.itemInfo = this.tree.items[dragging.id];\n        if (dragging.itemInfo) {\n          if (dragging.itemInfo.index != startDragging.itemInfo.index || dragging.itemInfo.parent != startDragging.itemInfo.parent) {\n            const treeEl = startDragging.treeEl;\n            const treeElContainer = startDragging.treeElContainer;\n            const plhEl = this._getPlaceholderNodeEl(treeEl, true);\n            if (plhEl) {\n              const plX = plhEl.getBoundingClientRect().left + window.scrollX;\n              const plY = plhEl.getBoundingClientRect().top + window.scrollY;\n              const oldPlX = startDragging.plX;\n              const oldPlY = startDragging.plY;\n              const scrollTop = treeElContainer.scrollTop;\n              startDragging.plX = plX;\n              startDragging.plY = plY;\n              startDragging.itemInfo = clone(dragging.itemInfo);\n              startDragging.y = plhEl.offsetTop;\n              startDragging.x = plhEl.offsetLeft;\n              startDragging.clientY += (plY - oldPlY);\n              startDragging.clientX += (plX - oldPlX);\n              if (treeElContainer != document.body)\n                startDragging.scrollTop = scrollTop;\n\n              this.onDrag(this.props.mousePos, false);\n            }\n          }\n        }\n      }\n    }\n\n    _getNodeElById (treeEl, indexId, ignoreCache = false) {\n      if (indexId == null)\n        return null;\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[indexId];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      el = treeEl.querySelector('.group-or-rule-container[data-id=\"'+indexId+'\"]');\n      this._cacheEls[indexId] = el;\n      return el;\n    }\n\n    _getDraggableNodeEl (treeEl, ignoreCache = false) {\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[\"draggable\"];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      const els = treeEl.getElementsByClassName(\"qb-draggable\");\n      el = els.length ? els[0] : null;\n      this._cacheEls[\"draggable\"] = el;\n      return el;\n    }\n\n    _getPlaceholderNodeEl (treeEl, ignoreCache = false) {\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[\"placeholder\"];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      const els = treeEl.getElementsByClassName(\"qb-placeholder\");\n      el = els.length ? els[0] : null;\n      this._cacheEls[\"placeholder\"] = el;\n      return el;\n    }\n\n    _isScrollable(node) {\n      const overflowY = window.getComputedStyle(node)[\"overflow-y\"];\n      return (overflowY === \"scroll\" || overflowY === \"auto\") && (node.scrollHeight > node.offsetHeight);\n    }\n\n    _getScrollParent(node) {\n      if (node == null)\n        return null;\n    \n      if (node === document.body || this._isScrollable(node)) {\n        return node;\n      } else {\n        return this._getScrollParent(node.parentNode);\n      }\n    }\n\n    _getEventTarget = (e, dragStart) => {\n      return e && e.__mocked_window || document.body || window;\n    };\n\n    onDragStart = (id, dom, e) => {\n      let treeEl = dom.closest(\".query-builder\");\n      if (this._isUsingLegacyReactDomRender === undefined) {\n        this._isUsingLegacyReactDomRender = isUsingLegacyReactDomRender(treeEl);\n      }\n      document.body.classList.add(\"qb-dragging\");\n      treeEl.classList.add(\"qb-dragging\");\n      let treeElContainer = treeEl.closest(\".query-builder-container\") || treeEl;\n      treeElContainer = this._getScrollParent(treeElContainer) || document.body;\n      const scrollTop = treeElContainer.scrollTop;\n      \n      const _dragEl = this._getDraggableNodeEl(treeEl);\n      const _plhEl = this._getPlaceholderNodeEl(treeEl);\n\n      const tmpAllGroups = treeEl.querySelectorAll(\".group--children\");\n      const anyGroup = tmpAllGroups.length ? tmpAllGroups[0] : null;\n      let groupPadding;\n      if (anyGroup) {\n        groupPadding = window.getComputedStyle(anyGroup, null).getPropertyValue(\"padding-left\");\n        groupPadding = parseInt(groupPadding);\n      }\n\n      const dragging = {\n        id: id,\n        x: dom.offsetLeft,\n        y: dom.offsetTop,\n        w: dom.offsetWidth,\n        h: dom.offsetHeight,\n        itemInfo: this.tree.items[id],\n        paddingLeft: groupPadding,\n      };\n      const dragStart = {\n        id: id,\n        x: dom.offsetLeft,\n        y: dom.offsetTop,\n        scrollTop: scrollTop,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        itemInfo: clone(this.tree.items[id]),\n        treeEl: treeEl,\n        treeElContainer: treeElContainer,\n      };\n      const mousePos = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      };\n\n      const target = this._getEventTarget(e, dragStart);\n      this.eventTarget = target;\n      target.addEventListener(\"mousemove\", this.onDrag);\n      target.addEventListener(\"mouseup\", this.onDragEnd);\n\n      this.props.setDragStart(dragStart, dragging, mousePos);\n    };\n\n\n    onDrag = (e, doHandleDrag = true) => {\n      let dragging = Object.assign({}, this.props.dragging);\n      let startDragging = this.props.dragStart;\n      const paddingLeft = dragging.paddingLeft; //this.props.paddingLeft;\n      const treeElContainer = startDragging.treeElContainer;\n      const scrollTop = treeElContainer.scrollTop;\n      dragging.itemInfo = this.tree.items[dragging.id];\n      if (!dragging.itemInfo) {\n        return;\n      }\n\n      let mousePos = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      };\n      const startMousePos = {\n        clientX: startDragging.clientX,\n        clientY: startDragging.clientY,\n      };\n\n      if (e.__mock_dom) {\n        const treeEl = startDragging.treeEl;\n        const dragEl = this._getDraggableNodeEl(treeEl);\n        const plhEl = this._getPlaceholderNodeEl(treeEl);\n        e.__mock_dom({treeEl, dragEl, plhEl});\n      }\n\n      //first init plX/plY\n      if (!startDragging.plX) {\n        const treeEl = startDragging.treeEl;\n        const plhEl = this._getPlaceholderNodeEl(treeEl);\n        if (plhEl) {\n          startDragging.plX = plhEl.getBoundingClientRect().left + window.scrollX;\n          startDragging.plY = plhEl.getBoundingClientRect().top + window.scrollY;\n        }\n      }\n\n      const startX = startDragging.x;\n      const startY = startDragging.y;\n      const startClientX = startDragging.clientX;\n      const startClientY = startDragging.clientY;\n      const startScrollTop = startDragging.scrollTop;\n      const pos = {\n        x: startX + (e.clientX - startClientX),\n        y: startY + (e.clientY - startClientY) + (scrollTop - startScrollTop)\n      };\n      dragging.x = pos.x;\n      dragging.y = pos.y;\n      dragging.paddingLeft = paddingLeft;\n      dragging.mousePos = mousePos;\n      dragging.startMousePos = startMousePos;\n\n\n      this.props.setDragProgress(mousePos, dragging);\n\n      const moved = doHandleDrag ? this.handleDrag(dragging, e, CanMoveFn) : false;\n\n      if (!moved) {\n        if (e.preventDefault)\n          e.preventDefault();\n      }\n    };\n\n    onDragEnd = () => {\n      let treeEl = this.props.dragStart.treeEl;\n\n      this.props.setDragEnd();\n\n      treeEl.classList.remove(\"qb-dragging\");\n      document.body.classList.remove(\"qb-dragging\");\n      this._cacheEls = {};\n\n      const target = this.eventTarget || this._getEventTarget();\n      target.removeEventListener(\"mousemove\", this.onDrag);\n      target.removeEventListener(\"mouseup\", this.onDragEnd);\n    };\n    \n\n    handleDrag (dragInfo, e, canMoveFn) {\n      const canMoveBeforeAfterGroup = true;\n      const itemInfo = dragInfo.itemInfo;\n      const paddingLeft = dragInfo.paddingLeft;\n\n      let moveInfo = null;\n      const treeEl = this.props.dragStart.treeEl;\n      const dragId = dragInfo.id;\n      const dragEl = this._getDraggableNodeEl(treeEl);\n      const plhEl = this._getPlaceholderNodeEl(treeEl);\n      let dragRect, plhRect, hovRect, treeRect;\n      if (dragEl && plhEl) {\n        dragRect = dragEl.getBoundingClientRect();\n        plhRect = plhEl.getBoundingClientRect();\n        if (!plhRect.width) {\n          return;\n        }\n        let dragDirs = {hrz: 0, vrt: 0};\n        if (dragRect.top < plhRect.top)\n          dragDirs.vrt = -1; //up\n        else if (dragRect.bottom > plhRect.bottom)\n          dragDirs.vrt = +1; //down\n        if (dragRect.left > plhRect.left)\n          dragDirs.hrz = +1; //right\n        else if (dragRect.left < plhRect.left)\n          dragDirs.hrz = -1; //left\n\n        treeRect = treeEl.getBoundingClientRect();\n        const trgCoord = {\n          x: treeRect.left + (treeRect.right - treeRect.left) / 2,\n          y: dragDirs.vrt >= 0 ? dragRect.bottom : dragRect.top,\n        };\n        let hovCNodeEl;\n        if (e.__mocked_hov_container) {\n          hovCNodeEl = e.__mocked_hov_container;\n        } else {\n          const hovNodeEl = document.elementFromPoint(trgCoord.x, trgCoord.y-1);\n          hovCNodeEl = hovNodeEl ? hovNodeEl.closest(\".group-or-rule-container\") : null;\n          if (!hovCNodeEl && hovNodeEl && hovNodeEl.classList.contains(\"query-builder-container\")) {\n            // fix 2022-01-24 - get root .group-or-rule-container\n            const rootGroupContainer = hovNodeEl?.firstChild?.firstChild;\n            if (rootGroupContainer && rootGroupContainer.classList.contains(\"group-or-rule-container\")) {\n              hovCNodeEl = rootGroupContainer;\n            }\n          }\n        }\n        if (!hovCNodeEl) {\n          logger.log(\"out of tree bounds!\");\n        } else {\n          const isGroup = hovCNodeEl.classList.contains(\"group-container\");\n          const hovNodeId = hovCNodeEl.getAttribute(\"data-id\");\n          const hovEl = hovCNodeEl;\n          let doAppend = false;\n          let doPrepend = false;\n          if (hovEl) {\n            hovRect = hovEl.getBoundingClientRect();\n            const hovHeight = hovRect.bottom - hovRect.top;\n            const hovII = this.tree.items[hovNodeId];\n            let trgRect = null,\n              trgEl = null,\n              trgII = null,\n              altII = null; //for canMoveBeforeAfterGroup\n\n            if (dragDirs.vrt == 0) {\n              trgII = itemInfo;\n              trgEl = plhEl;\n              if (trgEl)\n                trgRect = trgEl.getBoundingClientRect();\n            } else {\n              if (isGroup) {\n                if (dragDirs.vrt > 0) { //down\n                  //take group header (for prepend only)\n                  const hovInnerEl = hovCNodeEl.getElementsByClassName(\"group--header\");\n                  const hovEl2 = hovInnerEl.length ? hovInnerEl[0] : null;\n                  if (hovEl2) {\n                    const hovRect2 = hovEl2.getBoundingClientRect();\n                    const hovHeight2 = hovRect2.bottom - hovRect2.top;\n                    const isOverHover = ((dragRect.bottom - hovRect2.top) > hovHeight2*3/4);\n                    if (isOverHover && hovII.top > dragInfo.itemInfo.top) {\n                      trgII = hovII;\n                      trgRect = hovRect2;\n                      trgEl = hovEl2;\n                      doPrepend = true;\n                    }\n                  }\n                } else if (dragDirs.vrt < 0) { //up\n                  if (hovII.lev >= itemInfo.lev) {\n                    //take whole group\n                    const isClimbToHover = ((hovRect.bottom - dragRect.top) >= 2);\n                    if (isClimbToHover && hovII.top < dragInfo.itemInfo.top) {\n                      trgII = hovII;\n                      trgRect = hovRect;\n                      trgEl = hovEl;\n                      doAppend = true;\n                    }\n                  }\n                }\n                if (!doPrepend && !doAppend || canMoveBeforeAfterGroup) {\n                  //take whole group and check if we can move before/after group\n                  const isOverHover = (dragDirs.vrt < 0 //up\n                    ? ((hovRect.bottom - dragRect.top) > (hovHeight-5))\n                    : ((dragRect.bottom - hovRect.top) > (hovHeight-5)));\n                  if (isOverHover) {\n                    if (!doPrepend && !doAppend) {\n                      trgII = hovII;\n                      trgRect = hovRect;\n                      trgEl = hovEl;\n                    }\n                    if (canMoveBeforeAfterGroup) {\n                      altII = hovII;\n                    }\n                  }\n                }\n              } else {\n                //check if we can move before/after group\n                const isOverHover = (dragDirs.vrt < 0 //up\n                  ? ((hovRect.bottom - dragRect.top) > hovHeight/2)\n                  : ((dragRect.bottom - hovRect.top) > hovHeight/2));\n                if (isOverHover) {\n                  trgII = hovII;\n                  trgRect = hovRect;\n                  trgEl = hovEl;\n                }\n              }\n            }\n\n            const isSamePos = (trgII && trgII.id == dragId);\n            if (trgRect) {\n              const dragLeftOffset = dragRect.left - treeRect.left;\n              const trgLeftOffset = trgRect.left - treeRect.left;\n              const _trgLev = trgLeftOffset / paddingLeft;\n              const dragLev = Math.max(0, Math.round(dragLeftOffset / paddingLeft));\n\n              //find all possible moves\n              let availMoves = [];\n              let altMoves = []; //alternatively can move after/before group, if can't move into it\n              if (isSamePos) {\n                //do nothing\n              } else {\n                if (isGroup) {\n                  if (doAppend) {\n                    availMoves.push([constants.PLACEMENT_APPEND, trgII, trgII.lev+1]);\n                  } else if (doPrepend) {\n                    availMoves.push([constants.PLACEMENT_PREPEND, trgII, trgII.lev+1]);\n                  }\n                  //alt\n                  if (canMoveBeforeAfterGroup && altII) {\n                    // fix 2022-01-24: do prepend/append instead of before/after for root\n                    const isToRoot = altII.lev == 0;\n                    // fix 2022-01-25: fix prepend/append instead of before/after for case_group\n                    const isToCase = altII.type == \"case_group\" && itemInfo.type != \"case_group\";\n                    let prevCaseId = altII.prev && this.tree.items[altII.prev].caseId;\n                    let nextCaseId = altII.next && this.tree.items[altII.next].caseId;\n                    if (itemInfo.caseId == prevCaseId)\n                      prevCaseId = null;\n                    if (itemInfo.caseId == nextCaseId)\n                      nextCaseId = null;\n                    const prevCase = prevCaseId && this.tree.items[prevCaseId];\n                    const nextCase = nextCaseId && this.tree.items[nextCaseId];\n\n                    if (dragDirs.vrt > 0) { //down\n                      if (isToRoot) {\n                        altMoves.push([constants.PLACEMENT_APPEND, altII, altII.lev+1]);\n                      } else if (isToCase && nextCase) {\n                        altMoves.push([constants.PLACEMENT_PREPEND, nextCase, nextCase.lev+1]);\n                      } else {\n                        altMoves.push([constants.PLACEMENT_AFTER, altII, altII.lev]);\n                      }\n                    } else if (dragDirs.vrt < 0) { //up\n                      if (isToRoot) {\n                        altMoves.push([constants.PLACEMENT_PREPEND, altII, altII.lev+1]);\n                      } else if (isToCase && prevCase) {\n                        altMoves.push([constants.PLACEMENT_APPEND, prevCase, prevCase.lev+1]);\n                      } else {\n                        altMoves.push([constants.PLACEMENT_BEFORE, altII, altII.lev]);\n                      }\n                    }\n                  }\n                }\n                if (!doAppend && !doPrepend) {\n                  if (dragDirs.vrt < 0) { //up\n                    availMoves.push([constants.PLACEMENT_BEFORE, trgII, trgII.lev]);\n                  } else if (dragDirs.vrt > 0) { //down\n                    availMoves.push([constants.PLACEMENT_AFTER, trgII, trgII.lev]);\n                  }\n                }\n              }\n              \n              //add case\n              const addCaseII = am => {\n                const toII = am[1];\n                const fromCaseII = itemInfo.caseId ? this.tree.items[itemInfo.caseId] : null;\n                const toCaseII = toII.caseId ? this.tree.items[toII.caseId] : null;\n                return [...am, fromCaseII, toCaseII];\n              };\n              availMoves = availMoves.map(addCaseII);\n              altMoves = altMoves.map(addCaseII);\n\n              //sanitize\n              availMoves = availMoves.filter(am => {\n                const placement = am[0];\n                const trg = am[1];\n                if ((placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER) && trg.parent == null)\n                  return false;\n                if (trg.collapsed && (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND))\n                  return false;\n\n                let isInside = (trg.id == itemInfo.id);\n                if (!isInside) {\n                  let tmp = trg;\n                  while (tmp.parent) {\n                    tmp = this.tree.items[tmp.parent];\n                    if (tmp.id == itemInfo.id) {\n                      isInside = true;\n                      break;\n                    }\n                  }\n                }\n                return !isInside;\n              }).map(am => {\n                const placement = am[0],\n                  toII = am[1],\n                  _lev = am[2],\n                  _fromCaseII = am[3],\n                  _toCaseII = am[4];\n                let toParentII = null;\n                if (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND)\n                  toParentII = toII;\n                else\n                  toParentII = this.tree.items[toII.parent];\n                if (toParentII && toParentII.parent == null)\n                  toParentII = null;\n                am[5] = toParentII;\n                return am;\n              });\n\n              let bestMode = null;\n              let filteredMoves = availMoves.filter(am => this.canMove(itemInfo, am[1], am[0], am[3], am[4], am[5], canMoveFn));\n              if (canMoveBeforeAfterGroup && filteredMoves.length == 0 && altMoves.length > 0) {\n                filteredMoves = altMoves.filter(am => this.canMove(itemInfo, am[1], am[0], am[3], am[4], am[5], canMoveFn));\n              }\n              const levs = filteredMoves.map(am => am[2]);\n              const curLev = itemInfo.lev;\n              const allLevs = levs.concat(curLev);\n              let closestDragLev = null;\n              if (allLevs.indexOf(dragLev) != -1)\n                closestDragLev = dragLev;\n              else if (dragLev > Math.max(...allLevs))\n                closestDragLev = Math.max(...allLevs);\n              else if (dragLev < Math.min(...allLevs))\n                closestDragLev = Math.min(...allLevs);\n              bestMode = filteredMoves.find(am => am[2] == closestDragLev);\n              if (!isSamePos && !bestMode && filteredMoves.length)\n                bestMode = filteredMoves[0];\n              moveInfo = bestMode;\n            }\n          }\n        }\n      }\n\n      if (moveInfo) {\n        this.move(itemInfo, moveInfo[1], moveInfo[0], moveInfo[3]);\n\n        // logger.log(\"DRAG-N-DROP\", JSON.stringify({\n        //   dragRect,\n        //   plhRect,\n        //   treeRect,\n        //   hovRect,\n        //   startMousePos: dragInfo.startMousePos,\n        //   mousePos: dragInfo.mousePos,\n        // }));\n        return true;\n      }\n\n      return false;\n    }\n\n    canMove (fromII, toII, placement, fromCaseII, toCaseII, toParentII, canMoveFn) {\n      if (!fromII || !toII)\n        return false;\n      if (fromII.id === toII.id)\n        return false;\n\n      const { canRegroup, canRegroupCases, maxNesting, maxNumberOfRules, canLeaveEmptyCase } = this.props.config.settings;\n      const newLev = toParentII ? toParentII.lev + 1 : toII.lev;\n      const isBeforeAfter = placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER;\n      const isPend = placement == constants.PLACEMENT_PREPEND || placement == constants.PLACEMENT_APPEND;\n      const isLev1 = isBeforeAfter && toII.lev == 1 || isPend && toII.lev == 0;\n      const isParentChange = fromII.parent != toII.parent;\n      const isStructChange = isPend || isParentChange;\n      // can't move `case_group` anywhere but before/after anoter `case_group`\n      const isForbiddenStructChange = fromII.type == \"case_group\" && !isLev1\n        // can't restruct `rule_group`\n        || fromII.parentType == \"rule_group\" || toII.type == \"rule_group\" || toII.parentType == \"rule_group\" \n        // only `case_group` can be placed under `switch_group`\n        || fromII.type != \"case_group\" && toII.type == \"case_group\" && isBeforeAfter\n        || fromII.type != \"case_group\" && toII.type == \"switch_group\"\n        // can't move rule/group to another case\n        || !canRegroupCases && fromII.caseId != toII.caseId;\n      const isLockedChange = toII.isLocked || fromII.isLocked || toParentII && toParentII.isLocked;\n\n      if (maxNesting && newLev > maxNesting)\n        return false;\n      \n      if (isStructChange && (!canRegroup || isForbiddenStructChange || isLockedChange))\n        return false;\n      \n      if (fromII.type != \"case_group\" && fromII.caseId != toII.caseId) {\n        const isLastFromCase = fromCaseII ? fromCaseII._height == 2 : false;\n        const newRulesInTargetCase = toCaseII ? toCaseII.leafsCount + 1 : 0;\n        if (maxNumberOfRules && newRulesInTargetCase > maxNumberOfRules)\n          return false;\n        if (isLastFromCase && !canLeaveEmptyCase)\n          return false;\n      }\n\n      if (fromII.type == \"case_group\" && (\n        fromII.isDefaultCase || toII.isDefaultCase\n        || toII.type == \"switch_group\" && placement == constants.PLACEMENT_APPEND\n      )) {\n        // leave default case alone\n        return false;\n      }\n\n      let res = true;\n      if (canMoveFn) {\n        res = canMoveFn(fromII.node.toJS(), toII.node.toJS(), placement, toParentII ? toParentII.node.toJS() : null);\n      }\n      return res;\n    }\n\n    move (fromII, toII, placement, toParentII) {\n      if (!this._isUsingLegacyReactDomRender) {\n        _isReorderingTree = true;\n      }\n      //logger.log(\"move\", fromII, toII, placement, toParentII);\n      this.props.actions.moveItem(fromII.path, toII.path, placement);\n    }\n\n    render() {\n      return <Builder\n        {...this.props}\n        onDragStart={this.onDragStart}\n      />;\n    }\n  };\n\n\nexport default (Builder, CanMoveFn = null) => {\n  const ConnectedSortableContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n        dragStart: state.dragStart,\n        mousePos: state.mousePos,\n      };\n    }, {\n      setDragStart: actions.drag.setDragStart,\n      setDragProgress: actions.drag.setDragProgress,\n      setDragEnd: actions.drag.setDragEnd,\n    },\n    null,\n    {\n      context\n    }\n  )(createSortableContainer(Builder, CanMoveFn));\n  ConnectedSortableContainer.displayName = \"ConnectedSortableContainer\";\n\n  return ConnectedSortableContainer;\n};\n\nexport { _isReorderingTree };\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { _isReorderingTree } from \"./SortableContainer\";\nimport classNames from \"classnames\";\n\n\nexport default (className) => (GroupOrRule) =>\n  class Draggable extends PureComponent {\n    static propTypes = {\n      isDraggingTempo: PropTypes.bool,\n      isDraggingMe: PropTypes.bool,\n      onDragStart: PropTypes.func,\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.wrapper = React.createRef();\n    }\n\n    handleDraggerMouseDown = (e) => {\n      var nodeId = this.props.id;\n      var dom = this.wrapper.current;\n        \n      if (this.props.onDragStart) {\n        this.props.onDragStart(nodeId, dom, e);\n      }\n    };\n\n    render () {\n      const {\n        isDraggingTempo,\n        isDraggingMe,\n        dragging,\n        ...otherProps\n      } = this.props;\n      const {\n        isTrueLocked,\n      } = otherProps;\n\n      let styles = {};\n      if (isDraggingMe && isDraggingTempo) {\n        if (_isReorderingTree) {\n          // don't apply old styles for dragging tempo during reorder\n        } else {\n          styles = {\n            top: dragging.y,\n            left: dragging.x,\n            width: dragging.w\n          };\n        }\n      }\n\n      const cn = classNames(className, \"group-or-rule\",\n        isDraggingMe && isDraggingTempo ? \"qb-draggable\" : null,\n        isDraggingMe && !isDraggingTempo ? \"qb-placeholder\" : null,\n        isTrueLocked ? \"locked\" : null\n      );\n\n      return (\n        <div\n          className={cn}\n          style={styles}\n          ref={this.wrapper}\n          data-id={this.props.id}\n        >\n          <GroupOrRule\n            handleDraggerMouseDown={this.handleDraggerMouseDown}\n            isDraggingMe={isDraggingMe}\n            isDraggingTempo={isDraggingTempo}\n            {...otherProps}\n          />\n        </div>\n      );\n    }\n\n  };\n","import React, { PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport keys from \"lodash/keys\";\nimport pickBy from \"lodash/pickBy\";\nimport mapValues from \"lodash/mapValues\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nconst {getFieldConfig, getOperatorConfig} = Utils.ConfigUtils;\n\n\nexport default class Operator extends PureComponent {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    selectedField: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    readonly: PropTypes.bool,\n    //actions\n    setOperator: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"config\", \"selectedField\", \"selectedOperator\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({config, selectedField, selectedOperator}) {\n    const fieldConfig = getFieldConfig(config, selectedField);\n    const operators = fieldConfig?.operators;\n    const operatorOptions \n      = mapValues(\n        pickBy(\n          config.operators, \n          (item, key) => operators?.indexOf(key) !== -1\n        ), \n        (_opts, op) => getOperatorConfig(config, op, selectedField)\n      );\n      \n    const items = this.buildOptions(config, operatorOptions, operators);\n\n    const isOpSelected = !!selectedOperator;\n    const currOp = isOpSelected ? operatorOptions[selectedOperator] : null;\n    const selectedOpts = currOp || {};\n    const placeholder = this.props.config.settings.operatorPlaceholder;\n    const selectedKey = selectedOperator;\n    const selectedKeys = isOpSelected ? [selectedKey] : null;\n    const selectedPath = selectedKeys;\n    const selectedLabel = selectedOpts.label;\n    \n    return {\n      placeholder, items,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, fieldConfig\n    };\n  }\n\n  buildOptions(config, fields, ops) {\n    if (!fields || !ops)\n      return null;\n\n    return keys(fields).sort((a, b) => (ops.indexOf(a) - ops.indexOf(b))).map(fieldKey => {\n      const field = fields[fieldKey];\n      const label = field.label;\n      return {\n        key: fieldKey,\n        path: fieldKey,\n        label,\n      };\n    });\n  }\n\n  render() {\n    const {config, customProps, setOperator, readonly, id, groupId} = this.props;\n    const {renderOperator} = config.settings;\n    const renderProps = {\n      id,\n      groupId,\n      config, \n      customProps, \n      readonly,\n      setField: setOperator,\n      ...this.meta\n    };\n    if (!renderProps.items)\n      return null;\n    return renderOperator(renderProps);\n  }\n\n\n}\n","import React from \"react\";\n\nconst Col = ({children, ...props}) => (<div {...props}>{children}</div>);\n\nconst dummyFn = () => {};\n\nconst DragIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"gray\" width=\"18px\" height=\"18px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"/>\n  </svg>\n);\n\nconst ConfirmFn = (Cmp) => (\n  props => {\n    const {useConfirm} = props.config.settings;\n    const confirmFn = useConfirm ? useConfirm() : null;\n    return <Cmp {...props} confirmFn={confirmFn} />;\n  }\n);\n\nexport {\n  Col, dummyFn, DragIcon, ConfirmFn\n};\n","import React, { PureComponent } from \"react\";\nimport Operator from \"./Operator\";\nimport {Col} from \"../utils\";\n\n\nexport default class OperatorWrapper extends PureComponent {\n  render() {\n    const {\n      config, selectedField, selectedOperator, setOperator, \n      selectedFieldPartsLabels, showOperator, showOperatorLabel, selectedFieldWidgetConfig, readonly, id, groupId\n    } = this.props;\n    const operator = showOperator\n            && <Col key={\"operators-for-\"+(selectedFieldPartsLabels || []).join(\"_\")} className=\"rule--operator\">\n              { config.settings.showLabels\n                    && <label className=\"rule--label\">{config.settings.operatorLabel}</label>\n              }\n              <Operator\n                key=\"operator\"\n                config={config}\n                selectedField={selectedField}\n                selectedOperator={selectedOperator}\n                setOperator={setOperator}\n                readonly={readonly}\n                id={id}\n                groupId={groupId}\n              />\n            </Col>;\n    const hiddenOperator = showOperatorLabel\n            && <Col key={\"operators-for-\"+(selectedFieldPartsLabels || []).join(\"_\")} className=\"rule--operator\">\n              <div className=\"rule--operator\">\n                {config.settings.showLabels\n                  ? <label className=\"rule--label\">&nbsp;</label>\n                  : null}\n                <span>{selectedFieldWidgetConfig.operatorInlineLabel}</span>\n              </div>\n            </Col>;\n    return [\n      operator,\n      hiddenOperator\n    ];\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst {getFieldPath, getFieldPathLabels} = Utils.RuleUtils;\nconst {getFieldConfig} = Utils.ConfigUtils;\n\n\nexport default class Field extends PureComponent {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    selectedField: PropTypes.string,\n    parentField: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    //actions\n    setField: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"selectedField\", \"config\", \"parentField\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({selectedField, config, parentField}) {\n    const selectedKey = selectedField;\n    const {maxLabelsLength, fieldSeparatorDisplay, fieldPlaceholder, fieldSeparator} = config.settings;\n    const isFieldSelected = !!selectedField;\n    const placeholder = !isFieldSelected ? truncateString(fieldPlaceholder, maxLabelsLength) : null;\n    const currField = isFieldSelected ? getFieldConfig(config, selectedKey) : null;\n    const selectedOpts = currField || {};\n\n    const selectedKeys = getFieldPath(selectedKey, config);\n    const selectedPath = getFieldPath(selectedKey, config, true);\n    const selectedLabel = this.getFieldLabel(currField, selectedKey, config);\n    const partsLabels = getFieldPathLabels(selectedKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel || parentField)\n      selectedFullLabel = null;\n    const selectedAltLabel = selectedOpts.label2;\n\n    const parentFieldPath = typeof parentField == \"string\" ? parentField.split(fieldSeparator) : parentField;\n    const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n    const sourceFields = parentField ? parentFieldConfig && parentFieldConfig.subfields : config.fields;\n    const items = this.buildOptions(parentFieldPath, config, sourceFields, parentFieldPath);\n\n    return {\n      placeholder, items, parentField,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n    };\n  }\n\n  getFieldLabel(fieldOpts, fieldKey, config) {\n    if (!fieldKey) return null;\n    let fieldSeparator = config.settings.fieldSeparator;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let fieldParts = Array.isArray(fieldKey) ? fieldKey : fieldKey.split(fieldSeparator);\n    let label = fieldOpts && fieldOpts.label || last(fieldParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  buildOptions(parentFieldPath, config, fields, path = null, optGroupLabel = null) {\n    if (!fields)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    return keys(fields).map(fieldKey => {\n      const field = fields[fieldKey];\n      const label = this.getFieldLabel(field, fieldKey, config);\n      const partsLabels = getFieldPathLabels(prefix+fieldKey, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label || parentFieldPath)\n        fullLabel = null;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n      const subpath = (path ? path : []).concat(fieldKey);\n      const disabled = field.disabled;\n            \n      if (field.hideForSelect)\n        return undefined;\n\n      if (field.type == \"!struct\") {\n        return {\n          disabled,\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          items: this.buildOptions(parentFieldPath, config, field.subfields, subpath, label)\n        };\n      } else {\n        return {\n          disabled,\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          grouplabel: optGroupLabel\n        };\n      }\n    }).filter(o => !!o);\n  }\n\n  render() {\n    const {config, customProps, setField, readonly, id, groupId} = this.props;\n    const {renderField} = config.settings;\n    const renderProps = {\n      id,\n      groupId,\n      config, \n      customProps, \n      readonly,\n      setField,\n      ...this.meta\n    };\n    return renderField(renderProps);\n  }\n\n}\n","import React, { PureComponent } from \"react\";\nimport Field from \"./Field\";\nimport {Col} from \"../utils\";\n\n\nexport default class FieldWrapper extends PureComponent {\n  render() {\n    const {config, selectedField, setField, parentField, classname, readonly, id, groupId} = this.props;\n    return (\n      <Col className={classname}>\n        { config.settings.showLabels\n                    && <label className=\"rule--label\">{config.settings.fieldLabel}</label>\n        }\n        <Field\n          config={config}\n          selectedField={selectedField}\n          parentField={parentField}\n          setField={setField}\n          customProps={config.settings.customFieldSelectProps}\n          readonly={readonly}\n          id={id}\n          groupId={groupId}\n        />\n      </Col>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { getTitleInListValues } = Utils.ListUtils;\n\nexport default ({\n  delta, isFuncArg, valueSrc,\n  value: immValue, valueError: immValueError, asyncListValues,\n  isSpecialRange, fieldDefinition,\n  widget, widgetDefinition, widgetValueLabel, valueLabels, textSeparators, setValueHandler,\n  config, field, operator, readonly, parentField, parentFuncs, id, groupId\n}) => {\n  const {factory: widgetFactory, ...fieldWidgetProps} = widgetDefinition;\n  const isConst = isFuncArg && fieldDefinition.valueSources && fieldDefinition.valueSources.length == 1 && fieldDefinition.valueSources[0] == \"const\";\n  const defaultValue = fieldDefinition.defaultValue;\n\n  if (!widgetFactory) {\n    return \"?\";\n  }\n    \n  let value = isSpecialRange \n    ? [immValue.get(0), immValue.get(1)] \n    : (immValue ? immValue.get(delta) : undefined);\n  const valueError = immValueError && (isSpecialRange \n    ? [immValueError.get(0), immValueError.get(1)]\n    : immValueError.get(delta)\n  ) || null;\n  if (isSpecialRange && value[0] === undefined && value[1] === undefined)\n    value = undefined;\n  const {fieldSettings} = fieldDefinition || {};\n  const widgetProps = Object.assign({}, fieldWidgetProps, fieldSettings, {\n    config: config,\n    field: field,\n    parentField: parentField,\n    parentFuncs: parentFuncs,\n    fieldDefinition: fieldDefinition,\n    operator: operator,\n    delta: delta,\n    isSpecialRange: isSpecialRange,\n    isFuncArg: isFuncArg,\n    value: value,\n    valueError: valueError,\n    label: widgetValueLabel.label,\n    placeholder: widgetValueLabel.placeholder,\n    placeholders: valueLabels ? valueLabels.placeholder : null,\n    textSeparators: textSeparators,\n    setValue: setValueHandler,\n    readonly: readonly,\n    asyncListValues: asyncListValues,\n    id, groupId\n  });\n    \n  if (widget == \"field\") {\n    //\n  }\n\n  if (isConst && defaultValue) {\n    if (typeof defaultValue == \"boolean\") {\n      return defaultValue ? (widgetProps.labelYes || \"YES\") : (widgetProps.labelNo || \"NO\");\n    } else if (fieldSettings.listValues) {\n      if (Array.isArray(defaultValue))\n        return defaultValue.map(v => getTitleInListValues(fieldSettings.listValues, v) || v).join(\", \");\n      else\n        return (getTitleInListValues(fieldSettings.listValues, defaultValue) || defaultValue);  \n    }\n    return \"\"+defaultValue;\n  }\n    \n  return widgetFactory(widgetProps);\n};\n","import React, { PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport range from \"lodash/range\";\nimport {defaultValue} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport pick from \"lodash/pick\";\nimport WidgetFactory from \"./WidgetFactory\";\nimport {Col} from \"../utils\";\nconst {getFieldConfig, getOperatorConfig, getFieldWidgetConfig} = Utils.ConfigUtils;\nconst {getValueSourcesForFieldOp, getWidgetsForFieldOp, getWidgetForFieldOp, getValueLabel} = Utils.RuleUtils;\nconst { createListFromArray } = Utils.DefaultUtils;\n\nconst funcArgDummyOpDef = {cardinality: 1};\n\nexport default class Widget extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    value: PropTypes.any, //instanceOf(Immutable.List)\n    valueSrc: PropTypes.any, //instanceOf(Immutable.List)\n    valueError: PropTypes.any,\n    field: PropTypes.string,\n    operator: PropTypes.string,\n    readonly: PropTypes.bool,\n    asyncListValues: PropTypes.array,\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    //actions\n    setValue: PropTypes.func,\n    setValueSrc: PropTypes.func,\n    // for isFuncArg\n    isFuncArg: PropTypes.bool,\n    fieldFunc: PropTypes.string,\n    fieldArg: PropTypes.string,\n    leftField: PropTypes.string,\n    // for RuleGroupExt\n    isForRuleGruop: PropTypes.bool,\n    parentField: PropTypes.string,\n    // for func in func\n    parentFuncs: PropTypes.array,\n    // for case_value\n    isCaseValue: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\n      \"config\", \"field\", \"fieldFunc\", \"fieldArg\", \"leftField\", \"operator\", \"valueSrc\", \"isFuncArg\", \"asyncListValues\"\n    ];\n    const needUpdateMeta = !this.meta \n          || keysForMeta\n            .map(k => (\n              nextProps[k] !== prevProps[k] \n                  //tip: for isFuncArg we need to wrap value in Imm list\n                  || k == \"isFuncArg\" && nextProps[\"isFuncArg\"] && nextProps[\"value\"] !== prevProps[\"value\"])\n            )\n            .filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  _setValue = (isSpecialRange, delta, widgetType, value, asyncListValues, __isInternal) => {\n    if (isSpecialRange && Array.isArray(value)) {\n      const oldRange = [this.props.value.get(0), this.props.value.get(1)];\n      if (oldRange[0] != value[0])\n        this.props.setValue(0, value[0], widgetType, asyncListValues, __isInternal);\n      if (oldRange[1] != value[1])\n        this.props.setValue(1, value[1], widgetType, asyncListValues, __isInternal);\n    } else {\n      this.props.setValue(delta, value, widgetType, asyncListValues, __isInternal);\n    }\n  };\n\n  _onChangeValueSrc = (delta, srcKey) => {\n    this.props.setValueSrc(delta, srcKey);\n  };\n\n  getMeta({\n    config, field: simpleField, fieldFunc, fieldArg, operator, valueSrc: valueSrcs, value: values, \n    isForRuleGruop, isCaseValue, isFuncArg, leftField, asyncListValues\n  }) {\n    const field = isFuncArg ? {func: fieldFunc, arg: fieldArg} : simpleField;\n    let iValueSrcs = valueSrcs;\n    let iValues = values;\n    if (isFuncArg || isForRuleGruop || isCaseValue) {\n      iValueSrcs = createListFromArray([valueSrcs]);\n      iValues = createListFromArray([values]);\n    }\n\n    const fieldDefinition = getFieldConfig(config, field);\n    const defaultWidget = getWidgetForFieldOp(config, field, operator);\n    const _widgets = getWidgetsForFieldOp(config, field, operator);\n    const operatorDefinition = isFuncArg ? funcArgDummyOpDef : getOperatorConfig(config, operator, field);\n    if ((fieldDefinition == null || operatorDefinition == null) && !isCaseValue) {\n      return null;\n    }\n    const isSpecialRange = operatorDefinition?.isSpecialRange;\n    const isSpecialRangeForSrcField = isSpecialRange && (iValueSrcs.get(0) == \"field\" || iValueSrcs.get(1) == \"field\");\n    const isTrueSpecialRange = isSpecialRange && !isSpecialRangeForSrcField;\n    const cardinality = isTrueSpecialRange ? 1 : defaultValue(operatorDefinition?.cardinality, 1);\n    if (cardinality === 0) {\n      return null;\n    }\n\n    const valueSources = getValueSourcesForFieldOp(config, field, operator, fieldDefinition, isFuncArg ? leftField : null);\n\n    const widgets = range(0, cardinality).map(delta => {\n      const valueSrc = iValueSrcs.get(delta) || null;\n      let widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      let widgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc);\n      if (isSpecialRangeForSrcField) {\n        widget = widgetDefinition.singleWidget;\n        widgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc);\n      }\n      const widgetType = widgetDefinition?.type;\n      const valueLabel = getValueLabel(config, field, operator, delta, valueSrc, isTrueSpecialRange);\n      const widgetValueLabel = getValueLabel(config, field, operator, delta, null, isTrueSpecialRange);\n      const sepText = operatorDefinition?.textSeparators ? operatorDefinition?.textSeparators[delta] : null;\n      const setValueSrcHandler = this._onChangeValueSrc.bind(this, delta);\n\n      let valueLabels = null;\n      let textSeparators = null;\n      if (isSpecialRange) {\n        valueLabels = [\n          getValueLabel(config, field, operator, 0),\n          getValueLabel(config, field, operator, 1)\n        ];\n        valueLabels = {\n          placeholder: [ valueLabels[0].placeholder, valueLabels[1].placeholder ],\n          label: [ valueLabels[0].label, valueLabels[1].label ],\n        };\n        textSeparators = operatorDefinition?.textSeparators;\n      }\n\n      const setValueHandler = this._setValue.bind(this, isSpecialRange, delta, widgetType);\n\n      return {\n        valueSrc,\n        valueLabel,\n        widget,\n        sepText,\n        setValueSrcHandler,\n        widgetDefinition,\n        widgetValueLabel,\n        valueLabels,\n        textSeparators,\n        setValueHandler\n      };\n    });\n      \n    return {\n      defaultWidget,\n      fieldDefinition,\n      operatorDefinition,\n      isSpecialRange: isTrueSpecialRange,\n      cardinality,\n      valueSources,\n      widgets,\n      iValues, //correct for isFuncArg\n      aField: field, //correct for isFuncArg\n      asyncListValues,\n    };\n  }\n\n  renderWidget = (delta, meta, props) => {\n    const {config, isFuncArg, leftField, operator, value: values, valueError, readonly, parentField, parentFuncs, id, groupId} = props;\n    const {settings} = config;\n    const { widgets, iValues, aField } = meta;\n    const value = isFuncArg ? iValues : values;\n    const field = isFuncArg ? leftField : aField;\n    const {valueSrc, valueLabel} = widgets[delta];\n \n    const widgetLabel = settings.showLabels\n      ? <label className=\"rule--label\">{valueLabel.label}</label>\n      : null;\n\n    return (\n      <div key={\"widget-\"+field+\"-\"+delta} className=\"widget--widget\">\n        {valueSrc == \"func\" ? null : widgetLabel}\n        <WidgetFactory\n          id={id}\n          groupId={groupId}\n          valueSrc={valueSrc}\n          delta={delta}\n          value={value}\n          valueError={valueError}\n          isFuncArg={isFuncArg}\n          {...pick(meta, [\"isSpecialRange\", \"fieldDefinition\", \"asyncListValues\"])}\n          {...pick(widgets[delta], [\"widget\", \"widgetDefinition\", \"widgetValueLabel\", \"valueLabels\", \"textSeparators\", \"setValueHandler\"])}\n          config={config}\n          field={field}\n          parentField={parentField}\n          parentFuncs={parentFuncs}\n          operator={operator}\n          readonly={readonly}\n        />\n      </div>\n    );\n  };\n\n  renderValueSources = (delta, meta, props) => {\n    const {config, isFuncArg, leftField, operator, readonly} = props;\n    const {settings} = config;\n    const { valueSources, widgets, aField } = meta;\n    const field = isFuncArg ? leftField : aField;\n    const {valueSrc, setValueSrcHandler} = widgets[delta];\n    const {valueSourcesInfo, renderValueSources: ValueSources} = settings;\n    const valueSourcesOptions = valueSources.map(srcKey => [srcKey, {\n      label: valueSourcesInfo[srcKey].label\n    }]);\n\n    const sourceLabel = settings.showLabels\n      ? <label className=\"rule--label\">&nbsp;</label>\n      : null;\n\n    return valueSources.length > 1 && !readonly\n      && <div key={\"valuesrc-\"+field+\"-\"+delta} className=\"widget--valuesrc\">\n        {sourceLabel}\n        <ValueSources\n          key={\"valuesrc-\"+delta}\n          delta={delta}\n          valueSources={valueSourcesOptions}\n          valueSrc={valueSrc}\n          config={config}\n          field={field}\n          operator={operator}\n          setValueSrc={setValueSrcHandler}\n          readonly={readonly}\n          title={settings.valueSourcesPopupTitle}\n        />\n      </div>;\n  };\n\n  renderSep = (delta, meta, props) => {\n    const {config} = props;\n    const {widgets} = meta;\n    const {settings} = config;\n    const {sepText} = widgets[delta];\n\n    const sepLabel = settings.showLabels\n      ? <label className=\"rule--label\">&nbsp;</label>\n      : null;\n\n    return sepText\n      && <div key={\"widget-separators-\"+delta} className=\"widget--sep\" >\n        {sepLabel}\n        <span>{sepText}</span>\n      </div>;\n  };\n\n  renderWidgetDelta = (delta) => {\n    const sep = this.renderSep(delta, this.meta, this.props);\n    const sources = this.renderValueSources(delta, this.meta, this.props);\n    const widgetCmp = this.renderWidget(delta, this.meta, this.props);\n\n    return [\n      sep,\n      sources,\n      widgetCmp,\n    ];\n  };\n\n  render() {\n    if (!this.meta) return null;\n    const { defaultWidget, cardinality } = this.meta;\n    if (!defaultWidget) return null;\n    const name = defaultWidget;\n\n    return (\n      <Col\n        className={`rule--widget rule--widget--${name.toUpperCase()}`}\n        key={\"widget-col-\"+name}\n      >\n        {range(0, cardinality).map(this.renderWidgetDelta)}\n      </Col>\n    );\n  }\n\n}\n","import React, { PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nconst {getOperatorConfig} = Utils.ConfigUtils;\n\nexport default class OperatorOptions extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    operatorOptions: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    selectedField: PropTypes.string.isRequired,\n    selectedOperator: PropTypes.string.isRequired,\n    readonly: PropTypes.bool,\n    //actions\n    setOperatorOption: PropTypes.func.isRequired,\n  };\n\n  render() {\n    if (!this.props.selectedOperator)\n      return null;\n    const operatorDefinitions = getOperatorConfig(this.props.config, this.props.selectedOperator, this.props.selectedField);\n    if (typeof operatorDefinitions.options === \"undefined\") {\n      return null;\n    }\n\n    const { factory: optionsFactory, ...basicOptionsProps } = operatorDefinitions.options;\n    const optionsProps = Object.assign({}, basicOptionsProps, {\n      config: this.props.config,\n      field: this.props.selectedField,\n      operator: this.props.selectedOperator,\n      options: this.props.operatorOptions,\n      setOption: this.props.setOperatorOption,\n      readonly: this.props.readonly,\n    });\n    const optionsCmp = optionsFactory(optionsProps);\n    const name = this.props.selectedOperator;\n\n    return (\n      <div className={`rule--operator rule--operator--${name.toUpperCase()}`}>\n        {optionsCmp}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport RuleContainer from \"../containers/RuleContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport OperatorWrapper from \"../rule/OperatorWrapper\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport Widget from \"../rule/Widget\";\nimport OperatorOptions from \"../rule/OperatorOptions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, DragIcon, dummyFn, ConfirmFn} from \"../utils\";\nimport classNames from \"classnames\";\nconst {getFieldConfig, getOperatorConfig, getFieldWidgetConfig} = Utils.ConfigUtils;\nconst {getFieldPathLabels} = Utils.RuleUtils;\n\n\nclass Rule extends PureComponent {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    selectedField: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    operatorOptions: PropTypes.object,\n    config: PropTypes.object.isRequired,\n    value: PropTypes.any, //depends on widget\n    valueSrc: PropTypes.any,\n    asyncListValues: PropTypes.array,\n    isDraggingMe: PropTypes.bool,\n    isDraggingTempo: PropTypes.bool,\n    parentField: PropTypes.string, //from RuleGroup\n    valueError: PropTypes.any,\n    isLocked: PropTypes.bool,\n    isTrueLocked: PropTypes.bool,\n    //path: PropTypes.instanceOf(Immutable.List),\n    //actions\n    handleDraggerMouseDown: PropTypes.func,\n    setField: PropTypes.func,\n    setOperator: PropTypes.func,\n    setOperatorOption: PropTypes.func,\n    setLock: PropTypes.func,\n    removeSelf: PropTypes.func,\n    setValue: PropTypes.func,\n    setValueSrc: PropTypes.func,\n    reordableNodesCnt: PropTypes.number,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.removeSelf = this.removeSelf.bind(this);\n    this.setLock = this.setLock.bind(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"selectedField\", \"selectedOperator\", \"config\", \"reordableNodesCnt\", \"isLocked\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({selectedField, selectedOperator, config, reordableNodesCnt, isLocked}) {\n    const selectedFieldPartsLabels = getFieldPathLabels(selectedField, config);\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    const isSelectedGroup = selectedFieldConfig && selectedFieldConfig.type == \"!struct\";\n    const isFieldAndOpSelected = selectedField && selectedOperator && !isSelectedGroup;\n    const selectedOperatorConfig = getOperatorConfig(config, selectedOperator, selectedField);\n    const selectedOperatorHasOptions = selectedOperatorConfig && selectedOperatorConfig.options != null;\n    const selectedFieldWidgetConfig = getFieldWidgetConfig(config, selectedField, selectedOperator) || {};\n    const hideOperator = selectedFieldWidgetConfig.hideOperator;\n\n    const showDragIcon = config.settings.canReorder && reordableNodesCnt > 1 && !isLocked;\n    const showOperator = selectedField && !hideOperator;\n    const showOperatorLabel = selectedField && hideOperator && selectedFieldWidgetConfig.operatorInlineLabel;\n    const showWidget = isFieldAndOpSelected;\n    const showOperatorOptions = isFieldAndOpSelected && selectedOperatorHasOptions;\n\n    return {\n      selectedFieldPartsLabels, selectedFieldWidgetConfig,\n      showDragIcon, showOperator, showOperatorLabel, showWidget, showOperatorOptions\n    };\n  }\n\n  setLock(lock) {\n    this.props.setLock(lock);\n  }\n\n  removeSelf() {\n    const {confirmFn} = this.props;\n    const {renderConfirm, removeRuleConfirmOptions: confirmOptions} = this.props.config.settings;\n    const doRemove = () => {\n      this.props.removeSelf();\n    };\n    if (confirmOptions && !this.isEmptyCurrentRule()) {\n      renderConfirm({...confirmOptions,\n        onOk: doRemove,\n        onCancel: null,\n        confirmFn: confirmFn\n      });\n    } else {\n      doRemove();\n    }\n  }\n\n  isEmptyCurrentRule() {\n    return !(\n      this.props.selectedField !== null\n            && this.props.selectedOperator !== null\n            && this.props.value.filter((val) => val !== undefined).size > 0\n    );\n  }\n\n  renderField() {\n    const {config, isLocked} = this.props;\n    const { immutableFieldsMode } = config.settings;\n\n    return <FieldWrapper\n      key=\"field\"\n      classname={\"rule--field\"}\n      config={config}\n      selectedField={this.props.selectedField}\n      setField={!immutableFieldsMode ? this.props.setField : dummyFn}\n      parentField={this.props.parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  renderOperator () {\n    const {config, isLocked} = this.props;\n    const {\n      selectedFieldPartsLabels, selectedFieldWidgetConfig, showOperator, showOperatorLabel\n    } = this.meta;\n    const { immutableOpsMode } = config.settings;\n\n    return <OperatorWrapper\n      key=\"operator\"\n      config={config}\n      selectedField={this.props.selectedField}\n      selectedOperator={this.props.selectedOperator}\n      setOperator={!immutableOpsMode ? this.props.setOperator : dummyFn}\n      selectedFieldPartsLabels={selectedFieldPartsLabels}\n      showOperator={showOperator}\n      showOperatorLabel={showOperatorLabel}\n      selectedFieldWidgetConfig={selectedFieldWidgetConfig}\n      readonly={immutableOpsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  renderWidget() {\n    const {config, valueError, isLocked} = this.props;\n    const { showWidget } = this.meta;\n    const { immutableValuesMode } = config.settings;\n    if (!showWidget) return null;\n\n    const widget = <Widget\n      key=\"values\"\n      field={this.props.selectedField}\n      parentField={this.props.parentField}\n      operator={this.props.selectedOperator}\n      value={this.props.value}\n      valueSrc={this.props.valueSrc}\n      asyncListValues={this.props.asyncListValues}\n      valueError={valueError}\n      config={config}\n      setValue={!immutableValuesMode ? this.props.setValue : dummyFn}\n      setValueSrc={!immutableValuesMode ? this.props.setValueSrc : dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n\n    return (\n      <Col key={\"widget-for-\"+this.props.selectedOperator} className=\"rule--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderOperatorOptions() {\n    const {config} = this.props;\n    const { showOperatorOptions } = this.meta;\n    const { immutableOpsMode, immutableValuesMode } = config.settings;\n    if (!showOperatorOptions) return null;\n\n    const opOpts = <OperatorOptions\n      key=\"operatorOptions\"\n      selectedField={this.props.selectedField}\n      selectedOperator={this.props.selectedOperator}\n      operatorOptions={this.props.operatorOptions}\n      setOperatorOption={!immutableOpsMode ? this.props.setOperatorOption : dummyFn}\n      config={config}\n      readonly={immutableValuesMode}\n    />;\n\n    return (\n      <Col key={\"op-options-for-\"+this.props.selectedOperator} className=\"rule--operator-options\">\n        {opOpts}\n      </Col>\n    );\n  }\n\n  renderBeforeWidget() {\n    const {config} = this.props;\n    const { renderBeforeWidget } = config.settings;\n    return renderBeforeWidget \n        && <Col key={\"before-widget-for-\" +this.props.selectedOperator} className=\"rule--before-widget\">\n          {typeof renderBeforeWidget === \"function\" ? renderBeforeWidget(this.props) : renderBeforeWidget}\n        </Col>;\n  }\n\n  renderAfterWidget() {\n    const {config} = this.props;\n    const { renderAfterWidget } = config.settings;\n    return renderAfterWidget \n        && <Col key={\"after-widget-for-\" +this.props.selectedOperator} className=\"rule--after-widget\">\n          {typeof renderAfterWidget === \"function\" ? renderAfterWidget(this.props) : renderAfterWidget}\n        </Col>;\n  }\n\n  renderError() {\n    const {config, valueError} = this.props;\n    const { renderRuleError, showErrorMessage } = config.settings;\n    const oneValueError = valueError && valueError.toArray().filter(e => !!e).shift() || null;\n    return showErrorMessage && oneValueError \n        && <div className=\"rule--error\">\n          {renderRuleError ? renderRuleError({error: oneValueError}) : oneValueError}\n        </div>;\n  }\n\n  renderDrag() {\n    const { showDragIcon } = this.meta;\n\n    return showDragIcon\n        && <span\n          key=\"rule-drag-icon\"\n          className={\"qb-drag-handler rule--drag-handler\"}\n          onMouseDown={this.props.handleDraggerMouseDown}\n        ><DragIcon /> </span>;\n  }\n\n  renderDel() {\n    const {config, isLocked} = this.props;\n    const {\n      deleteLabel, \n      immutableGroupsMode, \n      renderButton: Btn,\n      canDeleteLocked\n    } = config.settings;\n\n    return !immutableGroupsMode && (!isLocked || isLocked && canDeleteLocked) && (\n      <Btn \n        type=\"delRule\" onClick={this.removeSelf} label={deleteLabel} config={config}\n      />\n    );\n  }\n\n  renderLock() {\n    const {config, isLocked, isTrueLocked, id} = this.props;\n    const {\n      lockLabel, lockedLabel, showLock,\n      renderSwitch: Switch\n    } = config.settings;\n      \n    return showLock && !(isLocked && !isTrueLocked) && (\n      <Switch \n        type=\"lock\" id={id} value={isLocked} setValue={this.setLock} label={lockLabel} checkedLabel={lockedLabel} hideLabel={true} config={config}\n      />\n    );\n  }\n\n  render () {\n    const { showOperatorOptions, selectedFieldWidgetConfig } = this.meta;\n    const { valueSrc, value, config } = this.props;\n    const canShrinkValue = valueSrc.first() == \"value\" && !showOperatorOptions && value.size == 1 && selectedFieldWidgetConfig.fullWidth;\n    const { renderButtonGroup: BtnGrp } = config.settings;\n\n    const parts = [\n      this.renderField(),\n      this.renderOperator(),\n      this.renderBeforeWidget(),\n      this.renderWidget(),\n      this.renderAfterWidget(),\n      this.renderOperatorOptions(),\n    ];\n    const body = <div key=\"rule-body\" className={classNames(\"rule--body\", canShrinkValue && \"can--shrink--value\")}>{parts}</div>;\n\n    const error = this.renderError();\n    const drag = this.renderDrag();\n    const lock = this.renderLock();\n    const del = this.renderDel();\n      \n    return (\n      <>\n        {drag}\n        <div className=\"rule--body--wrapper\">\n          {body}{error}\n        </div>\n        <div className=\"rule--header\">\n          <BtnGrp config={config}>\n            {lock}\n            {del}\n          </BtnGrp>\n        </div>\n      </>\n    );\n  }\n\n}\n\n\nexport default RuleContainer(Draggable(\"rule\")(ConfirmFn(Rule)));\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport mapValues from \"lodash/mapValues\";\nimport context from \"../../stores/context\";\nimport {pureShouldComponentUpdate, useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {connect} from \"react-redux\";\nconst {defaultGroupConjunction} = Utils.DefaultUtils;\n\n\nconst createGroupContainer = (Group) => \n  class GroupContainer extends Component {\n    static propTypes = {\n      //tree: PropTypes.instanceOf(Immutable.Map).isRequired,\n      config: PropTypes.object.isRequired,\n      actions: PropTypes.object.isRequired, //{setConjunction: Funciton, removeGroup, addGroup, addRule, ...}\n      path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n      id: PropTypes.string.isRequired,\n      groupId: PropTypes.string,\n      not: PropTypes.bool,\n      conjunction: PropTypes.string,\n      children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n      onDragStart: PropTypes.func,\n      reordableNodesCnt: PropTypes.number,\n      field: PropTypes.string, // for RuleGroup\n      parentField: PropTypes.string, //from RuleGroup\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n      //connected:\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isDraggingTempo: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      useOnPropsChanged(this);\n\n      this.selectedConjunction = this._selectedConjunction(props);\n      this.conjunctionOptions = this._getConjunctionOptions(props);\n      this.dummyFn.isDummyFn = true;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = pureShouldComponentUpdate(this)(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          const draggingId = (nextProps.dragging.id || prevProps.dragging.id);\n          const isDraggingMe = draggingId == nextProps.id;\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (k == \"dragging\" && !isDraggingMe) {\n              changed = false; //dragging another item -> ignore\n            }\n            if (changed) {\n              chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    onPropsChanged(nextProps) {\n      const {config, id, conjunction} = nextProps;\n      const oldConfig = this.props.config;\n      const oldConjunction = this.props.conjunction;\n      if (oldConfig != config || oldConjunction != conjunction) {\n        this.selectedConjunction = this._selectedConjunction(nextProps);\n        this.conjunctionOptions = this._getConjunctionOptions(nextProps);\n      }\n    }\n\n    _getConjunctionOptions (props) {\n      return mapValues(props.config.conjunctions, (item, index) => ({\n        id: `conjunction-${props.id}-${index}`,\n        name: `conjunction[${props.id}]`,\n        key: index,\n        label: item.label,\n        checked: index === this._selectedConjunction(props),\n      }));\n    }\n\n    _selectedConjunction = (props) => {\n      props = props || this.props;\n      return props.conjunction || defaultGroupConjunction(props.config, props.field);\n    };\n\n    setConjunction = (conj = null) => {\n      this.props.actions.setConjunction(this.props.path, conj);\n    };\n\n    setNot = (not = null) => {\n      this.props.actions.setNot(this.props.path, not);\n    };\n\n    setLock = (lock = null) => {\n      this.props.actions.setLock(this.props.path, lock);\n    };\n\n    dummyFn = () => {};\n\n    removeSelf = () => {\n      this.props.actions.removeGroup(this.props.path);\n    };\n\n    addGroup = () => {\n      this.props.actions.addGroup(this.props.path);\n    };\n\n    addCaseGroup = () => {\n      this.props.actions.addCaseGroup(this.props.path);\n    };\n\n    addDefaultCaseGroup = () => {\n      this.props.actions.addDefaultCaseGroup(this.props.path);\n    };\n\n    addRule = () => {\n      this.props.actions.addRule(this.props.path);\n    };\n\n    // for RuleGroup\n    setField = (field) => {\n      this.props.actions.setField(this.props.path, field);\n    };\n\n    // for RuleGroupExt\n    setOperator = (operator) => {\n      this.props.actions.setOperator(this.props.path, operator);\n    };\n\n    setValue = (delta, value, type) => {\n      this.props.actions.setValue(this.props.path, delta, value, type);\n    };\n\n    render() {\n      const isDraggingMe = this.props.dragging.id == this.props.id;\n      const currentNesting = this.props.path.size;\n      const maxNesting = this.props.config.settings.maxNesting;\n      const isInDraggingTempo = !isDraggingMe && this.props.isDraggingTempo;\n\n      // Don't allow nesting further than the maximum configured depth and don't\n      // allow removal of the root group.\n      const allowFurtherNesting = typeof maxNesting === \"undefined\" || currentNesting < maxNesting;\n      const isRoot = currentNesting == 1;\n      return (\n        <div\n          className={\"group-or-rule-container group-container\"}\n          data-id={this.props.id}\n        >\n          {[\n            isDraggingMe ? <Group\n              key={\"dragging\"}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={true}\n              isDraggingTempo={true}\n              dragging={this.props.dragging}\n              isRoot={isRoot}\n              allowFurtherNesting={allowFurtherNesting}\n              conjunctionOptions={this.conjunctionOptions}\n              not={this.props.not}\n              selectedConjunction={this.selectedConjunction}\n              setConjunction={this.dummyFn}\n              setNot={this.dummyFn}\n              setLock={this.dummyFn}\n              removeSelf={this.dummyFn}\n              addGroup={this.dummyFn}\n              addCaseGroup={this.dummyFn}\n              addDefaultCaseGroup={this.dummyFn}\n              addRule={this.dummyFn}\n              setField={this.dummyFn}\n              setOperator={this.dummyFn}\n              setValue={this.dummyFn}\n              value={this.props.value || null}\n              config={this.props.config}\n              children1={this.props.children1}\n              actions={this.props.actions}\n              //tree={this.props.tree}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              selectedField={this.props.field || null}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            /> : null\n            ,\n            <Group\n              key={this.props.id}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={isDraggingMe}\n              isDraggingTempo={isInDraggingTempo}\n              onDragStart={this.props.onDragStart}\n              isRoot={isRoot}\n              allowFurtherNesting={allowFurtherNesting}\n              conjunctionOptions={this.conjunctionOptions}\n              not={this.props.not}\n              selectedConjunction={this.selectedConjunction}\n              setConjunction={isInDraggingTempo ? this.dummyFn : this.setConjunction}\n              setNot={isInDraggingTempo ? this.dummyFn : this.setNot}\n              setLock={isInDraggingTempo ? this.dummyFn : this.setLock}\n              removeSelf={isInDraggingTempo ? this.dummyFn : this.removeSelf}\n              addGroup={isInDraggingTempo ? this.dummyFn : this.addGroup}\n              addCaseGroup={isInDraggingTempo ? this.dummyFn : this.addCaseGroup}\n              addDefaultCaseGroup={isInDraggingTempo ? this.dummyFn : this.addDefaultCaseGroup}\n              addRule={isInDraggingTempo ? this.dummyFn : this.addRule}\n              setField={isInDraggingTempo ? this.dummyFn : this.setField}\n              setOperator={isInDraggingTempo ? this.dummyFn : this.setOperator}\n              setValue={isInDraggingTempo ? this.dummyFn : this.setValue}\n              value={this.props.value || null}\n              config={this.props.config}\n              children1={this.props.children1}\n              actions={this.props.actions}\n              //tree={this.props.tree}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              selectedField={this.props.field || null}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            />\n          ]}\n        </div>\n      );\n    }\n\n  };\n\n\nexport default (Group) => {\n  const ConnectedGroupContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n      };\n    },\n    null,\n    null,\n    {\n      context\n    }\n  )(createGroupContainer(Group));\n  ConnectedGroupContainer.displayName = \"ConnectedGroupContainer\";\n\n  return ConnectedGroupContainer;\n};\n","import React, { PureComponent } from \"react\";\n\nconst groupActionsPositionList = {\n  topLeft: \"group--actions--tl\",\n  topCenter: \"group--actions--tc\",\n  topRight: \"group--actions--tr\",\n  bottomLeft: \"group--actions--bl\",\n  bottomCenter: \"group--actions--bc\",\n  bottomRight: \"group--actions--br\"\n};\nconst defaultPosition = \"topRight\";\n\n\nexport class GroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, addGroup, removeSelf, setLock, isLocked, isTrueLocked, id,\n      canAddGroup, canAddRule, canDeleteGroup\n    } = this.props;\n    const {\n      immutableGroupsMode, addRuleLabel, addGroupLabel, delGroupLabel, groupActionsPosition, \n      renderButton: Btn, renderSwitch: Switch, renderButtonGroup: BtnGrp,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const position = groupActionsPositionList[groupActionsPosition || defaultPosition];\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn\n      type=\"addRule\" onClick={addRule} label={addRuleLabel} readonly={isLocked} config={config}\n    />;\n    const addGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type=\"addGroup\" onClick={addGroup} label={addGroupLabel} readonly={isLocked} config={config}\n    />;\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn\n      type=\"delGroup\" onClick={removeSelf} label={delGroupLabel} config={config}\n    />;\n\n    return (\n      <div className={`group--actions ${position}`}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {addGroupBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React, { Component, PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport startsWith from \"lodash/startsWith\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport classNames from \"classnames\";\nimport { Item } from \"./Item\";\nimport {GroupActions} from \"./GroupActions\";\nimport {ConfirmFn, DragIcon, dummyFn} from \"../utils\";\n\nconst defaultPosition = \"topRight\";\n\n\nexport class BasicGroup extends PureComponent {\n  static propTypes = {\n    //tree: PropTypes.instanceOf(Immutable.Map).isRequired,\n    reordableNodesCnt: PropTypes.number,\n    conjunctionOptions: PropTypes.object.isRequired,\n    allowFurtherNesting: PropTypes.bool.isRequired,\n    isRoot: PropTypes.bool.isRequired,\n    not: PropTypes.bool,\n    selectedConjunction: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    path: PropTypes.any, //instanceOf(Immutable.List)\n    children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n    isDraggingMe: PropTypes.bool,\n    isDraggingTempo: PropTypes.bool,\n    isLocked: PropTypes.bool,\n    isTrueLocked: PropTypes.bool,\n    //actions\n    handleDraggerMouseDown: PropTypes.func,\n    onDragStart: PropTypes.func,\n    addRule: PropTypes.func.isRequired,\n    addGroup: PropTypes.func.isRequired,\n    removeSelf: PropTypes.func.isRequired,\n    setConjunction: PropTypes.func.isRequired,\n    setNot: PropTypes.func.isRequired,\n    setLock: PropTypes.func.isRequired,\n    actions: PropTypes.object.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.removeSelf = this.removeSelf.bind(this);\n    this.setLock = this.setLock.bind(this);\n    this.renderItem = this.renderItem.bind(this);\n  }\n\n  isGroupTopPosition() {\n    return startsWith(this.props.config.settings.groupActionsPosition || defaultPosition, \"top\");\n  }\n\n  setLock(lock) {\n    this.props.setLock(lock);\n  }\n\n  removeSelf() {\n    const {confirmFn} = this.props;\n    const {renderConfirm, removeGroupConfirmOptions: confirmOptions} = this.props.config.settings;\n    const doRemove = () => {\n      this.props.removeSelf();\n    };\n    if (confirmOptions && !this.isEmptyCurrentGroup()) {\n      renderConfirm({...confirmOptions,\n        onOk: doRemove,\n        onCancel: null,\n        confirmFn: confirmFn\n      });\n    } else {\n      doRemove();\n    }\n  }\n\n  isEmptyCurrentGroup() {\n    const children = this.props.children1;\n    return !children || children.size == 0\n      || children.size == 1 && this.isEmpty(children.first());\n  }\n\n  isEmpty(item) {\n    const isGroup = (item.get(\"type\") == \"group\" || item.get(\"type\") == \"rule_group\");\n    return isGroup ? this.isEmptyGroup(item) : this.isEmptyRule(item);\n  }\n\n  isEmptyGroup(group) {\n    const children = group.get(\"children1\");\n    return !children || children.size == 0\n      || children.size == 1 && this.isEmpty(children.first());\n  }\n\n  isEmptyRule(rule) {\n    const properties = rule.get(\"properties\");\n    return !(\n      properties.get(\"field\") !== null\n          && properties.get(\"operator\") !== null\n          && properties.get(\"value\").filter((val) => val !== undefined).size > 0\n    );\n  }\n\n  render() {\n    return <>\n      {this.renderHeaderWrapper()}\n      {this.renderChildrenWrapper()}\n      {this.renderFooterWrapper()}\n    </>;\n  }\n\n  showNot() {\n    const {config} = this.props;\n    return config.settings.showNot;\n  }\n\n  // show conjs for 2+ children?\n  showConjs() {\n    const {conjunctionOptions, children1, config} = this.props;\n    const conjunctionCount = Object.keys(conjunctionOptions).length;\n    return conjunctionCount > 1 || this.showNot();\n  }\n\n  isOneChild() {\n    const {children1} = this.props;\n    return children1 ? children1.size < 2 : true;\n  }\n\n  renderChildrenWrapper() {\n    const {children1} = this.props;\n\n    return children1 && (\n      <div key=\"group-children\" className={classNames(\n        \"group--children\",\n        !this.showConjs() ? \"hide--conjs\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isOneChild() ? \"one--child\" : \"\",\n        this.childrenClassName()\n      )}>{this.renderChildren()}</div>\n    );\n  }\n\n  childrenClassName = () => \"\";\n\n  renderHeaderWrapper() {\n    const isGroupTopPosition = this.isGroupTopPosition();\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\",\n        this.isOneChild() ? \"one--child\" : \"\",\n      )}>\n        {this.renderHeader()}\n        {isGroupTopPosition && this.renderBeforeActions()}\n        {isGroupTopPosition && this.renderActions()}\n        {isGroupTopPosition && this.renderAfterActions()}\n      </div>\n    );\n  }\n\n  renderFooterWrapper() {\n    const isGroupTopPosition = this.isGroupTopPosition();\n    return !isGroupTopPosition && (\n      <div key=\"group-footer\" className='group--footer'>\n        {this.renderBeforeActions()}\n        {this.renderActions()}\n        {this.renderAfterActions()}\n      </div>\n    );\n  }\n\n  renderBeforeActions = () => {\n    const BeforeActions = this.props.config.settings.renderBeforeActions;\n    if (BeforeActions == undefined)\n      return null;\n\n    return typeof BeforeActions === \"function\" ? <BeforeActions {...this.props}/> : BeforeActions;\n  };\n\n  renderAfterActions = () => {\n    const AfterActions = this.props.config.settings.renderAfterActions;\n    if (AfterActions == undefined)\n      return null;\n\n    return typeof AfterActions === \"function\" ? <AfterActions {...this.props}/> : AfterActions;\n  };\n\n  renderActions() {\n    const {config, addRule, addGroup, isLocked, isTrueLocked, id} = this.props;\n\n    return <GroupActions\n      config={config}\n      addRule={addRule}\n      addGroup={addGroup}\n      canAddGroup={this.canAddGroup()}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  canAddGroup() {\n    return this.props.allowFurtherNesting;\n  }\n  canAddRule() {\n    const maxNumberOfRules = this.props.config.settings.maxNumberOfRules;\n    const totalRulesCnt = this.props.totalRulesCnt;\n    if (maxNumberOfRules) {\n      return totalRulesCnt < maxNumberOfRules;\n    }\n    return true;\n  }\n  canDeleteGroup() {\n    return !this.props.isRoot;\n  }\n\n  renderChildren() {\n    const {children1} = this.props;\n    return children1 ? children1.map(this.renderItem).toList() : null;\n  }\n\n  renderItem(item) {\n    const props = this.props;\n    const {config, actions, onDragStart, isLocked} = props;\n    const isRuleGroup = item.get(\"type\") == \"group\" && item.getIn([\"properties\", \"field\"]) != null;\n    const type = isRuleGroup ? \"rule_group\" : item.get(\"type\");\n    \n    return (\n      <Item\n        {...this.extraPropsForItem(item)}\n        key={item.get(\"id\")}\n        id={item.get(\"id\")}\n        groupId={props.id}\n        //path={props.path.push(item.get('id'))}\n        path={item.get(\"path\")}\n        type={type}\n        properties={item.get(\"properties\")}\n        config={config}\n        actions={actions}\n        children1={item.get(\"children1\")}\n        //tree={props.tree}\n        reordableNodesCnt={this.reordableNodesCntForItem(item)}\n        totalRulesCnt={this.totalRulesCntForItem(item)}\n        parentReordableNodesCnt={this.reordableNodesCnt()}\n        onDragStart={onDragStart}\n        isDraggingTempo={this.props.isDraggingTempo}\n        isParentLocked={isLocked}\n      />\n    );\n  }\n\n  extraPropsForItem(_item) {\n    return {};\n  }\n\n  reordableNodesCnt() {\n    if (this.props.isLocked)\n      return 0;\n    return this.props.reordableNodesCnt;\n  }\n\n  totalRulesCntForItem(_item) {\n    return this.props.totalRulesCnt;\n  }\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    return this.reordableNodesCnt();\n  }\n\n  showDragIcon() {\n    const { config, isRoot, isLocked } = this.props;\n    const reordableNodesCnt = this.reordableNodesCnt();\n    return config.settings.canReorder && !isRoot && reordableNodesCnt > 1 && !isLocked;\n  }\n\n  renderDrag() {\n    const { handleDraggerMouseDown } = this.props;\n    const drag = this.showDragIcon()\n      && <span\n        key=\"group-drag-icon\"\n        className={\"qb-drag-handler group--drag-handler\"}\n        onMouseDown={handleDraggerMouseDown}\n      ><DragIcon /> </span>;\n    return drag;\n  }\n\n  conjunctionOptions() {\n    const { conjunctionOptions } = this.props;\n    return conjunctionOptions;\n  }\n\n  renderConjs() {\n    const {\n      config, children1, id,\n      selectedConjunction, setConjunction, not, setNot, isLocked\n    } = this.props;\n\n    const {immutableGroupsMode, renderConjs: Conjs, showNot: _showNot, notLabel} = config.settings;\n    const conjunctionOptions = this.conjunctionOptions();\n    if (!this.showConjs())\n      return null;\n    if (!children1 || !children1.size)\n      return null;\n\n    const renderProps = {\n      disabled: this.isOneChild(),\n      readonly: immutableGroupsMode || isLocked,\n      selectedConjunction: selectedConjunction,\n      setConjunction: immutableGroupsMode ? dummyFn : setConjunction,\n      conjunctionOptions: conjunctionOptions,\n      config: config,\n      not: not || false,\n      id: id,\n      setNot: immutableGroupsMode ? dummyFn : setNot,\n      notLabel: notLabel,\n      showNot: this.showNot(),\n      isLocked: isLocked\n    };\n    return <Conjs {...renderProps} />;\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n}\n\nexport default GroupContainer(Draggable(\"group\")(ConfirmFn(BasicGroup)));\n","import React, { PureComponent } from \"react\";\n\nexport class RuleGroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, canAddRule, canDeleteGroup, removeSelf, \n      setLock, isLocked, isTrueLocked, id,\n    } = this.props;\n    const {\n      immutableGroupsMode, addRuleLabel, delGroupLabel,\n      renderButton: Btn, renderSwitch: Switch, renderButtonGroup: BtnGrp,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} hideLabel={true} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn \n      type=\"addRuleGroup\" onClick={addRule} label={addRuleLabel} readonly={isLocked} config={config}\n    />;\n\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn \n      type=\"delRuleGroup\" onClick={removeSelf} label={delGroupLabel} config={config}\n    />;\n\n    return (\n      <div className={\"group--actions\"}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {RuleGroupActions} from \"./RuleGroupActions\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {ConfirmFn} from \"../utils\";\n\n\nclass RuleGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    selectedField: PropTypes.string,\n    parentField: PropTypes.string,\n    setField: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n  }\n\n  childrenClassName = () => \"rule_group--children\";\n  \n  renderHeaderWrapper = () => null;\n  renderFooterWrapper = () => null;\n  renderConjs = () => null;\n  canAddGroup = () => false;\n  canAddRule = () => true;\n  canDeleteGroup = () => false;\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    const {children1} = this.props;\n    return children1?.size || 0;\n  }\n\n  renderChildrenWrapper() {\n    return (\n      <>\n        {this.renderDrag()}\n        {this.renderField()}\n        {this.renderActions()}\n        {super.renderChildrenWrapper()}\n      </>\n    );\n  }\n\n  renderField() {\n    const { config, selectedField, setField, parentField, id, groupId, isLocked } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    return <FieldWrapper\n      key=\"field\"\n      classname={\"group--field\"}\n      config={config}\n      selectedField={selectedField}\n      setField={setField}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderActions() {\n    const {config, addRule, isLocked, isTrueLocked, id} = this.props;\n\n    return <RuleGroupActions\n      config={config}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  extraPropsForItem(_item) {\n    return {\n      parentField: this.props.selectedField\n    };\n  }\n}\n\n\nexport default GroupContainer(Draggable(\"group rule_group\")(ConfirmFn(RuleGroup)));\n","import React, { PureComponent } from \"react\";\n\nexport class RuleGroupExtActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, canAddRule, canDeleteGroup, removeSelf, \n      setLock, isLocked, isTrueLocked, id,\n    } = this.props;\n    const {\n      immutableGroupsMode, addSubRuleLabel, delGroupLabel,\n      renderButton: Btn, renderSwitch: Switch, renderButtonGroup: BtnGrp,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn \n      type=\"addRuleGroupExt\" onClick={addRule} label={addSubRuleLabel} readonly={isLocked} config={config}\n    />;\n\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn \n      type=\"delRuleGroup\" onClick={removeSelf} label={delGroupLabel} config={config}\n    />;\n\n    return (\n      <div className={\"group--actions group--actions--tr\"}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {RuleGroupExtActions} from \"./RuleGroupExtActions\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport OperatorWrapper from \"../rule/OperatorWrapper\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, ConfirmFn} from \"../utils\";\nimport Widget from \"../rule/Widget\";\nimport classNames from \"classnames\";\nconst {getFieldConfig, getFieldWidgetConfig} = Utils.ConfigUtils;\n\n\nclass RuleGroupExt extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    selectedField: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    value: PropTypes.any,\n    parentField: PropTypes.string,\n    setField: PropTypes.func,\n    setOperator: PropTypes.func,\n    setValue: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n  }\n\n  childrenClassName = () => \"rule_group_ext--children\";\n  \n  renderFooterWrapper = () => null;\n  canAddGroup = () => false;\n  canAddRule = () => true;\n  canDeleteGroup = () => true;\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeader()}\n        {this.renderGroupField()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderGroupField() {\n    return (\n      <div className={\"group--field--count--rule\"}>\n        {this.renderField()}\n        {this.renderOperator()}\n        {this.renderWidget()}\n      </div>\n    );\n  }\n\n  showNot() {\n    const {config, selectedField, selectedOperator} = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField) || {};\n    return selectedFieldConfig.showNot != undefined ? selectedFieldConfig.showNot : config.settings.showNot;\n  }\n\n  conjunctionOptions() {\n    const {config, selectedField, selectedOperator} = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField) || {};\n    let conjunctionOptions = super.conjunctionOptions();\n    if (selectedFieldConfig.conjunctions) {\n      let filtered = {};\n      for (let k of selectedFieldConfig.conjunctions) {\n        filtered[k] = conjunctionOptions[k];\n      }\n      conjunctionOptions = filtered;\n    }\n    return conjunctionOptions;\n  }\n\n  renderField() {\n    const { config, selectedField, setField, parentField, id, groupId, isLocked } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    return <FieldWrapper\n      key=\"field\"\n      classname={\"rule--field\"}\n      config={config}\n      selectedField={selectedField}\n      setField={setField}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderOperator() {\n    const {config, selectedField, selectedOperator, setField, setOperator, isLocked} = this.props;\n    const { immutableFieldsMode } = config.settings;\n    const selectedFieldWidgetConfig = getFieldWidgetConfig(config, selectedField, selectedOperator) || {};\n    const hideOperator = selectedFieldWidgetConfig.hideOperator;\n    const showOperatorLabel = selectedField && hideOperator && selectedFieldWidgetConfig.operatorInlineLabel;\n    const showOperator = selectedField && !hideOperator;\n\n    return <OperatorWrapper\n      key=\"operator\"\n      classname={\"group--operator\"}\n      config={config}\n      selectedField={selectedField}\n      selectedOperator={selectedOperator}\n      setField={setField}\n      setOperator={setOperator}\n      selectedFieldPartsLabels={[\"group\"]}\n      showOperator={showOperator}\n      showOperatorLabel={showOperatorLabel}\n      selectedFieldWidgetConfig={selectedFieldWidgetConfig}\n      readonly={immutableFieldsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  renderWidget() {\n    const {config, selectedField, selectedOperator, isLocked} = this.props;\n    const { immutableValuesMode } = config.settings;\n    const isFieldAndOpSelected = selectedField && selectedOperator;\n    const showWidget = isFieldAndOpSelected;\n    if (!showWidget) return null;\n\n    const widget = <Widget\n      key=\"values\"\n      isForRuleGruop={true}\n      field={this.props.selectedField}\n      operator={this.props.selectedOperator}\n      value={this.props.value}\n      valueSrc={\"value\"}\n      valueError={null}\n      config={config}\n      setValue={!immutableValuesMode ? this.props.setValue : dummyFn}\n      setValueSrc={dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n\n    return (\n      <Col key={\"widget-for-\"+this.props.selectedOperator} className=\"rule--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderActions() {\n    const {config, addRule, isLocked, isTrueLocked, id} = this.props;\n\n    return <RuleGroupExtActions\n      config={config}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    const {children1} = this.props;\n    return children1?.size || 0;\n  }\n\n  extraPropsForItem(_item) {\n    return {\n      parentField: this.props.selectedField\n    };\n  }\n}\n\n\nexport default GroupContainer(Draggable(\"group rule_group_ext\")(ConfirmFn(RuleGroupExt)));\n\n","import React, { PureComponent } from \"react\";\n\nconst groupActionsPositionList = {\n  topLeft: \"group--actions--tl\",\n  topCenter: \"group--actions--tc\",\n  topRight: \"group--actions--tr\",\n  bottomLeft: \"group--actions--bl\",\n  bottomCenter: \"group--actions--bc\",\n  bottomRight: \"group--actions--br\"\n};\nconst defaultPosition = \"topRight\";\n\n\nexport class SwitchGroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addCaseGroup, addDefaultCaseGroup, setLock, isLocked, isTrueLocked, id, canAddGroup, canAddDefault\n    } = this.props;\n    const {\n      immutableGroupsMode, addCaseLabel, addDefaultCaseLabel, groupActionsPosition, \n      renderButton: Btn, renderSwitch: Switch, renderButtonGroup: BtnGrp,\n      lockLabel, lockedLabel, showLock,\n    } = config.settings;\n    const position = groupActionsPositionList[groupActionsPosition || defaultPosition];\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addCaseGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type=\"addCaseGroup\" onClick={addCaseGroup} label={addCaseLabel} readonly={isLocked} config={config}\n    />;\n\n    const addDefaultCaseGroupBtn = !immutableGroupsMode && canAddDefault && !isLocked && <Btn\n      type=\"addDefaultCaseGroup\" onClick={addDefaultCaseGroup} label={addDefaultCaseLabel} readonly={isLocked} config={config}\n    />;\n\n    return (\n      <div className={`group--actions ${position}`}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addCaseGroupBtn}\n          {addDefaultCaseGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {SwitchGroupActions} from \"./SwitchGroupActions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, ConfirmFn} from \"../utils\";\nimport classNames from \"classnames\";\nconst {getTotalReordableNodesCountInTree, getTotalRulesCountInTree} = Utils.TreeUtils;\n\n\nclass SwitchGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n  }\n\n  childrenClassName = () => \"switch_group--children\";\n  \n  renderFooterWrapper = () => null;\n  hasDefaultCase = () => {\n    return this.props.children1?.size && this.props.children1.filter(c => c.get(\"children1\") == null).size > 0;\n  };\n  canAddGroup() {\n    const { maxNumberOfCases } = this.props.config.settings;\n    const totalCasesCnt = this.props.children1?.size || 0;\n    if (maxNumberOfCases) {\n      return totalCasesCnt < maxNumberOfCases;\n    }\n    return true;\n  }\n  canAddRule() {\n    return false;\n  }\n\n  reordableNodesCnt() {\n    // result will be passed to each case's `parentReordableNodesCnt` prop\n    const totalCasesCnt = this.props.children1?.size || 0;\n    let casesToReorder = totalCasesCnt;\n    if (this.hasDefaultCase()) {\n      casesToReorder--;\n    }\n    return casesToReorder;\n  }\n\n  totalRulesCntForItem(item) {\n    return getTotalRulesCountInTree(item);\n  }\n\n  reordableNodesCntForItem(item) {\n    if (this.props.isLocked)\n      return 0;\n    const { canLeaveEmptyCase, canRegroupCases } = this.props.config.settings;\n\n    const totalCasesCnt = this.props.children1?.size || 0;\n    let casesToReorder = totalCasesCnt;\n    if (this.hasDefaultCase()) {\n      casesToReorder--;\n    }\n\n    const nodesInCase = getTotalReordableNodesCountInTree(item);\n    let cnt = nodesInCase;\n    if (cnt == 1 && canRegroupCases && canLeaveEmptyCase && casesToReorder > 1)\n      cnt = 111;\n    return cnt;\n  }\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeader()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderConjs() {\n    const { renderSwitchPrefix } = this.props.config.settings;\n    return renderSwitchPrefix ? renderSwitchPrefix() : null;\n  }\n\n  showNot() {\n    return false;\n  }\n\n\n  renderActions() {\n    const {config, addCaseGroup, addDefaultCaseGroup, isLocked, isTrueLocked, id} = this.props;\n\n    return <SwitchGroupActions\n      config={config}\n      addCaseGroup={addCaseGroup}\n      addDefaultCaseGroup={addDefaultCaseGroup}\n      canAddDefault={!this.hasDefaultCase()}\n      canAddGroup={this.canAddGroup()}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n}\n\n\nexport default GroupContainer(Draggable(\"group switch_group\")(ConfirmFn(SwitchGroup)));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {GroupActions} from \"./GroupActions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, ConfirmFn} from \"../utils\";\nimport Widget from \"../rule/Widget\";\nimport classNames from \"classnames\";\n\n\nclass CaseGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    parentReordableNodesCnt: PropTypes.number,\n    value: PropTypes.any,\n    setValue: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n  }\n\n  isDefaultCase() {\n    return this.props.children1 == undefined;\n  }\n\n  reordableNodesCnt() {\n    // `parentReordableNodesCnt` is number of cases to reorder\n    return this.props.parentReordableNodesCnt;\n  }\n\n  reordableNodesCntForItem(_item) {\n    // `reordableNodesCnt` is number of nodes is current case\n    if (this.props.isLocked)\n      return 0;\n    return this.props.reordableNodesCnt;\n  }\n\n  totalRulesCntForItem(_item) {\n    // `totalRulesCnt` is number of nodes is current case\n    return this.props.totalRulesCnt;\n  }\n\n  showDragIcon() {\n    // default impl of `showDragIcon()` uses `this.reordableNodesCnt()`\n    if (this.isDefaultCase())\n      return false;\n    return super.showDragIcon();\n  }\n\n  childrenClassName = () => \"case_group--children\";\n  \n  renderFooterWrapper = () => null;\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeaderLeft()}\n        {this.renderHeaderCenter()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderChildrenWrapper() {\n    if (this.isDefaultCase())\n      return null;\n    // body has 2 columns: condition & value\n    return (\n      <div className={\"case_group--body\"}>\n        {this.renderCondition()}\n        {this.renderValue()}\n      </div>\n    );\n  }\n\n  renderHeaderLeft() {\n    if (this.isDefaultCase()) {\n      const { defaultCaseLabel } = this.props.config.settings;\n      return defaultCaseLabel || \"\";\n    }\n    // default impl:\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderCondition() {\n    if (this.isDefaultCase())\n      return null;\n    return super.renderChildrenWrapper();\n  }\n\n  renderHeaderCenter() {\n    if (this.isDefaultCase())\n      return this.renderValue();\n    else\n      return null;\n  }\n\n  canAddGroup() {\n    if (this.isDefaultCase())\n      return false;\n    return super.canAddGroup();\n  }\n\n  canAddRule() {\n    if (this.isDefaultCase())\n      return false;\n    return super.canAddRule();\n  }\n\n  renderValue() {\n    const { config, isLocked, value, setValue, id } = this.props;\n    const { immutableValuesMode } = config.settings;\n\n    const widget = <Widget\n      key=\"values\"\n      isCaseValue={true}\n      field={\"!case_value\"}\n      operator={null}\n      value={value}\n      valueSrc={\"value\"}\n      valueError={null}\n      config={config}\n      setValue={!immutableValuesMode ? setValue : dummyFn}\n      setValueSrc={dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={id}\n      groupId={null}\n    />;\n\n    return (\n      <Col className=\"case_group--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderActions() {\n    const {config, addGroup, addRule, isLocked, isTrueLocked, id} = this.props;\n    return <GroupActions\n      config={config}\n      addGroup={addGroup}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canAddGroup={this.canAddGroup()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  isEmptyCurrentGroup() {\n    // used to confirm self-deletion\n    const { value } = this.props;\n    const oneValue = value && value.size ? value.get(0) : null;\n    const hasValue = oneValue != null && (Array.isArray(oneValue) ? oneValue.length > 0 : true);\n    return super.isEmptyCurrentGroup() && !hasValue;\n  }\n\n}\n\nexport default GroupContainer(Draggable(\"group case_group\")(ConfirmFn(CaseGroup)));\n\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Rule from \"./Rule\";\nimport Group from \"./Group\";\nimport RuleGroup from \"./RuleGroup\";\nimport RuleGroupExt from \"./RuleGroupExt\";\nimport SwitchGroup from \"./SwitchGroup\";\nimport CaseGroup from \"./CaseGroup\";\n\nconst types = [\n  \"rule\",\n  \"group\",\n  \"rule_group\",\n  \"switch_group\",\n  \"case_group\"\n];\n\nconst getProperties = (props) => {\n  const properties = props.properties?.toObject() || {};\n  const result = {...properties};\n  if (props.isParentLocked) {\n    result.isLocked = true;\n  }\n  if (properties.isLocked) {\n    result.isTrueLocked = true;\n  }\n  return result;\n};\n\nconst typeMap = {\n  rule: (props) => (\n    <Rule\n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      config={props.config}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      parentField={props.parentField}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  group: (props) => (\n    <Group \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      //tree={props.tree}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  rule_group: (props) => (\n    <RuleGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      //tree={props.tree}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  rule_group_ext: (props) => (\n    <RuleGroupExt \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      //tree={props.tree}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  switch_group: (props) => (\n    <SwitchGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      //tree={props.tree}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  case_group: (props) => (\n    <CaseGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      //tree={props.tree}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n};\n\n\nclass Item extends PureComponent {\n  static propTypes = {\n    //tree: PropTypes.instanceOf(Immutable.Map).isRequired,\n    config: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    type: PropTypes.oneOf(types).isRequired,\n    path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n    properties: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n    actions: PropTypes.object.isRequired,\n    reordableNodesCnt: PropTypes.number,\n    onDragStart: PropTypes.func,\n    parentField: PropTypes.string, //from RuleGroup\n    isDraggingTempo: PropTypes.bool,\n    isParentLocked: PropTypes.bool,\n  };\n\n  render() {\n    const { type, ...props } = this.props;\n    const mode = props.properties?.get(\"mode\");\n    const postfix = mode == \"array\" ? \"_ext\" : \"\";    \n    const renderItem = props.config.settings.renderItem;\n    let Cmp = typeMap[type + postfix];\n    if (renderItem) {\n      return renderItem({...props, type, itemComponent: Cmp});\n    }\n    if (!Cmp) return null;\n    return Cmp(props);\n  }\n}\n\nexport { Item };\n","import { Utils } from \"@react-awesome-query-builder/core\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Item } from \"./item/Item\";\nimport SortableContainer from \"./containers/SortableContainer\";\nimport {pureShouldComponentUpdate} from \"../utils/reactUtils\";\nconst { getTotalReordableNodesCountInTree, getTotalRulesCountInTree } = Utils.TreeUtils;\nconst { createListFromArray, emptyProperies } = Utils.DefaultUtils;\n\nclass Builder extends Component {\n  static propTypes = {\n    tree: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    config: PropTypes.object.isRequired,\n    actions: PropTypes.object.isRequired,\n    onDragStart: PropTypes.func,\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const prevProps = this.props;\n    let should = pureShouldComponentUpdate(this)(nextProps, nextState);\n    if (should) {\n      let chs = [];\n      for (let k in nextProps) {\n        let changed = (nextProps[k] !== prevProps[k]);\n        if (changed && k != \"__isInternalValueChange\") {\n          chs.push(k);\n        }\n      }\n      if (!chs.length)\n        should = false;\n      //optimize render\n      if (chs.length == 1 && chs[0] == \"tree\" && nextProps.__isInternalValueChange)\n        should = false;\n    }\n    return should;\n  }\n\n  constructor(props) {\n    super(props);\n\n    this._updPath(props);\n  }\n\n  _updPath (props) {\n    const id = props.tree.get(\"id\");\n    this.path = createListFromArray([id]);\n  }\n\n  render() {\n    const tree = this.props.tree;\n    const rootType = tree.get(\"type\");\n    const isTernary = rootType == \"switch_group\";\n    const reordableNodesCnt = isTernary ? null : getTotalReordableNodesCountInTree(tree);\n    const totalRulesCnt = isTernary ? null : getTotalRulesCountInTree(tree);\n    const id = tree.get(\"id\");\n    return (\n      <Item \n        key={id}\n        id={id}\n        path={this.path}\n        type={rootType}\n        properties={tree.get(\"properties\") || emptyProperies()}\n        config={this.props.config}\n        actions={this.props.actions}\n        children1={tree.get(\"children1\") || emptyProperies()}\n        //tree={tree}\n        reordableNodesCnt={reordableNodesCnt}\n        totalRulesCnt={totalRulesCnt}\n        parentReordableNodesCnt={0}\n        onDragStart={this.props.onDragStart}\n      />\n    );\n  }\n}\n\nexport default SortableContainer(Builder);\n","import React, { PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst {clone} = Utils;\nconst {getFieldConfig} = Utils.ConfigUtils;\nconst {getFieldPath, getFieldPathLabels, getWidgetForFieldOp} = Utils.RuleUtils;\n\n//tip: this.props.value - right value, this.props.field - left value\n\nexport default class ValueField extends PureComponent {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.string.isRequired,\n    value: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    parentField: PropTypes.string,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForItems = [\"config\", \"field\", \"operator\", \"isFuncArg\", \"parentField\"];\n    const keysForMeta = [\"config\", \"field\", \"operator\", \"value\", \"placeholder\", \"isFuncArg\", \"parentField\"];\n    const needUpdateItems = !this.items || keysForItems.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateItems) {\n      this.items = this.getItems(nextProps);\n    }\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getItems({config, field, operator, parentField, isFuncArg, fieldDefinition}) {\n    const {canCompareFieldWithField} = config.settings;\n    const fieldSeparator = config.settings.fieldSeparator;\n    const parentFieldPath = typeof parentField == \"string\" ? parentField.split(fieldSeparator) : parentField;\n    const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n    const sourceFields = parentField ? parentFieldConfig && parentFieldConfig.subfields : config.fields;\n\n    const filteredFields = this.filterFields(config, sourceFields, field, parentField, parentFieldPath, operator, canCompareFieldWithField, isFuncArg, fieldDefinition);\n    const items = this.buildOptions(parentFieldPath, config, filteredFields, parentFieldPath);\n    return items;\n  }\n\n  getMeta({config, field, operator, value, placeholder: customPlaceholder, isFuncArg, parentField}) {\n    const {fieldPlaceholder, fieldSeparatorDisplay} = config.settings;\n    const selectedKey = value;\n    const isFieldSelected = !!value;\n\n    const leftFieldConfig = getFieldConfig(config, field);\n    const leftFieldWidgetField = leftFieldConfig.widgets.field;\n    const leftFieldWidgetFieldProps = leftFieldWidgetField && leftFieldWidgetField.widgetProps || {};\n    const placeholder = isFieldSelected ? null \n      : (isFuncArg && customPlaceholder || leftFieldWidgetFieldProps.valuePlaceholder || fieldPlaceholder);\n    const currField = isFieldSelected ? getFieldConfig(config, selectedKey) : null;\n    const selectedOpts = currField || {};\n\n    const selectedKeys = getFieldPath(selectedKey, config);\n    const selectedPath = getFieldPath(selectedKey, config, true);\n    const selectedLabel = this.getFieldLabel(currField, selectedKey, config);\n    const partsLabels = getFieldPathLabels(selectedKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel || parentField)\n      selectedFullLabel = null;\n    const selectedAltLabel = selectedOpts.label2;\n\n    return {\n      placeholder,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n    };\n  }\n\n  filterFields(config, fields, leftFieldFullkey, parentField, parentFieldPath, operator, canCompareFieldWithField, isFuncArg, fieldDefinition) {\n    fields = clone(fields);\n    const fieldSeparator = config.settings.fieldSeparator;\n    const leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n    let expectedType;\n    const widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n    if (isFuncArg && fieldDefinition) {\n      expectedType = fieldDefinition.type;\n    } else if (widget) {\n      let widgetConfig = config.widgets[widget];\n      let widgetType = widgetConfig.type;\n      //expectedType = leftFieldConfig.type;\n      expectedType = widgetType;\n    } else {\n      expectedType = leftFieldConfig.type;\n    }\n    \n    function _filter(list, path) {\n      for (let rightFieldKey in list) {\n        let subfields = list[rightFieldKey].subfields;\n        let subpath = (path ? path : []).concat(rightFieldKey);\n        let rightFieldFullkey = subpath.join(fieldSeparator);\n        let rightFieldConfig = getFieldConfig(config, rightFieldFullkey);\n        if (!rightFieldConfig) {\n          delete list[rightFieldKey];\n        } else if (rightFieldConfig.type == \"!struct\" || rightFieldConfig.type == \"!group\") {\n          if(_filter(subfields, subpath) == 0)\n            delete list[rightFieldKey];\n        } else {\n          // tip: LHS field can be used as arg in RHS function\n          let canUse = rightFieldConfig.type == expectedType && (isFuncArg ? true : rightFieldFullkey != leftFieldFullkey);\n          let fn = canCompareFieldWithField || config.settings.canCompareFieldWithField;\n          if (fn)\n            canUse = canUse && fn(leftFieldFullkey, leftFieldConfig, rightFieldFullkey, rightFieldConfig, operator);\n          if (!canUse)\n            delete list[rightFieldKey];\n        }\n      }\n      return keys(list).length;\n    }\n\n    _filter(fields, parentFieldPath || []);\n\n    return fields;\n  }\n\n  buildOptions(parentFieldPath, config, fields, path = null, optGroupLabel = null) {\n    if (!fields)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    return keys(fields).map(fieldKey => {\n      const field = fields[fieldKey];\n      const label = this.getFieldLabel(field, fieldKey, config);\n      const partsLabels = getFieldPathLabels(fieldKey, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label || parentFieldPath)\n        fullLabel = null;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n      const subpath = (path ? path : []).concat(fieldKey);\n\n      if (field.hideForCompare)\n        return undefined;\n\n      if (field.type == \"!struct\" || field.type == \"!group\") {\n        return {\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          items: this.buildOptions(parentFieldPath, config, field.subfields, subpath, label)\n        };\n      } else {\n        return {\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          grouplabel: optGroupLabel\n        };\n      }\n    }).filter(o => !!o);\n  }\n\n  getFieldLabel(fieldOpts, fieldKey, config) {\n    if (!fieldKey) return null;\n    let fieldSeparator = config.settings.fieldSeparator;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let fieldParts = Array.isArray(fieldKey) ? fieldKey : fieldKey.split(fieldSeparator);\n    let label = fieldOpts.label || last(fieldParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  render() {\n    const {config, customProps, setValue, readonly, id, groupId} = this.props;\n    const {renderField} = config.settings;\n    const renderProps = {\n      config,\n      customProps,\n      setField: setValue,\n      readonly,\n      items: this.items,\n      id,\n      groupId,\n      ...this.meta\n    };\n    return renderField(renderProps);\n  }\n\n}\n","import React, { PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst { clone } = Utils;\nconst {getFieldConfig, getFuncConfig} = Utils.ConfigUtils;\nconst {getFieldPath, getFuncPathLabels, getWidgetForFieldOp} = Utils.RuleUtils;\n\n//tip: this.props.value - right value, this.props.field - left value\n\nexport default class FuncSelect extends PureComponent {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.string.isRequired,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    value: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n      \n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForItems = [\"config\", \"field\", \"operator\", \"isFuncArg\"];\n    const keysForMeta = [\"config\", \"field\", \"value\"];\n    const needUpdateItems = !this.items || keysForItems.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n    if (needUpdateItems) {\n      this.items = this.getItems(nextProps);\n    }\n  }\n\n  getItems({config, field, operator, parentFuncs, fieldDefinition, isFuncArg}) {\n    const {canUseFuncForField} = config.settings;\n    const filteredFuncs = this.filterFuncs(config, config.funcs, field, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition);\n    const items = this.buildOptions(config, filteredFuncs);\n    return items;\n  }\n\n  getMeta({config, field, value}) {\n    const {funcPlaceholder, fieldSeparatorDisplay} = config.settings;\n    const selectedFuncKey = value;\n    const isFuncSelected = !!value;\n\n    const leftFieldConfig = getFieldConfig(config, field);\n    const leftFieldWidgetField = leftFieldConfig.widgets.field;\n    const leftFieldWidgetFieldProps = leftFieldWidgetField && leftFieldWidgetField.widgetProps || {};\n    const placeholder = !isFuncSelected ? funcPlaceholder : null;\n\n    const currFunc = isFuncSelected ? getFuncConfig(config, selectedFuncKey) : null;\n    const selectedOpts = currFunc || {};\n\n    const selectedKeys = getFieldPath(selectedFuncKey, config);\n    const selectedPath = getFieldPath(selectedFuncKey, config, true);\n    const selectedLabel = this.getFuncLabel(currFunc, selectedFuncKey, config);\n    const partsLabels = getFuncPathLabels(selectedFuncKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel)\n      selectedFullLabel = null;\n    \n    return {\n      placeholder,\n      selectedKey: selectedFuncKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedFullLabel,\n    };\n  }\n\n  filterFuncs(config, funcs, leftFieldFullkey, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition) {\n    funcs = clone(funcs);\n    const fieldSeparator = config.settings.fieldSeparator;\n    const leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n    let expectedType;\n    let targetDefinition = leftFieldConfig;\n    const widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n    if (isFuncArg && fieldDefinition) {\n      targetDefinition = fieldDefinition;\n      expectedType = fieldDefinition.type;\n    } else if (widget) {\n      let widgetConfig = config.widgets[widget];\n      let widgetType = widgetConfig.type;\n      //expectedType = leftFieldConfig.type;\n      expectedType = widgetType;\n    } else {\n      expectedType = leftFieldConfig.type;\n    }\n\n    function _filter(list, path) {\n      for (let funcKey in list) {\n        let subfields = list[funcKey].subfields;\n        let subpath = (path ? path : []).concat(funcKey);\n        let funcFullkey = subpath.join(fieldSeparator);\n        let funcConfig = getFuncConfig(config, funcFullkey);\n        if (funcConfig.type == \"!struct\") {\n          if(_filter(subfields, subpath) == 0)\n            delete list[funcKey];\n        } else {\n          let canUse = funcConfig.returnType == expectedType;\n          if (targetDefinition.funcs)\n            canUse = canUse && targetDefinition.funcs.includes(funcFullkey);\n          if (canUseFuncForField)\n            canUse = canUse && canUseFuncForField(leftFieldFullkey, leftFieldConfig, funcFullkey, funcConfig, operator);\n          // don't use func in func (can be configurable, but usually users don't need this)\n          if (!funcConfig.allowSelfNesting && parentFuncs && parentFuncs.map(([func, _arg]) => func).includes(funcFullkey))\n            canUse = false;\n          if (!canUse)\n            delete list[funcKey];\n        }\n      }\n      return keys(list).length;\n    }\n\n    _filter(funcs, []);\n\n    return funcs;\n  }\n\n  buildOptions(config, funcs, path = null, optGroupLabel = null) {\n    if (!funcs)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    return keys(funcs).map(funcKey => {\n      const func = funcs[funcKey];\n      const label = this.getFuncLabel(func, funcKey, config);\n      const partsLabels = getFuncPathLabels(funcKey, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label)\n        fullLabel = null;\n      const tooltip = func.tooltip;\n      const subpath = (path ? path : []).concat(funcKey);\n\n      if (func.type == \"!struct\") {\n        return {\n          key: funcKey,\n          path: prefix+funcKey,\n          label,\n          fullLabel,\n          tooltip,\n          items: this.buildOptions(config, func.subfields, subpath, label)\n        };\n      } else {\n        return {\n          key: funcKey,\n          path: prefix+funcKey,\n          label,\n          fullLabel,\n          tooltip,\n          grouplabel: optGroupLabel\n        };\n      }\n    });\n  }\n\n  getFuncLabel(funcOpts, funcKey, config) {\n    if (!funcKey) return null;\n    let fieldSeparator = config.settings.fieldSeparator;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let funcParts = Array.isArray(funcKey) ? funcKey : funcKey.split(fieldSeparator);\n    let label = funcOpts.label || last(funcParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  render() {\n    const {config, customProps, setValue, readonly, id, groupId} = this.props;\n    const {renderFunc} = config.settings;\n    const renderProps = {\n      config,\n      customProps,\n      readonly,\n      setField: setValue,\n      items: this.items,\n      id,\n      groupId,\n      ...this.meta\n    };\n    return renderFunc(renderProps);\n  }\n\n}\n","import React, { PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport FuncSelect from \"./FuncSelect\";\nimport Widget from \"./Widget\";\nimport {Col} from \"../utils\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nconst {getFuncConfig} = Utils.ConfigUtils;\nconst {setFunc, setArgValue, setArgValueSrc} = Utils.FuncUtils;\n\n\nexport default class FuncWidget extends PureComponent {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.string.isRequired,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    value: PropTypes.object, //instanceOf(Immutable.Map) //with keys 'func' and `args`\n    setValue: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"config\", \"field\", \"operator\", \"value\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({config, field, operator, value}) {\n    const funcKey = value ? value.get(\"func\") : null;\n    const funcDefinition = funcKey ? getFuncConfig(config, funcKey) : null;\n\n    return {\n      funcDefinition, funcKey\n    };\n  }\n\n  setFunc = (funcKey) => {\n    this.props.setValue( setFunc(this.props.value, funcKey, this.props.config) );\n  };\n\n  setArgValue = (argKey, argVal) => {\n    const {config} = this.props;\n    const {funcDefinition} = this.meta;\n    const {args} = funcDefinition;\n    const argDefinition = args[argKey];\n\n    this.props.setValue( setArgValue(this.props.value, argKey, argVal, argDefinition, config) );\n  };\n\n  setArgValueSrc = (argKey, argValSrc) => {\n    const {config} = this.props;\n    const {funcDefinition} = this.meta;\n    const {args} = funcDefinition;\n    const argDefinition = args[argKey];\n\n    this.props.setValue( setArgValueSrc(this.props.value, argKey, argValSrc, argDefinition, config) );\n  };\n\n  renderFuncSelect = () => {\n    const {config, field, operator, customProps, value, readonly, parentFuncs, id, groupId, isFuncArg, fieldDefinition} = this.props;\n    const funcKey = value ? value.get(\"func\") : null;\n    const selectProps = {\n      value: funcKey,\n      setValue: this.setFunc,\n      config, field, operator, customProps, readonly, parentFuncs, \n      isFuncArg, fieldDefinition,\n      id, groupId,\n    };\n    const {showLabels, funcLabel} = config.settings;\n    const widgetLabel = showLabels\n      ? <label className=\"rule--label\">{funcLabel}</label>\n      : null;\n\n    return (\n      <Col key=\"func\" className=\"rule--func\">\n        {widgetLabel}\n        <FuncSelect {...selectProps} />\n      </Col>\n    );\n  };\n\n  renderArgLabel = (argKey, argDefinition) => {\n    const {valueSources, type, showPrefix, label} = argDefinition;\n    const {config} = this.props;\n    const isConst = valueSources && valueSources.length == 1 && valueSources[0] == \"const\";\n    const forceShow = !config.settings.showLabels && (type == \"boolean\" || isConst) && showPrefix;\n    if (!forceShow) return null;\n    return (\n      <Col className=\"rule--func--arg-label\">\n        {label || argKey}\n      </Col>\n    );\n  };\n\n  renderArgLabelSep = (argKey, argDefinition) => {\n    const {valueSources, type, showPrefix} = argDefinition;\n    const {config} = this.props;\n    const isConst = valueSources && valueSources.length == 1 && valueSources[0] == \"const\";\n    const forceShow = !config.settings.showLabels && (type == \"boolean\" || isConst) && showPrefix;\n    if (!forceShow) return null;\n    return (\n      <Col className=\"rule--func--arg-label-sep\">\n        {\":\"}\n      </Col>\n    );\n  };\n\n  renderArgVal = (funcKey, argKey, argDefinition) => {\n    const {config, field, operator, value, readonly, parentFuncs, id, groupId} = this.props;\n    const arg = value ? value.getIn([\"args\", argKey]) : null;\n    const argVal = arg ? arg.get(\"value\") : undefined;\n    const defaultValueSource = argDefinition.valueSources.length == 1 ? argDefinition.valueSources[0] : undefined;\n    const argValSrc = arg ? (arg.get(\"valueSrc\") || defaultValueSource || \"value\") : defaultValueSource;\n\n    const widgetProps = {\n      config, \n      fieldFunc: funcKey,\n      fieldArg: argKey,\n      leftField: field,\n      operator: null,\n      value: argVal,\n      valueSrc: argValSrc,\n      setValue: this.setArgValue,\n      setValueSrc: this.setArgValueSrc,\n      funcKey,\n      argKey,\n      argDefinition,\n      readonly,\n      parentFuncs,\n      id,\n      groupId,\n    };\n    //tip: value & valueSrc will be converted to Immutable.List at <Widget>\n\n    return (\n      <Col className=\"rule--func--arg-value\">\n        <ArgWidget {...widgetProps} />\n      </Col>\n    );\n  };\n\n  renderArgSep = (argKey, argDefinition, argIndex, {renderSeps}) => {\n    if (!argIndex) return null;\n    return (\n      <Col className=\"rule--func--arg-sep\">\n        {renderSeps ? renderSeps[argIndex - 1] : \", \"}\n      </Col>\n    );\n  };\n\n  renderBracketBefore = ({renderBrackets}) => {\n    return (\n      <Col key=\"before_args\" className=\"rule--func--bracket-before\">\n        {renderBrackets ? renderBrackets[0] : \"(\"}\n      </Col>\n    );\n  };\n\n  renderBracketAfter = ({renderBrackets}) => {\n    return (\n      <Col key=\"after_args\" className=\"rule--func--bracket-after\">\n        {renderBrackets ? renderBrackets[1] : \")\"}\n      </Col>\n    );\n  };\n\n  renderFuncArgs = () => {\n    const {funcDefinition, funcKey} = this.meta;\n    if (!funcKey) return null;\n    const {args} = funcDefinition;\n    if (!args) return null;\n\n    return (\n      <>\n        {this.renderBracketBefore(funcDefinition)}\n        <Col key=\"args\" className=\"rule--func--args\">\n          {Object.keys(args).map((argKey, argIndex) => (\n            <Col key={`arg-${argKey}-${argIndex}`} className=\"rule--func--arg\">\n              {this.renderArgSep(argKey, args[argKey], argIndex, funcDefinition)}\n              {this.renderArgLabel(argKey, args[argKey])}\n              {this.renderArgLabelSep(argKey, args[argKey])}\n              {this.renderArgVal(funcKey, argKey, args[argKey])}\n            </Col>\n          ))}\n        </Col>\n        {this.renderBracketAfter(funcDefinition)}\n      </>\n    );\n  };\n\n  render() {\n    return (\n      <Col className=\"rule--func--wrapper\">\n        {this.renderFuncSelect()}\n        {this.renderFuncArgs()}\n      </Col>\n    );\n  }\n}\n\n\nclass ArgWidget extends PureComponent {\n  static propTypes = {\n    funcKey: PropTypes.string.isRequired,\n    argKey: PropTypes.string.isRequired,\n    setValue: PropTypes.func.isRequired,\n    setValueSrc: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n  };\n\n  setValue = (_delta, value, _widgetType) => {\n    const {setValue, argKey} = this.props;\n    setValue(argKey, value);\n  };\n\n  setValueSrc = (_delta, valueSrc, _widgetType) => {\n    const {setValueSrc, argKey} = this.props;\n    setValueSrc(argKey, valueSrc);\n  };\n\n  render() {\n    const {funcKey, argKey, parentFuncs} = this.props;\n    return (\n      <Widget\n        {...this.props} \n        setValue={this.setValue} \n        setValueSrc={this.setValueSrc} \n        isFuncArg={true}\n        parentFuncs={[...(parentFuncs || []), [funcKey, argKey]]}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { uuid } = Utils;\n\nexport default (props) => {\n  const {value, setValue, config, labelYes, labelNo, readonly, customProps = {}} = props;\n  const customRadioYesProps = customProps.radioYes || {};\n  const customRadioNoProps = customProps.radioNo || {};\n\n  const onCheckboxChange = e => setValue(e.target.checked);\n  const onRadioChange = e => setValue(e.target.value == \"true\");\n  const id = uuid(), id2 = uuid();\n\n  // return <>\n  //     <input key={id}  type=\"checkbox\" id={id} checked={!!value} disabled={readonly} onChange={onCheckboxChange} />\n  //     <label style={{display: \"inline\"}} key={id+\"label\"}  htmlFor={id}>{value ? labelYes : labelNo}</label>\n  // </>;\n\n  return <>\n    <input key={id}  type=\"radio\" id={id} value={true} checked={!!value} disabled={readonly} onChange={onRadioChange} { ...customRadioYesProps }/>\n    <label style={{display: \"inline\"}} key={id+\"label\"}  htmlFor={id}>{labelYes}</label>\n    <input key={id2}  type=\"radio\" id={id2} value={false} checked={!value} disabled={readonly} onChange={onRadioChange} { ...customRadioNoProps } />\n    <label style={{display: \"inline\"}} key={id2+\"label\"}  htmlFor={id2}>{labelNo}</label>\n  </>;\n\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { moment } = Utils;\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, readonly, customProps, } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    setValue(value);\n  };\n  \n  return (\n    <input type=\"date\"  value={value || \"\"}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { moment } = Utils;\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, use12Hours, readonly, customProps, } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    else\n      value = moment(new Date(value)).format(valueFormat);\n    setValue(value);\n  };\n\n  let dtValue = value;\n  if (!value)\n    dtValue = \"\";\n  else\n    dtValue = moment(value).format(\"YYYY-MM-DDTHH:mm\");\n  \n  return (\n    <input type=\"datetime-local\"  value={dtValue}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, customProps,}) => {\n  const renderOptions = () => \n    mapListValues(listValues, ({title, value}) => {\n      return <option key={value} value={value}>{title}</option>;\n    });\n\n  const getMultiSelectValues = (multiselect) => {\n    let values = [];\n    const options = multiselect.options;\n    for (let i = 0 ; i < options.length ; i++) {\n      const opt = options[i];\n      if (opt.selected) {\n        values.push(opt.value);\n      }\n    }\n    if (!values.length)\n      values = undefined; //not allow []\n    return values;\n  };\n\n  const onChange = e => setValue(getMultiSelectValues(e.target));\n  \n  return (\n    <select multiple\n      onChange={onChange}\n      value={value}\n      disabled={readonly}\n      {...omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])}\n    >\n      {renderOptions()}\n    </select>\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, customProps,}) => {\n  const renderOptions = () => \n    mapListValues(listValues, ({title, value}) => {\n      return <option key={value} value={value}>{title}</option>;\n    });\n\n  const onChange = e => setValue(e.target.value);\n  \n  const hasValue = value != null;\n  return (\n    <select\n      onChange={onChange}\n      value={hasValue ? value : \"\"}\n      disabled={readonly}\n      {...omit(customProps, [\"showSearch\", \"input\"])}\n    >\n      {!hasValue && <option disabled value={\"\"}></option>}\n      {renderOptions()}\n    </select>\n  );\n};\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport range from \"lodash/range\";\n\nexport default class Proximity extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    setOption: PropTypes.func.isRequired,\n    options: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    minProximity: PropTypes.number,\n    maxProximity: PropTypes.number,\n    optionPlaceholder: PropTypes.string,\n    optionTextBefore: PropTypes.string,\n    optionLabel: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    //children\n  };\n\n  static defaultProps = {\n    customProps: {},\n    minProximity: 2,\n    maxProximity: 10,\n    optionPlaceholder: \"Select words between\",\n    optionLabel: \"Words between\",\n    optionTextBefore: null,\n  };\n\n  handleChange = (value) => {\n    this.props.setOption(\"proximity\", parseInt(value));\n  };\n\n  render() {\n    const {\n      defaults, options, config, optionLabel, optionPlaceholder, customProps, \n      minProximity, maxProximity, optionTextBefore, readonly\n    } = this.props;\n    const {settings, widgets} = config;\n    const defaultProximity = defaults ? defaults.proximity : undefined;\n    const {showLabels} = settings;\n    const selectedProximity = options.get(\"proximity\", defaultProximity);\n    const proxValues = range(minProximity, maxProximity + 1).map((item) => ({title: item, value: item}));\n    const Select = widgets.select.factory;\n\n    return (\n      <div className=\"operator--PROXIMITY\">\n        <div className=\"operator--options\">\n          { showLabels\n            && <label className=\"rule--label\">{optionLabel}</label>\n          }\n          { !showLabels && optionTextBefore\n            && <div className=\"operator--options--sep\">\n              <span>{optionTextBefore}</span>\n            </div>\n          }\n          <Select\n            config={config}\n            value={selectedProximity}\n            listValues={proxValues}\n            setValue={this.handleChange}\n            readonly={readonly}\n            placeholder={optionPlaceholder}\n            {...customProps}\n          />\n        </div>\n        <div className=\"operator--widgets\">{this.props.children}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport * as Widgets from \"../components/widgets\";\nimport * as CustomOperators from \"../components/operators\";\nimport {CoreConfig} from \"@react-awesome-query-builder/core\";\n\nconst {\n  //value\n  VanillaBooleanWidget,\n  VanillaTextWidget,\n  VanillaTextAreaWidget,\n  VanillaDateWidget,\n  VanillaTimeWidget,\n  VanillaDateTimeWidget,\n  VanillaMultiSelectWidget,\n  VanillaSelectWidget,\n  VanillaNumberWidget,\n  VanillaSliderWidget,\n\n  //core\n  VanillaFieldSelect,\n  VanillaConjs,\n  VanillaButton,\n  VanillaButtonGroup,\n  VanillaProvider,\n  VanillaValueSources,\n  vanillaConfirm,\n  VanillaSwitch,\n\n  //common\n  ValueFieldWidget,\n  FuncWidget\n} = Widgets;\nconst { ProximityOperator } = CustomOperators;\n\n\n//----------------------------  conjunctions\n\nconst conjunctions = {\n  ...CoreConfig.conjunctions,\n};\n\n//----------------------------  operators\n\nconst operators = {\n  ...CoreConfig.operators,\n  proximity: {\n    ...CoreConfig.operators.proximity,\n    options: {\n      ...CoreConfig.operators.proximity.options,\n      factory: (props) => <ProximityOperator {...props} />,\n    },\n  },\n};\n\n\n//----------------------------  widgets\n\nconst widgets = {\n  text: {\n    ...CoreConfig.widgets.text,\n    factory: (props) => <VanillaTextWidget {...props} />,\n  },\n  textarea: {\n    ...CoreConfig.widgets.textarea,\n    factory: (props) => <VanillaTextAreaWidget {...props} />,\n  },\n  number: {\n    ...CoreConfig.widgets.number,\n    factory: (props) => <VanillaNumberWidget {...props} />,\n  },\n  slider: {\n    ...CoreConfig.widgets.slider,\n    factory: (props) => <VanillaSliderWidget {...props} />,\n  },\n  select: {\n    ...CoreConfig.widgets.select,\n    factory: (props) => <VanillaSelectWidget {...props} />,\n  },\n  multiselect: {\n    ...CoreConfig.widgets.multiselect,\n    factory: (props) => <VanillaMultiSelectWidget {...props} />,\n  },\n  date: {\n    ...CoreConfig.widgets.date,\n    factory: (props) => <VanillaDateWidget {...props} />,\n  },\n  time: {\n    ...CoreConfig.widgets.time,\n    factory: (props) => <VanillaTimeWidget {...props} />,\n  },\n  datetime: {\n    ...CoreConfig.widgets.datetime,\n    factory: (props) => <VanillaDateTimeWidget {...props} />,\n  },\n  boolean: {\n    ...CoreConfig.widgets.boolean,\n    factory: (props) => <VanillaBooleanWidget {...props} />,\n  },\n  field: {\n    ...CoreConfig.widgets.field,\n    factory: (props) => <ValueFieldWidget {...props} />,\n    customProps: {\n      showSearch: true\n    }\n  },\n  func: {\n    ...CoreConfig.widgets.func,\n    factory: (props) => <FuncWidget {...props} />,\n    customProps: {\n      //showSearch: true\n    }\n  },\n  case_value: {\n    ...CoreConfig.widgets.case_value,\n    factory: ({value, setValue}) =>  \n      <input \n        type=\"text\" \n        value={value || \"\"} \n        onChange={e => setValue(e.target.value)} \n      />\n  }\n};\n\n//----------------------------  types\n\nconst types = {\n  ...CoreConfig.types,\n  select: {\n    ...CoreConfig.types.select,\n    widgets: {\n      ...CoreConfig.types.select.widgets,\n      select: {\n        ...CoreConfig.types.select.widgets.select,\n        widgetProps: {\n          customProps: {\n            showSearch: true\n          }\n        },\n      }\n    }\n  }\n};\n\n//----------------------------  settings\n\nconst settings = {\n  ...CoreConfig.settings,\n\n  renderField: (props) => <VanillaFieldSelect {...props} />,\n  renderOperator: (props) => <VanillaFieldSelect {...props} />,\n  renderFunc: (props) => <VanillaFieldSelect {...props} />,\n  renderConjs: (props) => <VanillaConjs {...props} />,\n  renderSwitch: (props) => <VanillaSwitch {...props} />,\n  renderButton: (props) => <VanillaButton {...props} />,\n  renderButtonGroup: (props) => <VanillaButtonGroup {...props} />,\n  renderProvider: (props) => <VanillaProvider {...props} />,\n  renderValueSources: (props) => <VanillaValueSources {...props} />,\n  renderConfirm: vanillaConfirm,\n  renderSwitchPrefix: () => <>{\"Conditions\"}</>,\n\n  customFieldSelectProps: {\n    showSearch: true\n  },\n\n  defaultSliderWidth: \"200px\",\n  defaultSelectWidth: \"200px\",\n  defaultSearchWidth: \"100px\",\n  defaultMaxRows: 5,\n  renderSize: \"small\",\n  maxLabelsLength: 100,\n\n  showLock: false,\n  showNot: true,\n  forceShowConj: false,\n  groupActionsPosition: \"topRight\", // oneOf [topLeft, topCenter, topRight, bottomLeft, bottomCenter, bottomRight]\n  \n};\n\n//----------------------------\n\nexport default {\n  conjunctions,\n  operators,\n  widgets,\n  types,\n  settings,\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, maxLength, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  const textValue = value || \"\";\n  return (\n    <input\n      type=\"text\" \n      value={textValue} \n      placeholder={placeholder} \n      disabled={readonly} \n      onChange={onChange}\n      maxLength={maxLength}\n      {...customProps}\n    />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, maxLength, maxRows, fullWidth, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  const textValue = value || \"\";\n  return (\n    <textarea\n      value={textValue} \n      placeholder={placeholder}\n      disabled={readonly}\n      onChange={onChange}\n      maxLength={maxLength}\n      style={{\n        width: fullWidth ? \"100%\" : undefined\n      }}\n      {...customProps}\n    />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, use12Hours, readonly, customProps } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    setValue(value);\n  };\n  \n  return (\n    <input type=\"time\"  value={value || \"\"}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n  const numberValue = value == undefined ? \"\" : value;\n  return (\n    <input type=\"number\"  value={numberValue} placeholder={placeholder} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps = {}, } = props;\n  const customInputProps = customProps.input || {};\n  const customSliderProps = customProps.slider || customProps;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n  const numberValue = value == undefined ? \"\" : value;\n  return [\n    <input key={\"number\"} type=\"number\"  value={numberValue} placeholder={placeholder} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customInputProps} />\n    ,\n    <input key={\"range\"} type=\"range\"  value={numberValue} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customSliderProps} />\n  ];\n};\n","import React from \"react\";\n\nexport default ({items, setField, selectedKey, readonly}) => {\n  const renderOptions = (fields) => (\n    fields.map(field => {\n      const {items, path, label, disabled} = field;\n      if (items) {\n        return <optgroup disabled={disabled} key={path} label={label}>{renderOptions(items)}</optgroup>;\n      } else {\n        return <option disabled={disabled} key={path} value={path}>{label}</option>;\n      }\n    })\n  );\n\n  const onChange = e => setField(e.target.value);\n  \n  const hasValue = selectedKey != null;\n  return (\n    <select \n      onChange={onChange}\n      value={hasValue ? selectedKey : \"\"}\n      disabled={readonly}\n    >\n      {!hasValue && <option disabled value={\"\"}></option>}\n      {renderOptions(items)}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default ({id, not, setNot, conjunctionOptions, setConjunction, disabled, readonly, config, showNot, notLabel}) => {\n  const conjsCount = Object.keys(conjunctionOptions).length;\n  const lessThenTwo = disabled;\n  const {forceShowConj} = config.settings;\n  const showConj = forceShowConj || conjsCount > 1 && !lessThenTwo;\n\n  const renderOptions = () => \n    Object.keys(conjunctionOptions).map(key => {\n      const {id, name, label, checked} = conjunctionOptions[key];\n      const postfix = setConjunction.isDummyFn ? \"__dummy\" : \"\";\n      if ((readonly || disabled) && !checked)\n        return null;\n      return [\n        <input key={id+postfix} type=\"radio\" id={id+postfix} name={name+postfix} checked={checked} disabled={readonly || disabled} value={key} onChange={onChange} />\n        ,\n        <label key={id+postfix+\"label\"} htmlFor={id+postfix}>{label}</label>\n      ];\n    });\n  \n  const renderNot = () => {\n    const postfix = \"not\";\n    return [\n      <input key={id+postfix}  type=\"checkbox\" id={id+postfix} checked={not} disabled={readonly} onChange={onNotChange} />\n      ,\n      <label key={id+postfix+\"label\"}  htmlFor={id+postfix}>{notLabel || \"NOT\"}</label>\n    ];\n  };\n\n  const onChange = e => setConjunction(e.target.value);\n\n  const onNotChange = e => setNot(e.target.checked);\n\n  return [\n    showNot && renderNot(),\n    showConj && renderOptions()\n  ];\n  \n};\n","import React from \"react\";\n\nexport default ({type, label, onClick, readonly, config}) => {\n  const typeToLabel = {\n    \"addRuleGroup\": \"+\",\n    \"addRuleGroupExt\": \"+\",\n    \"delGroup\": \"x\",\n    \"delRuleGroup\": \"x\",\n    \"delRule\": \"x\",\n  };\n  const btnLabel = label || typeToLabel[type];\n  return <button onClick={onClick} type=\"button\" disabled={readonly}>{btnLabel}</button>;\n};\n","import React from \"react\";\n\nexport default ({children, config}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\n\n// value widgets\nexport {default as VanillaBooleanWidget} from \"./value/VanillaBoolean\";\nexport {default as VanillaTextWidget} from \"./value/VanillaText\";\nexport {default as VanillaTextAreaWidget} from \"./value/VanillaTextArea\";\nexport {default as VanillaDateWidget} from \"./value/VanillaDate\";\nexport {default as VanillaTimeWidget} from \"./value/VanillaTime\";\nexport {default as VanillaDateTimeWidget} from \"./value/VanillaDateTime\";\nexport {default as VanillaMultiSelectWidget} from \"./value/VanillaMultiSelect\";\nexport {default as VanillaSelectWidget} from \"./value/VanillaSelect\";\nexport {default as VanillaNumberWidget} from \"./value/VanillaNumber\";\nexport {default as VanillaSliderWidget} from \"./value/VanillaSlider\";\n\n// field select widget\nexport {default as VanillaFieldSelect} from \"./core/VanillaFieldSelect\";\n\n// core components\nexport {default as VanillaConjs} from \"./core/VanillaConjs\";\nexport {default as VanillaButton} from \"./core/VanillaButton\";\nexport {default as VanillaButtonGroup} from \"./core/VanillaButtonGroup\";\nexport {default as VanillaValueSources} from \"./core/VanillaValueSources\";\nexport {default as VanillaSwitch} from \"./core/VanillaSwitch\";\nexport {default as vanillaConfirm} from \"./core/vanillaConfirm\";\n\nexport const VanillaProvider = ({config, children}) => children;\n","import React from \"react\";\n\nexport default ({config, valueSources, valueSrc, title, setValueSrc, readonly}) => {\n  const renderOptions = (valueSources) => (\n    valueSources.map(([srcKey, info]) => (\n      <option key={srcKey} value={srcKey}>{info.label}</option>\n    ))\n  );\n\n  const onChange = e => setValueSrc(e.target.value);\n  \n  return (\n    <select \n      onChange={onChange}\n      value={valueSrc}\n      disabled={readonly}\n    >\n      {renderOptions(valueSources)}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default ({value, setValue, label, id, config, type}) => {\n  const onChange = e => setValue(e.target.checked);\n  const postfix = type;\n  return [\n    <input key={id+postfix}  type=\"checkbox\" id={id+postfix} checked={!!value} onChange={onChange} />\n    ,\n    <label key={id+postfix+\"label\"}  htmlFor={id+postfix}>{label}</label>\n  ];\n};\n","export default ({onOk, okText, cancelText, title}) => {\n  if (confirm(title)) {\n    onOk();\n  }\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport debounce from \"lodash/debounce\";\nconst { mergeListValues, listValueToOption, getListValue } = Utils.Autocomplete;\nconst { mapListValues, listValuesToArray } = Utils.ListUtils;\n\n\nconst useListValuesAutocomplete = ({\n  asyncFetch, useLoadMore, useAsyncSearch, forceAsyncSearch,\n  asyncListValues: selectedAsyncListValues,\n  listValues: staticListValues, allowCustomValues,\n  value: selectedValue, setValue, placeholder\n}, {\n  debounceTimeout,\n  multiple\n}) => {\n  const knownSpecialValues = [\"LOAD_MORE\", \"LOADING_MORE\"];\n  const loadMoreTitle = \"Load more...\";\n  const loadingMoreTitle = \"Loading more...\";\n  const aPlaceholder = forceAsyncSearch ? \"Type to search\" : placeholder;\n\n  // state\n  const [open, setOpen] = React.useState(false);\n  const [asyncFetchMeta, setAsyncFetchMeta] = React.useState(undefined);\n  const [loadingCnt, setLoadingCnt] = React.useState(0);\n  const [isLoadingMore, setIsLoadingMore] = React.useState(false);\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [asyncListValues, setAsyncListValues] = React.useState(undefined);\n\n  // ref\n  const asyncFectchCnt = React.useRef(0);\n  const componentIsMounted = React.useRef(true);\n  const isSelectedLoadMore = React.useRef(false);\n\n  // compute\n  const nSelectedAsyncListValues = listValuesToArray(selectedAsyncListValues);\n  const listValues = asyncFetch\n    ? (!allowCustomValues ? mergeListValues(asyncListValues, nSelectedAsyncListValues, true) : asyncListValues)\n    : staticListValues;\n  //const isDirtyInitialListValues = asyncListValues == undefined && selectedAsyncListValues && selectedAsyncListValues.length && typeof selectedAsyncListValues[0] != \"object\";\n  const isLoading = loadingCnt > 0;\n  const canInitialLoad = open && asyncFetch\n    && asyncListValues === undefined\n    && (forceAsyncSearch ? inputValue : true);\n  const isInitialLoading = canInitialLoad && isLoading;\n  const canLoadMore = !isInitialLoading && listValues && listValues.length > 0\n    && asyncFetchMeta && asyncFetchMeta.hasMore && (asyncFetchMeta.filter || \"\") === inputValue;\n  const canShowLoadMore = !isLoading && canLoadMore;\n  const options = mapListValues(listValues, listValueToOption);\n  const hasValue = selectedValue != null;\n  // const selectedListValue = hasValue ? getListValue(selectedValue, listValues) : null;\n  // const selectedOption = listValueToOption(selectedListValue);\n\n  // fetch\n  const fetchListValues = async (filter = null, isLoadMore = false) => {\n    // clear obsolete meta\n    if (!isLoadMore && asyncFetchMeta) {\n      setAsyncFetchMeta(undefined);\n    }\n\n    const offset = isLoadMore && asyncListValues ? asyncListValues.length : 0;\n    const meta = isLoadMore && asyncFetchMeta || !useLoadMore && { pageSize: 0 };\n\n    const newAsyncFetchCnt = ++asyncFectchCnt.current;\n    const res = await asyncFetch(filter, offset, meta);\n    const isFetchCancelled = asyncFectchCnt.current != newAsyncFetchCnt;\n    if (isFetchCancelled || !componentIsMounted.current) {\n      return null;\n    }\n\n    const { values, hasMore, meta: newMeta } = res && res.values ? res : { values: res };\n    const nValues = listValuesToArray(values);\n    let assumeHasMore;\n    let newValues;\n    if (isLoadMore) {\n      newValues = mergeListValues(asyncListValues, nValues, false);\n      assumeHasMore = newValues.length > asyncListValues.length;\n    } else {\n      newValues = nValues;\n      if (useLoadMore) {\n        assumeHasMore = newValues.length > 0;\n      }\n    }\n\n    // save new meta\n    const realNewMeta = hasMore != null || newMeta != null || assumeHasMore != null ? {\n      ...(assumeHasMore != null ? { hasMore: assumeHasMore } : {}),\n      ...(hasMore != null ? { hasMore } : {}),\n      ...(newMeta != null ? newMeta : {}),\n      filter\n    } : undefined;\n    if (realNewMeta) {\n      setAsyncFetchMeta(realNewMeta);\n    }\n\n    return newValues;\n  };\n\n  const loadListValues = async (filter = null, isLoadMore = false) => {\n    setLoadingCnt(x => (x + 1));\n    setIsLoadingMore(isLoadMore);\n    const list = await fetchListValues(filter, isLoadMore);\n    if (!componentIsMounted.current) {\n      return;\n    }\n    if (list != null) {\n      // tip: null can be used for reject (eg, if user don't want to filter by input)\n      setAsyncListValues(list);\n    }\n    setLoadingCnt(x => (x - 1));\n    setIsLoadingMore(false);\n  };\n  const loadListValuesDebounced = React.useCallback(debounce(loadListValues, debounceTimeout), []);\n\n  // Unmount\n  React.useEffect(() => {\n    return () => {\n      componentIsMounted.current = false;\n    };\n  }, []);\n\n  // Initial loading\n  React.useEffect(() => {\n    if (canInitialLoad && loadingCnt == 0 && asyncFectchCnt.current == 0) {\n      (async () => {\n        await loadListValues();\n      })();\n    }\n  }, [canInitialLoad]);\n\n  // Event handlers\n  const onOpen = () => {\n    setOpen(true);\n  };\n\n  const onClose = (_e) => {\n    if (isSelectedLoadMore.current) {\n      isSelectedLoadMore.current = false;\n      if (multiple) {\n        setOpen(false);\n      }\n    } else {\n      setOpen(false);\n    }\n  };\n\n  const onDropdownVisibleChange = (open) => {\n    if (open) {\n      onOpen();\n    } else {\n      onClose();\n    }\n  };\n\n  const isSpecialValue = (option) => {\n    const specialValue = option?.specialValue || option?.value;\n    return knownSpecialValues.includes(specialValue);\n  };\n\n  const onChange = async (_e, option) => {\n    let specialValue = option?.specialValue || option?.value \n      || multiple && option.map(opt => opt?.specialValue || opt?.value).find(v => !!v);\n    if (specialValue == \"LOAD_MORE\") {\n      isSelectedLoadMore.current = true;\n      await loadListValues(inputValue, true);\n    } else if (specialValue == \"LOADING_MORE\") {\n      isSelectedLoadMore.current = true;\n    } else {\n      if (multiple) {\n        const options = option;\n        let newSelectedListValues = options.map((o, i) => {\n          const item = o.value != null ? o : getListValue(o, listValues);\n          // AntDesign puts array of labels in `_e` (`option` is array of objects, but custom option is always `{}`)\n          // MUI puts array of labels in `option`\n          const customItem = allowCustomValues && !item ? (Array.isArray(_e) ? _e[i] : o) : null;\n          return item || customItem;\n        });\n        let newSelectedValues = newSelectedListValues\n          .filter(o => o !== undefined)\n          .map(o => (o.value !== undefined ? o.value : o));\n        if (!newSelectedValues.length)\n          newSelectedValues = undefined; //not allow []\n        setValue(newSelectedValues, newSelectedListValues);\n      } else {\n        const v = option == null ? undefined : option.value;\n        setValue(v, [option]);\n      }\n    }\n  };\n\n  const onInputChange = async (_e, newInputValue) => {\n    const val = newInputValue;\n    //const isTypeToSearch = e.type == 'change';\n\n    if (val === loadMoreTitle || val === loadingMoreTitle) {\n      return;\n    }\n\n    setInputValue(val);\n\n    if (allowCustomValues) {\n      if (multiple) {\n        //todo\n      } else {\n        setValue(val, [val]);\n      }\n    }\n\n    const canSearchAsync = useAsyncSearch && (forceAsyncSearch ? !!val : true);\n    if (canSearchAsync) {\n      await loadListValuesDebounced(val);\n    } else if (useAsyncSearch && forceAsyncSearch) {\n      setAsyncListValues([]);\n    }\n  };\n\n  // to keep compatibility with antD\n  const onSearch = async (newInputValue) => {\n    if (newInputValue === \"\" && !open) {\n      return;\n    }\n\n    await onInputChange(null, newInputValue);\n  };\n\n  // Options\n  const extendOptions = (options) => {\n    const filtered = [...options];\n    if (useLoadMore) {\n      if (canShowLoadMore) {\n        filtered.push({\n          specialValue: \"LOAD_MORE\",\n          title: loadMoreTitle,\n        });\n      } else if (isLoadingMore) {\n        filtered.push({\n          specialValue: \"LOADING_MORE\",\n          title: loadingMoreTitle,\n          disabled: true\n        });\n      }\n    }\n    return filtered;\n  };\n\n  const getOptionSelected = (option, valueOrOption) => {\n    if (valueOrOption == null)\n      return null;\n    const selectedValue = valueOrOption.value != undefined ? valueOrOption.value : valueOrOption;\n    return option.value === selectedValue;\n  };\n\n  const getOptionDisabled = (valueOrOption) => {\n    return valueOrOption && valueOrOption.disabled;\n  };\n\n  const getOptionLabel = (valueOrOption) => {\n    if (valueOrOption == null)\n      return null;\n    const option = valueOrOption.value != undefined ? valueOrOption\n      : listValueToOption(getListValue(valueOrOption, listValues));\n    if (!option && valueOrOption.specialValue) {\n      // special last 'Load more...' item\n      return valueOrOption.title;\n    }\n    if (!option && allowCustomValues) {\n      // there is just string value, it's not item from list\n      return valueOrOption;\n    }\n    if (!option) {\n      // weird\n      return valueOrOption;\n    }\n    return option.title;\n  };\n\n  return {\n    options,\n    listValues,\n    hasValue,\n\n    open,\n    onOpen,\n    onClose,\n    onDropdownVisibleChange,\n    onChange,\n    \n    inputValue,\n    onInputChange,\n    onSearch,\n    canShowLoadMore,\n    isInitialLoading,\n    isLoading,\n    isLoadingMore,\n    isSpecialValue,\n\n    extendOptions,\n    getOptionSelected,\n    getOptionDisabled,\n    getOptionLabel,\n\n    // unused\n    //selectedListValue,\n    //selectedOption,\n    aPlaceholder,\n  };\n};\n\nexport default useListValuesAutocomplete;\n","var map = {\n\t\"./es-us\": 88218,\n\t\"./es-us.js\": 88218,\n\t\"./ru\": 31313,\n\t\"./ru.js\": 31313\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 40164;"],"names":["defaultValue","value","_default","deepEqual","v1","v2","Map","equals","JSON","stringify","shallowEqual","a","b","deep","Array","isArray","shallowEqualArrays","shallowEqualObjects","arrA","arrB","len","length","i","isEqual","objA","objB","aKeys","Object","keys","bKeys","key","isImmutable","v","toJS","toImmutableList","Immutable","applyToJS","escapeRegExp","string","replace","isJsonLogic","logic","sleep","delay","Promise","resolve","setTimeout","mergeArraysSmart","arr1","arr2","map","op","indexOf","orig","next","slice","after","reverse","find","before","filter","x","reduce","acc","newOp","rel","relOp","ind","splice","Infinity","isDev","process","getFirstDefined","ret","arr","undefined","logger","devMode","verbose","console","error","log","warn","debug","info","getLogger","query_builder_seed","timePart","Date","getTime","toString","substr","c","r","Math","floor","random","settings","formatField","field","parts","label2","fieldDefinition","config","isForDisplay","valueSourcesInfo","fieldSeparator","fieldSeparatorDisplay","canReorder","canRegroup","canDeleteLocked","canLeaveEmptyGroup","shouldCreateEmptyGroup","canShortMongoQuery","removeEmptyGroupsOnLoad","removeIncompleteRulesOnLoad","removeInvalidMultiSelectValuesOnLoad","setOpOnChangeField","groupOperators","defaultGroupConjunction","locale","moment","valueLabel","valuePlaceholder","fieldLabel","operatorLabel","funcLabel","fieldPlaceholder","funcPlaceholder","operatorPlaceholder","lockLabel","lockedLabel","deleteLabel","addGroupLabel","addCaseLabel","addDefaultCaseLabel","defaultCaseLabel","addRuleLabel","addSubRuleLabel","delGroupLabel","notLabel","valueSourcesPopupTitle","removeRuleConfirmOptions","removeGroupConfirmOptions","isObject","listValue","title","listValuesToArray","listValuesObj","listValuesArr","push","getItemInListValues","listValues","values","getTitleInListValues","it","getValueInListValues","mapListValues","mapFn","lv","defaultField","canGetFirst","parentRuleGroupPath","getFirstField","defaultOperator","fieldConfig","getFieldConfig","fieldOperators","operators","fieldDefaultOperator","includes","getFirstOperator","defaultOperatorOptions","operator","operatorConfig","getOperatorConfig","options","defaults","defaultRuleProperties","item","setDefaultFieldAndOp","showErrorMessage","properties","current","valueSrc","operatorOptions","set","getNewValueForFieldOp","newValue","newValueSrc","newValueType","newValueError","conjs","conjunctions","defaultConjunction","defaultGroupProperties","conjunction","not","defaultItemProperties","type","defaultRule","id","defaultRoot","uuid","children1","createListFromArray","ids","emptyProperies","expandTreePath","path","suffix","interpose","withMutations","list","skip","apply","expandTreeSubpath","getItemByPath","tree","children","get","res","forEach","removePathsInTree","newTree","_processNode","itemPath","removeIn","child","_childId","removeIsLockedInTree","isParentLocked","isLocked","getIn","deleteIn","fixPathsInTree","lev","nodeId","currPath","currId","itemId","setIn","constructor","name","childId","fixEmptyGroupsInTree","allChildrenGone","curr","size","getFlatTree","flat","items","realHeight","_flatizeTree","insideCollapsed","insideLocked","insideRuleGroup","parentType","caseId","collapsed","childrenIds","_child","isRuleGroup","isLeaf","itemsBefore","top","height","parent","isDefaultCase","concat","leaf","index","leafsCount","_top","node","subinfo","itemsAfter","assign","_height","bottom","prevId","nextId","prev","getTotalReordableNodesCountInTree","cnt","getTotalRulesCountInTree","getTreeBadFields","badFields","valueError","from","Set","getLightTree","children1AsArray","getSwitchValues","vals","caseValue","isEmptyTree","hasChildren","isTypeOf","typeOf","isNaN","validateAndFixTree","_oldTree","newConfig","oldConfig","validateTree","removeEmptyGroups","removeIncompleteRules","validateItem","meta","oldChildren","sanitized","submeta","currentChild","validateGroup","oldSerialized","operatorDefinition","availOps","getOperatorsForField","cardinality","newSerialized","isComplete","validateRule","validateValue","leftField","valueType","asyncListValues","canFix","isEndValue","isRawValue","validError","fixedValue","validateFieldValue","validateFuncValue","validateNormalValue","w","getWidgetForFieldOp","fieldWidgetDefinition","omit","getFieldWidgetConfig","rightFieldDefinition","fieldSettings","fn","args","validResult","validateValueInList","List","val","goodVals","badVals","vv","goodValues","badValues","plural","join","wConfig","widgets","wType","jsType","allowCustomValues","min","max","_valueSrc","isFuncArg","_isFuncArg","leftFieldStr","rightFieldStr","funcKey","funcConfig","getFuncConfig","returnType","argKey","argConfig","argVal","fieldDef","argValue","argValueSrc","argValidError","fixedArgVal","selectTypes","newField","newOperator","changedProp","currentField","currentOperator","currentValue","currentValueSrc","currentValueType","currentAsyncListValues","convertableWidgets","clearValueOnChangeField","clearValueOnChangeOp","newOperatorConfig","operatorCardinality","currentFieldConfig","newFieldConfig","canReuseValue","vs","currentWidget","newWidget","currentValueWidget","newValueWidget","canReuseWidget","firstWidgetConfig","first","valueSources","getValueSourcesForFieldOp","valueFixes","valueErrors","vType","vSrc","isValidSrc","validateError","fixValue","dropValue","_ignore","validateValues","jsValues","rangeValidateError","vt","parentPathArr","split","parentField","getFieldRawConfig","firstField","keysPath","subfields","fields","fieldOps","getFieldPath","onlyKeys","_curr","getFuncPathLabels","getFieldPathLabels","fieldsKey","subfieldsKey","parentParts","part","cnf","label","last","getFieldPartsConfigs","parentFieldDef","getValueLabel","delta","isSpecialRange","func","arg","showLabels","fieldWidgetConfig","mergedOpConfig","valueLabels","placeholder","_getWidgetsAndSrcsForFieldOp","valueSrcs","opConfig","widgetConfig","widget","widgetValueSrc","canAdd","filterValueSourcesForField","canAddValueSrc","widgetWeight","wg","preferWidgets","mainWidget","sort","w1","w2","getWidgetsForFieldOp","_fieldsCntByType","minCnt","_funcsCntByType","funcs","filteredValueSrcs","formatFieldName","fieldParts","fieldName","tableName","fieldPartsCopy","parentFieldName","errors","extendConfig","configId","__configId","merge","defaultSettings","types","clone","typesConfig","_extendTypeConfig","_extendTypesConfig","__fieldNames","_extendFieldsConfig","_extendFuncArgsConfig","defineProperty","enumerable","writable","typeConfig","typeWidgetConfig","typeWidgetOperators","excludeOperators","widgetProps","mainWidgetProps","subconfig","_extendFieldConfig","funcDef","tmpIsOptional","argDef","isOptional","excludeOperatorsForField","keysToPutInFieldSettings","k","normalizeListValues","disabled","excludeOperatorsForType","shouldIncludeOperators","addOperators","o","computedFieldName","computeFieldName","targetFields","pathKey","f","fConfig","l","pop","unshift","normalizeField","fieldStr","getFuncArgConfig","mergeWith","objValue","srcValue","_key","_object","_source","_stack","widgetOpProps","opProps","fieldWidgetOpProps","fieldWidgetProps","valueFieldSettings","mergedConfig","completeValue","completeFuncValue","complValue","tmpHasOptional","filteredValueSources","argDefaultValueSrc","completeArgValue","getDefaultArgValue","_checkFuncValue","setFunc","firstValueSrc","toList","toOrderedMap","setArgValue","setArgValueSrc","argValSrc","_argConfig","_config","queryBuilderFormat","usedFields","formatItem","formatGroup","formatRule","rules","condition","toUpperCase","hasUndefinedValues","fieldType","toArray","secondField","ruleQuery","input","jsonLogicFormat","data","ff","tmp","p","pdef","mode","isRoot","lockedOp","jsonLogic","conjunctionDefinition","conj","jsonLogicConj","toLowerCase","groupField","groupOperator","groupOperatorDefinition","formattedValue","formatItemValue","isGroup0","resultQuery","formattedField","count","var","formatLogic","reversedOp","revOperatorDefinition","isRev","iValueSrc","iValueType","iValue","valueTypes","oldUsedFields","fvalue","cValue","fieldWidgetDef","fv","formatValue","operatorDef","formatFunc","pick","formattedArgs","formattedArgVal","formattedArgsArr","funcName","isMethod","jsonLogicIsMethod","obj","params","varName","jsonLogicVar","groupVarKey","buildFnToFormatOp","formatteOp","isReverseArgs","_jsonLogicIsRevArgs","rangeOps","eqOps","opDef","opOpts","mongodbFormat","_mongodbFormat","returnErrors","parents","_not","_canWrapExpr","_fieldName","_value","hasParentRuleGroup","parentPath","realParentPath","groupFieldName","groupFieldDef","canHaveEmptyChildren","reversedConj","mongoConj","canShort","rule","totalQuery","filterQuery","as","cond","_f","useExpr","fvUseExpr","wrapExpr","mongoFormatOp","formatRightField","mongoFormatValue","rightField","fieldPartsLabels","fieldFullLabel","formatFieldFn","mongoFunc","mongoArgsAsObject","argsCnt","lastArg","argAsyncListValues","mongoFormatFunc","SqlString","SqlStringOrig","trim","charAt","substring","escapeLike","any_start","any_end","escape","sqlEmptyValue","mongoEmptyValue","spelEscapeString","spelInlineList","javaType","jt","escapedVals","numberJavaTypes","Error","Number","isInteger","spelEscape","spelFixList","numberToFloat","arrayToArray","isFinite","spelFormatConcat","spelImportConcat","isVariable","stringifyForDisplay","sqlFormat","_sqlFormat","sqlFormatConj","revOpDef","canFormatOp","sqlOp","sqlFormatOp","canFormatRevOp","valFrom","valTo","sqlFormatReverse","sqlFormatValue","valFieldDefinition","sqlFunc","sqlFormatFunc","argsStr","entries","spelFormat","_spelFormat","formatSwitch","formatCase","cases","filteredCases","left","right","isRuleGroupArray","isSpelArray","realGroupOperator","checkOp","isGroupOpRev","realGroupOperatorDefinition","omitBrackets","spelFormatConj","getSize","fullSize","filteredSize","groupValue","formatExpression","spelOp","objectIsFirstArg","isFunction","sop","spelFormatOp","spelFormatReverse","realOp","expectedValueType","spelFormatValue","fieldPartsConfigs","formatSpelField","fieldPartsMeta","parentCnf","isSpelMap","isSpelItemMap","isSpelVariable","spelFunc","spelFormatFunc","queryString","conjStr","formatConj","aggrArgs","formatAggr","formatReverse","_operator","fop","labelForFormat","returnArgs","revOperatorDef","formatOp","cutParentField","fieldLabel2","funcValue","formattedArgsWithNames","argName","buildEsRule","elasticSearchQueryType","queryType","parameters","elasticSearchFormatValue","textField","determineField","script","elasticSearchScript","geoPointString","coordsNumberArray","top_left","lat","lon","bottom_right","buildEsGeoPoint","gte","lte","dateTime","lt","gt","buildEsRangeParameters","buildEsWildcardParameters","buildRegexpParameters","buildParameters","bool","must_not","elasticSearchFormat","recursiveFxn","childrenArray","valueSeq","occurrence","combinator","determineOccurrence","result","resultFlat","buildEsGroup","getTree","immutableTree","light","loadTree","serTree","isImmutableTree","isTree","jsTreeToImmutable","startsWith","parse","checkTree","extendedConfig","isValidTree","fromJS","outValue","valueJs","arrayUniq","loadFromJsonLogic","logicTree","_loadFromJsonLogic","conv","buildConv","jsTree","convertFromLogic","wrapInDefaultConj","immTree","opKey","opk","jsonLogic2","conjKey","fk","varKeys","altVarKey","expectedType","beforeErrorsCnt","isEmptyOp","convertField","convertFunc","convertVal","convertConj","convertOp","afterErrorsCnt","h","m","s","valueFormat","dateVal","setMilliseconds","setHours","setMinutes","setSeconds","format","toISOString","e","asyncFetch","argsArr","opts","funcKeys","fc","jsonLogicImport","parsed","_e","argKeys","parentFieldConfig","complexFields","complexFieldsGroupAncestors","fromEntries","ancs","fp","usedRuleGroups","topLevelFieldsFilter","groupToId","groupAncestors","at","ch","parentFieldParts","gf","gfc","groupId","j","wrapInDefaultConjRuleGroup","parseRule","arity","_parseRule","isRevArgs","opKeys","jlField","having","init","group","op2","parseRes","havingVals","canRev","showNot","convertedArgs","asyncListValuesArr","loadFromSpel","_loadFromSpel","spelStr","compiledExpression","convertedObj","compileRes","SpelExpressionEvaluator","_compiledExpression","convertCompiled","convertToTree","expr","parentExpr","getType","getChildren","selection","lastChild","isSize","methodName","isLength","sourceParts","source","isThis","itype","getRaw","getValue","flatizeTernary","functionName","qid","cls","isVar","_processTernaryChildren","tern","if_val","else_val","spelOps","spelConj","convertPath","isError","convertArg","spel","parentSpel","literalTypes","number","boolean","null","groupFieldParts","_groupField","fullParts","isUnary","funcToOpMap","buildRule","dateFormat","dateString","isValid","timeString","buildCaseValueConcat","buildRuleGroup","groupFilter","groupFieldValue","groupOpRule","compareArgs","leftSource","rightSource","leftVal","rightVal","isBetweenNormal","isBetweenRev","isBetween","to","isNumbers","isSameSource","oneSpel","convertChildren","fieldObj","opArg","ws","buildSimpleSwitch","caseI","buildCase","sw","valProperties","buildCaseValProperties","_processConcatChildren","convertedChild","convVal","widgetDef","importCaseValue","spelImportValue","normVal","normErrors","simulateAsyncFetch","all","cPageSize","search","offset","pageSize","filtered","ceil","currentOffset","newOffset","hasMore","mergeListValues","newValues","toStart","old","newFiltered","av","merged","listValueToOption","groupTitle","renderTitle","option","getListValue","selectedValue","shift","NOW","jsonLogicCustomOps","now","RELATIVE_DATETIME","renderBrackets","renderSeps","date","dim","abs","date_add","add","toDate","parseInt","customProps","showSearch","plus","minus","day","week","month","year","LOWER","str","UPPER","LINEAR_REGRESSION","_","coef","bias","mongoFormatOp1","mop","mc","_op","$field","mv","mongoFormatOp2","mops","AND","sqlConj","spelConjs","OR","equal","opStr","bind","not_equal","isNotOp","less","less_or_equal","greater","greater_or_equal","like","not_like","starts_with","ends_with","between","textSeparators","not_between","is_empty","empty","is_not_empty","is_null","is_not_null","select_equals","select_not_equals","select_any_in","select_not_any_in","multiselect_contains","multiselect_not_contains","multiselect_equals","multiselect_not_equals","proximity","val1","val2","prox","aVal1","aVal2","optionLabel","optionTextBefore","optionPlaceholder","minProximity","maxProximity","some","none","text","wgtDef","regex","textarea","fullWidth","isFloat","step","slider","select","valLabel","multiselect","valsLabels","isCallable","useKeyboard","time","timeFormat","use12Hours","datetime","labelYes","labelNo","rightFieldDef","case_value","partsExt","q","whereStr","aggrField","aggrFieldDef","canCompareFieldWithField","leftFieldConfig","rightFieldConfig","ADD_GROUP","ADD_CASE_GROUP","REMOVE_GROUP","SET_CONJUNCTION","SET_NOT","ADD_RULE","REMOVE_RULE","SET_FIELD","SET_OPERATOR","SET_VALUE","SET_VALUE_SRC","SET_OPERATOR_OPTION","SET_LOCK","SET_TREE","MOVE_ITEM","PLACEMENT_AFTER","PLACEMENT_BEFORE","PLACEMENT_APPEND","PLACEMENT_PREPEND","SET_DRAG_PROGRESS","SET_DRAG_START","SET_DRAG_END","addNewGroup","state","groupUuid","groupPath","canAddNewRule","origState","addItem","removeGroup","removeItem","removeRule","parentOperator","parentOperatorConfig","hasGroupCountRule","isParentRuleGroup","isEmptyParentGroup","canLeaveEmpty","initialEmptyWhere","setNot","setLock","lock","setConjunction","_addChildren1","id1","it1","currentNumber","maxNumber","maxNumberOfCases","maxNumberOfRules","maxNesting","rootType","isTernary","targetItem","caseGroup","take","childrenPath","targetChildren","targetChildrenSize","isLastDefaultCase","newChildren","newChildrenWithLast","mergeIn","moveItem","fromPath","toPath","placement","sourcePath","sourceChildren","targetPath","constants","target","isSameParent","isSourceInsideTarget","isTargetInsideSource","sourceSubpathFromTarget","targetSubpathFromSource","newTargetChildren","newSourceChildren","updateIn","_oldChildren","setField","currentType","currentProperties","wasRuleGroup","isRuleGroupExt","isChangeToAnotherType","currentOperatorOptions","lastOp","strategy","groupProperties","newOperatorOptions","setOperator","setValue","__isInternal","isInternalValueChange","calculatedValueType","calculateValueType","isLastEmpty","isLastError","setValueSrc","srcKey","setOperatorOption","checkEmptyGroups","emptyDrag","dragging","y","mousePos","dragStart","getActionMeta","action","actionTypesToIgnore","mapValues","affectedField","getField","getMemoizedTree","emptyTree","emptyState","unset","__isInternalValueChange","__lastAction","actionMeta","validatedTree","ruleType","setTree","addRule","addDefaultCaseGroup","addCaseGroup","addGroup","Utils","BasicUtils","Export","Import","useListValuesAutocomplete","Hooks","nonCheckedIcon","CheckBoxOutlineBlank","fontSize","checkedIcon","CheckBox","defaultFilterOptions","createFilterOptions","emptyArray","props","multiple","readonly","groupBy","filterOptionsConfig","filterOptionsFn","debounceTimeout","open","onOpen","onClose","onChange","onInputChange","inputValue","isInitialLoading","isLoading","aPlaceholder","extendOptions","getOptionSelected","getOptionDisabled","getOptionLabel","defaultSelectWidth","defaultSearchWidth","width","showCheckboxes","rest","customInputProps","inputWidth","customAutocompleteProps","minWidth","style","useStyles","makeStyles","theme","classesChip","root","marginTop","marginBottom","useStylesChip","classes","FormControl","Autocomplete","disableCloseOnSelect","freeSolo","loading","readOnly","renderInput","TextField","InputProps","endAdornment","CircularProgress","color","renderTags","getTagProps","Chip","renderOption","selected","specialValue","Checkbox","icon","marginRight","checked","filterOptions","itemsToListValues","level","grouplabel","prefix","repeat","paper","padding","spacing","MaterialTextWidget","maxLength","textValue","inputProps","MaterialTextAreaWidget","maxRows","defaultMaxRows","multiline","MaterialDateWidget","Picker","KeyboardDatePicker","DatePicker","formatSingleValue","MaterialDateTimeWidget","KeyboardDateTimePicker","DateTimePicker","dateTimeFormat","ampm","MaterialTimeWidget","KeyboardTimePicker","TimePicker","hasSeconds","timeValue","views","MaterialSelectWidget","hasValue","Select","autoWidth","displayEmpty","renderValue","getListValueTitle","MenuItem","MaterialNumberWidget","numberValue","MaterialSliderWidget","marks","defaultSliderWidth","customSliderProps","sliderValue","muiMarks","InputCmp","onBlur","SliderCmp","Slider","valueLabelDisplay","stylesSliderWrapper","marginLeft","paddingLeft","display","alignItems","MaterialRangeWidget","placeholders","useEffect","valueFrom","valueTo","oneValue","handleInputBlur","FromInputCmp","ToInputCmp","stylesInputWrapper","className","MaterialBooleanWidget","Typography","component","Grid","container","Switch","MaterialMultiSelectWidget","selectedValues","selectedTitles","ListItemText","primary","MaterialAutocompleteWidget","MaterialFieldSelect","selectedKey","findLabel","renderOptions","ListSubheader","disableSticky","MaterialFieldAutocomplete","MaterialAutocomplete","_asyncValues","MaterialButton","onClick","typeToOnlyIcon","Delete","Add","typeToIcon","typeToColor","IconButton","Button","startIcon","MaterialButtonGroup","MaterialConjs","conjunctionOptions","conjsCount","lessThenTwo","showConj","forceShowConj","ButtonGroup","disableElevation","variant","postfix","isDummyFn","MaterialSwitch","checkedLabel","hideLabel","renderSize","showLabel","Lock","LockOpen","FormControlLabel","control","MaterialValueSources","React","anchorEl","setAnchorEl","handleClose","Boolean","event","currentTarget","handleOpen","ExpandMoreSharp","Popover","anchorOrigin","vertical","horizontal","transformOrigin","disablePortal","FormLabel","RadioGroup","Radio","MaterialConfirm","onOk","okText","cancelText","confirmFn","description","confirmationText","cancellationText","then","MaterialUseConfirm","useConfirm","MaterialProvider","settingsTheme","settingsLocale","themeConfig","material","createTheme","base","withProviders","M","utils","MomentUtils","ThemeProvider","MaterialWidgets","BasicConfig","renderField","renderOperator","renderFunc","renderConjs","renderSwitch","renderButton","renderButtonGroup","renderValueSources","renderProvider","renderConfirm","factory","rangeslider","singleWidget","TreeStore","setDragProgress","setDragStart","setDragEnd","TreeActions","configKeys","createConfigMemo","configStore","findConfig","savedConfig","findExtended","extendAndStore","findOrExtend","pickConfig","truncateString","n","useWordBoundary","subString","lastIndexOf","immutableEqual","getReactRootNodeType","el","_reactRootContainer","getOwnPropertyNames","parentNode","isUsingLegacyReactDomRender","liteShouldComponentUpdate","self","nextProps","nextState","prevProps","prevState","should","chs","changed","pureShouldComponentUpdate","canUseUnsafe","useOnPropsChanged","UNSAFE_componentWillReceiveProps","onPropsChanged","componentWillReceiveProps","Query","shouldComponentUpdate","nextValue","oldValidatedTree","_updateActions","dispatch","this","actions","actionCreators","actionCreator","bindActionCreators","renderBuilder","Component","propTypes","PropTypes","ConnectedQuery","connect","context","displayName","QueryContainer","prevValue","getMemoizedConfig","originalTree","createValidationMemo","reducer","treeStoreReducer","store","createStore","nextConfig","isConfigChanged","storeValue","getState","isTreeChanged","currentTree","setState","get_children","QueryWrapper","_isReorderingTree","createSortableContainer","Builder","CanMoveFn","_getEventTarget","__mocked_window","document","body","window","onDragStart","dom","treeEl","closest","_isUsingLegacyReactDomRender","classList","groupPadding","treeElContainer","scrollTop","_getScrollParent","tmpAllGroups","_getDraggableNodeEl","_getPlaceholderNodeEl","querySelectorAll","anyGroup","getComputedStyle","getPropertyValue","offsetLeft","offsetTop","offsetWidth","offsetHeight","itemInfo","clientX","clientY","eventTarget","addEventListener","onDrag","onDragEnd","doHandleDrag","startDragging","startMousePos","__mock_dom","dragEl","plhEl","plX","getBoundingClientRect","scrollX","plY","scrollY","startX","startY","startClientX","startClientY","startScrollTop","pos","moved","handleDrag","preventDefault","remove","_cacheEls","removeEventListener","_prevProps","_prevState","oldPlX","oldPlY","indexId","ignoreCache","contains","querySelector","els","getElementsByClassName","overflowY","scrollHeight","_isScrollable","dragInfo","canMoveFn","dragRect","plhRect","hovRect","treeRect","moveInfo","dragId","dragDirs","hrz","vrt","hovCNodeEl","trgCoord","__mocked_hov_container","hovNodeEl","elementFromPoint","rootGroupContainer","firstChild","isGroup","hovNodeId","getAttribute","hovEl","doAppend","doPrepend","hovHeight","hovII","trgRect","trgEl","trgII","altII","hovInnerEl","hovEl2","hovRect2","hovHeight2","isSamePos","dragLeftOffset","dragLev","round","availMoves","altMoves","isToRoot","isToCase","prevCaseId","nextCaseId","prevCase","nextCase","addCaseII","am","toII","fromCaseII","toCaseII","bestMode","filteredMoves","trg","isInside","toParentII","canMove","levs","curLev","allLevs","closestDragLev","move","fromII","canRegroupCases","canLeaveEmptyCase","newLev","isBeforeAfter","isPend","isLev1","isParentChange","isStructChange","isForbiddenStructChange","isLockedChange","isLastFromCase","newRulesInTargetCase","GroupOrRule","handleDraggerMouseDown","wrapper","isDraggingTempo","isDraggingMe","otherProps","isTrueLocked","styles","cn","classNames","ref","PureComponent","Operator","getMeta","selectedField","selectedOperator","pickBy","_opts","buildOptions","isOpSelected","selectedOpts","selectedKeys","selectedPath","selectedLabel","ops","fieldKey","renderProps","Col","dummyFn","DragIcon","xmlns","viewBox","fill","d","ConfirmFn","Cmp","OperatorWrapper","selectedFieldPartsLabels","showOperator","showOperatorLabel","selectedFieldWidgetConfig","operatorInlineLabel","Field","maxLabelsLength","isFieldSelected","currField","getFieldLabel","partsLabels","selectedFullLabel","selectedAltLabel","parentFieldPath","sourceFields","fieldOpts","optGroupLabel","fullLabel","altLabel","tooltip","subpath","hideForSelect","FieldWrapper","classname","customFieldSelectProps","immValue","immValueError","widgetDefinition","widgetValueLabel","setValueHandler","parentFuncs","widgetFactory","isConst","funcArgDummyOpDef","Widget","_setValue","widgetType","oldRange","_onChangeValueSrc","renderWidget","iValues","aField","widgetLabel","WidgetFactory","setValueSrcHandler","ValueSources","valueSourcesOptions","sourceLabel","renderSep","sepText","sepLabel","renderWidgetDelta","simpleField","fieldFunc","fieldArg","isForRuleGruop","isCaseValue","iValueSrcs","defaultWidget","isSpecialRangeForSrcField","isTrueSpecialRange","range","OperatorOptions","operatorDefinitions","optionsFactory","basicOptionsProps","optionsCmp","setOption","Rule","removeSelf","reordableNodesCnt","selectedFieldConfig","isSelectedGroup","isFieldAndOpSelected","selectedOperatorConfig","selectedOperatorHasOptions","hideOperator","showDragIcon","showWidget","showOperatorOptions","confirmOptions","doRemove","isEmptyCurrentRule","onCancel","immutableFieldsMode","immutableOpsMode","immutableValuesMode","renderBeforeWidget","renderAfterWidget","renderRuleError","oneValueError","onMouseDown","immutableGroupsMode","Btn","showLock","canShrinkValue","BtnGrp","renderOperatorOptions","renderError","drag","renderDrag","renderLock","del","renderDel","ConnectedRuleContainer","isInDraggingTempo","hasError","totalRulesCnt","parentReordableNodesCnt","createRuleContainer","Draggable","Group","ConnectedGroupContainer","_selectedConjunction","selectedConjunction","_getConjunctionOptions","oldConjunction","currentNesting","allowFurtherNesting","createGroupContainer","groupActionsPositionList","topLeft","topCenter","topRight","bottomLeft","bottomCenter","bottomRight","GroupActions","canAddGroup","canAddRule","canDeleteGroup","groupActionsPosition","position","setLockSwitch","addRuleBtn","addGroupBtn","delGroupBtn","BasicGroup","childrenClassName","renderBeforeActions","BeforeActions","renderAfterActions","AfterActions","renderItem","isEmptyCurrentGroup","isEmpty","isEmptyGroup","isEmptyRule","renderHeaderWrapper","renderChildrenWrapper","renderFooterWrapper","showConjs","isOneChild","renderChildren","isGroupTopPosition","renderHeader","renderActions","Item","extraPropsForItem","reordableNodesCntForItem","totalRulesCntForItem","_item","Conjs","GroupContainer","RuleGroupActions","RuleGroup","RuleGroupExtActions","RuleGroupExt","renderGroupField","SwitchGroupActions","canAddDefault","addCaseGroupBtn","addDefaultCaseGroupBtn","SwitchGroup","hasDefaultCase","totalCasesCnt","casesToReorder","renderSwitchPrefix","CaseGroup","renderHeaderLeft","renderHeaderCenter","renderCondition","getProperties","toObject","typeMap","rule_group","rule_group_ext","switch_group","case_group","itemComponent","isRequired","_updPath","ConnectedSortableContainer","ValueField","needUpdateItems","needUpdateMeta","getItems","filteredFields","filterFields","customPlaceholder","leftFieldWidgetField","leftFieldWidgetFieldProps","leftFieldFullkey","_filter","rightFieldKey","rightFieldFullkey","canUse","hideForCompare","FuncSelect","canUseFuncForField","filteredFuncs","filterFuncs","selectedFuncKey","isFuncSelected","currFunc","getFuncLabel","targetDefinition","funcFullkey","allowSelfNesting","funcOpts","funcParts","FuncWidget","argDefinition","funcDefinition","renderFuncSelect","selectProps","renderArgLabel","showPrefix","renderArgLabelSep","renderArgVal","defaultValueSource","ArgWidget","renderArgSep","argIndex","renderBracketBefore","renderBracketAfter","renderFuncArgs","_delta","_widgetType","Proximity","handleChange","defaultProximity","selectedProximity","proxValues","defaultProps","VanillaBooleanWidget","customRadioYesProps","radioYes","customRadioNoProps","radioNo","onRadioChange","id2","htmlFor","VanillaTextWidget","VanillaTextAreaWidget","VanillaDateWidget","VanillaTimeWidget","VanillaDateTimeWidget","dtValue","VanillaMultiSelectWidget","opt","getMultiSelectValues","VanillaSelectWidget","VanillaNumberWidget","VanillaSliderWidget","VanillaFieldSelect","VanillaConjs","VanillaButton","btnLabel","VanillaButtonGroup","VanillaProvider","VanillaValueSources","VanillaSwitch","ValueFieldWidget","Widgets","ProximityOperator","CustomOperators","CoreConfig","confirm","useLoadMore","useAsyncSearch","forceAsyncSearch","selectedAsyncListValues","staticListValues","knownSpecialValues","loadMoreTitle","loadingMoreTitle","setOpen","asyncFetchMeta","setAsyncFetchMeta","loadingCnt","setLoadingCnt","isLoadingMore","setIsLoadingMore","setInputValue","setAsyncListValues","asyncFectchCnt","componentIsMounted","isSelectedLoadMore","nSelectedAsyncListValues","canInitialLoad","canLoadMore","canShowLoadMore","fetchListValues","isLoadMore","newAsyncFetchCnt","newMeta","nValues","assumeHasMore","realNewMeta","loadListValues","loadListValuesDebounced","debounce","newSelectedListValues","customItem","newSelectedValues","newInputValue","onSearch","onDropdownVisibleChange","isSpecialValue","valueOrOption","webpackContext","req","webpackContextResolve","__webpack_require__","code","module","exports"],"sourceRoot":""}