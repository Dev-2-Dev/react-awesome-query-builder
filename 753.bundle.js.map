{"version":3,"file":"753.bundle.js","mappings":"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ACA,cAGA,UACA,gBAGJ07B,OAAQ,CACN17B,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBAGA,UACA,kBAKRu2B,KAAM,CACJ32B,gBAAiB,QACjBgM,QAAS,CACP2qB,KAAM,CACJv2B,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,kBAKRi8B,KAAM,CACJr8B,gBAAiB,QACjBgM,QAAS,CACPqwB,KAAM,CACJj8B,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,kBAKRo8B,SAAU,CACRx8B,gBAAiB,QACjBgM,QAAS,CACPwwB,SAAU,CACRp8B,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,kBAKR27B,OAAQ,CACNhpB,WAAY,SACZ/S,gBAAiB,gBACjBgM,QAAS,CACP+vB,OAAQ,CACN37B,UAAW,CACT,gBACA,oBAGA,UACA,gBAGJ67B,YAAa,CACX77B,UAAW,CACT,gBACA,oBAGA,UACA,kBAKR67B,YAAa,CACXj8B,gBAAiB,qBACjBgM,QAAS,CACPiwB,YAAa,CACX77B,UAAW,CACT,uBACA,2BACA,qBACA,yBAGA,UACA,kBAKRwxB,QAAS,CACP5xB,gBAAiB,QACjBgM,QAAS,CACP4lB,QAAS,CACPxxB,UAAW,CACT,QACA,YACA,UACA,eAEFgV,YAAa,CAGX,GAGJrZ,MAAO,CACLqE,UAAW,CACT,QACA,gBAKR,SAAU,CACRJ,gBAAiB,OACjB+S,WAAY,SACZ/G,QAAS,CACP2lB,OAAQ,CACNvc,YAAa,CACX9I,IAAK,GAEPlM,UAAW,CAET,OACA,MACA,OAGA,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,eAEFqX,QAAS,CACPohB,MAAO,CACLxnB,MAAO,YAET2nB,UAAW,CACT3nB,MAAO,YAET6nB,KAAM,CACJ7nB,MAAO,WAET8nB,cAAe,CACb9nB,MAAO,YAET+nB,QAAS,CACP/nB,MAAO,WAETgoB,iBAAkB,CAChBhoB,MAAO,YAETqoB,QAAS,CACProB,MAAO,iBAETuoB,YA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","sources":["webpack://@react-awesome-query-builder/examples/../core/modules/utils/stuff.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/uuid.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/default.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/listValues.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/defaultUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/treeUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/validation.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/ruleUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/funcUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/queryBuilder.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/mongoDb.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/export.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/sql.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/spel.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/queryString.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/elasticSearch.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/autocomplete.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/funcs.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/index.js","webpack://@react-awesome-query-builder/examples/../core/modules/stores/constants.js","webpack://@react-awesome-query-builder/examples/../core/modules/stores/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/group.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/rule.js","webpack://@react-awesome-query-builder/examples/../core/modules/index.js","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialSelect.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialMultiSelect.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialFieldAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialValueSources.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/index.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialText.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialTextArea.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialDate.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialDateTime.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialTime.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialNumber.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialSlider.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialRange.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialBoolean.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialFieldSelect.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialButton.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialButtonGroup.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialConjs.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialSwitch.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialConfirm.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/config/index.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/tree.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/context.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/constants.js","webpack://@react-awesome-query-builder/examples/../ui/modules/actions/drag.js","webpack://@react-awesome-query-builder/examples/../ui/modules/actions/index.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/configUtils.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/stuff.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/validation.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/reactUtils.js","webpack://@react-awesome-query-builder/examples/../ui/modules/components/Query.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/QueryContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/RuleContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/SortableContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/Draggable.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Operator.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/utils.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/OperatorWrapper.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Field.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FieldWrapper.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/WidgetFactory.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Widget.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/OperatorOptions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Rule.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/GroupContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/GroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Group.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupExtActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupExt.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/SwitchGroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/SwitchGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/CaseGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Item.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/Builder.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/ValueField.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FuncSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FuncWidget.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaBoolean.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaDate.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaDateTime.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaMultiSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/operators/Proximity.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/config/index.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaText.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaTextArea.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaTime.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaNumber.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaSlider.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaFieldSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaConjs.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaButton.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaButtonGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/index.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaValueSources.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaSwitch.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/vanillaConfirm.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/hooks/useListValuesAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/index.js","webpack://@react-awesome-query-builder/examples/../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ sync [/\\\\](es-us(\\.js)"],"sourcesContent":["import Immutable, { Map } from \"immutable\";\n\n// RegExp.quote = function (str) {\n//     return str.replace(/([.?*+^$[\\]\\\\(){}|-])/g, \"\\\\$1\");\n// };\n\nexport const defaultValue = (value, _default) => {\n  return (typeof value === \"undefined\") ? _default : value;\n};\n\n// const immutableEqual = function(v1, v2) {\n//   if (v1 === v2) {\n//     return true;\n//   } else {\n//     return v1.equals(v2);\n//   }\n// };\n\nexport const deepEqual = function(v1, v2) {\n  if (v1 === v2) {\n    return true;\n  } else if (Map.isMap(v1)) {\n    return v1.equals(v2);\n  } else {\n    return JSON.stringify(v1) == JSON.stringify(v2);\n  }\n};\n\n// //Do sets have same values?\n// const eqSet = function (as, bs) {\n//   if (as.size !== bs.size) return false;\n//   for (var a of as) if (!bs.has(a)) return false;\n//   return true;\n// };\n\n\n// //Do arrays have same values?\n// const eqArrSet = function (arr1, arr2) {\n//   return eqSet(new Set(arr1), new Set(arr2));\n// };\n\nexport const shallowEqual = (a, b, deep = false) => {\n  if (a === b) {\n    return true;\n  } else if (Array.isArray(a))\n    return shallowEqualArrays(a, b, deep);\n  else if (Map.isMap(a))\n    return a.equals(b);\n  else if (typeof a == \"object\")\n    return shallowEqualObjects(a, b, deep);\n  else\n    return a === b;\n};\n\nfunction shallowEqualArrays(arrA, arrB, deep = false) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var isEqual = deep ? shallowEqual(arrA[i], arrB[i], deep) : arrA[i] === arrB[i];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowEqualObjects(objA, objB, deep = false) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n    var isEqual = deep ? shallowEqual(objA[key], objB[key], deep) : objA[key] === objB[key];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nconst isImmutable = (v) => {\n  return typeof v === \"object\" && v !== null && typeof v.toJS === \"function\";\n};\n\nexport function toImmutableList(v) {\n  return (isImmutable(v) ? v : new Immutable.List(v));\n}\n\nexport function applyToJS(v) {\n  return (isImmutable(v) ? v.toJS() : v);\n}\n\nexport const escapeRegExp = (string) => {\n  return string.replace(/[.*+?^${}()|[\\]\\\\/]/g, \"\\\\$&\"); // $& means the whole matched string\n};\n\n\n\nexport const isJsonLogic = (logic) => (\n  typeof logic === \"object\" // An object\n  && logic !== null // but not null\n  && !Array.isArray(logic) // and not an array\n  && Object.keys(logic).length === 1 // with exactly one key\n);\n\nexport function sleep(delay) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\n\n// [1, 4, 9] + [1, 5, 9] => [1, 4, 5, 9]\n// Used for merging arrays of operators for different widgets of 1 type\nexport function mergeArraysSmart(arr1, arr2) {\n  if (!arr1) arr1 = [];\n  if (!arr2) arr2 = [];\n  return arr2\n    .map(op => [op, arr1.indexOf(op)])\n    .map(([op, ind], i, orig) => {\n      if (ind == -1) {\n        const next = orig.slice(i+1);\n        const prev = orig.slice(0, i);\n        const after = prev.reverse().find(([_cop, ci]) => ci != -1);\n        const before = next.find(([_cop, ci]) => ci != -1);\n        if (before)\n          return [op, \"before\", before[0]];\n        else if (after)\n          return [op, \"after\", after[0]];\n        else\n          return [op, \"append\", null];\n      } else {\n      // already exists\n        return null;\n      }\n    })\n    .filter(x => x !== null)\n    .reduce((acc, [newOp, rel, relOp]) => {\n      const ind = acc.indexOf(relOp);\n      if (acc.indexOf(newOp) == -1) {\n        if (ind > -1) {\n        // insert after or before\n          acc.splice( ind + (rel == \"after\" ? 1 : 0), 0, newOp );\n        } else {\n        // insert to end or start\n          acc.splice( (rel == \"append\" ? Infinity : 0), 0, newOp );\n        }\n      }\n      return acc;\n    }, arr1.slice());\n}\n\nconst isDev = () => (typeof process !== \"undefined\" && process.env && process.env.NODE_ENV == \"development\");\n\nexport const getLogger = (devMode = false) => {\n  const verbose = devMode != undefined ? devMode : isDev(); \n  return verbose ? console : {\n    error: () => {},\n    log: () => {},\n    warn: () => {},\n    debug: () => {},\n    info: () => {},\n  };\n};\n\nexport const getFirstDefined = (arr = []) => {\n  let ret;\n  for (let i = 0 ; i < arr.length ; i++) {\n    const v = arr[i];\n    if (v !== undefined) {\n      ret = v;\n      break;\n    }\n  }\n  return ret;\n};\n\nexport const logger = getLogger();\n\n","// Had to make uuid use a constant seed so it would generate same sequence across runs. This was needed\n// so server side rendering and client side rendering yield same results (e.g. the uuid is used when rendering\n// the concunctions with their name and id)\nvar query_builder_seed = 0;\nexport default () => {\n  // Generate a random GUID http://stackoverflow.com/a/2117523.\n  const timePart = (new Date().getTime().toString(16)+\"FF\").substr(0,11);\n  const s = \"ssssssss-xxxx-4xxx-yxxx-x\".replace(/[xys]/g, (c) => {\n    const r = c === \"s\" ? Math.floor(Math.random() * 16) : (query_builder_seed++) & 0xf;\n    const v = c === \"x\" ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n  return s + timePart;\n};\n","\n\nexport const settings = {\n  formatField: (field, parts, label2, fieldDefinition, config, isForDisplay) => {\n    if (isForDisplay)\n      return label2;\n    else\n      return field;\n  },\n\n\n  valueSourcesInfo: {\n    value: {},\n  },\n  fieldSeparator: \".\",\n  fieldSeparatorDisplay: \".\",\n  canReorder: true,\n  canRegroup: true,\n  canDeleteLocked: false,\n  canLeaveEmptyGroup: true,\n  shouldCreateEmptyGroup: false,\n  canShortMongoQuery: true,\n  removeEmptyGroupsOnLoad: true,\n  removeIncompleteRulesOnLoad: true,\n  removeInvalidMultiSelectValuesOnLoad: true,\n  setOpOnChangeField: [\"keep\", \"default\"], // 'default' (default if present), 'keep' (keep prev from last field), 'first', 'none'\n  groupOperators: [\"some\", \"all\", \"none\"],\n\n  defaultGroupConjunction: \"AND\",\n\n  // localization\n  locale: {\n    moment: \"en\",\n  },\n  valueLabel: \"Value\",\n  valuePlaceholder: \"Value\",\n  fieldLabel: \"Field\",\n  operatorLabel: \"Operator\",\n  funcLabel: \"Function\",\n  fieldPlaceholder: \"Select field\",\n  funcPlaceholder: \"Select function\",\n  operatorPlaceholder: \"Select operator\",\n  lockLabel: \"Lock\",\n  lockedLabel: \"Locked\",\n  deleteLabel: null,\n  addGroupLabel: \"Add group\",\n  addCaseLabel: \"Add condition\",\n  addDefaultCaseLabel: \"Add default condition\",\n  defaultCaseLabel: \"Default:\",\n  addRuleLabel: \"Add rule\",\n  addSubRuleLabel: \"Add sub rule\",\n  delGroupLabel: \"\",\n  notLabel: \"Not\",\n  valueSourcesPopupTitle: \"Select value source\",\n  removeRuleConfirmOptions: null,\n  removeGroupConfirmOptions: null,\n\n};\n","\nconst isObject = (v) => (typeof v == \"object\" && v !== null); // object or array\nconst listValue = (v, title) => (isObject(v) ? v : {value: v, title: (title !== undefined ? title : v)});\n\n// convert {<value>: <title>, ..} or [value, ..] to normal [{value, title}, ..]\nexport const listValuesToArray = (listValuesObj) => {\n  if (!isObject(listValuesObj))\n    return listValuesObj;\n  if (Array.isArray(listValuesObj))\n    return listValuesObj.map(v => listValue(v));\n  \n  let listValuesArr = [];\n  for (let v in listValuesObj) {\n    const title = listValuesObj[v];\n    listValuesArr.push(listValue(v, title));\n  }\n  return listValuesArr;\n};\n\n// listValues can be {<value>: <title>, ..} or [{value, title}, ..] or [value, ..]\nexport const getItemInListValues = (listValues, value) => {\n  if (Array.isArray(listValues)) {\n    const values = listValues.map(v => listValue(v));\n    return values.find(v => (v.value === value)) || values.find(v => (`${v.value}` === value));\n  } else {\n    return listValues[value] !== undefined ? listValue(value, listValues[value]) : undefined;\n  }\n};\n\nexport const getTitleInListValues = (listValues, value) => {\n  if (listValues == undefined)\n    return value;\n  const it = getItemInListValues(listValues, value);\n  return it !== undefined ? it.title : value;\n};\n\nexport const getValueInListValues = (listValues, value) => {\n  if (listValues == undefined)\n    return value;\n  const it = getItemInListValues(listValues, value);\n  return it !== undefined ? it.value : value;\n};\n\nexport const mapListValues = (listValues, mapFn) => {\n  let ret = [];\n  if (Array.isArray(listValues)) {\n    for (let v of listValues) {\n      const lv = mapFn(listValue(v));\n      if (lv != null)\n        ret.push(lv);\n    }\n  } else {\n    for (let value in listValues) {\n      const lv = mapFn(listValue(value, listValues[value]));\n      if (lv != null)\n        ret.push(lv);\n    }\n  }\n  return ret;\n};\n","import Immutable from \"immutable\";\nimport uuid from \"./uuid\";\nimport {getFieldConfig, getOperatorConfig} from \"./configUtils\";\nimport {getNewValueForFieldOp, getFirstField, getFirstOperator} from \"../utils/ruleUtils\";\n\n\nexport const defaultField = (config, canGetFirst = true, parentRuleGroupPath = null) => {\n  return typeof config.settings.defaultField === \"function\"\n    ? config.settings.defaultField(parentRuleGroupPath) \n    : (config.settings.defaultField || (canGetFirst ? getFirstField(config, parentRuleGroupPath) : null));\n};\n\nexport const defaultOperator = (config, field, canGetFirst = true) => {\n  let fieldConfig = getFieldConfig(config, field);\n  let fieldOperators = fieldConfig && fieldConfig.operators || [];\n  let fieldDefaultOperator = fieldConfig && fieldConfig.defaultOperator;\n  if (!fieldOperators.includes(fieldDefaultOperator))\n    fieldDefaultOperator = null;\n  if (!fieldDefaultOperator && canGetFirst)\n    fieldDefaultOperator = getFirstOperator(config, field);\n  let op = typeof config.settings.defaultOperator === \"function\"\n    ? config.settings.defaultOperator(field, fieldConfig) : fieldDefaultOperator;\n  return op;\n};\n\n//used for complex operators like proximity\nexport const defaultOperatorOptions = (config, operator, field) => {\n  let operatorConfig = operator ? getOperatorConfig(config, operator, field) : null;\n  if (!operatorConfig)\n    return null; //new Immutable.Map();\n  return operatorConfig.options ? new Immutable.Map(\n    operatorConfig.options\n    && operatorConfig.options.defaults || {}\n  ) : null;\n};\n\nexport const defaultRuleProperties = (config, parentRuleGroupPath = null, item = null) => {\n  let field = null, operator = null;\n  const {setDefaultFieldAndOp, showErrorMessage} = config.settings;\n  if (item) {\n    field = item?.properties?.field;\n    operator = item?.properties?.operator;\n  } else if (setDefaultFieldAndOp) {\n    field = defaultField(config, true, parentRuleGroupPath);\n    operator = defaultOperator(config, field);\n  }\n  let current = new Immutable.Map({\n    field: field,\n    operator: operator,\n    value: new Immutable.List(),\n    valueSrc: new Immutable.List(),\n    //used for complex operators like proximity\n    operatorOptions: defaultOperatorOptions(config, operator, field),\n  });\n  if (showErrorMessage) {\n    current = current.set(\"valueError\", new Immutable.List());\n  }\n  \n  if (field && operator) {\n    let {newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      config, config, current, field, operator, \"operator\", false\n    );\n    current = current\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType);\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError);\n    }\n  }\n  return current; \n};\n\n\nexport const defaultGroupConjunction = (config, fieldConfig = null) => {\n  fieldConfig = getFieldConfig(config, fieldConfig); // if `fieldConfig` is field name, not config\n  const conjs = fieldConfig && fieldConfig.conjunctions || Object.keys(config.conjunctions);\n  if (conjs.length == 1)\n    return conjs[0];\n  return config.settings.defaultGroupConjunction || config.settings.defaultConjunction || conjs[0];\n};\n\nexport const defaultConjunction = (config) =>\n  config.settings.defaultConjunction || Object.keys(config.conjunctions)[0];\n\nexport const defaultGroupProperties = (config, fieldConfig = null) => new Immutable.Map({\n  conjunction: defaultGroupConjunction(config, fieldConfig),\n  not: false\n});\n\nexport const defaultItemProperties = (config, item) => {\n  return item && item.type == \"group\" \n    ? defaultGroupProperties(config, item?.properties?.field) \n    : defaultRuleProperties(config, null, item);\n};\n\nexport const defaultRule = (id, config) => ({\n  [id]: new Immutable.Map({\n    type: \"rule\",\n    id: id,\n    properties: defaultRuleProperties(config)\n  })\n});\n\nexport const defaultRoot = (config) => {\n  return new Immutable.Map({\n    type: \"group\",\n    id: uuid(),\n    children1: new Immutable.OrderedMap({ ...defaultRule(uuid(), config) }),\n    properties: defaultGroupProperties(config)\n  });\n};\n\nexport const createListFromArray = (ids) => {\n  return new Immutable.List(ids);\n};\n\nexport const emptyProperies = () => new Immutable.Map();\n","import Immutable  from \"immutable\";\n\n/**\n * @param {Immutable.List} path\n * @param {...string} suffix\n * @return {Immutable.List}\n */\nexport const expandTreePath = (path, ...suffix) =>\n  path.interpose(\"children1\").withMutations((list) => {\n    list.skip(1);\n    list.push.apply(list, suffix);\n    return list;\n  });\n\n\n/**\n * @param {Immutable.List} path\n * @param {...string} suffix\n * @return {Immutable.List}\n */\nexport const expandTreeSubpath = (path, ...suffix) =>\n  path.interpose(\"children1\").withMutations((list) => {\n    list.push.apply(list, suffix);\n    return list;\n  });\n\n\n/**\n * @param {Immutable.Map} path\n * @param {Immutable.List} path\n * @return {Immutable.Map}\n */\nexport const getItemByPath = (tree, path) => {\n  let children = new Immutable.OrderedMap({ [tree.get(\"id\")] : tree });\n  let res = tree;\n  path.forEach((id) => {\n    res = children.get(id);\n    children = res.get(\"children1\");\n  });\n  return res;\n};\n\n\n/**\n * Remove `path` in every item\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const removePathsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path) {\n    const itemPath = path.push(item.get(\"id\"));\n    if (item.get(\"path\")) {\n      newTree = newTree.removeIn(expandTreePath(itemPath, \"path\"));\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      children.map((child, _childId) => {\n        _processNode(child, itemPath);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List());\n\n  return newTree;\n};\n\n\n/**\n * Remove `isLocked` in items that inherit parent's `isLocked`\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const removeIsLockedInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, isParentLocked = false) {\n    const itemPath = path.push(item.get(\"id\"));\n    const isLocked = item.getIn([\"properties\", \"isLocked\"]);\n    if (isParentLocked && isLocked) {\n      newTree = newTree.deleteIn(expandTreePath(itemPath, \"properties\", \"isLocked\"));\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      children.map((child, _childId) => {\n        _processNode(child, itemPath, isLocked || isParentLocked);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List());\n\n  return newTree;\n};\n\n\n/**\n * Set correct `path` and `id` in every item\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const fixPathsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, lev, nodeId) {\n    if (!item) return;\n    const currPath = item.get(\"path\");\n    const currId = item.get(\"id\");\n    const itemId = currId || nodeId;\n    const itemPath = path.push(itemId);\n    if (!currPath || !currPath.equals(itemPath)) {\n      newTree = newTree.setIn(expandTreePath(itemPath, \"path\"), itemPath);\n    }\n    if (!currId) {\n      newTree = newTree.setIn(expandTreePath(itemPath, \"id\"), itemId);\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      if (children.constructor.name == \"Map\") {\n        // protect: should me OrderedMap, not Map (issue #501)\n        newTree = newTree.setIn(\n          expandTreePath(itemPath, \"children1\"), \n          new Immutable.OrderedMap(children)\n        );\n      }\n      children.map((child, childId) => {\n        _processNode(child, itemPath, lev + 1, childId);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List(), 0);\n\n\n  return newTree;\n};\n\nexport const fixEmptyGroupsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, lev, nodeId) {\n    if (!item) return false;\n    const itemId = item.get(\"id\") || nodeId;\n    const itemPath = path.push(itemId);\n\n    const children = item.get(\"children1\");\n    if (children) {\n      const allChildrenGone = children.map((child, childId) => {\n        return _processNode(child, itemPath, lev + 1, childId);\n      }).reduce((curr, v) => (curr && v), true);\n      if ((children.size == 0 || allChildrenGone) && lev > 0) {\n        newTree = newTree.deleteIn(expandTreePath(itemPath));\n        return true;\n      }\n    }\n    return false;\n  }\n\n  _processNode(tree, new Immutable.List(), 0);\n\n\n  return newTree;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @return {Object} {flat, items}\n */\nexport const getFlatTree = (tree) => {\n  let flat = [];\n  let items = {};\n  let realHeight = 0;\n\n  function _flatizeTree (item, path, insideCollapsed, insideLocked, insideRuleGroup, lev, info, parentType, caseId) {\n    const type = item.get(\"type\");\n    const collapsed = item.get(\"collapsed\");\n    const id = item.get(\"id\");\n    const children = item.get(\"children1\");\n    const isLocked = item.getIn([\"properties\", \"isLocked\"]);\n    const childrenIds = children ? children.map((_child, childId) => childId) : null;\n    const isRuleGroup = type == \"rule_group\";\n    // tip: count rule_group as 1 rule\n    const isLeaf = !insideRuleGroup && (!children || isRuleGroup);\n\n    const itemsBefore = flat.length;\n    const top = realHeight;\n    flat.push(id);\n    if (!insideCollapsed)\n      realHeight += 1;\n    info.height = (info.height || 0) + 1;\n\n    items[id] = {\n      type: type,\n      parent: path.length ? path[path.length-1] : null,\n      parentType: parentType,\n      caseId: type == \"case_group\" ? id : caseId,\n      isDefaultCase: type == \"case_group\" && !children,\n      path: path.concat(id),\n      lev: lev,\n      leaf: !children,\n      index: itemsBefore,\n      id: id,\n      children: childrenIds,\n      leafsCount: 0,\n      _top: itemsBefore,\n      //_height: (itemsAfter - itemsBefore),\n      top: (insideCollapsed ? null : top),\n      //height: height,\n      //bottom: (insideCollapsed ? null : top) + height,\n      collapsed: collapsed,\n      node: item,\n      isLocked: isLocked || insideLocked,\n    };\n\n    if (children) {\n      let subinfo = {};\n      children.map((child, _childId) => {\n        _flatizeTree(\n          child, path.concat(id), \n          insideCollapsed || collapsed, insideLocked || isLocked, insideRuleGroup || isRuleGroup,\n          lev + 1, subinfo, type, type == \"case_group\" ? id : caseId\n        );\n      });\n      if (!collapsed) {\n        info.height = (info.height || 0) + (subinfo.height || 0);\n      }\n    }\n    \n    if (caseId && isLeaf) {\n      items[caseId].leafsCount++;\n    }\n\n    const itemsAfter = flat.length;\n    const _bottom = realHeight;\n    const height = info.height;\n        \n    Object.assign(items[id], {\n      _height: (itemsAfter - itemsBefore),\n      height: height,\n      bottom: (insideCollapsed ? null : top) + height,\n    });\n  }\n\n  _flatizeTree(tree, [], false, false, false, 0, {}, null, null);\n\n  for (let i = 0 ; i < flat.length ; i++) {\n    const prevId = i > 0 ? flat[i-1] : null;\n    const nextId = i < (flat.length-1) ? flat[i+1] : null;\n    let item = items[flat[i]];\n    item.prev = prevId;\n    item.next = nextId;\n  }\n\n  return {flat, items};\n};\n\n\n/**\n * Returns count of reorderable(!) nodes\n * @param {Immutable.Map} tree\n * @return {Integer}\n */\nexport const getTotalReordableNodesCountInTree = (tree) => {\n  if (!tree)\n    return -1;\n  let cnt = 0;\n\n  function _processNode (item, path, lev) {\n    let id, children, type;\n    if (typeof item.get === \"function\") {\n      id = item.get(\"id\");\n      children = item.get(\"children1\");\n      type = item.get(\"type\");\n    } else {\n      id = item.id;\n      children = item.children1;\n      type = item.type;\n    }\n    const isRuleGroup = type == \"rule_group\";\n    cnt++;\n    //tip: rules in rule-group can be reordered only inside\n    if (children && !isRuleGroup) {\n      children.map((child, _childId) => {\n        _processNode(child, path.concat(id), lev + 1);\n      });\n    }\n  }\n\n  _processNode(tree, [], 0);\n    \n  return cnt - 1; // -1 for root\n};\n\n/**\n * Returns count of rules (leafs, i.e. don't count groups)\n * @param {Immutable.Map} tree\n * @return {Integer}\n */\nexport const getTotalRulesCountInTree = (tree) => {\n  if (!tree)\n    return -1;\n  let cnt = 0;\n\n  function _processNode (item, path, lev) {\n    let id, children, type;\n    if (typeof item.get === \"function\") {\n      id = item.get(\"id\");\n      children = item.get(\"children1\");\n      type = item.get(\"type\");\n    } else {\n      id = item.id;\n      children = item.children1;\n      type = item.type;\n    }\n    \n    if (type == \"rule\" || type == \"rule_group\") {\n      // tip: count rule_group as 1 rule\n      cnt++;\n    } else if (children) {\n      children.map((child, _childId) => {\n        _processNode(child, path.concat(id), lev + 1);\n      });\n    }\n  }\n\n  _processNode(tree, [], 0);\n    \n  return cnt;\n};\n\nexport const getTreeBadFields = (tree) => {\n  let badFields = [];\n\n  function _processNode (item, path, lev) {\n    const id = item.get(\"id\");\n    const children = item.get(\"children1\");\n    const valueError = item.getIn([\"properties\", \"valueError\"]);\n    const field = item.getIn([\"properties\", \"field\"]);\n    if (valueError && valueError.size > 0 && valueError.filter(v => v != null).size > 0) {\n      badFields.push(field);\n    }\n    if (children) {\n      children.map((child, _childId) => {\n        _processNode(child, path.concat(id), lev + 1);\n      });\n    }\n  }\n\n  if (tree)\n    _processNode(tree, [], 0);\n    \n  return Array.from(new Set(badFields));\n};\n\n\n// Remove fields that can be calced: \"id\", \"path\"\n// Remove empty fields: \"operatorOptions\"\nexport const getLightTree = (tree, children1AsArray = false) => {\n  let newTree = tree;\n\n  function _processNode (item, itemId) {\n    if (item.path)\n      delete item.path;\n    if (!children1AsArray && itemId)\n      delete item.id;\n    let properties = item.properties;\n    if (properties) {\n      if (properties.operatorOptions == null)\n        delete properties.operatorOptions;\n    }\n\n    const children = item.children1;\n    if (children) {\n      for (let id in children) {\n        _processNode(children[id], id);\n      }\n      if (children1AsArray) {\n        item.children1 = Object.values(children);\n      }\n    }\n  }\n\n  _processNode(tree, null);\n\n  return newTree;\n};\n\nexport const getSwitchValues = (tree) => {\n  let vals = [];\n  const children = tree.get(\"children1\");\n  if (children) {\n    children.map((child) => {\n      const value = child.getIn([\"properties\", \"value\"]);\n      let caseValue;\n      if (value && value.size == 1) {\n        caseValue = value.get(0);\n        if (Array.isArray(caseValue) && caseValue.length == 0) {\n          caseValue = null;\n        }\n      } else {\n        caseValue = null;\n      }\n      vals = [...vals, caseValue];\n    });\n  }\n\n  return vals;\n};\n\nexport const isEmptyTree = (tree) => (!tree.get(\"children1\") || tree.get(\"children1\").size == 0);\n\nexport const hasChildren = (tree, path) => tree.getIn(expandTreePath(path, \"children1\")).size > 0;\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig,\n} from \"./configUtils\";\nimport {getOperatorsForField, getWidgetForFieldOp, getNewValueForFieldOp} from \"../utils/ruleUtils\";\nimport {defaultValue, deepEqual, logger} from \"../utils/stuff\";\nimport {getItemInListValues} from \"../utils/listValues\";\nimport {defaultOperatorOptions} from \"../utils/defaultUtils\";\nimport {fixPathsInTree} from \"../utils/treeUtils\";\nimport omit from \"lodash/omit\";\nimport { List } from \"immutable\";\n\n\nconst typeOf = (v) => {\n  if (typeof v == \"object\" && v !== null && Array.isArray(v))\n    return \"array\";\n  else\n    return (typeof v);\n};\n\nconst isTypeOf = (v, type) => {\n  if (typeOf(v) == type)\n    return true;\n  if (type == \"number\" && !isNaN(v))\n    return true; //can be casted\n  return false;\n};\n\nexport const validateAndFixTree = (newTree, _oldTree, newConfig, oldConfig, removeEmptyGroups, removeIncompleteRules) => {\n  let tree = validateTree(newTree, _oldTree, newConfig, oldConfig, removeEmptyGroups, removeIncompleteRules);\n  tree = fixPathsInTree(tree);\n  return tree;\n};\n\nexport const validateTree = (tree, _oldTree, config, oldConfig, removeEmptyGroups, removeIncompleteRules) => {\n  if (removeEmptyGroups === undefined) {\n    removeEmptyGroups = config.settings.removeEmptyGroupsOnLoad;\n  }\n  if (removeIncompleteRules === undefined) {\n    removeIncompleteRules = config.settings.removeIncompleteRulesOnLoad;\n  }\n  const c = {\n    config, oldConfig, removeEmptyGroups, removeIncompleteRules\n  };\n  return validateItem(tree, [], null, {}, c);\n};\n\nfunction validateItem (item, path, itemId, meta, c) {\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\" || type == \"case_group\" || type == \"switch_group\") && children && children.size) {\n    return validateGroup(item, path, itemId, meta, c);\n  } else if (type === \"rule\") {\n    return validateRule(item, path, itemId, meta, c);\n  } else {\n    return item;\n  }\n}\n\nfunction validateGroup (item, path, itemId, meta, c) {\n  const {removeEmptyGroups} = c;\n  let id = item.get(\"id\");\n  let children = item.get(\"children1\");\n  const oldChildren = children;\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  }\n\n  //validate children\n  let submeta = {};\n  children = children\n    .map( (currentChild, childId) => validateItem(currentChild, path.concat(id), childId, submeta, c) );\n  if (removeEmptyGroups)\n    children = children.filter((currentChild) => (currentChild != undefined));\n  let sanitized = submeta.sanitized || (oldChildren.size != children.size);\n  if (!children.size && removeEmptyGroups && path.length) {\n    sanitized = true;\n    item = undefined;\n  }\n\n  if (sanitized)\n    meta.sanitized = true;\n  if (sanitized && item)\n    item = item.set(\"children1\", children);\n  return item;\n}\n\n\nfunction validateRule (item, path, itemId, meta, c) {\n  const {removeIncompleteRules, config, oldConfig} = c;\n  const {showErrorMessage} = config.settings;\n  let id = item.get(\"id\");\n  let properties = item.get(\"properties\");\n  let field = properties.get(\"field\") || null;\n  let operator = properties.get(\"operator\") || null;\n  let operatorOptions = properties.get(\"operatorOptions\");\n  let valueSrc = properties.get(\"valueSrc\");\n  let value = properties.get(\"value\");\n  let valueError = properties.get(\"valueError\");\n  const oldSerialized = {\n    field,\n    operator,\n    operatorOptions: operatorOptions ? operatorOptions.toJS() : {},\n    valueSrc: valueSrc ? valueSrc.toJS() : null,\n    value: value ? value.toJS() : null,\n    valueError: valueError ? valueError.toJS() : null,\n  };\n  let _wasValid = field && operator && value && !value.includes(undefined);\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  }\n\n  //validate field\n  const fieldDefinition = field ? getFieldConfig(config, field) : null;\n  if (field && !fieldDefinition) {\n    logger.warn(`No config for field ${field}`);\n    field = null;\n  }\n  if (field == null) {\n    properties = [\"operator\", \"operatorOptions\", \"valueSrc\", \"value\"].reduce((map, key) => map.delete(key), properties);\n    operator = null;\n  }\n\n  //validate operator\n  // Backward compatibility: obsolete operator range_between\n  if (operator == \"range_between\" || operator == \"range_not_between\") {\n    operator = operator == \"range_between\" ? \"between\" : \"not_between\";\n    console.info(`Fixed operator ${properties.get(\"operator\")} to ${operator}`);\n    properties = properties.set(\"operator\", operator);\n  }\n  const operatorDefinition = operator ? getOperatorConfig(config, operator, field) : null;\n  if (operator && !operatorDefinition) {\n    console.warn(`No config for operator ${operator}`);\n    operator = null;\n  }\n  const availOps = field ? getOperatorsForField(config, field) : [];\n  if (!availOps) {\n    console.warn(`Type of field ${field} is not supported`);\n    operator = null;\n  } else if (operator && availOps.indexOf(operator) == -1) {\n    if (operator == \"is_empty\" || operator == \"is_not_empty\") {\n      // Backward compatibility: is_empty #494\n      operator = operator == \"is_empty\" ? \"is_null\" : \"is_not_null\";\n      console.info(`Fixed operator ${properties.get(\"operator\")} to ${operator} for ${field}`);\n      properties = properties.set(\"operator\", operator);\n    } else {\n      console.warn(`Operator ${operator} is not supported for field ${field}`);\n      operator = null;\n    }\n  }\n  if (operator == null) {\n    properties = properties.delete(\"operatorOptions\");\n    properties = properties.delete(\"valueSrc\");\n    properties = properties.delete(\"value\");\n  }\n\n  //validate operator options\n  operatorOptions = properties.get(\"operatorOptions\");\n  let _operatorCardinality = operator ? defaultValue(operatorDefinition.cardinality, 1) : null;\n  if (!operator || operatorOptions && !operatorDefinition.options) {\n    operatorOptions = null;\n    properties = properties.delete(\"operatorOptions\");\n  } else if (operator && !operatorOptions && operatorDefinition.options) {\n    operatorOptions = defaultOperatorOptions(config, operator, field);\n    properties = properties.set(\"operatorOptions\", operatorOptions);\n  }\n\n  //validate values\n  valueSrc = properties.get(\"valueSrc\");\n  value = properties.get(\"value\");\n  const canFix = !showErrorMessage;\n  const isEndValue = true;\n  let {newValue, newValueSrc, newValueError} = getNewValueForFieldOp(config, oldConfig, properties, field, operator, null, canFix, isEndValue);\n  value = newValue;\n  valueSrc = newValueSrc;\n  valueError = newValueError;\n  properties = properties.set(\"value\", value);\n  properties = properties.set(\"valueSrc\", valueSrc);\n  if (showErrorMessage) {\n    properties = properties.set(\"valueError\", valueError);\n  }\n\n  const newSerialized = {\n    field,\n    operator,\n    operatorOptions: operatorOptions ? operatorOptions.toJS() : {},\n    valueSrc: valueSrc ? valueSrc.toJS() : null,\n    value: value ? value.toJS() : null,\n    valueError: valueError ? valueError.toJS() : null,\n  };\n  const sanitized = !deepEqual(oldSerialized, newSerialized);\n  const isComplete = field && operator && value && !value.includes(undefined);\n  if (sanitized)\n    meta.sanitized = true;\n  if (!isComplete && removeIncompleteRules)\n    item = undefined;\n  else if (sanitized)\n    item = item.set(\"properties\", properties);\n\n  return item;\n}\n\n\n/**\n * \n * @param {bool} canFix true is useful for func values to remove bad args\n * @param {bool} isEndValue false if value is in process of editing by user\n * @param {bool} isRawValue false is used only internally from validateFuncValue\n * @return {array} [validError, fixedValue] - if validError === null and canFix == true, fixedValue can differ from value if was fixed\n */\nexport const validateValue = (config, leftField, field, operator, value, valueType, valueSrc, asyncListValues, canFix = false, isEndValue = false, isRawValue = true) => {\n  let validError = null;\n  let fixedValue = value;\n\n  if (value != null) {\n    if (valueSrc == \"field\") {\n      [validError, fixedValue] = validateFieldValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, isEndValue, canFix);\n    } else if (valueSrc == \"func\") {\n      [validError, fixedValue] = validateFuncValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, isEndValue, canFix);\n    } else if (valueSrc == \"value\" || !valueSrc) {\n      [validError, fixedValue] = validateNormalValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, isEndValue, canFix);\n    }\n\n    if (!validError) {\n      const fieldConfig = getFieldConfig(config, field);\n      const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const operatorDefinition = operator ? getOperatorConfig(config, operator, field) : null;\n      const fieldWidgetDefinition = omit(getFieldWidgetConfig(config, field, operator, w, valueSrc), [\"factory\"]);\n      const rightFieldDefinition = (valueSrc == \"field\" ? getFieldConfig(config, value) : null);\n      const fieldSettings = fieldWidgetDefinition; // widget definition merged with fieldSettings\n\n      const fn = fieldWidgetDefinition.validateValue;\n      if (typeof fn == \"function\") {\n        const args = [\n          fixedValue, \n          fieldSettings,\n          operator,\n          operatorDefinition\n        ];\n        if (valueSrc == \"field\")\n          args.push(rightFieldDefinition);\n        const validResult = fn(...args);\n        if (typeof validResult == \"boolean\") {\n          if (validResult == false)\n            validError = \"Invalid value\";\n        } else {\n          validError = validResult;\n        }\n      }\n    }\n  }\n\n  if (isRawValue && validError) {\n    console.warn(\"[RAQB validate]\", `Field ${field}: ${validError}`);\n  }\n  \n  return [validError, fixedValue];\n};\n\nconst validateValueInList = (value, listValues, canFix, isEndValue, removeInvalidMultiSelectValuesOnLoad) => {\n  const values = List.isList(value) ? value.toJS() : (value instanceof Array ? [...value] : undefined);\n  if (values) {\n    const [goodValues, badValues] = values.reduce(([goodVals, badVals], val) => {\n      const vv = getItemInListValues(listValues, val);\n      if (vv == undefined) {\n        return [goodVals, [...badVals, val]];\n      } else {\n        return [[...goodVals, vv.value], badVals];\n      }\n    }, [[], []]);\n    const plural = badValues.length > 1;\n    const err = badValues.length ? `${plural ? \"Values\" : \"Value\"} ${badValues.join(\", \")} ${plural ? \"are\" : \"is\"} not in list of values` : null;\n    // always remove bad values at tree validation as user can't unselect them (except AntDesign widget)\n    if (removeInvalidMultiSelectValuesOnLoad !== undefined) {\n      canFix = removeInvalidMultiSelectValuesOnLoad;\n    } else {\n      canFix = canFix || isEndValue;\n    }\n    return [err, canFix ? goodValues : value];\n  } else {\n    const vv = getItemInListValues(listValues, value);\n    if (vv == undefined) {\n      return [`Value ${value} is not in list of values`, value];\n    } else {\n      value = vv.value;\n    }\n    return [null, value];\n  }\n};\n\n/**\n* \n*/\nconst validateNormalValue = (leftField, field, value, valueSrc, valueType, asyncListValues, config, operator = null, isEndValue = false, canFix = false) => {\n  if (field) {\n    const fieldConfig = getFieldConfig(config, field);\n    const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const wConfig = config.widgets[w];\n    const wType = wConfig.type;\n    const jsType = wConfig.jsType;\n    const fieldSettings = fieldConfig.fieldSettings;\n    const listValues = fieldSettings.treeValues || fieldSettings.listValues;\n\n    if (valueType && valueType != wType)\n      return [`Value should have type ${wType}, but got value of type ${valueType}`, value];\n    if (jsType && !isTypeOf(value, jsType) && !listValues) { //tip: can skip type check for listValues\n      return [`Value should have JS type ${jsType}, but got value of type ${typeof value}`, value];\n    }\n\n    if (fieldSettings) {\n      const realListValues = asyncListValues || listValues;\n      if (realListValues && !fieldSettings.allowCustomValues) {\n        return validateValueInList(value, realListValues, canFix, isEndValue, config.settings.removeInvalidMultiSelectValuesOnLoad);\n      }\n      if (fieldSettings.min != null && value < fieldSettings.min) {\n        return [`Value ${value} < min ${fieldSettings.min}`, canFix ? fieldSettings.min : value];\n      }\n      if (fieldSettings.max != null && value > fieldSettings.max) {\n        return [`Value ${value} > max ${fieldSettings.max}`, canFix ? fieldSettings.max : value];\n      }\n    }\n  }\n\n  return [null, value];\n};\n\n\n/**\n* \n*/\nconst validateFieldValue = (leftField, field, value, _valueSrc, valueType, asyncListValues, config, operator = null, isEndValue = false, canFix = false) => {\n  const {fieldSeparator} = config.settings;\n  const isFuncArg = typeof field == \"object\" && field?._isFuncArg;\n  const leftFieldStr = Array.isArray(leftField) ? leftField.join(fieldSeparator) : leftField;\n  const rightFieldStr = Array.isArray(value) ? value.join(fieldSeparator) : value;\n  const rightFieldDefinition = getFieldConfig(config, value);\n  if (!rightFieldDefinition)\n    return [`Unknown field ${value}`, value];\n  if (rightFieldStr == leftFieldStr && !isFuncArg)\n    return [`Can't compare field ${leftField} with itself`, value];\n  if (valueType && valueType != rightFieldDefinition.type)\n    return [`Field ${value} is of type ${rightFieldDefinition.type}, but expected ${valueType}`, value];\n  return [null, value];\n};\n\n/**\n* \n*/\nconst validateFuncValue = (leftField, field, value, _valueSrc, valueType, asyncListValues, config, operator = null, isEndValue = false, canFix = false) => {\n  let fixedValue = value;\n\n  if (value) {\n    const funcKey = value.get(\"func\");\n    if (funcKey) {\n      const funcConfig = getFuncConfig(config, funcKey);\n      if (funcConfig) {\n        if (valueType && funcConfig.returnType != valueType)\n          return [`Function ${funcKey} should return value of type ${funcConfig.returnType}, but got ${valueType}`, value];\n        for (const argKey in funcConfig.args) {\n          const argConfig = funcConfig.args[argKey];\n          const args = fixedValue.get(\"args\");\n          const argVal = args ? args.get(argKey) : undefined;\n          const fieldDef = getFieldConfig(config, argConfig);\n          const argValue = argVal ? argVal.get(\"value\") : undefined;\n          const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n          if (argValue !== undefined) {\n            const [argValidError, fixedArgVal] = validateValue(\n              config, leftField, fieldDef, operator, argValue, argConfig.type, argValueSrc, asyncListValues, canFix, isEndValue, false\n            );\n            if (argValidError !== null) {\n              if (canFix) {\n                fixedValue = fixedValue.deleteIn([\"args\", argKey]);\n                if (argConfig.defaultValue !== undefined) {\n                  fixedValue = fixedValue.setIn([\"args\", argKey, \"value\"], argConfig.defaultValue);\n                  fixedValue = fixedValue.setIn([\"args\", argKey, \"valueSrc\"], \"value\");\n                }\n              } else {\n                return [`Invalid value of arg ${argKey} for func ${funcKey}: ${argValidError}`, value];\n              }\n            } else if (fixedArgVal !== argValue) {\n              fixedValue = fixedValue.setIn([\"args\", argKey, \"value\"], fixedArgVal);\n            }\n          } else if (isEndValue && argConfig.defaultValue === undefined && !canFix) {\n            return [`Value of arg ${argKey} for func ${funcKey} is required`, value];\n          }\n        }\n      } else return [`Unknown function ${funcKey}`, value];\n    } // else it's not function value\n  } // empty value\n\n  return [null, fixedValue];\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFieldRawConfig\n} from \"./configUtils\";\nimport {defaultValue, getFirstDefined} from \"../utils/stuff\";\nimport Immutable from \"immutable\";\nimport {validateValue} from \"../utils/validation\";\nimport last from \"lodash/last\";\n\nconst selectTypes = [\n  \"select\",\n  \"multiselect\",\n  \"treeselect\",\n  \"treemultiselect\",\n];\n\n/**\n * @param {object} config\n * @param {object} oldConfig\n * @param {Immutable.Map} current\n * @param {string} newField\n * @param {string} newOperator\n * @param {string} changedProp\n * @return {object} - {canReuseValue, newValue, newValueSrc, newValueType, newValueError}\n */\nexport const getNewValueForFieldOp = function (config, oldConfig = null, current, newField, newOperator, changedProp = null, canFix = true, isEndValue = false) {\n  if (!oldConfig)\n    oldConfig = config;\n  const currentField = current.get(\"field\");\n  const currentOperator = current.get(\"operator\");\n  const currentValue = current.get(\"value\");\n  const currentValueSrc = current.get(\"valueSrc\", new Immutable.List());\n  const currentValueType = current.get(\"valueType\", new Immutable.List());\n  const currentAsyncListValues = current.get(\"asyncListValues\");\n\n  //const isValidatingTree = (changedProp === null);\n  const {convertableWidgets, clearValueOnChangeField, clearValueOnChangeOp, showErrorMessage} = config.settings;\n\n  //const currentOperatorConfig = getOperatorConfig(oldConfig, currentOperator, currentField);\n  const newOperatorConfig = getOperatorConfig(config, newOperator, newField);\n  //const currentOperatorCardinality = currentOperator ? defaultValue(currentOperatorConfig.cardinality, 1) : null;\n  const operatorCardinality = newOperator ? defaultValue(newOperatorConfig.cardinality, 1) : null;\n  const currentFieldConfig = getFieldConfig(oldConfig, currentField);\n  const newFieldConfig = getFieldConfig(config, newField);\n\n  let canReuseValue = currentField && currentOperator && newOperator && currentValue != undefined\n    && (!changedProp \n      || changedProp == \"field\" && !clearValueOnChangeField \n      || changedProp == \"operator\" && !clearValueOnChangeOp)\n    && (currentFieldConfig && newFieldConfig && currentFieldConfig.type == newFieldConfig.type);\n  if (canReuseValue && selectTypes.includes(currentFieldConfig.type) && changedProp == \"field\") {\n    // different fields of select types has different listValues\n    canReuseValue = false;\n  }\n\n  // compare old & new widgets\n  for (let i = 0 ; i < operatorCardinality ; i++) {\n    const vs = currentValueSrc.get(i) || null;\n    const currentWidget = getWidgetForFieldOp(oldConfig, currentField, currentOperator, vs);\n    const newWidget = getWidgetForFieldOp(config, newField, newOperator, vs);\n    // need to also check value widgets if we changed operator and current value source was 'field'\n    // cause for select type op '=' requires single value and op 'in' requires array value\n    const currentValueWidget = vs == \"value\" ? currentWidget : getWidgetForFieldOp(oldConfig, currentField, currentOperator, \"value\");\n    const newValueWidget = vs == \"value\" ? newWidget : getWidgetForFieldOp(config, newField, newOperator, \"value\");\n\n    const canReuseWidget = newValueWidget == currentValueWidget || (convertableWidgets[currentValueWidget] || []).includes(newValueWidget);\n    if (!canReuseWidget)\n      canReuseValue = false;\n  }\n\n  if (currentOperator != newOperator && [currentOperator, newOperator].includes(\"proximity\"))\n    canReuseValue = false;\n\n  const firstWidgetConfig = getFieldWidgetConfig(config, newField, newOperator, null, currentValueSrc.first());\n  const valueSources = getValueSourcesForFieldOp(config, newField, newOperator);\n  \n  let valueFixes = {};\n  let valueErrors = Array.from({length: operatorCardinality}, () => null);\n  if (canReuseValue) {\n    for (let i = 0 ; i < operatorCardinality ; i++) {\n      const v = currentValue.get(i);\n      const vType = currentValueType.get(i) || null;\n      const vSrc = currentValueSrc.get(i) || null;\n      let isValidSrc = (valueSources.find(v => v == vSrc) != null);\n      if (!isValidSrc && i > 0 && vSrc == null)\n        isValidSrc = true; // make exception for range widgets (when changing op from '==' to 'between')\n      const asyncListValues = currentAsyncListValues;\n      const [validateError, fixedValue] = validateValue(\n        config, newField, newField, newOperator, v, vType, vSrc, asyncListValues, canFix, isEndValue\n      );\n      const isValid = !validateError;\n      // Allow bad value with error message\n      // But not on field change - in that case just drop bad value that can't be reused\n      // ? Maybe we should also drop bad value on op change?\n      // For bad multiselect value we have both error message + fixed value.\n      //  If we show error message, it will gone on next tree validation\n      const fixValue = fixedValue !== v;\n      const dropValue = !isValidSrc || !isValid && (changedProp == \"field\" || !showErrorMessage && !fixValue);\n      const showValueError = !!validateError && showErrorMessage && !dropValue && !fixValue;\n      if (showValueError) {\n        valueErrors[i] = validateError;\n      }\n      if (fixValue) {\n        valueFixes[i] = fixedValue;\n      }\n      if (dropValue) {\n        canReuseValue = false;\n        break;\n      }\n    }\n  }\n\n  // reuse value OR get defaultValue for cardinality 1 (it means default range values is not supported yet, todo)\n  let newValue = null, newValueSrc = null, newValueType = null, newValueError = null;\n  newValue = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n    let v = undefined;\n    if (canReuseValue) {\n      if (i < currentValue.size) {\n        v = currentValue.get(i);\n        if (valueFixes[i] !== undefined) {\n          v = valueFixes[i];\n        }\n      }\n    } else if (operatorCardinality == 1) {\n      v = getFirstDefined([\n        newFieldConfig?.defaultValue,\n        newFieldConfig?.fieldSettings?.defaultValue,\n        firstWidgetConfig?.defaultValue\n      ]);\n    }\n    return v;\n  }));\n\n  newValueSrc = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n    let vs = null;\n    if (canReuseValue) {\n      if (i < currentValueSrc.size)\n        vs = currentValueSrc.get(i);\n    } else if (valueSources.length == 1) {\n      vs = valueSources[0];\n    } else if (valueSources.length > 1) {\n      vs = valueSources[0];\n    }\n    return vs;\n  }));\n\n  if (showErrorMessage) {\n    if (newOperatorConfig && newOperatorConfig.validateValues && newValueSrc.toJS().filter(vs => vs == \"value\" || vs == null).length == operatorCardinality) {\n      // last element in `valueError` list is for range validation error\n      const jsValues = firstWidgetConfig && firstWidgetConfig.toJS \n        ? newValue.toJS().map(v => firstWidgetConfig.toJS(v, firstWidgetConfig)) \n        : newValue.toJS();\n      const rangeValidateError = newOperatorConfig.validateValues(jsValues);\n      if (showErrorMessage) {\n        valueErrors.push(rangeValidateError);\n      }\n    }\n    newValueError = new Immutable.List(valueErrors);\n  }\n\n  newValueType = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n    let vt = null;\n    if (canReuseValue) {\n      if (i < currentValueType.size)\n        vt = currentValueType.get(i);\n    } else if (operatorCardinality == 1 && firstWidgetConfig && firstWidgetConfig.type !== undefined) {\n      vt = firstWidgetConfig.type;\n    } else if (operatorCardinality == 1 && newFieldConfig && newFieldConfig.type !== undefined) {\n      vt = newFieldConfig.type == \"!group\" ? \"number\" : newFieldConfig.type;\n    }\n    return vt;\n  }));\n\n  return {canReuseValue, newValue, newValueSrc, newValueType, newValueError, operatorCardinality};\n};\n\nexport const getFirstField = (config, parentRuleGroupPath = null) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parentPathArr = typeof parentRuleGroupPath == \"string\" ? parentRuleGroupPath.split(fieldSeparator) : parentRuleGroupPath;\n  const parentField = parentRuleGroupPath ? getFieldRawConfig(config, parentRuleGroupPath) : config;\n\n  let firstField = parentField, key = null, keysPath = [];\n  do {\n    const subfields = firstField === config ? config.fields : firstField.subfields;\n    if (!subfields || !Object.keys(subfields).length) {\n      firstField = key = null;\n      break;\n    }\n    key = Object.keys(subfields)[0];\n    keysPath.push(key);\n    firstField = subfields[key];\n  } while (firstField.type == \"!struct\" || firstField.type == \"!group\");\n  return (parentPathArr || []).concat(keysPath).join(fieldSeparator);\n};\n\nexport const getOperatorsForField = (config, field) => {\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldOps = fieldConfig ? fieldConfig.operators : [];\n  return fieldOps;\n};\n\nexport const getFirstOperator = (config, field) => {\n  const fieldOps = getOperatorsForField(config, field);\n  return fieldOps ? fieldOps[0] : null;\n};\n\nexport const getFieldPath = (field, config, onlyKeys = false) => {\n  if (!field)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = Array.isArray(field) ? field : field.split(fieldSeparator);\n  if (onlyKeys)\n    return parts;\n  else\n    return parts\n      .map((_curr, ind, arr) => arr.slice(0, ind+1))\n      .map((parts) => parts.join(fieldSeparator));\n};\n\nexport const getFuncPathLabels = (field, config, parentField = null) => {\n  return getFieldPathLabels(field, config, parentField, \"funcs\", \"subfields\");\n};\n\nexport const getFieldPathLabels = (field, config, parentField = null, fieldsKey = \"fields\", subfieldsKey = \"subfields\") => {\n  if (!field)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = Array.isArray(field) ? field : field.split(fieldSeparator);\n  const parentParts = parentField ? (Array.isArray(parentField) ? parentField : parentField.split(fieldSeparator)) : [];\n  return parts\n    .slice(parentParts.length)\n    .map((_curr, ind, arr) => arr.slice(0, ind+1))\n    .map((parts) => [...parentParts, ...parts].join(fieldSeparator))\n    .map(part => {\n      const cnf = getFieldRawConfig(config, part, fieldsKey, subfieldsKey);\n      return cnf && cnf.label || cnf && last(part.split(fieldSeparator));\n    })\n    .filter(label => label != null);\n};\n\nexport const getFieldPartsConfigs = (field, config, parentField = null) => {\n  if (!field)\n    return null;\n  const parentFieldDef = parentField && getFieldRawConfig(config, parentField) || null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = Array.isArray(field) ? field : field.split(fieldSeparator);\n  const parentParts = parentField ? (Array.isArray(parentField) ? parentField : parentField.split(fieldSeparator)) : [];\n  return parts\n    .slice(parentParts.length)\n    .map((_curr, ind, arr) => arr.slice(0, ind+1))\n    .map((parts) => ({\n      part: [...parentParts, ...parts].join(fieldSeparator),\n      key: parts[parts.length - 1]\n    }))\n    .map(({part, key}) => {\n      const cnf = getFieldRawConfig(config, part);\n      return {key, cnf};\n    })\n    .map(({key, cnf}, ind, arr) => {\n      const parentCnf = ind > 0 ? arr[ind - 1].cnf : parentFieldDef;\n      return [key, cnf, parentCnf];\n    });\n};\n\nexport const getValueLabel = (config, field, operator, delta, valueSrc = null, isSpecialRange = false) => {\n  const isFuncArg = field && typeof field == \"object\" && !!field.func && !!field.arg;\n  const {showLabels} = config.settings;\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldWidgetConfig = getFieldWidgetConfig(config, field, operator, null, valueSrc) || {};\n  const mergedOpConfig = getOperatorConfig(config, operator, field) || {};\n    \n  const cardinality = isSpecialRange ? 1 : mergedOpConfig.cardinality;\n  let ret = null;\n  if (cardinality > 1) {\n    const valueLabels = fieldWidgetConfig.valueLabels || mergedOpConfig.valueLabels;\n    if (valueLabels)\n      ret = valueLabels[delta];\n    if (ret && typeof ret != \"object\") {\n      ret = {label: ret, placeholder: ret};\n    }\n    if (!ret) {\n      ret = {\n        label: config.settings.valueLabel + \" \" + (delta+1),\n        placeholder: config.settings.valuePlaceholder + \" \" + (delta+1),\n      };\n    }\n  } else {\n    let label = fieldWidgetConfig.valueLabel;\n    let placeholder = fieldWidgetConfig.valuePlaceholder;\n    if (isFuncArg) {\n      if (!label)\n        label = fieldConfig.label || field.arg;\n      if (!placeholder && !showLabels)\n        placeholder = fieldConfig.label || field.arg;\n    }\n\n    ret = {\n      label: label || config.settings.valueLabel, \n      placeholder: placeholder || config.settings.valuePlaceholder,\n    };\n  }\n  return ret;\n};\n\nfunction _getWidgetsAndSrcsForFieldOp (config, field, operator = null, valueSrc = null) {\n  let widgets = [];\n  let valueSrcs = [];\n  if (!field)\n    return {widgets, valueSrcs};\n  const isFuncArg = typeof field == \"object\" && (!!field.func && !!field.arg || field._isFuncArg);\n  const fieldConfig = getFieldConfig(config, field);\n  const opConfig = operator ? config.operators[operator] : null;\n  \n  if (fieldConfig && fieldConfig.widgets) {\n    for (const widget in fieldConfig.widgets) {\n      const widgetConfig = fieldConfig.widgets[widget];\n      // if (!config.widgets[widget]) {\n      //   continue;\n      // }\n      const widgetValueSrc = config.widgets[widget].valueSrc || \"value\";\n      let canAdd = true;\n      if (widget == \"field\") {\n        canAdd = canAdd && filterValueSourcesForField(config, [\"field\"], fieldConfig).length > 0;\n      }\n      if (widget == \"func\") {\n        canAdd = canAdd && filterValueSourcesForField(config, [\"func\"], fieldConfig).length > 0;\n      }\n      // If can't check operators, don't add\n      // Func args don't have operators\n      if (valueSrc == \"value\" && !widgetConfig.operators && !isFuncArg && field != \"!case_value\")\n        canAdd = false;\n      if (widgetConfig.operators && operator)\n        canAdd = canAdd && widgetConfig.operators.indexOf(operator) != -1;\n      if (valueSrc && valueSrc != widgetValueSrc && valueSrc != \"const\")\n        canAdd = false;\n      if (opConfig && opConfig.cardinality == 0 && (widgetValueSrc != \"value\"))\n        canAdd = false;\n      if (canAdd) {\n        widgets.push(widget);\n        let canAddValueSrc = fieldConfig.valueSources && fieldConfig.valueSources.indexOf(widgetValueSrc) != -1;\n        if (opConfig && opConfig.valueSources && opConfig.valueSources.indexOf(widgetValueSrc) == -1)\n          canAddValueSrc = false;\n        if (canAddValueSrc && !valueSrcs.find(v => v == widgetValueSrc))\n          valueSrcs.push(widgetValueSrc);\n      }\n    }\n  }\n\n  const widgetWeight = (w) => {\n    let wg = 0;\n    if (fieldConfig.preferWidgets) {\n      if (fieldConfig.preferWidgets.includes(w))\n        wg += (10 - fieldConfig.preferWidgets.indexOf(w));\n    } else if (w == fieldConfig.mainWidget) {\n      wg += 100;\n    }\n    if (w == \"field\") {\n      wg -= 1;\n    }\n    if (w == \"func\") {\n      wg -= 2;\n    }\n    return wg;\n  };\n\n  widgets.sort((w1, w2) => (widgetWeight(w2) - widgetWeight(w1)));\n    \n  return {widgets, valueSrcs};\n}\n\nexport const getWidgetsForFieldOp = (config, field, operator, valueSrc = null) => {\n  const {widgets} = _getWidgetsAndSrcsForFieldOp(config, field, operator, valueSrc);\n  return widgets;\n};\n\nexport const filterValueSourcesForField = (config, valueSrcs, fieldDefinition) => {\n  if (!fieldDefinition)\n    return valueSrcs;\n  return valueSrcs.filter(vs => {\n    let canAdd = true;\n    if (vs == \"field\") {\n      if (config._fieldsCntByType) {\n        // tip: LHS field can be used as arg in RHS function\n        const minCnt = fieldDefinition._isFuncArg ? 0 : 1;\n        canAdd = canAdd && config._fieldsCntByType[fieldDefinition.type] > minCnt;\n      }\n    }\n    if (vs == \"func\") {\n      if (config._funcsCntByType)\n        canAdd = canAdd && !!config._funcsCntByType[fieldDefinition.type];\n      if (fieldDefinition.funcs)\n        canAdd = canAdd && fieldDefinition.funcs.length > 0;\n    }\n    return canAdd;\n  });\n};\n\nexport const getValueSourcesForFieldOp = (config, field, operator, fieldDefinition = null, leftFieldForFunc = null) => {\n  const {valueSrcs} = _getWidgetsAndSrcsForFieldOp(config, field, operator, null);\n  const filteredValueSrcs = filterValueSourcesForField(config, valueSrcs, fieldDefinition);\n  return filteredValueSrcs;\n};\n\nexport const getWidgetForFieldOp = (config, field, operator, valueSrc = null) => {\n  const {widgets} = _getWidgetsAndSrcsForFieldOp(config, field, operator, valueSrc);\n  let widget = null;\n  if (widgets.length)\n    widget = widgets[0];\n  return widget;\n};\n\nexport const formatFieldName = (field, config, meta, parentField = null) => {\n  if (!field) return;\n  const fieldDef = getFieldConfig(config, field) || {};\n  const {fieldSeparator} = config.settings;\n  const fieldParts = Array.isArray(field) ? field : field.split(fieldSeparator);\n  let fieldName = Array.isArray(field) ? field.join(fieldSeparator) : field;\n  if (fieldDef.tableName) { // legacy\n    const fieldPartsCopy = [...fieldParts];\n    fieldPartsCopy[0] = fieldDef.tableName;\n    fieldName = fieldPartsCopy.join(fieldSeparator);\n  }\n  if (fieldDef.fieldName) {\n    fieldName = fieldDef.fieldName;\n  }\n  if (parentField) {\n    const parentFieldDef = getFieldConfig(config, parentField) || {};\n    let parentFieldName = parentField;\n    if (parentFieldDef.fieldName) {\n      parentFieldName = parentFieldDef.fieldName;\n    }\n    if (fieldName.indexOf(parentFieldName + fieldSeparator) == 0) {\n      fieldName = fieldName.slice((parentFieldName + fieldSeparator).length);\n    } else {\n      meta.errors.push(`Can't cut group ${parentFieldName} from field ${fieldName}`);\n    }\n  }\n  return fieldName;\n};\n\n","import merge from \"lodash/merge\";\nimport uuid from \"../utils/uuid\";\nimport mergeWith from \"lodash/mergeWith\";\nimport {settings as defaultSettings} from \"../config/default\";\nimport moment from \"moment\";\nimport {mergeArraysSmart} from \"./stuff\";\nimport {getWidgetForFieldOp} from \"./ruleUtils\";\nimport clone from \"clone\";\n\n\nexport const extendConfig = (config, configId) => {\n  //operators, defaultOperator - merge\n  //widgetProps (including valueLabel, valuePlaceholder, hideOperator, operatorInlineLabel) - concrete by widget\n\n  if (config.__configId) {\n    return config;\n  }\n  \n  config = {...config};\n  config.settings = merge({}, defaultSettings, config.settings);\n  config._fieldsCntByType = {};\n  config._funcsCntByType = {};\n\n  config.types = clone(config.types);\n  _extendTypesConfig(config.types, config);\n\n  config.fields = clone(config.fields);\n  config.__fieldNames = {};\n  _extendFieldsConfig(config.fields, config);\n\n  config.funcs = clone(config.funcs);\n  _extendFuncArgsConfig(config.funcs, config);\n\n  moment.locale(config.settings.locale.moment);\n\n  Object.defineProperty(config, \"__configId\", {\n    enumerable: false,\n    writable: false,\n    value: configId || uuid()\n  });\n\n  return config;\n};\n\nfunction _extendTypesConfig(typesConfig, config) {\n  for (let type in typesConfig) {\n    let typeConfig = typesConfig[type];\n    _extendTypeConfig(type, typeConfig, config);\n  }\n}\n\nfunction _extendTypeConfig(type, typeConfig, config) {\n  let operators = null, defaultOperator = null;\n  typeConfig.mainWidget = typeConfig.mainWidget || Object.keys(typeConfig.widgets).filter(w => w != \"field\" && w != \"func\")[0];\n  for (let widget in typeConfig.widgets) {\n    let typeWidgetConfig = typeConfig.widgets[widget];\n    if (typeWidgetConfig.operators) {\n      let typeWidgetOperators = typeWidgetConfig.operators;\n      if (typeConfig.excludeOperators) {\n        typeWidgetOperators = typeWidgetOperators.filter(op => !typeConfig.excludeOperators.includes(op));\n      }\n      operators = mergeArraysSmart(operators, typeWidgetOperators);\n    }\n    if (typeWidgetConfig.defaultOperator)\n      defaultOperator = typeWidgetConfig.defaultOperator;\n    if (widget == typeConfig.mainWidget) {\n      typeWidgetConfig = merge({}, {widgetProps: typeConfig.mainWidgetProps || {}}, typeWidgetConfig);\n    }\n    typeConfig.widgets[widget] = typeWidgetConfig;\n  }\n  if (!typeConfig.valueSources)\n    typeConfig.valueSources = Object.keys(config.settings.valueSourcesInfo);\n  for (let valueSrc of typeConfig.valueSources) {\n    if (valueSrc != \"value\" && !typeConfig.widgets[valueSrc]) {\n      typeConfig.widgets[valueSrc] = {\n      };\n    }\n  }\n  if (!typeConfig.operators && operators)\n    typeConfig.operators = Array.from(new Set(operators)); //unique\n  if (!typeConfig.defaultOperator && defaultOperator)\n    typeConfig.defaultOperator = defaultOperator;\n}\n\nfunction _extendFieldsConfig(subconfig, config, path = []) {\n  for (let field in subconfig) {\n    _extendFieldConfig(subconfig[field], config, [...path, field]);\n    if (subconfig[field].subfields) {\n      _extendFieldsConfig(subconfig[field].subfields, config, [...path, field]);\n    }\n  }\n}\n\nfunction _extendFuncArgsConfig(subconfig, config) {\n  if (!subconfig) return;\n  for (let funcKey in subconfig) {\n    const funcDef = subconfig[funcKey];\n    if (funcDef.returnType) {\n      if (!config._funcsCntByType[funcDef.returnType])\n        config._funcsCntByType[funcDef.returnType] = 0;\n      config._funcsCntByType[funcDef.returnType]++;\n    }\n    for (let argKey in funcDef.args) {\n      _extendFieldConfig(funcDef.args[argKey], config, null, true);\n    }\n\n    // isOptional can be only in the end\n    if (funcDef.args) {\n      const argKeys = Object.keys(funcDef.args);\n      let tmpIsOptional = true;\n      for (const argKey of argKeys.reverse()) {\n        const argDef = funcDef.args[argKey];\n        if (!tmpIsOptional && argDef.isOptional) {\n          delete argDef.isOptional;\n        }\n        if (!argDef.isOptional)\n          tmpIsOptional = false;\n      }\n    }\n\n    if (funcDef.subfields) {\n      _extendFuncArgsConfig(funcDef.subfields, config);\n    }\n  }\n}\n\nfunction _extendFieldConfig(fieldConfig, config, path = null, isFuncArg = false) {\n  let operators = null, defaultOperator = null;\n  const typeConfig = config.types[fieldConfig.type];\n  const excludeOperatorsForField = fieldConfig.excludeOperators || [];\n  if (fieldConfig.type != \"!struct\" && fieldConfig.type != \"!group\") {\n    const keysToPutInFieldSettings = [\"listValues\", \"treeValues\", \"allowCustomValues\", \"validateValue\"];\n    if (!fieldConfig.fieldSettings)\n      fieldConfig.fieldSettings = {};\n    for (const k of keysToPutInFieldSettings) {\n      if (fieldConfig[k]) {\n        fieldConfig.fieldSettings[k] = fieldConfig[k];\n        delete fieldConfig[k];\n      }\n    }\n\n    // normalize listValues\n    if (fieldConfig.fieldSettings.listValues) {\n      if (config.settings.normalizeListValues) {\n        fieldConfig.fieldSettings.listValues = config.settings.normalizeListValues(\n          fieldConfig.fieldSettings.listValues, fieldConfig.type, fieldConfig.fieldSettings\n        );\n      }\n    }\n    // same for treeValues\n    if (fieldConfig.fieldSettings.treeValues) {\n      if (config.settings.normalizeListValues) {\n        fieldConfig.fieldSettings.treeValues = config.settings.normalizeListValues(\n          fieldConfig.fieldSettings.treeValues, fieldConfig.type, fieldConfig.fieldSettings\n        );\n      }\n    }\n\n    if (!typeConfig) {\n      //console.warn(`No type config for ${fieldConfig.type}`);\n      fieldConfig.disabled = true;\n      return;\n    }\n    if (!isFuncArg) {\n      if (!config._fieldsCntByType[fieldConfig.type])\n        config._fieldsCntByType[fieldConfig.type] = 0;\n      config._fieldsCntByType[fieldConfig.type]++;\n    }\n\n    if (!fieldConfig.widgets)\n      fieldConfig.widgets = {};\n    if (isFuncArg)\n      fieldConfig._isFuncArg = true;\n    fieldConfig.mainWidget = fieldConfig.mainWidget || typeConfig.mainWidget;\n    fieldConfig.valueSources = fieldConfig.valueSources || typeConfig.valueSources;\n    const excludeOperatorsForType = typeConfig.excludeOperators || [];\n    for (let widget in typeConfig.widgets) {\n      let fieldWidgetConfig = fieldConfig.widgets[widget] || {};\n      const typeWidgetConfig = typeConfig.widgets[widget] || {};\n      if (!isFuncArg) {\n        //todo: why I've excluded isFuncArg ?\n        const excludeOperators = [...excludeOperatorsForField, ...excludeOperatorsForType];\n        const shouldIncludeOperators = fieldConfig.preferWidgets\n          && (widget == \"field\" || fieldConfig.preferWidgets.includes(widget))\n          || excludeOperators.length > 0;\n        if (fieldWidgetConfig.operators) {\n          const addOperators = fieldWidgetConfig.operators.filter(o => !excludeOperators.includes(o));\n          operators = [...(operators || []), ...addOperators];\n        } else if (shouldIncludeOperators && typeWidgetConfig.operators) {\n          const addOperators = typeWidgetConfig.operators.filter(o => !excludeOperators.includes(o));\n          operators = [...(operators || []), ...addOperators];\n        }\n        if (fieldWidgetConfig.defaultOperator)\n          defaultOperator = fieldWidgetConfig.defaultOperator;\n      }\n\n      if (widget == fieldConfig.mainWidget) {\n        fieldWidgetConfig = merge({}, {widgetProps: fieldConfig.mainWidgetProps || {}}, fieldWidgetConfig);\n      }\n      fieldConfig.widgets[widget] = fieldWidgetConfig;\n    }\n    if (!isFuncArg) {\n      if (!fieldConfig.operators && operators)\n        fieldConfig.operators = Array.from(new Set(operators));\n      if (!fieldConfig.defaultOperator && defaultOperator)\n        fieldConfig.defaultOperator = defaultOperator;\n    }\n  }\n\n  const computedFieldName = computeFieldName(config, path);\n  if (computedFieldName) {\n    fieldConfig.fieldName = computedFieldName;\n  }\n\n  if (path && fieldConfig.fieldName) {\n    config.__fieldNames[fieldConfig.fieldName] = path;\n  }\n}\n\nexport const getFieldRawConfig = (config, field, fieldsKey = \"fields\", subfieldsKey = \"subfields\") => {\n  if (!field)\n    return null;\n  if (field == \"!case_value\") {\n    return {\n      type: \"case_value\",\n      mainWidget: \"case_value\",\n      widgets: {\n        \"case_value\": config.widgets[\"case_value\"]\n      }\n    };\n  }\n  const fieldSeparator = config.settings.fieldSeparator;\n  //field = normalizeField(config, field);\n  const parts = Array.isArray(field) ? field : field.split(fieldSeparator);\n  const targetFields = config[fieldsKey];\n  if (!targetFields)\n    return null;\n\n  let fields = targetFields;\n  let fieldConfig = null;\n  let path = [];\n  for (let i = 0 ; i < parts.length ; i++) {\n    const part = parts[i];\n    path.push(part);\n    const pathKey = path.join(fieldSeparator);\n    fieldConfig = fields[pathKey];\n    if (i < parts.length-1) {\n      if (fieldConfig && fieldConfig[subfieldsKey]) {\n        fields = fieldConfig[subfieldsKey];\n        path = [];\n      } else {\n        fieldConfig = null;\n      }\n    }\n  }\n\n  return fieldConfig;\n};\n\nconst computeFieldName = (config, path) => {\n  if (!path)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  let l = [...path], r = [], f, fConfig;\n  while ((f = l.pop()) !== undefined && l.length > 0) {\n    r.unshift(f);\n    fConfig = getFieldRawConfig(config, l);\n    if (fConfig.fieldName) {\n      return [fConfig.fieldName, ...r].join(fieldSeparator);\n    }\n  }\n  return null;\n};\n\nexport const normalizeField = (config, field) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  const fieldStr = Array.isArray(field) ? field.join(fieldSeparator) : field;\n  if (config.__fieldNames[fieldStr]) {\n    return config.__fieldNames[fieldStr].join(fieldSeparator);\n  }\n  return fieldStr;\n};\n\nexport const getFuncConfig = (config, func) => {\n  if (!func)\n    return null;\n  const funcConfig = getFieldRawConfig(config, func, \"funcs\", \"subfields\");\n  if (!funcConfig)\n    return null; //throw new Error(\"Can't find func \" + func + \", please check your config\");\n  return funcConfig;\n};\n\nexport const getFuncArgConfig = (config, funcKey, argKey) => {\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig)\n    return null; //throw new Error(`Can't find func ${funcKey}, please check your config`);\n  const argConfig = funcConfig.args && funcConfig.args[argKey] || null;\n  if (!argConfig)\n    return null; //throw new Error(`Can't find arg ${argKey} for func ${funcKey}, please check your config`);\n\n  //merge, but don't merge operators (rewrite instead)\n  const typeConfig = config.types[argConfig.type] || {};\n  let ret = mergeWith({}, typeConfig, argConfig || {}, (objValue, srcValue, _key, _object, _source, _stack) => {\n    if (Array.isArray(objValue)) {\n      return srcValue;\n    }\n  });\n\n  return ret;\n};\n\nexport const getFieldConfig = (config, field) => {\n  if (!field)\n    return null;\n  if (typeof field == \"object\" && !field.func && !!field.type)\n    return field;\n  if (typeof field == \"object\" && field.func && field.arg)\n    return getFuncArgConfig(config, field.func, field.arg);\n  const fieldConfig = getFieldRawConfig(config, field);\n  if (!fieldConfig)\n    return null; //throw new Error(\"Can't find field \" + field + \", please check your config\");\n\n  //merge, but don't merge operators (rewrite instead)\n  const typeConfig = config.types[fieldConfig.type] || {};\n  let ret = mergeWith({}, typeConfig, fieldConfig || {}, (objValue, srcValue, _key, _object, _source, _stack) => {\n    if (Array.isArray(objValue)) {\n      return srcValue;\n    }\n  });\n\n  return ret;\n};\n\nexport const getOperatorConfig = (config, operator, field = null) => {\n  if (!operator)\n    return null;\n  const opConfig = config.operators[operator];\n  if (field) {\n    const fieldConfig = getFieldConfig(config, field);\n    const widget = getWidgetForFieldOp(config, field, operator);\n    const widgetConfig = config.widgets[widget] || {};\n    const fieldWidgetConfig = (fieldConfig && fieldConfig.widgets ? fieldConfig.widgets[widget] : {}) || {};\n    const widgetOpProps = (widgetConfig.opProps || {})[operator];\n    const fieldWidgetOpProps = (fieldWidgetConfig.opProps || {})[operator];\n    const mergedOpConfig = merge({}, opConfig, widgetOpProps, fieldWidgetOpProps);\n    return mergedOpConfig;\n  } else {\n    return opConfig;\n  }\n};\n\nexport const getFieldWidgetConfig = (config, field, operator, widget = null, valueSrc = null) => {\n  if (!field)\n    return null;\n  if (!(operator || widget) && valueSrc != \"const\" && field != \"!case_value\")\n    return null;\n  const fieldConfig = getFieldConfig(config, field);\n  if (!widget)\n    widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n  const widgetConfig = config.widgets[widget] || {};\n  const fieldWidgetConfig = (fieldConfig && fieldConfig.widgets ? fieldConfig.widgets[widget] : {}) || {};\n  const fieldWidgetProps = (fieldWidgetConfig.widgetProps || {});\n  const valueFieldSettings = (valueSrc == \"value\" || !valueSrc) && fieldConfig && fieldConfig.fieldSettings || {}; // useful to take 'validateValue'\n  const mergedConfig = merge({}, widgetConfig, fieldWidgetProps, valueFieldSettings);\n  return mergedConfig;\n};\n","\nimport {getFieldConfig, getFuncConfig} from \"../utils/configUtils\";\nimport {filterValueSourcesForField} from \"../utils/ruleUtils\";\nimport Immutable from \"immutable\";\n\n// helpers\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\n/**\n * @param {*} value\n * @param {string} valueSrc - 'value' | 'field' | 'func'\n * @param {object} config\n * @return {* | undefined} - undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport const completeValue = (value, valueSrc, config) => {\n  if (valueSrc == \"func\")\n    return completeFuncValue(value, config);\n  else\n    return value;\n};\n\n/**\n * @param {Immutable.Map} value\n * @param {object} config\n * @return {Immutable.Map | undefined} - undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport const completeFuncValue = (value, config) => {\n  const _checkFuncValue = (value) => {\n    if (!value)\n      return undefined;\n    const funcKey = value.get(\"func\");\n    const funcConfig = funcKey && getFuncConfig(config, funcKey);\n    if (!funcConfig)\n      return undefined;\n    let complValue = value;\n    let tmpHasOptional = false;\n    for (const argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      const {valueSources, isOptional, defaultValue} = argConfig;\n      const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n      const args = complValue.get(\"args\");\n      const argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n      const argVal = args ? args.get(argKey) : undefined;\n      const argValue = argVal ? argVal.get(\"value\") : undefined;\n      const argValueSrc = (argVal ? argVal.get(\"valueSrc\") : undefined) || argDefaultValueSrc;\n      if (argValue !== undefined) {\n        const completeArgValue = completeValue(argValue, argValueSrc, config);\n        if (completeArgValue === undefined) {\n          return undefined;\n        } else if (completeArgValue !== argValue) {\n          complValue = complValue.setIn([\"args\", argKey, \"value\"], completeArgValue);\n        }\n        if (tmpHasOptional) {\n          // has gap\n          return undefined;\n        }\n      } else if (defaultValue !== undefined && !isObject(defaultValue)) {\n        complValue = complValue.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n        complValue = complValue.setIn([\"args\", argKey, \"valueSrc\"], \"value\");\n      } else if (isOptional) {\n        // optional\n        tmpHasOptional = true;\n      } else {\n        // missing value\n        return undefined;\n      }\n    }\n    return complValue;\n  };\n\n  return _checkFuncValue(value);\n};\n\n\n/**\n * @param {Immutable.Map} value \n * @return {array} - [usedFields, badFields]\n */\nconst getUsedFieldsInFuncValue = (value, config) => {\n  let usedFields = [];\n  let badFields = [];\n\n  const _traverse = (value) => {\n    const args = value && value.get(\"args\");\n    if (!args) return;\n    for (const arg of args.values()) {\n      if (arg.get(\"valueSrc\") == \"field\") {\n        const rightField = arg.get(\"value\");\n        if (rightField) {\n          const rightFieldDefinition = config ? getFieldConfig(config, rightField) : undefined;\n          if (config && !rightFieldDefinition)\n            badFields.push(rightField);\n          else\n            usedFields.push(rightField);\n        }\n      } else if (arg.get(\"valueSrc\") == \"func\") {\n        _traverse(arg.get(\"value\"));\n      }\n    }\n  };\n\n  _traverse(value);\n\n  return [usedFields, badFields];\n};\n\n\n/**\n * Used @ FuncWidget\n * @param {Immutable.Map} value \n * @param {string} funcKey \n * @param {object} config \n */\nexport const setFunc = (value, funcKey, config) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  value = value || new Immutable.Map();\n  if (Array.isArray(funcKey)) {\n    // fix for cascader\n    funcKey = funcKey.join(fieldSeparator);\n  }\n  value = value.set(\"func\", funcKey);\n  value = value.set(\"args\", new Immutable.Map());\n\n  // defaults\n  const funcConfig = funcKey && getFuncConfig(config, funcKey);\n  if (funcConfig) {\n    for (const argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      const {valueSources, defaultValue} = argConfig;\n      const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n      const firstValueSrc = filteredValueSources.length ? filteredValueSources[0] : undefined;\n      const defaultValueSrc = defaultValue ? (isObject(defaultValue) && !!defaultValue.func ? \"func\" : \"value\") : undefined;\n      const argDefaultValueSrc = defaultValueSrc || firstValueSrc;\n      if (defaultValue !== undefined) {\n        value = value.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n      }\n      if (argDefaultValueSrc) {\n        value = value.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n      }\n    }\n  }\n\n  return value;\n};\n\nconst getDefaultArgValue = ({defaultValue: value}) => {\n  if (isObject(value) && !Immutable.Map.isMap(value) && value.func) {\n    return Immutable.fromJS(value, function (k, v) {\n      return Immutable.Iterable.isIndexed(v) ? v.toList() : v.toOrderedMap();\n    });\n  }\n  return value;\n};\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {*} argVal \n* @param {object} argConfig \n*/\nexport const setArgValue = (value, argKey, argVal, argConfig, config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey, \"value\"], argVal);\n\n    // set default arg value sorce\n    const {valueSources} = argConfig;\n    const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n    const argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n    if (argDefaultValueSrc) {\n      value = value.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n    }\n  }\n  return value;\n};\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {string} argValSrc \n* @param {object} argConfig \n*/\nexport const setArgValueSrc = (value, argKey, argValSrc, _argConfig, _config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey], new Immutable.Map({valueSrc: argValSrc}));\n  }\n  return value;\n};\n","import {defaultValue} from \"../utils/stuff\";\nimport {getFieldConfig, getOperatorConfig} from \"../utils/configUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {formatFieldName} from \"../utils/ruleUtils\";\nimport {completeValue} from \"../utils/funcUtils\";\nimport {Map} from \"immutable\";\n\n/*\n Build tree to http://querybuilder.js.org/ like format\n\n Example:\n {\n    \"condition\": \"AND\",\n    \"rules\": [\n        {\n            \"id\": \"price\",\n            \"field\": \"price\",\n            \"type\": \"double\",\n            \"input\": \"text\",\n            \"operator\": \"less\",\n            \"value\": \"10.25\"\n        },\n        {\n            \"condition\": \"OR\",\n            \"rules\": [\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"2\"\n                },\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"1\"\n                }\n            ]\n        }\n    ]\n }\n */\n\n\nexport const queryBuilderFormat = (item, config) => {\n  //meta is mutable\n  let meta = {\n    usedFields: []\n  };\n  const res = formatItem(item, config, meta);\n  if (!res)\n    return undefined;\n  return {\n    ...res, \n    ...meta\n  };\n};\n\n\nconst formatItem = (item, config, meta) => {\n  if (!item) return undefined;\n\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") && children && children.size) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  const id = item.get(\"id\");\n\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const not = properties.get(\"not\");\n\n  const resultQuery = {\n    id,\n    rules: list.toList(),\n    condition: conjunction.toUpperCase(),\n    not,\n  };\n  return resultQuery;\n};\n\n\nconst formatRule = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const id = item.get(\"id\");\n\n  const operator = properties.get(\"operator\");\n  const options = properties.get(\"operatorOptions\");\n  let field = properties.get(\"field\");\n  let value = properties.get(\"value\");\n  let valueSrc = properties.get(\"valueSrc\");\n  let valueType = properties.get(\"valueType\");\n  const hasUndefinedValues = value.filter(v => v === undefined).size > 0;\n\n  if (field == null || operator == null || hasUndefinedValues)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const fieldType = fieldDefinition.type || \"undefined\";\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  const typeConfig = config.types[fieldDefinition.type] || {};\n  const fieldName = formatFieldName(field, config, meta);\n\n  if (value.size < cardinality)\n    return undefined;\n\n  if (meta.usedFields.indexOf(field) == -1)\n    meta.usedFields.push(field);\n  value = value.toArray();\n  valueSrc = valueSrc.toArray();\n  valueType = valueType.toArray();\n  let values = [];\n  for (let i = 0 ; i < value.length ; i++) {\n    const val = {\n      type: valueType[i],\n      value: value[i],\n    };\n    values.push(val);\n    if (valueSrc[i] == \"field\") {\n      const secondField = value[i];\n      if (meta.usedFields.indexOf(secondField) == -1)\n        meta.usedFields.push(secondField);\n    }\n  }\n  let operatorOptions = options ? options.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length)\n    operatorOptions = null;\n      \n  let ruleQuery = {\n    id,\n    fieldName,\n    type: fieldType,\n    input: typeConfig.mainWidget,\n    operator,\n  };\n  if (operatorOptions)\n    ruleQuery.operatorOptions = operatorOptions;\n  ruleQuery.values = values;\n  return ruleQuery;\n};\n","import {defaultValue} from \"../utils/stuff\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig\n} from \"../utils/configUtils\";\nimport {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {completeValue} from \"../utils/funcUtils\";\nimport {List, Map} from \"immutable\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\n\n// http://jsonlogic.com/\n\n\nexport const jsonLogicFormat = (item, config) => {\n  //meta is mutable\n  let meta = {\n    usedFields: [],\n    errors: []\n  };\n  \n  const logic = formatItem(item, config, meta, true);\n  \n  // build empty data\n  const {errors, usedFields} = meta;\n  const {fieldSeparator} = config.settings;\n  let data = {};\n  for (let ff of usedFields) {\n    const def = getFieldConfig(config, ff) || {};\n    const parts = ff.split(fieldSeparator);\n    let tmp = data;\n    for (let i = 0 ; i < parts.length ; i++) {\n      const p = parts[i];\n      const pdef = getFieldConfig(config, parts.slice(0, i+1)) || {};\n      if (i != parts.length - 1) {\n        if (pdef.type == \"!group\" && pdef.mode != \"struct\") {\n          if (!tmp[p])\n            tmp[p] = [{}];\n          tmp = tmp[p][0];\n        } else {\n          if (!tmp[p])\n            tmp[p] = {};\n          tmp = tmp[p];\n        }\n      } else {\n        if (!tmp[p])\n          tmp[p] = null; // can use def.type for sample values\n      }\n    }\n  }\n    \n  return {\n    errors,\n    logic,\n    data,\n  };\n};\n\n\nconst formatItem = (item, config, meta, isRoot, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const isLocked = properties.get(\"isLocked\");\n  const {lockedOp} = config.settings.jsonLogic;\n  let ret;\n  if (type === \"group\" || type === \"rule_group\") {\n    ret = formatGroup(item, config, meta, isRoot, parentField);\n  } else if (type === \"rule\") {\n    ret = formatRule(item, config, meta, parentField);\n  }\n  if (isLocked && ret && lockedOp) {\n    ret = { [lockedOp] : ret };\n  }\n  return ret;\n};\n\n\nconst formatGroup = (item, config, meta, isRoot, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n  const field = properties.get(\"field\");\n  \n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n  const conj = conjunctionDefinition.jsonLogicConj || conjunction.toLowerCase();\n  const not = properties.get(\"not\");\n  if (conj != \"and\" && conj != \"or\") {\n    meta.errors.push(`Conjunction ${conj} is not supported`);\n    return undefined;\n  }\n\n  const isRuleGroup = (type === \"rule_group\" && !isRoot);\n  const groupField = isRuleGroup && mode != \"struct\" ? field : parentField;\n  const groupOperator = properties.get(\"operator\");\n  const groupOperatorDefinition = groupOperator && getOperatorConfig(config, groupOperator, field) || null;\n  const formattedValue = formatItemValue(config, properties, meta, groupOperator, parentField);\n  const isGroup0 = isRuleGroup && (!groupOperator || groupOperatorDefinition.cardinality == 0);\n\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, false, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  \n  if (isRuleGroup && mode != \"struct\" && !isGroup0) {\n    // \"count\" rule can have no \"having\" children, but should have number value\n    if (formattedValue == undefined)\n      return undefined;\n  } else {\n    if (!list.size)\n      return undefined;\n  }\n\n  let resultQuery = {};\n  if (list.size == 1 && !isRoot)\n    resultQuery = list.first();\n  else\n    resultQuery[conj] = list.toList().toJS();\n  \n  // revert\n  if (not) {\n    resultQuery = { \"!\": resultQuery };\n  }\n\n  // rule_group (issue #246)\n  if (isRuleGroup && mode != \"struct\") {\n    const formattedField = formatField(meta, config, field, parentField);\n    if (isGroup0) {\n      // config.settings.groupOperators\n      const op = groupOperator || \"some\";\n      resultQuery = {\n        [op]: [\n          formattedField,\n          resultQuery\n        ]\n      };\n    } else {\n      // there is rule for count\n      const filter = !list.size \n        ? formattedField\n        : {\n          \"filter\": [\n            formattedField,\n            resultQuery\n          ]\n        };\n      const count = {\n        \"reduce\": [\n          filter,\n          { \"+\": [1, { var: \"accumulator\" }] },\n          0\n        ]\n      };\n      resultQuery = formatLogic(config, properties, count, formattedValue, groupOperator);\n    }\n  }\n  \n  return resultQuery;\n};\n\n\nconst formatRule = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n\n  let operator = properties.get(\"operator\");\n  let operatorOptions = properties.get(\"operatorOptions\");\n  operatorOptions = operatorOptions ? operatorOptions.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length)\n    operatorOptions = null;\n\n  if (field == null || operator == null)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  let operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDefinition.reversedOp;\n  let revOperatorDefinition = getOperatorConfig(config, reversedOp, field) || {};\n\n  // check op\n  let isRev = false;\n  if (!operatorDefinition.jsonLogic && !revOperatorDefinition.jsonLogic) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  if (!operatorDefinition.jsonLogic && revOperatorDefinition.jsonLogic) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [operatorDefinition, revOperatorDefinition] = [revOperatorDefinition, operatorDefinition];\n  }\n\n  const formattedValue = formatItemValue(config, properties, meta, operator, parentField);\n  if (formattedValue === undefined)\n    return undefined;\n\n  const formattedField = formatField(meta, config, field, parentField);\n\n  return formatLogic(config, properties, formattedField, formattedValue, operator, operatorOptions, fieldDefinition, isRev);\n};\n\n\nconst formatItemValue = (config, properties, meta, operator, parentField) => {\n  const field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  if (iValue == undefined)\n    return undefined;\n  \n  let valueSrcs = [];\n  let valueTypes = [];\n  let oldUsedFields = meta.usedFields;\n  const fvalue = iValue.map((currentValue, ind) => {\n    const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n    const valueType = iValueType ? iValueType.get(ind) : null;\n    const cValue = completeValue(currentValue, valueSrc, config);\n    const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDef = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n    const fv = formatValue(\n      meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDefinition, operator, operatorDefinition, parentField, asyncListValues\n    );\n    if (fv !== undefined) {\n      valueSrcs.push(valueSrc);\n      valueTypes.push(valueType);\n    }\n    return fv;\n  });\n  const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n  if (fvalue.size < cardinality || hasUndefinedValues) {\n    meta.usedFields = oldUsedFields; // restore\n    return undefined;\n  }\n  return cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField = null, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue, parentField);\n  } else if (typeof fieldWidgetDef.jsonLogic === \"function\") {\n    const fn = fieldWidgetDef.jsonLogic;\n    const args = [\n      currentValue,\n      {\n        ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n        asyncListValues\n      },\n      //useful options: valueFormat for date/time\n      omit(fieldWidgetDef, [\"formatValue\", \"mongoFormatValue\", \"sqlFormatValue\", \"jsonLogic\", \"elasticSearchFormatValue\", \"spelFormatValue\"]),\n    ];\n    if (operator) {\n      args.push(operator);\n      args.push(operatorDef);\n    }\n    ret = fn(...args);\n  } else {\n    ret = currentValue;\n  }\n  return ret;\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentField = null) => {\n  const funcKey = currentValue.get(\"func\");\n  const args = currentValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig.jsonLogic) {\n    meta.errors.push(`Func ${funcKey} is not supported`);\n    return undefined;\n  }\n\n  let formattedArgs = {};\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldDef, argConfig, null, null, parentField\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    if (formattedArgVal !== undefined) { // skip optional in the end\n      formattedArgs[argKey] = formattedArgVal;\n    }\n  }\n  const formattedArgsArr = Object.values(formattedArgs);\n\n  let ret;\n  if (typeof funcConfig.jsonLogic === \"function\") {\n    const fn = funcConfig.jsonLogic;\n    const args = [\n      formattedArgs,\n    ];\n    ret = fn(...args);\n  } else {\n    const funcName = funcConfig.jsonLogic || funcKey;\n    const isMethod = !!funcConfig.jsonLogicIsMethod;\n    if (isMethod) {\n      const [obj, ...params] = formattedArgsArr;\n      if (params.length) {\n        ret = { \"method\": [ obj, funcName, params ] };\n      } else {\n        ret = { \"method\": [ obj, funcName ] };\n      }\n    } else {\n      ret = { [funcName]: formattedArgsArr };\n    }\n  }\n  return ret;\n};\n\n\nconst formatField = (meta, config, field, parentField = null) => {\n  const {fieldSeparator, jsonLogic} = config.settings;\n\n  let ret;\n  if (field) {\n    if (Array.isArray(field))\n      field = field.join(fieldSeparator);\n    const fieldDef = getFieldConfig(config, field) || {};\n    let fieldName = field;\n    if (fieldDef.fieldName) {\n      fieldName = fieldDef.fieldName;\n    }\n    if (parentField) {\n      const parentFieldDef = getFieldConfig(config, parentField) || {};\n      let parentFieldName = parentField;\n      if (parentFieldDef.fieldName) {\n        parentFieldName = parentFieldDef.fieldName;\n      }\n      if (fieldName.indexOf(parentFieldName + fieldSeparator) == 0) {\n        fieldName = fieldName.slice((parentFieldName + fieldSeparator).length);\n      } else {\n        meta.errors.push(`Can't cut group ${parentFieldName} from field ${fieldName}`);\n      }\n    }\n    let varName = fieldDef.jsonLogicVar || (fieldDef.type == \"!group\" ? jsonLogic.groupVarKey : \"var\");\n    ret = { [varName] : fieldName };\n    if (meta.usedFields.indexOf(field) == -1)\n      meta.usedFields.push(field);\n  }\n  return ret;\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, formattedField, formattedValue) => {\n  let formatteOp = operator;\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  const isReverseArgs = defaultValue(operatorDefinition._jsonLogicIsRevArgs, false);\n  if (typeof operatorDefinition.jsonLogic == \"string\")\n    formatteOp = operatorDefinition.jsonLogic;\n  const rangeOps = [\"<\", \"<=\", \">\", \">=\"];\n  const eqOps = [\"==\", \"!=\"];\n  const fn = (field, op, val, opDef, opOpts) => {\n    if (cardinality == 0 && eqOps.includes(formatteOp))\n      return { [formatteOp]: [formattedField, null] };\n    else if (cardinality == 0)\n      return { [formatteOp]: formattedField };\n    else if (cardinality == 1 && isReverseArgs)\n      return { [formatteOp]: [formattedValue, formattedField] };\n    else if (cardinality == 1)\n      return { [formatteOp]: [formattedField, formattedValue] };\n    else if (cardinality == 2 && rangeOps.includes(formatteOp))\n      return { [formatteOp]: [formattedValue[0], formattedField, formattedValue[1]] };\n    else\n      return { [formatteOp]: [formattedField, ...formattedValue] };\n  };\n  return fn;\n};\n\nconst formatLogic = (config, properties, formattedField, formattedValue, operator, operatorOptions = null, fieldDefinition = null, isRev = false) => {\n  const field = properties.get(\"field\");\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  let fn = typeof operatorDefinition.jsonLogic == \"function\" \n    ? operatorDefinition.jsonLogic \n    : buildFnToFormatOp(operator, operatorDefinition, formattedField, formattedValue);\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    omit(operatorDefinition, [\"formatOp\", \"mongoFormatOp\", \"sqlFormatOp\", \"jsonLogic\", \"spelFormatOp\"]),\n    operatorOptions,\n    fieldDefinition,\n  ];\n  let ruleQuery = fn(...args);\n\n  if (isRev) {\n    ruleQuery = { \"!\": ruleQuery };\n  }\n\n  return ruleQuery;\n};\n","import {defaultValue} from \"../utils/stuff\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig\n} from \"../utils/configUtils\";\nimport {getFieldPath, getFieldPathLabels, getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {completeValue} from \"../utils/funcUtils\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\nimport {List, Map} from \"immutable\";\n\n\n// helpers\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\nexport const mongodbFormat = (tree, config) => {\n  return _mongodbFormat(tree, config, false);\n};\n\nexport const _mongodbFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const res = formatItem([], tree, config, meta);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to MongoDb:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (parents, item, config, meta, _not = false, _canWrapExpr = true, _fieldName = undefined, _value = undefined) => {\n  if (!item) return undefined;\n\n  const type = item.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(parents, item, config, meta, _not, _canWrapExpr, _fieldName, _value);\n  } else if (type === \"rule\") {\n    return formatRule(parents, item, config, meta, _not, _canWrapExpr, _fieldName, _value);\n  }\n  return undefined;\n};\n\n\nconst formatGroup = (parents, item, config, meta, _not = false, _canWrapExpr = true, _fieldName = undefined, _value = undefined) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\") || new List();\n  const {canShortMongoQuery} = config.settings;\n\n  const hasParentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\").length > 0;\n  const parentPath = parents\n    .filter(it => it.get(\"type\") == \"rule_group\")\n    .map(it => it.get(\"properties\").get(\"field\"))\n    .slice(-1).pop();\n  const realParentPath = hasParentRuleGroup && parentPath;\n\n  const groupField = type === \"rule_group\" ? properties.get(\"field\") : null;\n  const groupFieldName = formatFieldName(groupField, config, meta, realParentPath);\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const mode = groupFieldDef.mode; //properties.get(\"mode\");\n  const canHaveEmptyChildren = groupField && mode == \"array\";\n\n  const not = _not ? !(properties.get(\"not\")) : (properties.get(\"not\"));\n  const list = children\n    .map((currentChild) => formatItem(\n      [...parents, item], currentChild, config, meta, not, mode != \"array\", mode == \"array\" ? (f => `$$el.${f}`) : undefined)\n    )\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  let conjunctionDefinition = config.conjunctions[conjunction];\n  const reversedConj = conjunctionDefinition.reversedConj;\n  if (not && reversedConj) {\n    conjunction = reversedConj;\n    conjunctionDefinition = config.conjunctions[conjunction];\n  }\n  const mongoConj = conjunctionDefinition.mongoConj;\n\n  let resultQuery;\n  if (list.size == 1) {\n    resultQuery = list.first();\n  } else if (list.size > 1) {\n    const rules = list.toList().toJS();\n    const canShort = canShortMongoQuery && (mongoConj == \"$and\");\n    if (canShort) {\n      resultQuery = rules.reduce((acc, rule) => {\n        if (!acc) return undefined;\n        for (let k in rule) {\n          if (k[0] == \"$\") {\n            acc = undefined;\n            break;\n          }\n          if (acc[k] == undefined) {\n            acc[k] = rule[k];\n          } else {\n            // https://github.com/ukrbublik/react-awesome-query-builder/issues/182\n            let prev = acc[k], next = rule[k];\n            if (!isObject(prev)) {\n              prev = {\"$eq\": prev};\n            }\n            if (!isObject(next)) {\n              next = {\"$eq\": next};\n            }\n            const prevOp = Object.keys(prev)[0], nextOp = Object.keys(next)[0];\n            if (prevOp == nextOp) {\n              acc = undefined;\n              break;\n            }\n            acc[k] = Object.assign({}, prev, next);\n          }\n        }\n        return acc;\n      }, {});\n    }\n    if (!resultQuery) // can't be shorten\n      resultQuery = { [mongoConj] : rules };\n  }\n\n  if (groupField) {\n    if (mode == \"array\") {\n      const totalQuery = {\n        \"$size\": groupFieldName\n      };\n      const filterQuery = resultQuery ? {\n        \"$size\": {\n          \"$ifNull\": [\n            {\n              \"$filter\": {\n                input: \"$\" + groupFieldName,\n                as: \"el\",\n                cond: resultQuery\n              }\n            },\n            []\n          ]\n        }\n      } : totalQuery;\n      resultQuery = formatItem(\n        parents, item.set(\"type\", \"rule\"), config, meta, false, false, (_f => filterQuery), totalQuery\n      );\n      resultQuery = { \"$expr\": resultQuery };\n    } else {\n      resultQuery = { [groupFieldName]: {\"$elemMatch\": resultQuery} };\n    }\n  }\n  return resultQuery;\n};\n\n\nconst formatRule = (parents, item, config, meta, _not = false, _canWrapExpr = true, _fieldName = undefined, _value = undefined) => {\n  const properties = item.get(\"properties\") || new Map();\n\n  const hasParentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\").length > 0;\n  const parentPath = parents\n    .filter(it => it.get(\"type\") == \"rule_group\")\n    .map(it => it.get(\"properties\").get(\"field\"))\n    .slice(-1).pop();\n  const realParentPath = hasParentRuleGroup && parentPath;\n\n  let operator = properties.get(\"operator\");\n  const operatorOptions = properties.get(\"operatorOptions\");\n  const field = properties.get(\"field\");\n  const iValue = properties.get(\"value\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n\n  if (field == null || operator == null || iValue === undefined)\n    return undefined;\n\n  const fieldDef = getFieldConfig(config, field) || {};\n  let operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDefinition.reversedOp;\n  let revOperatorDefinition = getOperatorConfig(config, reversedOp, field) || {};\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n\n  let not = _not;\n  if (not && reversedOp) {\n    [operator, reversedOp] = [reversedOp, operator];\n    [operatorDefinition, revOperatorDefinition] = [revOperatorDefinition, operatorDefinition];\n    not = false;\n  }\n\n  const fieldName = formatFieldName(field, config, meta, realParentPath);\n\n  //format value\n  let valueSrcs = [];\n  let valueTypes = [];\n  let useExpr = false;\n  const fvalue = iValue.map((currentValue, ind) => {\n    const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n    const valueType = iValueType ? iValueType.get(ind) : null;\n    const cValue = completeValue(currentValue, valueSrc, config);\n    const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDef = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n    const [fv, fvUseExpr] = formatValue(\n      meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, realParentPath,  operator, operatorDefinition, asyncListValues\n    );\n    if (fv !== undefined) {\n      useExpr = useExpr || fvUseExpr;\n      valueSrcs.push(valueSrc);\n      valueTypes.push(valueType);\n    }\n    return fv;\n  });\n  if (_fieldName)\n    useExpr = true;\n  const wrapExpr = useExpr && _canWrapExpr;\n  const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n  if (fvalue.size < cardinality || hasUndefinedValues)\n    return undefined;\n  const formattedValue = cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n\n  //build rule\n  const fn = operatorDefinition.mongoFormatOp;\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  const args = [\n    _fieldName ? _fieldName(fieldName) : fieldName,\n    operator,\n    _value !== undefined && formattedValue == null ? _value : formattedValue,\n    useExpr,\n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n    omit(operatorDefinition, [\"formatOp\", \"mongoFormatOp\", \"sqlFormatOp\", \"jsonLogic\", \"spelFormatOp\"]),\n    operatorOptions,\n    fieldDef,\n  ];\n  let ruleQuery = fn(...args);\n  if (wrapExpr) {\n    ruleQuery = { \"$expr\": ruleQuery };\n  }\n  if (not) {\n    ruleQuery = { \"$not\": ruleQuery };\n  }\n  return ruleQuery;\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, parentPath, operator, operatorDef, asyncListValues) => {\n  if (currentValue === undefined)\n    return [undefined, false];\n\n  let ret;\n  let useExpr = false;\n\n  if (valueSrc == \"field\") {\n    [ret, useExpr] = formatRightField(meta, config, currentValue, parentPath);\n  } else if (valueSrc == \"func\") {\n    [ret, useExpr] = formatFunc(meta, config, currentValue, parentPath);\n  } else {\n    if (typeof fieldWidgetDef.mongoFormatValue === \"function\") {\n      const fn = fieldWidgetDef.mongoFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, [\"formatValue\", \"mongoFormatValue\", \"sqlFormatValue\", \"jsonLogic\", \"elasticSearchFormatValue\", \"spelFormatValue\"]),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      ret = fn(...args);\n    } else {\n      ret = currentValue;\n    }\n  }\n\n  return [ret, useExpr];\n};\n\n\n\nconst formatFieldName = (field, config, meta, parentPath) => {\n  if (!field) return;\n  const fieldDef = getFieldConfig(config, field) || {};\n  const {fieldSeparator} = config.settings;\n  const fieldParts = Array.isArray(field) ? field : field.split(fieldSeparator);\n  let fieldName = Array.isArray(field) ? field.join(fieldSeparator) : field;\n  // if (fieldDef.tableName) { // legacy\n  //     const fieldPartsCopy = [...fieldParts];\n  //     fieldPartsCopy[0] = fieldDef.tableName;\n  //     fieldName = fieldPartsCopy.join(fieldSeparator);\n  // }\n  if (fieldDef.fieldName) {\n    fieldName = fieldDef.fieldName;\n  }\n\n  if (parentPath) {\n    const parentFieldDef = getFieldConfig(config, parentPath) || {};\n    let parentFieldName = parentPath;\n    if (parentFieldDef.fieldName) {\n      parentFieldName = parentFieldDef.fieldName;\n    }\n    if (fieldName.indexOf(parentFieldName+\".\") == 0) {\n      fieldName = fieldName.slice((parentFieldName+\".\").length);\n    } else {\n      meta.errors.push(`Can't cut group ${parentFieldName} from field ${fieldName}`);\n    }\n  }\n  return fieldName;\n};\n\nconst formatRightField = (meta, config, rightField, parentPath) => {\n  const {fieldSeparator} = config.settings;\n  let ret;\n  const useExpr = true;\n\n  if (rightField) {\n    const rightFieldDefinition = getFieldConfig(config, rightField) || {};\n    const fieldParts = Array.isArray(rightField) ? rightField : rightField.split(fieldSeparator);\n    const _fieldKeys = getFieldPath(rightField, config);\n    const fieldPartsLabels = getFieldPathLabels(rightField, config);\n    const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparator) : null;\n    const formatFieldFn = config.settings.formatField;\n    const rightFieldName = formatFieldName(rightField, config, meta, parentPath);\n    const formattedField = formatFieldFn(rightFieldName, fieldParts, fieldFullLabel, rightFieldDefinition, config, false);\n    ret = \"$\" + formattedField;\n  }\n\n  return [ret, useExpr];\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentPath) => {\n  const useExpr = true;\n  let ret;\n\n  const funcKey = currentValue.get(\"func\");\n  const args = currentValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  const funcName = funcConfig.mongoFunc || funcKey;\n  const mongoArgsAsObject = funcConfig.mongoArgsAsObject;\n\n  let formattedArgs = {};\n  let argsCnt = 0;\n  let lastArg = undefined;\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const widget = getWidgetForFieldOp(config, fieldDef, null, argValueSrc);\n    const fieldWidgetDef = omit(getFieldWidgetConfig(config, fieldDef, null, widget, argValueSrc), [\"factory\"]);\n    const [formattedArgVal, _argUseExpr] = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, parentPath, null, null, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return [undefined, false];\n    }\n    argsCnt++;\n    if (formattedArgVal !== undefined) { // skip optional in the end\n      formattedArgs[argKey] = formattedArgVal;\n      lastArg = formattedArgVal;\n    }\n  }\n\n  if (typeof funcConfig.mongoFormatFunc === \"function\") {\n    const fn = funcConfig.mongoFormatFunc;\n    const args = [\n      formattedArgs,\n    ];\n    ret = fn(...args);\n  } else if (funcConfig.mongoFormatFunc === null) {\n    meta.errors.push(`Functon ${funcName} is not supported`);\n    return [undefined, false];\n  } else {\n    if (mongoArgsAsObject)\n      ret = { [funcName]: formattedArgs };\n    else if (argsCnt == 1 && lastArg !== undefined)\n      ret = { [funcName]: lastArg };\n    else\n      ret = { [funcName]: Object.values(formattedArgs) };\n  }\n\n  return [ret, useExpr];\n};\n\n\n","import SqlStringOrig from \"sqlstring\";\n\nexport const SqlString = SqlStringOrig;\n\nSqlString.trim = (val) => {\n  if (val.charAt(0) == \"'\")\n    return val.substring(1, val.length-1);\n  else\n    return val;\n};\n\nSqlString.escapeLike = (val, any_start = true, any_end = true) => {\n  // normal escape\n  let res = SqlString.escape(val);\n  // unwrap ''\n  res = SqlString.trim(res);\n  // escape % and _\n  res = res.replace(/[%_]/g, \"\\\\$&\");\n  // wrap with % for LIKE\n  res = (any_start ? \"%\" : \"\") + res + (any_end ? \"%\" : \"\");\n  // wrap ''\n  res = \"'\" + res + \"'\";\n  return res;\n};\n\nexport const sqlEmptyValue = (fieldDef) => {\n  let v = \"''\";\n  const type = fieldDef?.type;\n  if (type == \"date\") {\n    //todo: support other SQL dialects?  0001-01-01 for oracle, 1970-01-01 for timestamp\n    v = \"'0000-00-00'\";\n  } else if (type == \"datetime\") {\n    v = \"'0000-00-00 00:00'\";\n  } else if (type == \"time\") {\n    v = \"'00:00'\";\n  } else if (type == \"number\") {\n    v = \"0\";\n  }\n  return v;\n};\n\nexport const mongoEmptyValue = (fieldDef) => {\n  let v = \"\";\n  const type = fieldDef?.type;\n  if (type == \"number\") {\n    v = 0;\n  }\n  return v;\n};\n\n\nconst spelEscapeString = (val) => {\n  // Strings are delimited by single quotes. To put a single quote itself in a string, use two single quote characters. \n  return \"'\" + val.replace(/'/g, \"''\") + \"'\";\n};\n\nconst spelInlineList = (vals, toArray = false) => {\n  // find java type of values\n  let javaType;\n  let jt;\n  const numberJavaTypes = [\"int\", \"float\"];\n  vals.map(v => {\n    if (v !== undefined && v !== null) {\n      if (typeof v === \"string\") {\n        jt = \"String\";\n      } else if (typeof v === \"number\") {\n        jt = Number.isInteger(v) ? \"int\" : \"float\";\n      } else throw new Error(`spelEscape: Can't use value ${v} in array`);\n\n      if (!javaType) {\n        javaType = jt;\n      } else if (javaType != jt) {\n        if (numberJavaTypes.includes(javaType) && numberJavaTypes.includes(jt)) {\n          // found int and float in collecton - use float\n          javaType = \"float\";\n        } else throw new Error(`spelEscape: Can't use different types in array: found ${javaType} and ${jt}`);\n      }\n    }\n  });\n  if (!javaType) {\n    javaType = \"String\"; //default if empty array\n  }\n\n  // for floats we should add 'f' to all items\n  let escapedVals;\n  if (javaType == \"float\") {\n    escapedVals = vals.map(v => spelEscape(v, true));\n  } else {\n    escapedVals = vals.map(v => spelEscape(v));\n  }\n\n  // build inline list or array\n  let res;\n  if (toArray) {\n    res = `new ${javaType}[]{${escapedVals.join(\", \")}}`;\n  } else {\n    res = `{${escapedVals.join(\", \")}}`;\n  }\n  \n  return res;\n};\n\nexport const spelFixList = (val) => {\n  // `{1,2}.contains(1)` NOT works\n  // `{1,2}.?[true].contains(1)` works\n  return `${val}.?[true]`;\n};\n\nexport const spelEscape = (val, numberToFloat = false, arrayToArray = false) => {\n  // https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions-ref-literal\n  if (val === undefined || val === null) {\n    return \"null\";\n  }\n  switch (typeof val) {\n  case \"boolean\":\n    return (val) ? \"true\" : \"false\";\n  case \"number\":\n    if (!Number.isFinite(val) || isNaN(val))\n      return undefined;\n    return val + (!Number.isInteger(val) || numberToFloat ? \"f\" : \"\");\n  case \"object\":\n    if (Array.isArray(val)) {\n      return spelInlineList(val, arrayToArray);\n    } else {\n      // see `spelFormatValue` for Date, LocalTime\n      throw new Error(\"spelEscape: Object is not supported\");\n    }\n  default: return spelEscapeString(val);\n  }\n};\n\nexport const spelFormatConcat = (parts) => {\n  if (parts && Array.isArray(parts) && parts.length) {\n    return parts\n      .map(part => {\n        if (part.type == \"const\") {\n          return spelEscape(part.value);\n        } else if (part.type == \"property\") {\n          return \"\"+part.value;\n        } else if (part.type == \"variable\") {\n          return \"#\"+part.value;\n        } return undefined;\n      })\n      .filter(r => r != undefined)\n      .join(\" + \");\n  } else {\n    return \"null\";\n  }\n};\n\n// `val` is {value, valueType, valueSrc}\n// If `valueType` == \"case_value\", `value` is array of such items (to be considered as concatenation)\nexport const spelImportConcat = (val) => {\n  if (val == undefined)\n    return [undefined, []];\n  let errors = [];\n  const parts = val.valueType == \"case_value\" ? val.value : [val];\n  const res = parts.map(child => {\n    if (child.valueSrc == \"value\") {\n      if (child.value === null) {\n        return undefined;\n      } else {\n        return {\n          type: \"const\", \n          value: child.value\n        };\n      }\n    } else if (child.valueSrc == \"field\") {\n      return {\n        type: (child.isVariable ? \"variable\" : \"property\"), \n        value: child.value\n      };\n    } else {\n      errors.push(`Unsupported valueSrc ${child.valueSrc} in concatenation`);\n    }\n  }).filter(v => v != undefined);\n  return [res, errors];\n};\n\nexport const stringifyForDisplay = (v) => (v == null ? \"NULL\" : v.toString());\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig\n} from \"../utils/configUtils\";\nimport {\n  getFieldPath, getFieldPathLabels, getWidgetForFieldOp, formatFieldName\n} from \"../utils/ruleUtils\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\nimport {defaultValue} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {completeValue} from \"../utils/funcUtils\";\nimport {List, Map} from \"immutable\";\nimport {SqlString} from \"../utils/export\";\n\nexport const sqlFormat = (tree, config) => {\n  return _sqlFormat(tree, config, false);\n};\n\nexport const _sqlFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const res = formatItem(tree, config, meta);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to SQL:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (item, config, meta) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\") || new List();\n\n  const isRuleGroup = (type === \"rule_group\");\n  const groupField = isRuleGroup ? properties.get(\"field\") : null;\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const mode = groupFieldDef.mode;\n  if (mode == \"array\") {\n    meta.errors.push(`Aggregation is not supported for ${groupField}`);\n  }\n\n  const not = properties.get(\"not\");\n  const canHaveEmptyChildren = false; //isRuleGroup && mode == \"array\";\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n\n  return conjunctionDefinition.sqlFormatConj(list, conjunction, not);\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition) => {\n  const sqlOp = operatorDefinition.sqlOp || operator;\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  let fn;\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sqlOp}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, value, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sqlOp} ${value}`;\n    };\n  } else if (cardinality == 2) {\n    // between\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values.first();\n      const valTo = values.get(1);\n      return `${field} ${sqlOp} ${valFrom} AND ${valTo}`;\n    };\n  }\n  return fn;\n};\n\nconst formatRule = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  let operator = properties.get(\"operator\");\n  const operatorOptions = properties.get(\"operatorOptions\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  if (field == null || operator == null)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  let opDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = opDef.reversedOp;\n  let revOpDef = getOperatorConfig(config, reversedOp, field) || {};\n  const cardinality = defaultValue(opDef.cardinality, 1);\n\n  // check op\n  let isRev = false;\n  const canFormatOp = opDef.sqlOp || opDef.sqlFormatOp;\n  const canFormatRevOp = revOpDef.sqlOp || revOpDef.sqlFormatOp;\n  if (!canFormatOp && !canFormatRevOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  if (!canFormatRevOp && canFormatRevOp) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [opDef, revOpDef] = [revOpDef, opDef];\n  }\n\n  //format value\n  let valueSrcs = [];\n  let valueTypes = [];\n  const fvalue = iValue.map((currentValue, ind) => {\n    const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n    const valueType = iValueType ? iValueType.get(ind) : null;\n    const cValue = completeValue(currentValue, valueSrc, config);\n    const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDefinition = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n    let fv = formatValue(\n      meta, config, cValue, valueSrc, valueType, fieldWidgetDefinition, fieldDefinition, operator, opDef, asyncListValues\n    );\n    if (fv !== undefined) {\n      valueSrcs.push(valueSrc);\n      valueTypes.push(valueType);\n    }\n    return fv;\n  });\n  const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n  if (hasUndefinedValues || fvalue.size < cardinality)\n    return undefined;\n  const formattedValue = (cardinality == 1 ? fvalue.first() : fvalue);\n\n  //find fn to format expr\n  const fn = opDef.sqlFormatOp || buildFnToFormatOp(operator, opDef);\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n      \n  //format field\n  const formattedField = formatField(meta, config, field);\n      \n  //format expr\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n    omit(opDef, [\"formatOp\", \"mongoFormatOp\", \"sqlFormatOp\", \"jsonLogic\", \"spelFormatOp\"]),\n    operatorOptions,\n    fieldDefinition,\n  ];\n\n  let ret;\n  ret = fn(...args);\n  if (isRev) {\n    ret = config.settings.sqlFormatReverse(ret);\n  }\n  if (ret === undefined) {\n    meta.errors.push(`Operator ${operator} is not supported for value source ${valueSrcs.join(\", \")}`);\n    return undefined;\n  }\n  return ret;\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue);\n  } else {\n    if (typeof fieldWidgetDef.sqlFormatValue === \"function\") {\n      const fn = fieldWidgetDef.sqlFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, [\"formatValue\", \"mongoFormatValue\", \"sqlFormatValue\", \"jsonLogic\", \"elasticSearchFormatValue\", \"spelFormatValue\"]),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, currentValue) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn(...args);\n    } else {\n      if (Array.isArray(currentValue)) {\n        ret = currentValue.map(v => SqlString.escape(v));\n      } else {\n        ret = SqlString.escape(currentValue);\n      }\n    }\n  }\n  return ret;\n};\n\nconst formatField = (meta, config, field) => {\n  if (!field) return;\n  const {fieldSeparator} = config.settings;\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const fieldParts = Array.isArray(field) ? field : field.split(fieldSeparator);\n  const _fieldKeys = getFieldPath(field, config);\n  const fieldPartsLabels = getFieldPathLabels(field, config);\n  const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparator) : null;\n  const formatFieldFn = config.settings.formatField;\n  const fieldName = formatFieldName(field, config, meta);\n  const formattedField = formatFieldFn(fieldName, fieldParts, fieldFullLabel, fieldDefinition, config);\n  return formattedField;\n};\n\n\nconst formatFunc = (meta, config, currentValue) => {\n  const funcKey = currentValue.get(\"func\");\n  const args = currentValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  const funcName = funcConfig.sqlFunc || funcKey;\n\n  let formattedArgs = {};\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldDef, argConfig, null, null, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    if (formattedArgVal !== undefined) { // skip optional in the end\n      formattedArgs[argKey] = formattedArgVal;\n    }\n  }\n\n  let ret;\n  if (typeof funcConfig.sqlFormatFunc === \"function\") {\n    const fn = funcConfig.sqlFormatFunc;\n    const args = [\n      formattedArgs\n    ];\n    ret = fn(...args);\n  } else {\n    const argsStr = Object.entries(formattedArgs)\n      .map(([k, v]) => v)\n      .join(\", \");\n    ret = `${funcName}(${argsStr})`;\n  }\n  return ret;\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig\n} from \"../utils/configUtils\";\nimport {\n  getFieldPath, getWidgetForFieldOp, formatFieldName, getFieldPartsConfigs\n} from \"../utils/ruleUtils\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\nimport {defaultValue, logger} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {completeValue} from \"../utils/funcUtils\";\nimport {List, Map} from \"immutable\";\nimport {spelEscape} from \"../utils/export\";\n\nexport const spelFormat = (tree, config) => {\n  return _spelFormat(tree, config, false);\n};\n\nexport const _spelFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const res = formatItem(tree, config, meta, null);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to SpEL:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (item, config, meta, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(item, config, meta, parentField);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta, parentField);\n  } else if (type == \"switch_group\") {\n    return formatSwitch(item, config, meta, parentField);\n  } else if (type == \"case_group\") {\n    return formatCase(item, config, meta, parentField);\n  }\n\n  return undefined;\n};\n\nconst formatCase = (item, config, meta, parentField = null) => {\n  const type = item.get(\"type\");\n  if (type != \"case_group\") {\n    meta.errors.push(`Unexpected child of type ${type} inside switch`);\n    return undefined;\n  }\n  const properties = item.get(\"properties\") || new Map();\n  \n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, null, parentField, \"!case_value\"\n  );\n\n  const cond = formatGroup(item, config, meta, parentField);\n  return [cond, formattedValue];\n};\n\nconst formatSwitch = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  if (!children) return undefined;\n  const cases = children\n    .map((currentChild) => formatCase(currentChild, config, meta, null))\n    .filter((currentChild) => typeof currentChild !== \"undefined\")\n    .toArray();\n  \n  if (!cases.length) return undefined;\n\n  if (cases.length == 1 && !cases[0][0]) {\n    // only 1 case without condition\n    return cases[0][1];\n  }\n\n  let filteredCases = [];\n  for (let i = 0 ; i < cases.length ; i++) {\n    if (i != (cases.length - 1) && !cases[i][0]) {\n      meta.errors.push(`No condition for case ${i}`);\n    } else {\n      filteredCases.push(cases[i]);\n      if (i == (cases.length - 1) && cases[i][0]) {\n        // no default - add null as default\n        filteredCases.push([undefined, null]);\n      }\n    }\n  }\n\n  let left = \"\", right = \"\";\n  for (let i = 0 ; i < filteredCases.length ; i++) {\n    let [cond, value] = filteredCases[i];\n    if (value == undefined)\n      value = \"null\";\n    if (cond == undefined)\n      cond = \"true\";\n    if (i != (filteredCases.length - 1)) {\n      left += `(${cond} ? ${value} : `;\n      right += \")\";\n    } else {\n      left += `${value}`;\n    }\n  }\n  return left + right;\n};\n\nconst formatGroup = (item, config, meta, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n  const field = properties.get(\"field\");\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n  const not = properties.get(\"not\");\n\n  const isRuleGroup = type === \"rule_group\";\n  const isRuleGroupArray = isRuleGroup && mode != \"struct\";\n  const groupField = isRuleGroupArray ? field : parentField;\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const isSpelArray = groupFieldDef.isSpelArray;\n  \n  // check op for reverse\n  let groupOperator = properties.get(\"operator\");\n  if (!groupOperator && (!mode || mode == \"some\")) {\n    groupOperator = \"some\";\n  }\n  const realGroupOperator = checkOp(config, groupOperator, field);\n  const isGroupOpRev = realGroupOperator != groupOperator;\n  const realGroupOperatorDefinition = groupOperator && getOperatorConfig(config, realGroupOperator, field) || null;\n  const isGroup0 = isRuleGroup && (!realGroupOperator || realGroupOperatorDefinition.cardinality == 0);\n  \n  // build value for aggregation op\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, realGroupOperator, parentField, null\n  );\n  \n  // build filter in aggregation\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n\n  if (isRuleGroupArray && !isGroup0) {\n    // \"count\" rule can have no \"having\" children, but should have number value\n    if (formattedValue == undefined)\n      return undefined;\n  } else {\n    if (!list.size)\n      return undefined;\n  }\n\n  const omitBrackets = isRuleGroup;\n  const filter = list.size ? conjunctionDefinition.spelFormatConj(list, conjunction, not, omitBrackets) : null;\n\n  // build result\n  let ret;\n  if (isRuleGroupArray) {\n    const formattedField = formatField(meta, config, field, parentField);\n    const getSize = isSpelArray ? \".length\" : \".size()\";\n    const fullSize = `${formattedField}${getSize}`;\n    // https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions-collection-selection\n    const filteredSize = filter ? `${formattedField}.?[${filter}]${getSize}` : fullSize;\n    const groupValue = isGroup0 ? fullSize : formattedValue;\n    // format expression\n    ret = formatExpression(\n      meta, config, properties, filteredSize, groupValue, realGroupOperator, valueSrc, valueType, isGroupOpRev\n    );\n  } else {\n    ret = filter;\n  }\n  \n  return ret;\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition) => {\n  const spelOp = operatorDefinition.spelOp;\n  if (!spelOp) return undefined;\n  const objectIsFirstArg = spelOp[0] == \"$\";\n  const isMethod = spelOp[0] == \".\" || objectIsFirstArg;\n  const isFunction = spelOp.substring(spelOp.length - 2) == \"()\";\n  const sop = isMethod ? spelOp.slice(1) : (isFunction ? spelOp.substring(0, spelOp.length - 2) : spelOp);\n  let fn;\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (isMethod)\n        return `${field}.${sop}()`;\n      else\n        return `${field} ${sop}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (objectIsFirstArg)\n        return `${values}.${sop}(${field})`;\n      else if (isFunction)\n        return `${sop}(${field}, ${values})`;\n      else if (isMethod)\n        return `${field}.${sop}(${values})`;\n      else\n        return `${field} ${sop} ${values}`;\n    };\n  }\n  return fn;\n};\n\nconst formatExpression = (meta, config, properties, formattedField, formattedValue, operator, valueSrc, valueType, isRev = false) => {\n  const field = properties.get(\"field\");\n  const opDef = getOperatorConfig(config, operator, field) || {};\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operatorOptions = properties.get(\"operatorOptions\");\n\n  //find fn to format expr\n  const fn = opDef.spelFormatOp || buildFnToFormatOp(operator, opDef);\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n\n  //format expr\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    valueSrc,\n    valueType,\n    omit(opDef, [\"formatOp\", \"mongoFormatOp\", \"sqlFormatOp\", \"jsonLogic\", \"spelFormatOp\"]),\n    operatorOptions,\n    fieldDef,\n  ];\n  let ret;\n  ret = fn(...args);\n\n  //rev\n  if (isRev) {\n    ret = config.settings.spelFormatReverse(ret);\n  }\n\n  if (ret === undefined) {\n    meta.errors.push(`Operator ${operator} is not supported for value source ${valueSrc}`);\n  }\n\n  return ret;\n};\n\nconst checkOp = (config, operator, field) => {\n  if (!operator) return undefined;\n  let opDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = opDef.reversedOp;\n  let revOpDef = getOperatorConfig(config, reversedOp, field) || {};\n\n  let isRev = false;\n  const canFormatOp = opDef.spelOp || opDef.spelFormatOp;\n  const canFormatRevOp = revOpDef.spelOp || revOpDef.spelFormatOp;\n  if (!canFormatOp && !canFormatRevOp) {\n    return undefined;\n  }\n  if (!canFormatOp && canFormatRevOp) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [opDef, revOpDef] = [revOpDef, opDef];\n  }\n  return operator;\n};\n\nconst formatRule = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  let operator = properties.get(\"operator\");\n  if (field == null || operator == null)\n    return undefined;\n\n  // check op for reverse\n  const realOp = checkOp(config, operator, field);\n  if (!realOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  const isRev = realOp != operator;\n\n  //format value\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, realOp, parentField, null\n  );\n  if (formattedValue === undefined)\n    return undefined;\n      \n  //format field\n  const formattedField = formatField(meta, config, field, parentField);\n  \n  // format expression\n  let res = formatExpression(\n    meta, config, properties, formattedField, formattedValue, realOp, valueSrc, valueType, isRev\n  );\n  return res;\n};\n\nconst formatItemValue = (config, properties, meta, operator, parentField, expectedValueType = null) => {\n  let field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  if (expectedValueType == \"!case_value\" || iValueType && iValueType.get(0) == \"case_value\") {\n    field = \"!case_value\";\n  }\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  \n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  \n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n      const fv = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDefinition, parentField, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (!( fvalue.size < cardinality || hasUndefinedValues )) {\n      formattedValue = cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n    }\n  }\n  \n  return [\n    formattedValue, \n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n  ];\n};\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField = null, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue, parentField);\n  } else {\n    if (typeof fieldWidgetDef.spelFormatValue === \"function\") {\n      const fn = fieldWidgetDef.spelFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, [\"formatValue\", \"mongoFormatValue\", \"sqlFormatValue\", \"jsonLogic\", \"elasticSearchFormatValue\", \"spelFormatValue\"]),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, currentValue) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn(...args);\n    } else {\n      ret = spelEscape(currentValue);\n    }\n  }\n  return ret;\n};\n\nconst formatField = (meta, config, field, parentField = null) => {\n  if (!field) return;\n  const {fieldSeparator} = config.settings;\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const fieldParts = Array.isArray(field) ? field : field.split(fieldSeparator);\n  const _fieldKeys = getFieldPath(field, config, parentField);\n  const fieldPartsConfigs = getFieldPartsConfigs(field, config, parentField);\n  const formatFieldFn = config.settings.formatSpelField;\n  let fieldName = formatFieldName(field, config, meta);\n  if (parentField) {\n    const parentFieldDef = getFieldConfig(config, parentField) || {};\n    let parentFieldName = parentField;\n    if (parentFieldDef.fieldName) {\n      parentFieldName = parentFieldDef.fieldName;\n    }\n    if (fieldName.indexOf(parentFieldName + fieldSeparator) == 0) {\n      fieldName = fieldName.slice((parentFieldName + fieldSeparator).length);\n      // fieldName = \"#this.\" + fieldName;\n    } else {\n      meta.errors.push(`Can't cut group ${parentFieldName} from field ${fieldName}`);\n    }\n  }\n  const fieldPartsMeta = fieldPartsConfigs.map(([key, cnf, parentCnf]) => {\n    let parent;\n    if (parentCnf) {\n      if (parentCnf.type == \"!struct\" || parentCnf.type == \"!group\" && parentCnf.mode == \"struct\")\n        parent = cnf.isSpelMap ? \"map\" : \"class\";\n      else if (parentCnf.type == \"!group\")\n        parent = cnf.isSpelItemMap ? \"[map]\" : \"[class]\";\n      else\n        parent = \"class\";\n    }\n    const isSpelVariable = cnf?.isSpelVariable;\n    return {\n      key,\n      parent,\n      isSpelVariable\n    };\n  });\n  const formattedField = formatFieldFn(fieldName, parentField, fieldParts, fieldPartsMeta, fieldDefinition, config);\n  return formattedField;\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentField = null) => {\n  const funcKey = currentValue.get(\"func\");\n  const args = currentValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  const funcName = funcConfig.spelFunc || funcKey;\n\n  let formattedArgs = {};\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldDef, argConfig, null, null, parentField, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    if (formattedArgVal !== undefined) { // skip optional in the end\n      formattedArgs[argKey] = formattedArgVal;\n    }\n  }\n\n  let ret;\n  if (typeof funcConfig.spelFormatFunc === \"function\") {\n    const fn = funcConfig.spelFormatFunc;\n    const args = [\n      formattedArgs\n    ];\n    ret = fn(...args);\n  } else {\n    const args = Object.entries(formattedArgs).map(([k, v]) => v);\n    if (funcName[0] == \".\" && args.length) {\n      const [obj, ...params] = args;\n      ret = `${obj}${funcName}(${params.join(\", \")})`;\n    } else {\n      ret = `${funcName}(${args.join(\", \")})`;\n    }\n  }\n  return ret;\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig\n} from \"../utils/configUtils\";\nimport {\n  getFieldPath, getFieldPathLabels, getWidgetForFieldOp, formatFieldName\n} from \"../utils/ruleUtils\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\nimport {defaultValue} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {completeValue} from \"../utils/funcUtils\";\nimport {List, Map} from \"immutable\";\n\n\nexport const queryString = (item, config, isForDisplay = false) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const res = formatItem(item, config, meta, isForDisplay, null);\n\n  if (meta.errors.length)\n    console.warn(\"Errors while exporting to string:\", meta.errors);\n  return res;\n};\n\n\nconst formatItem = (item, config, meta, isForDisplay = false, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") ) {\n    return formatGroup(item, config, meta, isForDisplay, parentField);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta, isForDisplay, parentField);\n  }\n\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta, isForDisplay = false, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n\n  const isRuleGroup = (type === \"rule_group\");\n  // TIP: don't cut group for mode == 'struct' and don't do aggr format (maybe later)\n  const groupField = isRuleGroup && mode == \"array\" ? properties.get(\"field\") : null;\n  const canHaveEmptyChildren = isRuleGroup && mode == \"array\";\n  const not = properties.get(\"not\");\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, isForDisplay, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n\n  const conjStr = list.size ? conjunctionDefinition.formatConj(list, conjunction, not, isForDisplay) : null;\n  \n  let ret;\n  if (groupField) {\n    const aggrArgs = formatRule(item, config, meta, isForDisplay, parentField, true);\n    if (aggrArgs) {\n      const isRev = aggrArgs.pop();\n      const args = [\n        conjStr,\n        ...aggrArgs\n      ];\n      ret = config.settings.formatAggr(...args);\n      if (isRev) {\n        ret = config.settings.formatReverse(ret, null, null, null, null, isForDisplay);\n      }\n    }\n  } else {\n    ret = conjStr;\n  }\n\n  return ret;\n};\n\n\nconst formatItemValue = (config, properties, meta, _operator, isForDisplay, parentField) => {\n  const field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operator = _operator || properties.get(\"operator\");\n  const operatorDef = getOperatorConfig(config, operator, field) || {};\n  const cardinality = defaultValue(operatorDef.cardinality, 1);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n\n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n      let fv = formatValue(\n        config, meta, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, isForDisplay, parentField, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (!( hasUndefinedValues || fvalue.size < cardinality )) {\n      formattedValue = (cardinality == 1 ? fvalue.first() : fvalue);\n    }\n  }\n\n  return [\n    formattedValue, \n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n  ];\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition) => {\n  const fop = operatorDefinition.labelForFormat || operator;\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  let fn;\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} ${fop}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} ${fop} ${values}`;\n    };\n  } else if (cardinality == 2) {\n    // between\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const valFrom = values.first();\n      const valTo = values.get(1);\n      return `${field} ${fop} ${valFrom} AND ${valTo}`;\n    };\n  }\n  return fn;\n};\n\nconst formatRule = (item, config, meta, isForDisplay = false, parentField = null, returnArgs = false) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  let operator = properties.get(\"operator\");\n  let operatorOptions = properties.get(\"operatorOptions\");\n  if (field == null || operator == null)\n    return undefined;\n  \n  const fieldDef = getFieldConfig(config, field) || {};\n  let operatorDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDef.reversedOp;\n  let revOperatorDef = getOperatorConfig(config, reversedOp, field) || {};\n  \n  //check op\n  let isRev = false;\n  let fn = operatorDef.formatOp;\n  if (!fn && reversedOp) {\n    fn = revOperatorDef.formatOp;\n    if (fn) {\n      isRev = true;\n      [operator, reversedOp] = [reversedOp, operator];\n      [operatorDef, revOperatorDef] = [revOperatorDef, operatorDef];\n    }\n  }\n\n  //find fn to format expr\n  if (!fn)\n    fn = buildFnToFormatOp(operator, operatorDef);\n  if (!fn)\n    return undefined;\n\n  //format field\n  const formattedField = formatField(config, meta, field, isForDisplay, parentField);\n\n  //format value\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, operator, isForDisplay, parentField\n  );\n  if (formattedValue === undefined)\n    return undefined;\n\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    valueSrc,\n    valueType,\n    omit(operatorDef, [\"formatOp\", \"mongoFormatOp\", \"sqlFormatOp\", \"jsonLogic\", \"spelFormatOp\"]),\n    operatorOptions,\n    isForDisplay,\n    fieldDef,\n    isRev,\n  ];\n\n  if (returnArgs) {\n    return args;\n  } else {\n    //format expr\n    let ret = fn(...args);\n\n    //rev\n    if (isRev) {\n      ret = config.settings.formatReverse(ret, operator, reversedOp, operatorDef, revOperatorDef, isForDisplay);\n    }\n\n    return ret;\n  }\n};\n\n\nconst formatValue = (config, meta, value, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, opDef, isForDisplay, parentField = null, asyncListValues) => {\n  if (value === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(config, meta, value, isForDisplay, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(config, meta, value, isForDisplay, parentField);\n  } else {\n    if (typeof fieldWidgetDef.formatValue === \"function\") {\n      const fn = fieldWidgetDef.formatValue;\n      const args = [\n        value,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, [\"formatValue\", \"mongoFormatValue\", \"sqlFormatValue\", \"jsonLogic\", \"elasticSearchFormatValue\", \"spelFormatValue\"]),\n        isForDisplay\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(opDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, value) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn(...args);\n    } else {\n      ret = value;\n    }\n  }\n  return ret;\n};\n\n\nconst formatField = (config, meta, field, isForDisplay, parentField = null, cutParentField = true) => {\n  const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n  let ret = null;\n  if (field) {\n    const fieldDefinition = getFieldConfig(config, field) || {};\n    const fieldParts = Array.isArray(field) ? field : field.split(fieldSeparator);\n    const _fieldKeys = getFieldPath(field, config);\n    const fieldPartsLabels = getFieldPathLabels(field, config, cutParentField ? parentField : null);\n    const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparatorDisplay) : null;\n    const fieldLabel2 = fieldDefinition.label2 || fieldFullLabel;\n    const formatFieldFn = config.settings.formatField;\n    const fieldName = formatFieldName(field, config, meta, cutParentField ? parentField : null);\n    ret = formatFieldFn(fieldName, fieldParts, fieldLabel2, fieldDefinition, config, isForDisplay);\n  }\n  return ret;\n};\n\n\nconst formatFunc = (config, meta, funcValue, isForDisplay, parentField = null) => {\n  const funcKey = funcValue.get(\"func\");\n  const args = funcValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  const funcName = isForDisplay && funcConfig.label || funcKey;\n\n  let formattedArgs = {};\n  let formattedArgsWithNames = {};\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      config, meta, argValue, argValueSrc, argConfig.type, fieldDef, argConfig, null, null, isForDisplay, parentField, argAsyncListValues\n    );\n    const argName = isForDisplay && argConfig.label || argKey;\n    if (formattedArgVal !== undefined) { // skip optional in the end\n      formattedArgs[argKey] = formattedArgVal;\n      formattedArgsWithNames[argName] = formattedArgVal;\n    }\n  }\n\n  let ret = null;\n  if (typeof funcConfig.formatFunc === \"function\") {\n    const fn = funcConfig.formatFunc;\n    const args = [\n      formattedArgs,\n      isForDisplay\n    ];\n    ret = fn(...args);\n  } else {\n    const argsStr = Object.entries(formattedArgsWithNames)\n      .map(([k, v]) => (isForDisplay ? `${k}: ${v}` : `${v}`))\n      .join(\", \");\n    ret = `${funcName}(${argsStr})`;\n  }\n  return ret;\n};\n","import {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\n\n\n/**\n * Converts a string representation of top_left and bottom_right cords to\n * a ES geo_point required for query\n *\n * @param {string} geoPointString - comma separated string of lat/lon coods\n * @returns {{top_left: {lon: number, lat: number}, bottom_right: {lon: number, lat: number}}} - ES geoPoint formatted object\n * @private\n */\nfunction buildEsGeoPoint(geoPointString) {\n  if (geoPointString == null) {\n    return null;\n  }\n\n  const coordsNumberArray = geoPointString.split(\",\").map(Number);\n  return {\n    top_left: {\n      lat: coordsNumberArray[0],\n      lon: coordsNumberArray[1]\n    },\n    bottom_right: {\n      lat: coordsNumberArray[2],\n      lon: coordsNumberArray[3]\n    }\n  };\n}\n\n/**\n * Converts a dateTime string from the query builder to a ES range formatted object\n *\n * @param {string} dateTime - dateTime formatted string\n * @param {string} operator - query builder operator type, see constants.js and query builder docs\n * @returns {{lt: string}|{lte: string}|{gte: string}|{gte: string, lte: string}|undefined} - ES range query parameter\n *\n * @private\n */\nfunction buildEsRangeParameters(value, operator) {\n  // -- if value is greater than 1 then we assume this is a between operator : BUG this is wrong, a selectable list can have multiple values\n  if (value.length > 1) {\n    return {\n      gte: \"\".concat(value[0]),\n      lte: \"\".concat(value[1])\n    };\n  } // -- if value is only one we assume this is a date time query for a specific day\n\n  const dateTime = value[0]; //TODO: Rethink about this part, what if someone adds a new type of opperator\n\n  //todo: move this logic into config\n  switch (operator) {\n  case \"on_date\": //todo: not used\n  case \"not_on_date\":\n  case \"equal\":\n  case \"select_equals\":\n  case \"not_equal\":\n    return {\n      gte: \"\".concat(dateTime, \"||/d\"),\n      lte: \"\".concat(dateTime, \"||+1d\")\n    };\n\n  case \"less_or_equal\":\n    return {\n      lte: \"\".concat(dateTime)\n    };\n\n  case \"greater_or_equal\":\n    return {\n      gte: \"\".concat(dateTime)\n    };\n\n  case \"less\":\n    return {\n      lt: \"\".concat(dateTime)\n    };\n\n  case \"greater\":\n    return {\n      gt: \"\".concat(dateTime)\n    };\n\n  default:\n    return undefined;\n  }\n}\n\n/**\n * Builds the DSL parameters for a Wildcard query\n *\n * @param {string} value - The match value\n * @returns {{value: string}} - The value = value parameter surrounded with * on each end\n * @private\n */\nfunction buildEsWildcardParameters(value) {\n  return {\n    value: \"*\" + value + \"*\"\n  };\n}\n\n/**\n * Takes the match type string from awesome query builder like 'greater_or_equal' and\n * returns the ES occurrence required for bool queries\n *\n * @param {string} combinator - query group type or rule condition\n * @param {bool} not\n * @returns {string} - ES occurrence type. See constants.js\n * @private\n */\nfunction determineOccurrence(combinator, not) {\n  //todo: move into config, like mongoConj\n  switch (combinator) {\n  case \"AND\":\n    return not ? \"must_not\" : \"must\";\n    // -- AND\n\n  case \"OR\":\n    return not ? \"should_not\" : \"should\";\n    // -- OR\n\n  case \"NOT\":\n    return not ? \"must\" : \"must_not\";\n    // -- NOT AND\n\n  default:\n    return undefined;\n  }\n}\n\n/**\n * Determines what field to query off of given the operator type\n *\n * @param {string} fieldDataType - The type of data\n * @param {string} fullFieldName - A '.' separated string containing the property lineage (including self)\n * @param {string} queryType - The query type\n * @returns {string|*} - will be either the fullFieldName or fullFieldName.keyword\n * @private\n */\n//todo: not used\nfunction determineQueryField(fieldDataType, fullFieldName, queryType) {\n  if (fieldDataType === \"boolean\") {\n    return fullFieldName;\n  }\n\n  switch (queryType) {\n  case \"term\":\n  case \"wildcard\":\n    return \"\".concat(fullFieldName, \".keyword\");\n\n  case \"geo_bounding_box\":\n  case \"range\":\n  case \"match\":\n    return fullFieldName;\n\n  default:\n    console.error(\"Can't determine query field for query type \".concat(queryType));\n    return null;\n  }\n}\n\nfunction buildRegexpParameters(value) {\n  return {\n    value: value\n  };\n}\n\nfunction determineField(fieldName, config) {\n  //todo: ElasticSearchTextField - not used\n  //return config.fields[fieldName].ElasticSearchTextField || fieldName;\n  return fieldName;\n}\n\nfunction buildParameters(queryType, value, operator, fieldName, config, syntax) {\n  const textField = determineField(fieldName, config);\n  switch (queryType) {\n  case \"filter\":\n    //todo: elasticSearchScript - not used\n    return {\n      script: config.operators[operator].elasticSearchScript(fieldName, value)\n    };\n\n  case \"exists\":\n    return { field: fieldName };\n\n  case \"match\":\n    return { [textField]: value[0] };\n\n  case \"term\":\n    return syntax === ES_7_SYNTAX\n      ? { [fieldName]: {\n        value: value[0]\n      }} : { [fieldName]: value[0] };\n\n  //todo: not used\n  // need to add geo type into RAQB or remove this code\n  case \"geo_bounding_box\":\n    return { [fieldName]: buildEsGeoPoint(value[0]) };\n\n  case \"range\":\n    return { [fieldName]: buildEsRangeParameters(value, operator) };\n\n  case \"wildcard\":\n    return { [fieldName]: buildEsWildcardParameters(value[0]) };\n\n  case \"regexp\":\n    return { [fieldName]: buildRegexpParameters(value[0]) };\n\n  default:\n    return undefined;\n  }\n}\n/**\n * Handles the building of the group portion of the DSL\n *\n * @param {string} fieldName - The name of the field you are building a rule for\n * @param {string} fieldDataType - The type of data this field holds\n * @param {string} value - The value of this rule\n * @param {string} operator - The condition on how the value is matched\n * @param {string} syntax - The version of ElasticSearch syntax to generate\n * @returns {object} - The ES rule\n * @private\n */\nfunction buildEsRule(fieldName, value, operator, config, valueSrc, syntax) {\n  if (!fieldName || !operator || value == undefined)\n    return undefined; // rule is not fully entered\n  let op = operator;\n  let opConfig = config.operators[op];\n  if (!opConfig)\n    return undefined; // unknown operator\n  let { elasticSearchQueryType } = opConfig;\n\n  // not\n  let not = false;\n  if (!elasticSearchQueryType && opConfig.reversedOp) {\n    not = true;\n    op = opConfig.reversedOp;\n    opConfig = config.operators[op];\n    ({ elasticSearchQueryType } = opConfig);\n  }\n  \n  // handle if value 0 has multiple values like a select in a array\n  const widget = getWidgetForFieldOp(config, fieldName, op, valueSrc);\n  const widgetConfig = config.widgets[widget];\n  if (!widgetConfig)\n    return undefined; // unknown widget\n  const { elasticSearchFormatValue } = widgetConfig;\n\n  /** In most cases the queryType will be static however in some casese (like between) the query type will change\n   * based on the data type. i.e. a between time will be different than between number, date, letters etc... */\n  let queryType;\n  if (typeof elasticSearchQueryType === \"function\") {\n    queryType = elasticSearchQueryType(widget);\n  } else {\n    queryType = elasticSearchQueryType;\n  }\n\n  if (!queryType) {\n    // Not supported\n    return undefined;\n  }\n\n  /** If a widget has a rule on how to format that data then use that otherwise use default way of determineing search parameters\n   * */\n  let parameters;\n  if (typeof elasticSearchFormatValue === \"function\") {\n    parameters = elasticSearchFormatValue(queryType, value, op, fieldName, config);\n  } else {\n    parameters = buildParameters(queryType, value, op, fieldName, config, syntax);\n  }\n\n  if (not) {\n    return {\n      bool: {\n        must_not: {\n          [queryType]: {...parameters}\n        }\n      }\n    };\n  } else {\n    return {\n      [queryType]: {...parameters}\n    };\n  }\n}\n\n/**\n * Handles the building of the group portion of the DSL\n *\n * @param {object} children - The contents of the group\n * @param {string} conjunction - The way the contents of the group are joined together i.e. AND OR\n * @param {bool} not\n * @param {Function} recursiveFxn - The recursive fxn to build the contents of the groups children\n * @private\n * @returns {object} - The ES group\n */\nfunction buildEsGroup(children, conjunction, not, recursiveFxn, config, syntax) {\n  if (!children || !children.size)\n    return undefined;\n  const childrenArray = children.valueSeq().toArray();\n  const occurrence = determineOccurrence(conjunction, not);\n  const result = childrenArray.map((c) => recursiveFxn(c, config, syntax)).filter(v => v !== undefined);\n  if (!result.length)\n    return undefined;\n  const resultFlat = result.flat(Infinity);\n  return {\n    bool: {\n      [occurrence]: resultFlat\n    }\n  };\n}\n\nexport const ES_7_SYNTAX = \"ES_7_SYNTAX\";\nexport const ES_6_SYNTAX = \"ES_6_SYNTAX\";\n\nexport function elasticSearchFormat(tree, config, syntax = ES_6_SYNTAX) {\n  // -- format the es dsl here\n  if (!tree) return undefined;\n  const type = tree.get(\"type\");\n  const properties = tree.get(\"properties\") || new Map();\n\n  if (type === \"rule\" && properties.get(\"field\")) {\n    // -- field is null when a new blank rule is added\n    const operator = properties.get(\"operator\");\n    const field = properties.get(\"field\");\n    const value = properties.get(\"value\").toJS();\n    const _valueType = properties.get(\"valueType\")?.get(0);\n    const valueSrc = properties.get(\"valueSrc\")?.get(0);\n\n    if (valueSrc === \"func\") {\n      // -- elastic search doesn't support functions (that is post processing)\n      return;\n    }\n\n    if (value && Array.isArray(value[0])) {\n      //TODO : Handle case where the value has multiple values such as in the case of a list\n      return value[0].map((val) =>\n        buildEsRule(field, [val], operator, config, valueSrc, syntax)\n      );\n    } else {\n      return buildEsRule(field, value, operator, config, valueSrc, syntax);\n    }\n  }\n\n  if (type === \"group\" || type === \"rule_group\") {\n    const not = properties.get(\"not\");\n    let conjunction = properties.get(\"conjunction\");\n    if (!conjunction)\n      conjunction = defaultConjunction(config);\n    const children = tree.get(\"children1\");\n    return buildEsGroup(children, conjunction, not, elasticSearchFormat, config, syntax);\n  }\n}\n","import Immutable, { fromJS, Map } from \"immutable\";\nimport {validateTree} from \"../utils/validation\";\nimport {extendConfig} from \"../utils/configUtils\";\nimport {getTreeBadFields, getLightTree} from \"../utils/treeUtils\";\nimport {isJsonLogic} from \"../utils/stuff\";\n\nexport const getTree = (immutableTree, light = true, children1AsArray = true) => {\n  if (!immutableTree) return undefined;\n  let tree = immutableTree;\n  tree = tree.toJS();\n  if (light)\n    tree = getLightTree(tree, children1AsArray);\n  return tree;\n};\n\nexport const loadTree = (serTree) => {\n  if (isImmutableTree(serTree)) {\n    return serTree;\n  } else if (isTree(serTree)) {\n    return jsTreeToImmutable(serTree);\n  } else if (typeof serTree == \"string\" && serTree.startsWith('[\"~#iM\"')) {\n    //tip: old versions of RAQB were saving tree with `transit.toJSON()`\n    // https://github.com/ukrbublik/react-awesome-query-builder/issues/69\n    throw \"You are trying to load query in obsolete serialization format (Immutable string) which is not supported in versions starting from 2.1.17\";\n  } else if (typeof serTree == \"string\") {\n    return jsTreeToImmutable(JSON.parse(serTree));\n  } else throw \"Can't load tree!\";\n};\n\nexport const checkTree = (tree, config) => {\n  if (!tree) return undefined;\n  const extendedConfig = extendConfig(config);\n  return validateTree(tree, null, extendedConfig, extendedConfig);\n};\n\nexport const isValidTree = (tree) => {\n  return getTreeBadFields(tree).length == 0;\n};\n\nexport const isImmutableTree = (tree) => {\n  return Map.isMap(tree);\n};\n\nexport const isTree = (tree) => {\n  return typeof tree == \"object\" && (tree.type == \"group\" || tree.type == \"switch_group\");\n};\n\nexport {isJsonLogic};\n\nfunction jsTreeToImmutable(tree) {\n  return fromJS(tree, function (key, value) {\n    let outValue;\n    if (key == \"properties\") {\n      outValue = value.toOrderedMap();\n\n      // `value` should be undefined instead of null\n      // JSON doesn't support undefined and replaces undefined -> null\n      // So fix: null -> undefined\n      for (let i = 0 ; i < 2 ; i++) {\n        if (outValue.get(\"value\")?.get(i) === null) {\n          outValue = outValue.setIn([\"value\", i], undefined);\n        }\n      }\n    } else if (key == \"value\" && value.get(0) && value.get(0).toJS !== undefined) {\n      const valueJs = value.get(0).toJS();\n      if (valueJs.func) {\n        outValue = value.toOrderedMap();\n      } else {\n        // only for raw values keep JS representation\n        outValue = Immutable.List.of(valueJs);\n      }\n    } else if (key == \"asyncListValues\") {\n      // keep in JS format\n      outValue = value.toJS();\n    } else if (key == \"children1\" && Immutable.Iterable.isIndexed(value)) {\n      outValue = new Immutable.OrderedMap(value.map(child => [child.get(\"id\"), child]));\n    } else {\n      outValue = Immutable.Iterable.isIndexed(value) ? value.toList() : value.toOrderedMap();\n    }\n    return outValue;\n  });\n}\n\n","import uuid from \"../utils/uuid\";\nimport {defaultValue, isJsonLogic, shallowEqual, logger} from \"../utils/stuff\";\nimport {getFieldConfig, extendConfig, normalizeField} from \"../utils/configUtils\";\nimport {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {loadTree} from \"./tree\";\nimport {defaultConjunction, defaultGroupConjunction} from \"../utils/defaultUtils\";\n\nimport moment from \"moment\";\n\n// http://jsonlogic.com/\n\n// helpers\nconst arrayUniq = (arr) => Array.from(new Set(arr));\nconst arrayToObject = (arr) => arr.reduce((acc, [f, fc]) => ({ ...acc, [f]: fc }), {});\n\nexport const loadFromJsonLogic = (logicTree, config) => {\n  return _loadFromJsonLogic(logicTree, config, false);\n};\n\nexport const _loadFromJsonLogic = (logicTree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n  const extendedConfig = extendConfig(config);\n  const conv = buildConv(extendedConfig);\n  let jsTree = logicTree ? convertFromLogic(logicTree, conv, extendedConfig, \"rule\", meta) : undefined;\n  if (jsTree && jsTree.type != \"group\") {\n    jsTree = wrapInDefaultConj(jsTree, extendedConfig);\n  }\n  const immTree = jsTree ? loadTree(jsTree) : undefined;\n\n  if (returnErrors) {\n    return [immTree, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while importing from JsonLogic:\", meta.errors);\n    return immTree;\n  }\n};\n\n\nconst buildConv = (config) => {\n  let operators = {};\n  for (let opKey in config.operators) {\n    const opConfig = config.operators[opKey];\n    if (typeof opConfig.jsonLogic == \"string\") {\n      // example: \"</2\", \"#in/1\"\n      const opk = (opConfig._jsonLogicIsRevArgs ? \"#\" : \"\") + opConfig.jsonLogic + \"/\" + defaultValue(opConfig.cardinality, 1);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    } else if(typeof opConfig.jsonLogic2 == \"string\") {\n      // example: all-in/1\"\n      const opk = opConfig.jsonLogic2 + \"/\" + defaultValue(opConfig.cardinality, 1);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    }\n  }\n\n  let conjunctions = {};\n  for (let conjKey in config.conjunctions) {\n    const conjunctionDefinition = config.conjunctions[conjKey];\n    const ck = conjunctionDefinition.jsonLogicConj || conjKey.toLowerCase();\n    conjunctions[ck] = conjKey;\n  }\n\n  let funcs = {};\n  for (let funcKey in config.funcs) {\n    const funcConfig = config.funcs[funcKey];\n    let fk;\n    if (funcConfig.jsonLogicIsMethod) {\n      fk = \"#\" + funcConfig.jsonLogic;\n    } else if (typeof funcConfig.jsonLogic == \"string\") {\n      fk = funcConfig.jsonLogic;\n    }\n    if (fk) {\n      if (!funcs[fk])\n        funcs[fk] = [];\n      funcs[fk].push(funcKey);\n    }\n  }\n\n  const {groupVarKey, altVarKey} = config.settings.jsonLogic;\n\n  return {\n    operators,\n    conjunctions,\n    funcs,\n    varKeys: [\"var\", groupVarKey, altVarKey],\n  };\n};\n\n\nconst convertFromLogic = (logic, conv, config, expectedType, meta, not = false, fieldConfig, widget, parentField = null, _isLockedLogic = false) => {\n  let op, vals;\n  if (isJsonLogic(logic)) {\n    op = Object.keys(logic)[0];\n    vals = logic[op];\n    if (!Array.isArray(vals))\n      vals = [ vals ];\n  }\n  \n  let ret;\n  let beforeErrorsCnt = meta.errors.length;\n\n  const {lockedOp} = config.settings.jsonLogic;\n  const isEmptyOp = op == \"!\" && (vals.length == 1 && vals[0] && isJsonLogic(vals[0]) && conv.varKeys.includes(Object.keys(vals[0])[0]));\n  const isRev = op == \"!\" && !isEmptyOp;\n  const isLocked = lockedOp && op == lockedOp;\n  if (isLocked) {\n    ret = convertFromLogic(vals[0], conv, config, expectedType, meta, not, fieldConfig, widget, parentField, true);\n  } else if (isRev) {\n    // reverse with not\n    ret = convertFromLogic(vals[0], conv, config, expectedType, meta, !not, fieldConfig, widget, parentField);\n  } else if(expectedType == \"val\") {\n    // not is not used here\n    ret = convertField(op, vals, conv, config, not, meta, parentField) \n      || convertFunc(op, vals, conv, config, not, fieldConfig, meta, parentField) \n      || convertVal(logic, fieldConfig, widget, config, meta);\n  } else if(expectedType == \"rule\") {\n    ret = convertConj(op, vals, conv, config, not, meta, parentField, false) \n    || convertOp(op, vals, conv, config, not, meta, parentField);\n  }\n\n  let afterErrorsCnt = meta.errors.length;\n  if (op != \"!\" && ret === undefined && afterErrorsCnt == beforeErrorsCnt) {\n    meta.errors.push(`Can't parse logic ${JSON.stringify(logic)}`);\n  }\n\n  if (isLocked) {\n    ret.properties.isLocked = true;\n  }\n\n  return ret;\n};\n\n\nconst convertVal = (val, fieldConfig, widget, config, meta) => {\n  if (val === undefined) return undefined;\n  const widgetConfig = config.widgets[widget || fieldConfig.mainWidget];\n\n  if (!widgetConfig) {\n    meta.errors.push(`No widget for type ${fieldConfig.type}`);\n    return undefined;\n  }\n\n  if (isJsonLogic(val)) {\n    meta.errors.push(`Unexpected logic in value: ${JSON.stringify(val)}`);\n    return undefined;\n  }\n\n  // number of seconds -> time string\n  if (fieldConfig && fieldConfig.type == \"time\" && typeof val == \"number\") {\n    const [h, m, s] = [Math.floor(val / 60 / 60) % 24, Math.floor(val / 60) % 60, val % 60];\n    const valueFormat = widgetConfig.valueFormat;\n    if (valueFormat) {\n      const dateVal = new Date(val);\n      dateVal.setMilliseconds(0);\n      dateVal.setHours(h);\n      dateVal.setMinutes(m);\n      dateVal.setSeconds(s);\n      val = moment(dateVal).format(valueFormat);\n    } else {\n      val = `${h}:${m}:${s}`;\n    }\n  }\n\n  // \"2020-01-08T22:00:00.000Z\" -> Date object\n  if (fieldConfig && [\"date\", \"datetime\"].includes(fieldConfig.type) && val && !(val instanceof Date)) {\n    try {\n      const dateVal = new Date(val);\n      if (dateVal instanceof Date && dateVal.toISOString() === val) {\n        val = dateVal;\n      }\n    } catch(e) {\n      meta.errors.push(`Can't convert value ${val} as Date`);\n      val = undefined;\n    }\n  }\n\n  // Date object -> formatted string\n  if (val instanceof Date && fieldConfig) {\n    const valueFormat = widgetConfig.valueFormat;\n    if (valueFormat) {\n      val = moment(val).format(valueFormat);\n    }\n  }\n\n  let asyncListValues;\n  if (val && fieldConfig.fieldSettings && fieldConfig.fieldSettings.asyncFetch) {\n    const vals = Array.isArray(val) ? val : [val];\n    asyncListValues = vals;\n  }\n\n  return {\n    valueSrc: \"value\",\n    value: val,\n    valueType: widgetConfig.type,\n    asyncListValues\n  };\n};\n\n\nconst convertField = (op, vals, conv, config, not, meta, parentField = null) => {\n  const {fieldSeparator} = config.settings;\n  if (conv.varKeys.includes(op) && typeof vals[0] == \"string\") {\n    let field = vals[0];\n    if (parentField)\n      field = [parentField, field].join(fieldSeparator);\n    field = normalizeField(config, field);\n    const fieldConfig = getFieldConfig(config, field);\n    if (!fieldConfig) {\n      meta.errors.push(`No config for field ${field}`);\n      return undefined;\n    }\n\n    return {\n      valueSrc: \"field\",\n      value: field,\n      valueType: fieldConfig.type,\n    };\n  }\n\n  return undefined;\n};\n\n\nconst convertFunc = (op, vals, conv, config, not, fieldConfig, meta, parentField = null) => {\n  if (!op) return undefined;\n  let func, argsArr, funcKey;\n  const jsonLogicIsMethod = (op == \"method\");\n  if (jsonLogicIsMethod) {\n    let obj, opts;\n    [obj, func, ...opts] = vals;\n    argsArr = [obj, ...opts];\n  } else {\n    func = op;\n    argsArr = vals;\n  }\n\n  const fk = (jsonLogicIsMethod ? \"#\" : \"\") + func;\n  const funcKeys = (conv.funcs[fk] || []).filter(k => \n    (fieldConfig ? config.funcs[k].returnType == fieldConfig.type : true)\n  );\n  if (funcKeys.length) {\n    funcKey = funcKeys[0];\n  } else {\n    const v = {[op]: vals};\n    for (const [f, fc] of Object.entries(config.funcs || {})) {\n      if (fc.jsonLogicImport && fc.returnType == fieldConfig.type) {\n        let parsed;\n        try {\n          parsed = fc.jsonLogicImport(v);\n        } catch(_e) {\n          // given expression `v` can't be parsed into function\n        }\n        if (parsed) {\n          funcKey = f;\n          argsArr = parsed;\n        }\n      }\n    }\n  }\n  if (!funcKey)\n    return undefined;\n\n  if (funcKey) {\n    const funcConfig = config.funcs[funcKey];\n    const argKeys = Object.keys(funcConfig.args || {});\n    let args = argsArr.reduce((acc, val, ind) => {\n      const argKey = argKeys[ind];\n      const argConfig = funcConfig.args[argKey];\n      let argVal = convertFromLogic(val, conv, config, \"val\", meta, false, argConfig, null, parentField);\n      if (argVal === undefined) {\n        argVal = argConfig.defaultValue;\n        if (argVal === undefined) {\n          meta.errors.push(`No value for arg ${argKey} of func ${funcKey}`);\n          return undefined;\n        }\n      }\n      return {...acc, [argKey]: argVal};\n    }, {});\n\n    return {\n      valueSrc: \"func\",\n      value: {\n        func: funcKey,\n        args: args\n      },\n      valueType: funcConfig.returnType,\n    };\n  }\n\n  return undefined;\n};\n\n\nconst convertConj = (op, vals, conv, config, not, meta, parentField = null, isRuleGroup = false) => {\n  const conjKey = conv.conjunctions[op];\n  const {fieldSeparator} = config.settings;\n  const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n  const isParentGroup = parentFieldConfig?.type == \"!group\";\n  if (conjKey) {\n    let type = \"group\";\n    const children = vals\n      .map(v => convertFromLogic(v, conv, config, \"rule\", meta, false, null, null, parentField))\n      .filter(r => r !== undefined)\n      .reduce((acc, r) => ({...acc, [r.id] : r}), {});\n    const complexFields = Object.values(children)\n      .map(v => v?.properties?.field)\n      .filter(f => f && f.includes(fieldSeparator));\n    const complexFieldsGroupAncestors = Object.fromEntries(\n      arrayUniq(complexFields).map(f => {\n        const parts = f.split(fieldSeparator);\n        const ancs = Object.fromEntries(\n          parts.slice(0, -1)\n            .map((f, i, parts) => [...parts.slice(0, i), f])\n            .map(fp => [fp.join(fieldSeparator), getFieldConfig(config, fp)])\n            .filter(([_f, fc]) => fc.type == \"!group\")\n        );\n        return [f, Object.keys(ancs)];\n      })\n    );\n    const childrenInRuleGroup = Object.values(children)\n      .map(v => v?.properties?.field)\n      .map(f => complexFieldsGroupAncestors[f])\n      .filter(ancs => ancs && ancs.length);\n    const usedRuleGroups = arrayUniq(Object.values(complexFieldsGroupAncestors).flat());\n    const usedTopRuleGroups = topLevelFieldsFilter(usedRuleGroups);\n    \n    let properties = {\n      conjunction: conjKey,\n      not: not\n    };\n    const id = uuid();\n\n    let children1 = {};\n    let groupToId = {};\n    Object.entries(children).map(([k, v]) => {\n      if (v.type == \"group\" || v.type == \"rule_group\") {\n        // put as-is\n        children1[k] = v;\n      } else {\n        const field = v?.properties?.field;\n        const groupAncestors = complexFieldsGroupAncestors[field];\n        const groupField = groupAncestors?.at(-1);\n        if (!groupField) {\n          // not in rule_group (can be simple field or in struct) - put as-is\n          children1[k] = v;\n        } else {\n          // wrap field in rule_group (with creating hierarchy if need)\n          let ch = children1;\n          let parentFieldParts = parentField ? parentField.split(fieldSeparator) : [];\n          const isInParent = shallowEqual(parentFieldParts, groupField.split(fieldSeparator).slice(0, parentFieldParts.length));\n          if (!isInParent)\n            parentFieldParts = []; // should not be\n          const traverseGroupFields = groupField\n            .split(fieldSeparator)\n            .slice(parentFieldParts.length)\n            .map((f, i, parts) => [...parentFieldParts, ...parts.slice(0, i), f].join(fieldSeparator))\n            .map(f => normalizeField(config, f))\n            .map((f) => ({f, fc: getFieldConfig(config, f) || {}}))\n            .filter(({fc}) => (fc.type != \"!struct\"));\n          traverseGroupFields.map(({f: gf, fc: gfc}, i) => {\n            let groupId = groupToId[gf];\n            if (!groupId) {\n              groupId = uuid();\n              groupToId[gf] = groupId;\n              ch[groupId] = {\n                type: \"rule_group\",\n                id: groupId,\n                children1: {},\n                properties: {\n                  conjunction: conjKey,\n                  not: false,\n                  field: gf,\n                  mode: gfc.mode,\n                }\n              };\n            }\n            ch = ch[groupId].children1;\n          });\n          ch[k] = v;\n        }\n      }\n    });\n\n    // tip: for isRuleGroup=true correct type and properties will be set out of this func\n\n    return {\n      type: type,\n      id: id,\n      children1: children1,\n      properties: properties\n    };\n  }\n\n  return undefined;\n};\n\n\nconst topLevelFieldsFilter = (fields) => {\n  let arr = [...fields].sort((a, b) => (a.length - b.length));\n  for (let i = 0 ; i < arr.length ; i++) {\n    for (let j = i + 1 ; j < arr.length ; j++) {\n      if (arr[j].indexOf(arr[i]) == 0) {\n        // arr[j] is inside arr[i] (eg. \"a.b\" inside \"a\")\n        arr.splice(j, 1);\n        j--;\n      }\n    }\n  }\n  return arr;\n};\n\nconst wrapInDefaultConjRuleGroup = (rule, parentField, parentFieldConfig, config, conj) => {\n  if (!rule) return undefined;\n  return {\n    type: \"rule_group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: conj || defaultGroupConjunction(config, parentFieldConfig),\n      not: false,\n      field: parentField,\n    }\n  };\n};\n\nconst wrapInDefaultConj = (rule, config, not = false) => {\n  return {\n    type: \"group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: defaultConjunction(config),\n      not: not\n    }\n  };\n};\n\nconst parseRule = (op, arity, vals, parentField, conv, config, meta) => {\n  let errors = [];\n  let res = _parseRule(op, arity, vals, parentField, conv, config, errors, false) \n         || _parseRule(op, arity, vals, parentField, conv, config, errors, true) ;\n\n  if (!res) {\n    meta.errors.push(errors.join(\"; \") || `Unknown op ${op}/${arity}`);\n    return undefined;\n  }\n  \n  return res;\n};\n\nconst _parseRule = (op, arity, vals, parentField, conv, config, errors, isRevArgs) => {\n  // config.settings.groupOperators are used for group count (cardinality = 0 is exception)\n  // but don't confuse with \"all-in\" or \"some-in\" for multiselect\n  const isAllOrSomeInForMultiselect = (op == \"all\" || op == \"some\") && isJsonLogic(vals[1]) && Object.keys(vals[1])[0] == \"in\";\n  const isGroup0 = !isAllOrSomeInForMultiselect && config.settings.groupOperators.includes(op);\n  const eqOps = [\"==\", \"!=\"];\n  let cardinality = isGroup0 ? 0 : arity - 1;\n  if (isGroup0)\n    cardinality = 0;\n  else if (eqOps.includes(op) && cardinality == 1 && vals[1] === null) {\n    arity = 1;\n    cardinality = 0;\n    vals = [vals[0]];\n  }\n\n  const opk = op + \"/\" + cardinality;\n  const {fieldSeparator} = config.settings;\n  let opKeys = conv.operators[(isRevArgs ? \"#\" : \"\") + opk];\n  if (!opKeys)\n    return;\n  \n  let jlField, args = [];\n  const rangeOps = [\"<\", \"<=\", \">\", \">=\"];\n  if (rangeOps.includes(op) && arity == 3) {\n    jlField = vals[1];\n    args = [ vals[0], vals[2] ];\n  } else if (isRevArgs) {\n    jlField = vals[1];\n    args = [ vals[0] ];\n  } else {\n    [jlField, ...args] = vals;\n  }\n\n  if (!isJsonLogic(jlField)) {\n    errors.push(`Incorrect operands for ${op}: ${JSON.stringify(vals)}`);\n    return;\n  }\n  let k = Object.keys(jlField)[0];\n  let v = Object.values(jlField)[0];\n  \n  let field, having, isGroup;\n  if (conv.varKeys.includes(k) && typeof v == \"string\") {\n    field = v;\n  }\n  if (isGroup0) {\n    isGroup = true;\n    having = args[0];\n    args = [];\n  }\n  // reduce/filter for group ext\n  if (k == \"reduce\" && Array.isArray(v) && v.length == 3) {\n    let [filter, acc, init] = v;\n    if (isJsonLogic(filter) && init == 0 && isJsonLogic(acc) && Array.isArray(acc[\"+\"]) && acc[\"+\"][0] == 1 && isJsonLogic(acc[\"+\"][1]) && acc[\"+\"][1][\"var\"] == \"accumulator\") {\n      k = Object.keys(filter)[0];\n      v = Object.values(filter)[0];\n      if (k == \"filter\") {\n        let [group, filter] = v;\n        if (isJsonLogic(group)) {\n          k = Object.keys(group)[0];\n          v = Object.values(group)[0];\n          if (conv.varKeys.includes(k) && typeof v == \"string\") {\n            field = v;\n            having = filter;\n            isGroup = true;\n          }\n        }\n      } else if (conv.varKeys.includes(k) && typeof v == \"string\") {\n        field = v;\n        isGroup = true;\n      }\n    }\n  }\n  \n  if (!field) {\n    errors.push(`Unknown field ${JSON.stringify(jlField)}`);\n    return;\n  }\n  if (parentField)\n    field = [parentField, field].join(fieldSeparator);\n  field = normalizeField(config, field);\n\n  const fieldConfig = getFieldConfig(config, field);\n  if (!fieldConfig) {\n    errors.push(`No config for field ${field}`);\n    return;\n  }\n\n  let opKey = opKeys[0];\n  if (opKeys.length > 1 && fieldConfig && fieldConfig.operators) {\n    // eg. for \"equal\" and \"select_equals\"\n    opKeys = opKeys\n      .filter(k => fieldConfig.operators.includes(k));\n    if (opKeys.length == 0) {\n      errors.push(`No corresponding ops for field ${field}`);\n      return;\n    }\n    opKey = opKeys[0];\n  }\n  \n  return {\n    field, fieldConfig, opKey, args, having\n  };\n};\n\nconst convertOp = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (!op) return undefined;\n\n  const arity = vals.length;\n  if ((op == \"all\" || op == \"some\") && isJsonLogic(vals[1])) {\n    // special case for \"all-in\" and \"some-in\"\n    const op2 = Object.keys(vals[1])[0];\n    if (op2 == \"in\") {\n      vals = [\n        vals[0],\n        vals[1][op2][1]\n      ];\n      op = op + \"-\" + op2; // \"all-in\" and \"some-in\"\n    }\n  }\n\n  const parseRes = parseRule(op, arity, vals, parentField, conv, config, meta);\n  if (!parseRes) return undefined;\n  let {field, fieldConfig, opKey, args, having} = parseRes;\n  let opConfig = config.operators[opKey];\n\n  // Group component in array mode can show NOT checkbox, so do nothing in this case\n  // Otherwise try to revert\n  const showNot = fieldConfig.showNot !== undefined ? fieldConfig.showNot : config.settings.showNot; \n  let canRev = true;\n  // if (fieldConfig.type == \"!group\" && fieldConfig.mode == \"array\" && showNot)\n  //   canRev = false;\n\n  let conj;\n  let havingVals;\n  let havingNot = false;\n  if (fieldConfig.type == \"!group\" && having) {\n    conj = Object.keys(having)[0];\n    havingVals = having[conj];\n    if (!Array.isArray(havingVals))\n      havingVals = [ havingVals ];\n\n    // Preprocess \"!\": Try to reverse op in single rule in having\n    // Eg. use `not_equal` instead of `not` `equal`\n    const isEmptyOp = conj == \"!\" && (havingVals.length == 1 && havingVals[0] && isJsonLogic(havingVals[0]) && conv.varKeys.includes(Object.keys(havingVals[0])[0]));\n    if (conj == \"!\" && !isEmptyOp) {\n      havingNot = true;\n      having = having[\"!\"];\n      conj = Object.keys(having)[0];\n      havingVals = having[conj];\n      if (!Array.isArray(havingVals))\n        havingVals = [ havingVals ];\n    }\n  }\n\n  // Use reversed op\n  if (not && canRev && opConfig.reversedOp) {\n    not = false;\n    opKey = opConfig.reversedOp;\n    opConfig = config.operators[opKey];\n  }\n\n  const widget = getWidgetForFieldOp(config, field, opKey);\n\n  const convertedArgs = args\n    .map(v => convertFromLogic(v, conv, config, \"val\", meta, false, fieldConfig, widget, parentField));\n  if (convertedArgs.filter(v => v === undefined).length) {\n    //meta.errors.push(`Undefined arg for field ${field} and op ${opKey}`);\n    return undefined;\n  }\n\n  let res;\n\n  if (fieldConfig.type == \"!group\" && having) {\n    if (conv.conjunctions[conj] !== undefined) {\n      // group\n      res = convertConj(conj, havingVals, conv, config, havingNot, meta, field, true);\n      havingNot = false;\n    } else {\n      // need to be wrapped in `rule_group`\n      const rule = convertOp(conj, havingVals, conv, config, havingNot, meta, field);\n      havingNot = false;\n      res = wrapInDefaultConjRuleGroup(rule, field, fieldConfig, config, conv.conjunctions[\"and\"]);\n    }\n    if (!res)\n      return undefined;\n    \n    res.type = \"rule_group\";\n    Object.assign(res.properties, {\n      field: field,\n      mode: fieldConfig.mode,\n      operator: opKey,\n    });\n    if (fieldConfig.mode == \"array\") {\n      Object.assign(res.properties, {\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n      });\n    }\n    if (not) {\n      res = wrapInDefaultConj(res, config, not);\n    }\n  } else if (fieldConfig.type == \"!group\" && !having) {\n    res = {\n      type: \"rule_group\",\n      id: uuid(),\n      children1: {},\n      properties: {\n        conjunction: defaultGroupConjunction(config, fieldConfig),\n        not: not,\n        mode: fieldConfig.mode,\n        field: field,\n        operator: opKey,\n      }\n    };\n    if (fieldConfig.mode == \"array\") {\n      Object.assign(res.properties, {\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n      });\n    }\n  } else {\n    const asyncListValuesArr = convertedArgs.map(v => v.asyncListValues).filter(v => v != undefined);\n    const asyncListValues = asyncListValuesArr.length ? asyncListValuesArr[0] : undefined;\n    res = {\n      type: \"rule\",\n      id: uuid(),\n      properties: {\n        field: field,\n        operator: opKey,\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n        asyncListValues,\n      }\n    };\n    if (not) {\n      //meta.errors.push(`No rev op for ${opKey}`);\n      res = wrapInDefaultConj(res, config, not);\n    }\n  }\n\n  return res;\n};\n\n","import { SpelExpressionEvaluator } from \"spel2js\";\nimport uuid from \"../utils/uuid\";\nimport {getFieldConfig, extendConfig, normalizeField} from \"../utils/configUtils\";\nimport {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {loadTree} from \"./tree\";\nimport {defaultConjunction, defaultGroupConjunction} from \"../utils/defaultUtils\";\nimport {logger} from \"../utils/stuff\";\nimport moment from \"moment\";\n\nexport const loadFromSpel = (logicTree, config) => {\n  return _loadFromSpel(logicTree, config, true);\n};\n\nexport const _loadFromSpel = (spelStr, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n  const extendedConfig = extendConfig(config);\n  const conv = buildConv(extendedConfig);\n  \n  let compiledExpression;\n  let convertedObj;\n  let jsTree = undefined;\n  try {\n    const compileRes = SpelExpressionEvaluator.compile(spelStr);\n    compiledExpression = compileRes._compiledExpression;\n  } catch (e) {\n    meta.errors.push(e);\n  }\n  \n  if (compiledExpression) {\n    logger.debug(\"compiledExpression:\", compiledExpression);\n    convertedObj = convertCompiled(compiledExpression, meta);\n    logger.debug(\"convertedObj:\", convertedObj, meta);\n\n    jsTree = convertToTree(convertedObj, conv, extendedConfig, meta);\n    if (jsTree && jsTree.type != \"group\" && jsTree.type != \"switch_group\") {\n      jsTree = wrapInDefaultConj(jsTree, extendedConfig, convertedObj[\"not\"]);\n    }\n    logger.debug(\"jsTree:\", jsTree);\n  }\n\n  const immTree = jsTree ? loadTree(jsTree) : undefined;\n\n  if (returnErrors) {\n    return [immTree, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while importing from SpEL:\", meta.errors);\n    return immTree;\n  }\n};\n\nconst convertCompiled = (expr, meta, parentExpr = null) => {\n  const type = expr.getType();\n  let children = expr.getChildren().map(child => convertCompiled(child, meta, expr));\n\n  // flatize OR/AND\n  if (type == \"op-or\" || type == \"op-and\") {\n    children = children.reduce((acc, child) => {\n      const canFlatize = child.type == type && !child.not;\n      const flat = canFlatize ? child.children : [child];\n      return [...acc, ...flat];\n    }, []);\n  }\n\n  // unwrap NOT\n  if (type == \"op-not\") {\n    if (children.length != 1) {\n      meta.errors.push(`Operator NOT should have 1 child, but got ${children.length}}`);\n    }\n    return {\n      ...children[0],\n      not: !(children[0].not || false)\n    };\n  }\n\n  if (type == \"compound\") {\n    // remove `.?[true]`\n    children = children.filter(child => {\n      const isListFix = child.type == \"selection\" && child.children.length == 1 && child.children[0].type == \"boolean\" && child.children[0].val == true;\n      return !isListFix;\n    });\n    // aggregation\n    // eg. `results.?[product == 'abc'].length`\n    const selection = children.find(child => \n      child.type == \"selection\"\n    );\n    if (selection && selection.children.length != 1) {\n      meta.errors.push(`Selection should have 1 child, but got ${selection.children.length}`);\n    }\n    const filter = selection ? selection.children[0] : null;\n    const lastChild = children[children.length - 1];\n    const isSize = lastChild.type == \"method\" && lastChild.val.methodName == \"size\" \n      || lastChild.type == \"!func\" && lastChild.methodName == \"size\" ;\n    const isLength = lastChild.type == \"property\" && lastChild.val == \"length\";\n    const sourceParts = children.filter(child => \n      child !== selection && child !== lastChild\n    );\n    const source = {\n      type: \"compound\",\n      children: sourceParts\n    };\n    if (isSize || isLength) {\n      return {\n        type: \"!aggr\",\n        filter,\n        source\n      };\n    }\n    // remove `#this`, `#root`\n    children = children.filter(child => {\n      const isThis = child.type == \"variable\" && child.val == \"this\";\n      const isRoot = child.type == \"variable\" && child.val == \"root\";\n      return !(isThis || isRoot);\n    });\n    // indexer\n    children = children.map(child => {\n      if (child.type == \"indexer\" && child.children.length == 1) {\n        return {\n          type: \"indexer\", \n          val: child.children[0].val,\n          itype: child.children[0].type\n        };\n      } else {\n        return child;\n      }\n    });\n    // method\n    if (lastChild.type == \"method\") {\n      const obj = children.filter(child => \n        child !== lastChild\n      );\n      return {\n        type: \"!func\",\n        obj,\n        methodName: lastChild.val.methodName,\n        args: lastChild.val.args\n      };\n    }\n    // !func\n    if (lastChild.type == \"!func\") {\n      const obj = children.filter(child => \n        child !== lastChild\n      );\n      return {\n        ...lastChild,\n        obj,\n      };\n    }\n  }\n\n  // getRaw || getValue\n  let val;\n  try {\n    if (expr.getRaw) { // use my fork\n      val = expr.getRaw();\n    } else if (expr.getValue.length == 0) { // getValue not requires context arg -> can use\n      val = expr.getValue();\n    }\n  } catch(e) {\n    logger.error(\"[spel2js] Error in getValue()\", e);\n  }\n\n  // ternary\n  if (type == \"ternary\") {\n    val = flatizeTernary(children);\n  }\n\n  // convert method/function args\n  if (typeof val === \"object\" && val !== null) {\n    if (val.methodName || val.functionName) {\n      val.args = val.args.map(child => convertCompiled(child, meta, expr));\n    }\n  }\n  // convert list\n  if (type == \"list\") {\n    val = val.map(item => convertCompiled(item, meta, expr));\n\n    // fix whole expression wrapped in `{}`\n    if (!parentExpr && val.length == 1) {\n      return val[0];\n    }\n  }\n  // convert constructor\n  if (type == \"constructorref\") {\n    const qid = children.find(child => child.type == \"qualifiedidentifier\");\n    const cls = qid?.val;\n    if (!cls) {\n      meta.errors.push(`Can't find qualifiedidentifier in constructorref children: ${JSON.stringify(children)}`);\n      return undefined;\n    }\n    const args = children.filter(child => child.type != \"qualifiedidentifier\");\n    return {\n      type: \"!new\",\n      cls,\n      args\n    };\n  }\n  // convert type\n  if (type == \"typeref\") {\n    const qid = children.find(child => child.type == \"qualifiedidentifier\");\n    const cls = qid?.val;\n    if (!cls) {\n      meta.errors.push(`Can't find qualifiedidentifier in typeref children: ${JSON.stringify(children)}`);\n      return undefined;\n    }\n    const _args = children.filter(child => child.type != \"qualifiedidentifier\");\n    return {\n      type: \"!type\",\n      cls\n    };\n  }\n  // convert function/method\n  if (type == \"function\" || type == \"method\") {\n    // `foo()` is method, `#foo()` is function\n    // let's use common property `methodName` and just add `isVar` for function\n    const {functionName, methodName, args} = val;\n    return {\n      type: \"!func\",\n      methodName: functionName || methodName,\n      isVar: type == \"function\",\n      args\n    };\n  }\n\n  return {\n    type,\n    children,\n    val,\n  };\n};\n\nconst flatizeTernary = (children) => {\n  let flat = [];\n  function _processTernaryChildren(tern) {\n    let [cond, if_val, else_val] = tern;\n    flat.push([cond, if_val]);\n    if (else_val?.type == \"ternary\") {\n      _processTernaryChildren(else_val.children);\n    } else {\n      flat.push([undefined, else_val]);\n    }\n  }\n  _processTernaryChildren(children);\n  return flat;\n};\n\nconst buildConv = (config) => {\n  let operators = {};\n  for (let opKey in config.operators) {\n    const opConfig = config.operators[opKey];\n    if (opConfig.spelOps) {\n      // examples: \"==\", \"eq\", \".contains\", \"matches\" (can be used for starts_with, ends_with)\n      opConfig.spelOps.forEach(spelOp => {\n        const opk = spelOp; // + \"/\" + defaultValue(opConfig.cardinality, 1);\n        if (!operators[opk])\n          operators[opk] = [];\n        operators[opk].push(opKey);\n      });\n    } else if (opConfig.spelOp) {\n      const opk = opConfig.spelOp; // + \"/\" + defaultValue(opConfig.cardinality, 1);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    } else {\n      logger.log(`[spel] No spelOp for operator ${opKey}`);\n    }\n  }\n\n  let conjunctions = {};\n  for (let conjKey in config.conjunctions) {\n    const conjunctionDefinition = config.conjunctions[conjKey];\n    const ck = conjunctionDefinition.spelConj || conjKey.toLowerCase();\n    conjunctions[ck] = conjKey;\n  }\n\n  let funcs = {};\n  for (let funcKey in config.funcs) {\n    const funcConfig = config.funcs[funcKey];\n    let fk;\n    if (typeof funcConfig.spelFunc == \"string\") {\n      fk = funcConfig.spelFunc;\n    }\n    if (fk) {\n      if (!funcs[fk])\n        funcs[fk] = [];\n      funcs[fk].push(funcKey);\n    }\n  }\n\n  return {\n    operators,\n    conjunctions,\n    funcs,\n  };\n};\n\nconst convertPath = (parts, meta) => {\n  let isError = false;\n  const res = parts.map(c => {\n    if (c.type == \"variable\" || c.type == \"property\" || c.type == \"indexer\" && c.itype == \"string\") {\n      return c.val;\n    } else {\n      isError = true;\n      meta.errors.push(`Unexpected item in compound: ${JSON.stringify(c)}`);\n    }\n  });\n  return !isError ? res : undefined;\n};\n\nconst convertArg = (spel, conv, config, meta, parentSpel) => {\n  if (spel == undefined)\n    return undefined;\n  const {fieldSeparator} = config.settings;\n  const literalTypes = {\n    number: \"number\",\n    string: \"text\",\n    boolean: \"boolean\",\n    null: \"null\" // should not be\n  };\n  \n  const groupFieldParts = parentSpel?._groupField ? [parentSpel?._groupField] : [];\n  if (spel.type == \"compound\") {\n    // complex field\n    const parts = convertPath(spel.children, meta);\n    if (!parts) {\n      return undefined;\n    }\n    const fullParts = [...groupFieldParts, ...parts];\n    const isVariable = spel.children?.[0]?.type == \"variable\";\n    return {\n      valueSrc: \"field\",\n      //valueType: todo\n      isVariable,\n      value: fullParts.join(fieldSeparator),\n    };\n  } else if (spel.type == \"variable\" || spel.type == \"property\") {\n    // normal field\n    const fullParts = [...groupFieldParts, spel.val];\n    const isVariable = spel.type == \"variable\";\n    return {\n      valueSrc: \"field\",\n      //valueType: todo\n      isVariable,\n      value: fullParts.join(fieldSeparator),\n    };\n  } else if (literalTypes[spel.type]) {\n    let value = spel.val;\n    let valueType = literalTypes[spel.type];\n    if (parentSpel?.isUnary) {\n      value = -value;\n    }\n    return {\n      valueSrc: \"value\",\n      valueType,\n      value,\n    };\n  } else if (spel.type == \"list\") {\n    const values = spel.val.map(v => convertArg(v, conv, config, meta, spel));\n    const _itemType = values.length ? values[0]?.valueType : null;\n    const value = values.map(v => v?.value);\n    const valueType = \"multiselect\";\n    return {\n      valueSrc: \"value\",\n      valueType,\n      value,\n    };\n  } else if (spel.type == \"!func\") {\n    const {obj, methodName, args, isVar} = spel;\n    \n    // todo: get from conv\n    const funcToOpMap = {\n      [\".contains\"]: \"like\",\n      [\".startsWith\"]: \"starts_with\",\n      [\".endsWith\"]: \"ends_with\",\n      [\"$contains\"]: \"select_any_in\",\n      [\".equals\"]: \"multiselect_equals\",\n      //[\".containsAll\"]: \"multiselect_contains\",\n      [\"CollectionUtils.containsAny()\"]: \"multiselect_contains\"\n    };\n\n    const convertedArgs = args.map(v => convertArg(v, conv, config, meta, {\n      ...spel,\n      _groupField: parentSpel?._groupField\n    }));\n    \n    //todo: make dynamic: use funcToOpMap and check obj type in basic config\n    if (methodName == \"contains\" && obj && obj[0].type == \"list\") {\n      const convertedObj = obj.map(v => convertArg(v, conv, config, meta, spel));\n      // {'yellow', 'green'}.?[true].contains(color)\n      if (!( convertedArgs.length == 1 && convertedArgs[0].valueSrc == \"field\" )) {\n        meta.errors.push(`Expected arg to method ${methodName} to be field but got: ${JSON.stringify(convertedArgs)}`);\n        return undefined;\n      }\n      const field = convertedArgs[0].value;\n      if (!( convertedObj.length == 1 && convertedObj[0].valueType == \"multiselect\" )) {\n        meta.errors.push(`Expected object of method ${methodName} to be inline list but got: ${JSON.stringify(convertedObj)}`);\n        return undefined;\n      }\n      const opKey = funcToOpMap[\"$\"+methodName];\n      const list = convertedObj[0];\n      return buildRule(config, meta, field, opKey, [list], spel);\n    } else if (obj && obj[0].type == \"property\" && funcToOpMap[obj[0].val + \".\" + methodName + \"()\"]) {\n      // CollectionUtils.containsAny(multicolor, {'yellow', 'green'})\n      const opKey = funcToOpMap[obj[0].val + \".\" + methodName + \"()\"];\n      const field = convertedArgs[0].value;\n      const args = convertedArgs.slice(1);\n      return buildRule(config, meta, field, opKey, args, spel);\n    } else if (funcToOpMap[\".\"+methodName]) {\n      // user.login.startsWith('gg')\n      const opKey = funcToOpMap[\".\"+methodName];\n      const parts = convertPath(obj, meta);\n      if (parts && convertedArgs.length == 1) {\n        const fullParts = [...groupFieldParts, ...parts];\n        const field = fullParts.join(fieldSeparator);\n        return buildRule(config, meta, field, opKey, convertedArgs, spel);\n      }\n    } else if (methodName == \"parse\" && obj && obj[0].type == \"!new\" && obj[0].cls.at(-1) == \"SimpleDateFormat\") {\n      // new java.text.SimpleDateFormat('yyyy-MM-dd').parse('2022-01-15')\n      const args = obj[0].args.map(v => convertArg(v, conv, config, meta, {\n        ...spel,\n        _groupField: parentSpel?._groupField\n      }));\n      if (!( args.length == 1 && args[0].valueType == \"text\" )) {\n        meta.errors.push(`Expected args of ${obj[0].cls.join(\".\")}.${methodName} to be 1 string but got: ${JSON.stringify(args)}`);\n        return undefined;\n      }\n      if (!( convertedArgs.length == 1 && convertedArgs[0].valueType == \"text\" )) {\n        meta.errors.push(`Expected args of ${obj[0].cls.join(\".\")} to be 1 string but got: ${JSON.stringify(convertedArgs)}`);\n        return undefined;\n      }\n      const dateFormat = args[0].value;\n      const dateString = convertedArgs[0].value;\n      const valueType = dateFormat.includes(\" \") ? \"datetime\" : \"date\";\n      const field = null; // todo\n      const widget = valueType;\n      const fieldConfig = getFieldConfig(config, field);\n      const widgetConfig = config.widgets[widget || fieldConfig?.mainWidget];\n      const valueFormat = widgetConfig.valueFormat;\n      const dateVal = moment(dateString, moment.ISO_8601);\n      const value = dateVal.isValid() ? dateVal.format(valueFormat) : undefined;\n      return {\n        valueSrc: \"value\",\n        valueType,\n        value,\n      };\n    } else if (methodName == \"parse\" && obj && obj[0].type == \"!type\" && obj[0].cls.at(-1) == \"LocalTime\") {\n      // time == T(java.time.LocalTime).parse('02:03:00')\n      if (!( convertedArgs.length == 1 && convertedArgs[0].valueType == \"text\" )) {\n        meta.errors.push(`Expected args of ${obj[0].cls.join(\".\")} to be 1 string but got: ${JSON.stringify(convertedArgs)}`);\n        return undefined;\n      }\n      const timeString = convertedArgs[0].value;\n      const valueType = \"time\";\n      const field = null; // todo\n      const widget = valueType;\n      const fieldConfig = getFieldConfig(config, field);\n      const widgetConfig = config.widgets[widget || fieldConfig?.mainWidget];\n      const valueFormat = widgetConfig.valueFormat;\n      const dateVal = moment(timeString, \"HH:mm:ss\");\n      const value = dateVal.isValid() ? dateVal.format(valueFormat) : undefined;\n      return {\n        valueSrc: \"value\",\n        valueType,\n        value,\n      };\n    } else {\n      // todo: conv.funcs\n      meta.errors.push(`Unsupported method ${methodName}`);\n    }\n  } else if (spel.type == \"op-plus\" && parentSpel?.type == \"ternary\") {\n    return buildCaseValueConcat(spel, conv, config, meta);\n  } else {\n    meta.errors.push(`Can't convert arg of type ${spel.type}`);\n  }\n  return undefined;\n};\n\nconst buildRule = (config, meta, field, opKey, convertedArgs, spel) => {\n  if (convertedArgs.filter(v => v === undefined).length) {\n    return undefined;\n  }\n  const fieldConfig = getFieldConfig(config, field);\n  if (!fieldConfig) {\n    meta.errors.push(`No config for field ${field}`);\n    return undefined;\n  }\n\n  let canRev = true;\n  let needWrapReverse = false;\n  if (spel?.not && canRev) {\n    const opConfig = config.operators[opKey];\n    if (opConfig.reversedOp) {\n      opKey = opConfig.reversedOp;\n      spel.not = false;\n    } else {\n      needWrapReverse = true;\n    }\n  }\n\n  const widget = getWidgetForFieldOp(config, field, opKey);\n  const widgetConfig = config.widgets[widget || fieldConfig.mainWidget];\n  const asyncListValuesArr = convertedArgs.map(v => v.asyncListValues).filter(v => v != undefined);\n  const asyncListValues = asyncListValuesArr.length ? asyncListValuesArr[0] : undefined;\n\n  let res = {\n    type: \"rule\",\n    id: uuid(),\n    properties: {\n      field: field,\n      operator: opKey,\n      value: convertedArgs.map(v => v.value),\n      valueSrc: convertedArgs.map(v => v.valueSrc),\n      valueType: convertedArgs.map(v => {\n        if (v.valueSrc == \"value\") {\n          return widgetConfig?.type || fieldConfig?.type || v.valueType;\n        }\n        return v.valueType;\n      }),\n      asyncListValues,\n    }\n  };\n\n  if (needWrapReverse) {\n    res = wrapInDefaultConj(res, config, spel?.not);\n    if (spel?.not) {\n      spel.not = false;\n    }\n  }\n\n  return res;\n};\n\nconst buildRuleGroup = ({groupFilter, groupFieldValue}, opKey, convertedArgs, config, meta) => {\n  if (groupFieldValue.valueSrc != \"field\")\n    throw `Bad groupFieldValue: ${JSON.stringify(groupFieldValue)}`;\n  const groupField = groupFieldValue.value;\n  let groupOpRule = buildRule(config, meta, groupField, opKey, convertedArgs);\n  if (!groupOpRule)\n    return undefined;\n  const fieldConfig = getFieldConfig(config, groupField);\n  const mode = fieldConfig?.mode;\n  let res = {\n    ...(groupFilter || {}),\n    type: \"rule_group\",\n    properties: {\n      ...groupOpRule.properties,\n      ...(groupFilter?.properties || {}),\n      mode\n    }\n  };\n  if (!res.id)\n    res.id = uuid();\n  return res;\n};\n\n\nconst compareArgs = (left, right,  spel, conv, config, meta, parentSpel = null) => {\n  if (left.type == right.type) {\n    if (left.type == \"!aggr\") {\n      const [leftSource, rightSource] = [left.source, right.source].map(v => convertArg(v, conv, config, meta, {\n        ...spel,\n        _groupField: parentSpel?._groupField\n      }));\n      //todo: check same filter\n      return leftSource.value == rightSource.value;\n    } else {\n      const [leftVal, rightVal] = [left, right].map(v => convertArg(v, conv, config, meta, {\n        ...spel,\n        _groupField: parentSpel?._groupField\n      }));\n      return leftVal.value == rightVal.value;\n    }\n  }\n  return false;\n};\n\nconst convertToTree = (spel, conv, config, meta, parentSpel = null) => {\n  if (!spel) return undefined;\n  let res;\n  if (spel.type.indexOf(\"op-\") == 0) {\n    let op = spel.type.slice(\"op-\".length);\n\n    // unary\n    const isUnary = (op == \"minus\" || op == \"plus\") && spel.children.length == 1;\n    if (isUnary) {\n      spel.isUnary = true;\n      return convertToTree(spel.children[0], conv, config, meta, spel);\n    }\n\n    // between\n    let isBetweenNormal = (op == \"and\" && spel.children.length == 2 && spel.children[0].type == \"op-ge\" && spel.children[1].type == \"op-le\");\n    let isBetweenRev = (op == \"or\" && spel.children.length == 2 && spel.children[0].type == \"op-lt\" && spel.children[1].type == \"op-gt\");\n    let isBetween = isBetweenNormal || isBetweenRev;\n    if (isBetween) {\n      const [left, from] = spel.children[0].children;\n      const [right, to] = spel.children[1].children;\n      const isNumbers = from.type == \"number\" && to.type == \"number\";\n      const isSameSource = compareArgs(left, right,  spel, conv, config, meta, parentSpel);\n      if (isNumbers && isSameSource) {\n        const _fromValue = from.val;\n        const _toValue = to.val;\n        const oneSpel = {\n          type: \"op-between\",\n          children: [\n            left,\n            from,\n            to\n          ]\n        };\n        return convertToTree(oneSpel, conv, config, meta, parentSpel);\n      }\n    }\n\n    // find op\n    let opKeys = conv.operators[op];\n    // todo: make dynamic, use basic config\n    if (op == \"eq\" && spel.children[1].type == \"null\") {\n      opKeys = [\"is_null\"];\n    } else if (op == \"ne\" && spel.children[1].type == \"null\") {\n      opKeys = [\"is_not_null\"];\n    } else if (op == \"le\" && spel.children[1].type == \"string\" && spel.children[1].val == \"\") {\n      opKeys = [\"is_empty\"];\n    } else if (op == \"gt\" && spel.children[1].type == \"string\" && spel.children[1].val == \"\") {\n      opKeys = [\"is_not_empty\"];\n    } else if (op == \"between\") {\n      opKeys = [\"between\"];\n    }\n\n    // convert children\n    const convertChildren = () => spel.children.map(child => \n      convertToTree(child, conv, config, meta, {\n        ...spel,\n        _groupField: parentSpel?._groupField\n      })\n    );\n    \n    if (op == \"and\" || op == \"or\") {\n      const children1 = {};\n      const vals = convertChildren();\n      vals.forEach(v => {\n        if (v) {\n          const id = uuid();\n          v.id = id;\n          if (v.type != undefined) {\n            children1[id] = v;\n          } else {\n            meta.errors.push(`Bad item in AND/OR: ${JSON.stringify(v)}`);\n          }\n        }\n      });\n      res = {\n        type: \"group\",\n        id: uuid(),\n        children1,\n        properties: {\n          conjunction: conv.conjunctions[op],\n          not: spel.not\n        }\n      };\n    } else if (opKeys) {\n      const vals = convertChildren();\n      const fieldObj = vals[0];\n      let convertedArgs = vals.slice(1);\n      const groupField = fieldObj?.groupFieldValue?.value;\n      const opArg = convertedArgs?.[0];\n\n      \n      let opKey = opKeys[0];\n      if (opKeys.length > 1) {\n        logger.warn(`[spel] Spel operator ${op} can be mapped to ${opKeys}`);\n\n        //todo: it's naive\n        const field = fieldObj?.value;\n        const widgets = opKeys.map(op => ({op, widget: getWidgetForFieldOp(config, field, op)}));\n        \n        if (op == \"eq\" || op == \"ne\") {\n          const ws = widgets.find(({ op, widget }) => (widget && widget != \"field\"));\n          if (ws) {\n            opKey = ws.op;\n          }\n        }\n      }\n\n      // some/all/none\n      if (fieldObj?.groupFieldValue) {\n        if (opArg && opArg.groupFieldValue && opArg.groupFieldValue.valueSrc == \"field\" && opArg.groupFieldValue.value == groupField) {\n          // group.?[...].size() == group.size()\n          opKey = \"all\";\n          convertedArgs = [];\n        } else if (opKey == \"equal\" && opArg.valueSrc == \"value\" && opArg.valueType == \"number\" && opArg.value == 0) {\n          opKey = \"none\";\n          convertedArgs = [];\n        } else if (opKey == \"greater\" && opArg.valueSrc == \"value\" && opArg.valueType == \"number\" && opArg.value == 0) {\n          opKey = \"some\";\n          convertedArgs = [];\n        }\n      }\n\n      let canRev = true;\n      let needWrapReverse = false;\n      if (spel.not && canRev) {\n        const opConfig = config.operators[opKey];\n        if (opConfig.reversedOp) {\n          opKey = opConfig.reversedOp;\n          spel.not = false;\n        } else {\n          needWrapReverse = true;\n        }\n      }\n      \n      if (!fieldObj) {\n        // LHS can't be parsed\n      } else if (fieldObj.groupFieldValue) {\n        // 1. group\n        if (fieldObj.groupFieldValue.valueSrc != \"field\") {\n          meta.errors.push(`Expected group field ${JSON.stringify(fieldObj)}`);\n        }\n\n        res = buildRuleGroup(fieldObj, opKey, convertedArgs, config, meta);\n      } else {\n        // 2. not group\n        if (fieldObj.valueSrc != \"field\") {\n          meta.errors.push(`Expected field ${JSON.stringify(fieldObj)}`);\n        }\n        const field = fieldObj.value;\n        res = buildRule(config, meta, field, opKey, convertedArgs);\n      }\n\n      if (needWrapReverse) {\n        if (res.type !== \"group\") {\n          res = wrapInDefaultConj(res, config, spel.not);\n        } else {\n          res.properties.not = !res.properties.not;\n        }\n      }\n    } else {\n      if (!parentSpel) {\n        // try to parse whole `\"str\" + prop + #var` as ternary\n        res = buildSimpleSwitch(spel, conv, config, meta);\n      }\n      if (!res) {\n        meta.errors.push(`Can't convert op ${op}`);\n      }\n    }\n  } else if (spel.type == \"!aggr\") {\n    const groupFieldValue = convertToTree(spel.source, conv, config, meta, {\n      ...spel, \n      _groupField: parentSpel?._groupField\n    });\n    let groupFilter = convertToTree(spel.filter, conv, config, meta, {\n      ...spel, \n      _groupField: groupFieldValue?.value\n    });\n    if (groupFilter?.type == \"rule\") {\n      groupFilter = wrapInDefaultConj(groupFilter, config, spel.filter.not);\n    }\n    res = {\n      groupFilter,\n      groupFieldValue\n    };\n    if (!parentSpel) {\n      // !aggr can't be in root, it should be compared with something\n      res = undefined;\n      meta.errors.push(\"Unexpected !aggr in root\");\n    }\n  } else if (spel.type == \"ternary\") {\n    const children1 = {};\n    spel.val.forEach(v => {\n      const [cond, val] = v;\n      const caseI = buildCase(cond, val, conv, config, meta, spel);\n      if (caseI) {\n        children1[caseI.id] = caseI;\n      }\n    });\n    res = {\n      type: \"switch_group\",\n      id: uuid(),\n      children1,\n      properties: {}\n    };\n  } else {\n    res = convertArg(spel, conv, config, meta, parentSpel);\n    if (res && !res.type && !parentSpel) {\n      // try to parse whole `\"1\"` as ternary\n      const sw = buildSimpleSwitch(spel, conv, config, meta);\n      if (sw) {\n        res = sw;\n      } else {\n        res = undefined;\n        meta.errors.push(`Can't convert rule of type ${spel.type}, it looks like var/literal`);\n      }\n    } else {\n      // res is a rule\n    }\n  }\n  return res;\n};\n\nconst buildSimpleSwitch = (val, conv, config, meta) => {\n  let children1 = {};\n  const cond = null;\n  const caseI = buildCase(cond, val, conv, config, meta);\n  if (caseI) {\n    children1[caseI.id] = caseI;\n  }\n  let res = {\n    type: \"switch_group\",\n    id: uuid(),\n    children1,\n    properties: {}\n  };\n  return res;\n};\n\nconst buildCase = (cond, val, conv, config, meta, spel = null) => {\n  const valProperties = buildCaseValProperties(config, meta, conv, val, spel);\n\n  let caseI;\n  if (cond) {\n    caseI = convertToTree(cond, conv, config, meta, spel);\n    if (caseI && caseI.type) {\n      if (caseI.type != \"group\") {\n        caseI = wrapInDefaultConj(caseI, config);\n      }\n      caseI.type = \"case_group\";\n    } else {\n      meta.errors.push(`Unexpected case: ${JSON.stringify(caseI)}`);\n      caseI = undefined;\n    }\n  } else {\n    caseI = {\n      id: uuid(),\n      type: \"case_group\",\n      properties: {}\n    };\n  }\n\n  if (caseI) {\n    caseI.properties = {\n      ...caseI.properties,\n      ...valProperties\n    };\n  }\n\n  return caseI;\n};\n\nconst buildCaseValueConcat = (spel, conv, config, meta) => {\n  let flat = [];\n  function _processConcatChildren(children) {\n    children.map(child => {\n      if (child.type == \"op-plus\") {\n        _processConcatChildren(child.children);\n      } else {\n        const convertedChild = convertArg(child, conv, config, meta, spel);\n        if (convertedChild) {\n          flat.push(convertedChild);\n        } else {\n          meta.errors.push(`Can't convert ${child.type} in concatenation`);\n        }\n      }\n    });\n  }\n  _processConcatChildren(spel.children);\n  return {\n    valueSrc: \"value\",\n    valueType: \"case_value\",\n    value: flat,\n  };\n};\n\nconst buildCaseValProperties = (config, meta, conv, val, spel = null) => {\n  let valProperties = {};\n  let convVal;\n  if (val?.type == \"op-plus\") {\n    convVal = buildCaseValueConcat(val, conv, config, meta);\n  } else {\n    convVal = convertArg(val, conv, config, meta, spel);\n  }\n  const widgetDef = config.widgets[\"case_value\"];\n  const importCaseValue = widgetDef?.spelImportValue;\n  if (importCaseValue) {\n    const [normVal, normErrors] = importCaseValue(convVal);\n    normErrors.map(e => meta.errors.push(e));\n    if (normVal) {\n      valProperties = {\n        value: [normVal],\n        valueSrc: [\"value\"],\n        valueType: [\"case_value\"]\n      };\n    }\n  } else {\n    meta.errors.push(\"No fucntion to import case value\");\n  }\n  return valProperties;\n};\n\nconst wrapInDefaultConjRuleGroup = (rule, parentField, parentFieldConfig, config, conj) => {\n  if (!rule) return undefined;\n  return {\n    type: \"rule_group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: conj || defaultGroupConjunction(config, parentFieldConfig),\n      not: false,\n      field: parentField,\n    }\n  };\n};\n\nconst wrapInDefaultConj = (rule, config, not = false) => {\n  return {\n    type: \"group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: defaultConjunction(config),\n      not: not || false\n    }\n  };\n};\n","import {sleep} from \"./stuff\";\nimport {listValuesToArray, mapListValues} from \"./listValues\";\n\nexport const simulateAsyncFetch = (all, cPageSize = 0, delay = 1000) => async (search, offset, meta) => {\n  const pageSize = meta.pageSize != undefined ? meta.pageSize : cPageSize;\n  const filtered = listValuesToArray(all)\n    .filter(({title}) => search == null ? true : title.toUpperCase().indexOf(search.toUpperCase()) != -1);\n  const pages = pageSize ? Math.ceil(filtered.length / pageSize) : 0;\n  const currentOffset = offset || 0;\n  const currentPage = pageSize ? Math.ceil(currentOffset / pageSize) : null;\n  const values = pageSize ? filtered.slice(currentOffset, currentOffset + pageSize) : filtered;\n  const newOffset = pageSize ? currentOffset + values.length : null;\n  const hasMore = pageSize ? (newOffset < filtered.length) : false;\n  console.debug(\"simulateAsyncFetch\", {\n    search, offset, values, hasMore, filtered\n  });\n  await sleep(delay);\n  return {\n    values,\n    hasMore\n  };\n};\n\nexport const mergeListValues = (values, newValues, toStart = false) => {\n  if (!newValues)\n    return values;\n  const old = values || [];\n  const newFiltered = newValues.filter(v => old.find(av => av.value == v.value) == undefined);\n  const merged = toStart ? [...newFiltered, ...old] : [...old, ...newFiltered];\n  return merged;\n};\n\nexport const listValueToOption = (lv) => {\n  if (lv == null) return null;\n  const {title, value, disabled, groupTitle, renderTitle} = lv;\n  let option = {title, value};\n  if (disabled)\n    option.disabled = disabled;\n  if (groupTitle)\n    option.groupTitle = groupTitle;\n  if (renderTitle)\n    option.renderTitle = renderTitle;\n  return option;\n};\n\nexport const getListValue = (selectedValue, listValues) => \n  mapListValues(listValues, (lv) => (lv.value === selectedValue ? lv : null))\n    .filter(v => v !== null)\n    .shift();\n","import moment from \"moment\";\n\nconst NOW = {\n  label: \"Now\",\n  returnType: \"datetime\",\n  jsonLogic: \"now\",\n  //todo: document option `jsonLogicCustomOps`\n  //todo: add util to return all used custom ops to be added by user with `jsonLogic.add_operation`\n  jsonLogicCustomOps: {\n    now: () => new Date(),\n  },\n  spelFunc: \"new java.util.Date()\",\n  sqlFormatFunc: () => \"NOW()\",\n  mongoFormatFunc: () => new Date(),\n  formatFunc: () => \"NOW\",\n};\n\nconst RELATIVE_DATETIME = {\n  label: \"Relative\",\n  returnType: \"datetime\",\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\"\", \"\", \"\"],\n  jsonLogic: ({date, op, val, dim}) => ({\n    \"date_add\": [\n      date,\n      val * (op == \"minus\" ? -1 : +1),\n      dim\n    ]\n  }),\n  jsonLogicImport: (v) => {\n    const date = v[\"date_add\"][0];\n    const val = Math.abs(v[\"date_add\"][1]);\n    const op = v[\"date_add\"][1] >= 0 ? \"plus\" : \"minus\";\n    const dim = v[\"date_add\"][2];\n    return [date, op, val, dim];\n  },\n  jsonLogicCustomOps: {\n    date_add: (date, val, dim) => moment(date).add(val, dim).toDate()\n  },\n  // MySQL\n  //todo: other SQL dialects?\n  sqlFormatFunc: ({date, op, val, dim}) => `DATE_ADD(${date}, INTERVAL ${parseInt(val) * (op == \"minus\" ? -1 : +1)} ${dim.replace(/^'|'$/g, \"\")})`,\n  mongoFormatFunc: null, //todo: support?\n  //todo: spel\n  formatFunc: ({date, op, val, dim}) => (!val ? date : `${date} ${op == \"minus\" ? \"-\" : \"+\"} ${val} ${dim}`),\n  args: {\n    date: {\n      label: \"Date\",\n      type: \"datetime\",\n      defaultValue: {func: \"NOW\", args: []},\n      valueSources: [\"func\", \"field\"],\n    },\n    op: {\n      label: \"Op\",\n      type: \"select\",\n      defaultValue: \"plus\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: {\n          plus: \"+\",\n          minus: \"-\",\n        },\n      }\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      fieldSettings: {\n        min: 0,\n      },\n      defaultValue: 0,\n      valueSources: [\"value\"],\n    },\n    dim: {\n      label: \"Dimension\",\n      type: \"select\",\n      defaultValue: \"day\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: {\n          day: \"day\",\n          week: \"week\",\n          month: \"month\",\n          year: \"year\",\n        },\n      }\n    },\n  }\n};\n\nconst LOWER = {\n  label: \"Lowercase\",\n  mongoFunc: \"$toLower\",\n  jsonLogic: \"toLowerCase\",\n  spelFunc: \".toLowerCase\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toLowerCase: (str) => str.toLowerCase(),\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\"],\n    },\n  }\n};\n\nconst UPPER = {\n  label: \"Uppercase\",\n  mongoFunc: \"$toUpper\",\n  jsonLogic: \"toUpperCase\",\n  spelFunc: \".toUpperCase\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toUpperCase: (str) => str.toUpperCase(),\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\"],\n    },\n  }\n};\n\nconst LINEAR_REGRESSION = {\n  label: \"Linear regression\",\n  returnType: \"number\",\n  formatFunc: ({coef, bias, val}, _) => `(${coef} * ${val} + ${bias})`,\n  sqlFormatFunc: ({coef, bias, val}) => `(${coef} * ${val} + ${bias})`,\n  spelFormatFunc: ({coef, bias, val}) => `(${coef} * ${val} + ${bias})`,\n  mongoFormatFunc: ({coef, bias, val}) => ({\"$sum\": [{\"$multiply\": [coef, val]}, bias]}),\n  jsonLogic: ({coef, bias, val}) => ({ \"+\": [ {\"*\": [coef, val]}, bias ] }),\n  jsonLogicImport: (v) => {\n    const coef = v[\"+\"][0][\"*\"][0];\n    const val = v[\"+\"][0][\"*\"][1];\n    const bias = v[\"+\"][1];\n    return [coef, val, bias];\n  },\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\" * \", \" + \"],\n  args: {\n    coef: {\n      label: \"Coef\",\n      type: \"number\",\n      defaultValue: 1,\n      valueSources: [\"value\"],\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      valueSources: [\"value\", \"field\"],\n    },\n    bias: {\n      label: \"Bias\",\n      type: \"number\",\n      defaultValue: 0,\n      valueSources: [\"value\"],\n    }\n  }\n};\n\nexport {\n  LOWER,\n  UPPER,\n  NOW,\n  RELATIVE_DATETIME,\n  LINEAR_REGRESSION,\n};\n","import {\n  SqlString, sqlEmptyValue, mongoEmptyValue, spelEscape, spelFixList,\n  stringifyForDisplay\n} from \"../utils/export\";\nimport {escapeRegExp} from \"../utils/stuff\";\nimport {getTitleInListValues} from \"../utils/listValues\";\nimport moment from \"moment\";\nimport {settings as defaultSettings} from \"./default\";\n\n\n\n//----------------------------  conjunctions\n\nconst conjunctions = {\n  AND: {\n    label: \"And\",\n    mongoConj: \"$and\",\n    jsonLogicConj: \"and\",\n    sqlConj: \"AND\",\n    spelConj: \"and\",\n    spelConjs: [\"and\", \"&&\"],\n    reversedConj: \"OR\",\n    formatConj: (children, conj, not, isForDisplay) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + (isForDisplay ? \"AND\" : \"&&\") + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    sqlFormatConj: (children, conj, not) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + \"AND\" + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    spelFormatConj: (children, conj, not, omitBrackets) => {\n      if (not) omitBrackets = false;\n      return children.size > 1\n        ? (not ? \"!\" : \"\") + (omitBrackets ? \"\" : \"(\") + children.join(\" \" + \"&&\" + \" \") + (omitBrackets ? \"\" : \")\")\n        : (not ? \"!(\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n  },\n  OR: {\n    label: \"Or\",\n    mongoConj: \"$or\",\n    jsonLogicConj: \"or\",\n    sqlConj: \"OR\",\n    spelConj: \"or\",\n    spelConjs: [\"or\", \"||\"],\n    reversedConj: \"AND\",\n    formatConj: (children, conj, not, isForDisplay) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + (isForDisplay ? \"OR\" : \"||\") + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    sqlFormatConj: (children, conj, not) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + \"OR\" + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    spelFormatConj: (children, conj, not, omitBrackets) => {\n      if (not) omitBrackets = false;\n      return children.size > 1\n        ? (not ? \"!\" : \"\") + (omitBrackets ? \"\" : \"(\") + children.join(\" \" + \"||\" + \" \") + (omitBrackets ? \"\" : \")\")\n        : (not ? \"!(\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n  },\n};\n\n//----------------------------  operators\n\n// helpers for mongo format\nexport const mongoFormatOp1 = (mop, mc, not,  field, _op, value, useExpr, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n  const $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\"+field : field;\n  const mv = mc(value, fieldDef);\n  if (mv === undefined)\n    return undefined;\n  if (not) {\n    if (!useExpr && (!mop || mop == \"$eq\"))\n      return { [field]: { \"$ne\": mv } }; // short form\n    return !useExpr\n      ? { [field]: { \"$not\": { [mop]: mv } } } \n      : { \"$not\": { [mop]: [$field, mv] } };\n  } else {\n    if (!useExpr && (!mop || mop == \"$eq\"))\n      return { [field]: mv }; // short form\n    return !useExpr\n      ? { [field]: { [mop]: mv } } \n      : { [mop]: [$field, mv] };\n  }\n};\n\nexport const mongoFormatOp2 = (mops, not,  field, _op, values, useExpr, valueSrcs, valueTypes, opDef, operatorOptions, fieldDef) => {\n  const $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\"+field : field;\n  if (not) {\n    return !useExpr\n      ? { [field]: { \"$not\": { [mops[0]]: values[0], [mops[1]]: values[1] } } } \n      : {\"$not\":\n                {\"$and\": [\n                  { [mops[0]]: [ $field, values[0] ] },\n                  { [mops[1]]: [ $field, values[1] ] },\n                ]}\n      };\n  } else {\n    return !useExpr\n      ? { [field]: { [mops[0]]: values[0], [mops[1]]: values[1] } } \n      : {\"$and\": [\n        { [mops[0]]: [ $field, values[0] ] },\n        { [mops[1]]: [ $field, values[1] ] },\n      ]};\n  }\n};\n\n\nconst operators = {\n  equal: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    reversedOp: \"not_equal\",\n    formatOp: (field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) => {\n      const opStr = isForDisplay ? \"=\" : opDef.label;\n      if (valueTypes == \"boolean\" && isForDisplay)\n        return value == \"No\" ? `NOT ${field}` : `${field}`;\n      else\n        return `${field} ${opStr} ${value}`;\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", v => v, false),\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\",\n  },\n  not_equal: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    reversedOp: \"equal\",\n    formatOp: (field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) => {\n      if (valueTypes == \"boolean\" && isForDisplay)\n        return value == \"No\" ? `${field}` : `NOT ${field}`;\n      else\n        return `${field} ${opDef.label} ${value}`;\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$ne\", v => v, false),\n    jsonLogic: \"!=\",\n  },\n  less: {\n    label: \"<\",\n    labelForFormat: \"<\",\n    sqlOp: \"<\",\n    spelOp: \"<\",\n    spelOps: [\"<\", \"lt\"],\n    reversedOp: \"greater_or_equal\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$lt\", v => v, false),\n    jsonLogic: \"<\",\n    elasticSearchQueryType: \"range\",\n  },\n  less_or_equal: {\n    label: \"<=\",\n    labelForFormat: \"<=\",\n    sqlOp: \"<=\",\n    spelOp: \"<=\",\n    spelOps: [\"<=\", \"le\"],\n    reversedOp: \"greater\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$lte\", v => v, false),\n    jsonLogic: \"<=\",\n    elasticSearchQueryType: \"range\",\n  },\n  greater: {\n    label: \">\",\n    labelForFormat: \">\",\n    sqlOp: \">\",\n    spelOp: \">\",\n    spelOps: [\">\", \"gt\"],\n    reversedOp: \"less_or_equal\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$gt\", v => v, false),\n    jsonLogic: \">\",\n    elasticSearchQueryType: \"range\",\n  },\n  greater_or_equal: {\n    label: \">=\",\n    labelForFormat: \">=\",\n    sqlOp: \">=\",\n    spelOp: \">=\",\n    spelOps: [\">=\", \"ge\"],\n    reversedOp: \"less\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$gte\", v => v, false),\n    jsonLogic: \">=\",\n    elasticSearchQueryType: \"range\",\n  },\n  like: {\n    label: \"Contains\",\n    labelForFormat: \"Contains\",\n    reversedOp: \"not_like\",\n    sqlOp: \"LIKE\",\n    spelOp: \".contains\",\n    spelOps: [\"matches\", \".contains\"],\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$regex\", v => (typeof v == \"string\" ? escapeRegExp(v) : undefined), false),\n    //jsonLogic: (field, op, val) => ({ \"in\": [val, field] }),\n    jsonLogic: \"in\",\n    _jsonLogicIsRevArgs: true,\n    valueSources: [\"value\"],\n    elasticSearchQueryType: \"regexp\",\n  },\n  not_like: {\n    isNotOp: true,\n    label: \"Not contains\",\n    reversedOp: \"like\",\n    labelForFormat: \"Not Contains\",\n    sqlOp: \"NOT LIKE\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$regex\", v => (typeof v == \"string\" ? escapeRegExp(v) : undefined), true),\n    valueSources: [\"value\"],\n  },\n  starts_with: {\n    label: \"Starts with\",\n    labelForFormat: \"Starts with\",\n    sqlOp: \"LIKE\",\n    spelOp: \".startsWith\",\n    spelOps: [\"matches\", \".startsWith\"],\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$regex\", v => (typeof v == \"string\" ? \"^\" + escapeRegExp(v) : undefined), false),\n    jsonLogic: undefined, // not supported\n    valueSources: [\"value\"],\n  },\n  ends_with: {\n    label: \"Ends with\",\n    labelForFormat: \"Ends with\",\n    sqlOp: \"LIKE\",\n    spelOp: \".endsWith\",\n    spelOps: [\"matches\", \".endsWith\"],\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$regex\", v => (typeof v == \"string\" ? escapeRegExp(v) + \"$\" : undefined), false),\n    jsonLogic: undefined, // not supported\n    valueSources: [\"value\"],\n  },\n  between: {\n    label: \"Between\",\n    labelForFormat: \"BETWEEN\",\n    sqlOp: \"BETWEEN\",\n    cardinality: 2,\n    formatOp: (field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) => {\n      let valFrom = values.first();\n      let valTo = values.get(1);\n      if (isForDisplay)\n        return `${field} BETWEEN ${valFrom} AND ${valTo}`;\n      else\n        return `${field} >= ${valFrom} && ${field} <= ${valTo}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values[0];\n      const valTo = values[1];\n      return `${field} >= ${valFrom} && ${field} <= ${valTo}`;\n    },\n    mongoFormatOp: mongoFormatOp2.bind(null, [\"$gte\", \"$lte\"], false),\n    valueLabels: [\n      \"Value from\",\n      \"Value to\"\n    ],\n    textSeparators: [\n      null,\n      \"and\"\n    ],\n    reversedOp: \"not_between\",\n    jsonLogic: \"<=\",\n    validateValues: (values) => {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1] ? null : \"Invalid range\";\n      }\n      return null;\n    },\n    elasticSearchQueryType: function elasticSearchQueryType(type) {\n      return type === \"time\" ? \"filter\" : \"range\";\n    },\n  },\n  not_between: {\n    isNotOp: true,\n    label: \"Not between\",\n    labelForFormat: \"NOT BETWEEN\",\n    sqlOp: \"NOT BETWEEN\",\n    cardinality: 2,\n    formatOp: (field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) => {\n      let valFrom = values.first();\n      let valTo = values.get(1);\n      if (isForDisplay)\n        return `${field} NOT BETWEEN ${valFrom} AND ${valTo}`;\n      else\n        return `(${field} < ${valFrom} || ${field} > ${valTo})`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values[0];\n      const valTo = values[1];\n      return `(${field} < ${valFrom} || ${field} > ${valTo})`;\n    },\n    mongoFormatOp: mongoFormatOp2.bind(null, [\"$gte\", \"$lte\"], true),\n    valueLabels: [\n      \"Value from\",\n      \"Value to\"\n    ],\n    textSeparators: [\n      null,\n      \"and\"\n    ],\n    reversedOp: \"between\",\n    validateValues: (values) => {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1] ? null : \"Invalid range\";\n      }\n      return null;\n    },\n  },\n  is_empty: {\n    label: \"Is empty\",\n    labelForFormat: \"IS EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_not_empty\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS EMPTY` : `!${field}`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const empty = sqlEmptyValue(fieldDef);\n      return `COALESCE(${field}, ${empty}) = ${empty}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      //tip: is empty or null\n      return `${field} <= ''`;\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$in\", (v, fieldDef) => [mongoEmptyValue(fieldDef), null], false),\n    jsonLogic: \"!\",\n  },\n  is_not_empty: {\n    isNotOp: true,\n    label: \"Is not empty\",\n    labelForFormat: \"IS NOT EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_empty\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NOT EMPTY` : `!!${field}`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const empty = sqlEmptyValue(fieldDef);\n      return `COALESCE(${field}, ${empty}) <> ${empty}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      //tip: is not empty and not null\n      return `${field} > ''`;\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$nin\", (v, fieldDef) => [mongoEmptyValue(fieldDef), null], false),\n    jsonLogic: \"!!\",\n    elasticSearchQueryType: \"exists\",\n  },\n  is_null: {\n    label: \"Is null\",\n    labelForFormat: \"IS NULL\",\n    sqlOp: \"IS NULL\",\n    cardinality: 0,\n    reversedOp: \"is_not_null\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NULL` : `!${field}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      return `${field} == null`;\n    },\n    // check if value is null OR not exists\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", v => null, false),\n    jsonLogic: \"==\",\n  },\n  is_not_null: {\n    label: \"Is not null\",\n    labelForFormat: \"IS NOT NULL\",\n    sqlOp: \"IS NOT NULL\",\n    cardinality: 0,\n    reversedOp: \"is_null\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NOT NULL` : `!!${field}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      return `${field} != null`;\n    },\n    // check if value exists and is not null\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$ne\", v => null, false),\n    jsonLogic: \"!=\",\n    elasticSearchQueryType: \"exists\",\n  },\n  select_equals: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\", // enum/set\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const opStr = isForDisplay ? \"=\" : \"==\";\n      return `${field} ${opStr} ${value}`;\n    },\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", v => v, false),\n    reversedOp: \"select_not_equals\",\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\",\n  },\n  select_not_equals: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\", // enum/set\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} != ${value}`;\n    },\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$ne\", v => v, false),\n    reversedOp: \"select_equals\",\n    jsonLogic: \"!=\",\n  },\n  select_any_in: {\n    label: \"Any in\",\n    labelForFormat: \"IN\",\n    sqlOp: \"IN\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} IN (${values.join(\", \")})`;\n      else\n        return `${field} IN (${values})`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\") {\n        return `${field} IN (${values.join(\", \")})`;\n      } else return undefined; // not supported\n    },\n    spelOp: \"$contains\", // tip: $ means first arg is object\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$in\", v => v, false),\n    reversedOp: \"select_not_any_in\",\n    jsonLogic: \"in\",\n    elasticSearchQueryType: \"term\",\n  },\n  select_not_any_in: {\n    isNotOp: true,\n    label: \"Not in\",\n    labelForFormat: \"NOT IN\",\n    sqlOp: \"NOT IN\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} NOT IN (${values.join(\", \")})`;\n      else\n        return `${field} NOT IN (${values})`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\") {\n        return `${field} NOT IN (${values.join(\", \")})`;\n      } else return undefined; // not supported\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$nin\", v => v, false),\n    reversedOp: \"select_any_in\",\n  },\n  // it's not \"contains all\", but \"contains any\" operator\n  multiselect_contains: {\n    label: \"Contains\",\n    labelForFormat: \"CONTAINS\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} CONTAINS [${values.join(\", \")}]`;\n      else\n        return `${field} CONTAINS ${values}`;\n    },\n    reversedOp: \"multiselect_not_contains\",\n    jsonLogic2: \"some-in\",\n    jsonLogic: (field, op, vals) => ({\n      \"some\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]\n    }),\n    //spelOp: \".containsAll\",\n    spelOp: \"CollectionUtils.containsAny()\",\n    elasticSearchQueryType: \"term\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$in\", v => v, false),\n  },\n  multiselect_not_contains: {\n    isNotOp: true,\n    label: \"Not contains\",\n    labelForFormat: \"NOT CONTAINS\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} NOT CONTAINS [${values.join(\", \")}]`;\n      else\n        return `${field} NOT CONTAINS ${values}`;\n    },\n    reversedOp: \"multiselect_contains\"\n  },\n  multiselect_equals: {\n    label: \"Equals\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const opStr = isForDisplay ? \"=\" : \"==\";\n      if (valueSrc == \"value\")\n        return `${field} ${opStr} [${values.join(\", \")}]`;\n      else\n        return `${field} ${opStr} ${values}`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\")\n      // set\n        return `${field} = '${values.map(v => SqlString.trim(v)).join(\",\")}'`;\n      else\n        return undefined; //not supported\n    },\n    spelOp: \".equals\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", v => v, false),\n    reversedOp: \"multiselect_not_equals\",\n    jsonLogic2: \"all-in\",\n    jsonLogic: (field, op, vals) => ({\n      // it's not \"equals\", but \"includes\" operator - just for example\n      \"all\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]\n    }),\n    elasticSearchQueryType: \"term\",\n  },\n  multiselect_not_equals: {\n    isNotOp: true,\n    label: \"Not equals\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} != [${values.join(\", \")}]`;\n      else\n        return `${field} != ${values}`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\")\n      // set\n        return `${field} != '${values.map(v => SqlString.trim(v)).join(\",\")}'`;\n      else\n        return undefined; //not supported\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$ne\", v => v, false),\n    reversedOp: \"multiselect_equals\",\n  },\n  proximity: {\n    label: \"Proximity search\",\n    cardinality: 2,\n    valueLabels: [\n      { label: \"Word 1\", placeholder: \"Enter first word\" },\n      { label: \"Word 2\", placeholder: \"Enter second word\" },\n    ],\n    textSeparators: [\n      //'Word 1',\n      //'Word 2'\n    ],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const val1 = values.first();\n      const val2 = values.get(1);\n      const prox = operatorOptions.get(\"proximity\");\n      return `${field} ${val1} NEAR/${prox} ${val2}`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const val1 = values.first();\n      const val2 = values.get(1);\n      const aVal1 = SqlString.trim(val1);\n      const aVal2 = SqlString.trim(val2);\n      const prox = operatorOptions.get(\"proximity\");\n      return `CONTAINS(${field}, 'NEAR((${aVal1}, ${aVal2}), ${prox})')`;\n    },\n    mongoFormatOp: undefined, // not supported\n    jsonLogic: undefined, // not supported\n    options: {\n      optionLabel: \"Near\", // label on top of \"near\" selectbox (for config.settings.showLabels==true)\n      optionTextBefore: \"Near\", // label before \"near\" selectbox (for config.settings.showLabels==false)\n      optionPlaceholder: \"Select words between\", // placeholder for \"near\" selectbox\n      minProximity: 2,\n      maxProximity: 10,\n      defaults: {\n        proximity: 2\n      },\n    },\n  },\n  some: {\n    label: \"Some\",\n    labelForFormat: \"SOME\",\n    cardinality: 0,\n    jsonLogic: \"some\",\n    spelFormatOp: (filteredSize) => `${filteredSize} > 0`,\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$gt\", v => 0, false),\n  },\n  all: {\n    label: \"All\",\n    labelForFormat: \"ALL\",\n    cardinality: 0,\n    jsonLogic: \"all\",\n    spelFormatOp: (filteredSize, op, fullSize) => `${filteredSize} == ${fullSize}`,\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", v => v, false),\n  },\n  none: {\n    label: \"None\",\n    labelForFormat: \"NONE\",\n    cardinality: 0,\n    jsonLogic: \"none\",\n    spelFormatOp: (filteredSize) => `${filteredSize} == 0`,\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", v => 0, false),\n  }\n};\n\n\n//----------------------------  widgets\n\nconst widgets = {\n  text: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"String\",\n    valuePlaceholder: \"Enter string\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      return isForDisplay ? stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    spelFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      if (opDef.spelOp == \"matches\" && op != \"regex\") {\n        let regex;\n        if (op == \"starts_with\") {\n          regex = `(?s)^${escapeRegExp(val)}.*`;\n        } else if (op == \"ends_with\") {\n          regex = `(?s).*${escapeRegExp(val)}$`;\n        } else { // op == 'like'\n          regex = `(?s).*${escapeRegExp(val)}.*`; //tip: can use (?sui) for case-insensitive\n        }\n        return spelEscape(regex);\n      } else {\n        return spelEscape(val);\n      }\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\");\n      } else {\n        return SqlString.escape(val);\n      }\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  textarea: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Text\",\n    valuePlaceholder: \"Enter text\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      return isForDisplay ? stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\");\n      } else {\n        return SqlString.escape(val);\n      }\n    },\n    spelFormatValue: (val) => spelEscape(val),\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n    fullWidth: true,\n  },\n  number: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number\",\n    valueLabels: [\n      { label: \"Number from\", placeholder: \"Enter number from\" },\n      { label: \"Number to\", placeholder: \"Enter number to\" },\n    ],\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      return isForDisplay ? stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return SqlString.escape(val);\n    },\n    spelFormatValue: (val, fieldDef, wgtDef) => {\n      const isFloat = wgtDef.step && !Number.isInteger(wgtDef.step);\n      return spelEscape(val, isFloat);\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  slider: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number or move slider\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      return isForDisplay ? stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return SqlString.escape(val);\n    },\n    spelFormatValue: (val) => spelEscape(val),\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  select: {\n    type: \"select\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Value\",\n    valuePlaceholder: \"Select value\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      let valLabel = getTitleInListValues(fieldDef.fieldSettings.treeValues || fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, val);\n      return isForDisplay ? stringifyForDisplay(valLabel) : JSON.stringify(val);\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return SqlString.escape(val);\n    },\n    spelFormatValue: (val) => spelEscape(val),\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  multiselect: {\n    type: \"multiselect\",\n    jsType: \"array\",\n    valueSrc: \"value\",\n    valueLabel: \"Values\",\n    valuePlaceholder: \"Select values\",\n    formatValue: (vals, fieldDef, wgtDef, isForDisplay) => {\n      let valsLabels = vals.map(v => getTitleInListValues(fieldDef.fieldSettings.treeValues || fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, v));\n      return isForDisplay ? valsLabels.map(stringifyForDisplay) : vals.map(JSON.stringify);\n    },\n    sqlFormatValue: (vals, fieldDef, wgtDef, op, opDef) => {\n      return vals.map(v => SqlString.escape(v));\n    },\n    spelFormatValue: (vals, fieldDef, wgtDef, op, opDef) => {\n      const isCallable = opDef.spelOp && opDef.spelOp[0] == \"$\";\n      let res = spelEscape(vals); // inline list\n      if (isCallable) {\n        // `{1,2}.contains(1)` NOT works\n        // `{1,2}.?[true].contains(1)` works\n        res = spelFixList(res);\n      }\n      return res;\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  date: {\n    type: \"date\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD\",\n    useKeyboard: true,\n    valueLabel: \"Date\",\n    valuePlaceholder: \"Enter date\",\n    valueLabels: [\n      { label: \"Date from\", placeholder: \"Enter date from\" },\n      { label: \"Date to\", placeholder: \"Enter date to\" },\n    ],\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return SqlString.escape(dateVal.format(\"YYYY-MM-DD\"));\n    },\n    spelFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return `new java.text.SimpleDateFormat('yyyy-MM-dd').parse('${dateVal.format(\"YYYY-MM-DD\")}')`;\n    },\n    jsonLogic: (val, fieldDef, wgtDef) => moment(val, wgtDef.valueFormat).toDate(),\n    toJS: (val, fieldSettings) => {\n      const dateVal = moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: (val, fieldDef, wgtDef) => {\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  time: {\n    type: \"time\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    timeFormat: \"HH:mm\",\n    valueFormat: \"HH:mm:ss\",\n    use12Hours: false,\n    useKeyboard: true,\n    valueLabel: \"Time\",\n    valuePlaceholder: \"Enter time\",\n    valueLabels: [\n      { label: \"Time from\", placeholder: \"Enter time from\" },\n      { label: \"Time to\", placeholder: \"Enter time to\" },\n    ],\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return SqlString.escape(dateVal.format(\"HH:mm:ss\"));\n    },\n    spelFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return `T(java.time.LocalTime).parse('${dateVal.format(\"HH:mm:ss\")}')`;\n      //return `new java.text.SimpleDateFormat('HH:mm:ss').parse('${dateVal.format(\"HH:mm:ss\")}')`;\n    },\n    jsonLogic: (val, fieldDef, wgtDef) => {\n      // return seconds of day\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    toJS: (val, fieldSettings) => {\n      // return seconds of day\n      const dateVal = moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\") : undefined;\n    },\n    mongoFormatValue: (val, fieldDef, wgtDef) => {\n      // return seconds of day\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    elasticSearchFormatValue: function elasticSearchFormatValue(queryType, value, operator, fieldName) {\n      return {\n        script: {\n          script: {\n            source: \"doc[\".concat(fieldName, \"][0].getHour() >== params.min && doc[\").concat(fieldName, \"][0].getHour() <== params.max\"),\n            params: {\n              min: value[0],\n              max: value[1]\n            }\n          }\n        }\n      };\n    },\n  },\n  datetime: {\n    type: \"datetime\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    timeFormat: \"HH:mm\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD HH:mm:ss\",\n    use12Hours: false,\n    useKeyboard: true,\n    valueLabel: \"Datetime\",\n    valuePlaceholder: \"Enter datetime\",\n    valueLabels: [\n      { label: \"Datetime from\", placeholder: \"Enter datetime from\" },\n      { label: \"Datetime to\", placeholder: \"Enter datetime to\" },\n    ],\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat + \" \" + wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return SqlString.escape(dateVal.toDate());\n    },\n    spelFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return `new java.text.SimpleDateFormat('yyyy-MM-dd HH:mm:ss').parse('${dateVal.format(\"YYYY-MM-DD HH:mm:ss\")}')`;\n    },\n    jsonLogic: (val, fieldDef, wgtDef) => moment(val, wgtDef.valueFormat).toDate(),\n    toJS: (val, fieldSettings) => {\n      const dateVal = moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: (val, fieldDef, wgtDef) => {\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  boolean: {\n    type: \"boolean\",\n    jsType: \"boolean\",\n    valueSrc: \"value\",\n    labelYes: \"Yes\",\n    labelNo: \"No\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      return isForDisplay ? (val ? \"Yes\" : \"No\") : JSON.stringify(!!val);\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return SqlString.escape(val);\n    },\n    spelFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return spelEscape(val);\n    },\n    defaultValue: false,\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  field: {\n    valueSrc: \"field\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay, op, opDef, rightFieldDef) => {\n      return isForDisplay ? (rightFieldDef.label || val) : val;\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef, rightFieldDef) => {\n      return val;\n    },\n    spelFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return val;\n    },\n    valueLabel: \"Field to compare\",\n    valuePlaceholder: \"Select field to compare\",\n  },\n  func: {\n    valueSrc: \"func\",\n    valueLabel: \"Function\",\n    valuePlaceholder: \"Select function\",\n  },\n  case_value: {\n    valueSrc: \"value\",\n    type: \"case_value\",\n    spelFormatValue: (val) => {\n      return spelEscape(val === \"\" ? null : val);\n    },\n    spelImportValue: (val) => {\n      return [val.value, []];\n    }\n  }\n};\n\n//----------------------------  types\n\nconst types = {\n  text: {\n    defaultOperator: \"equal\",\n    mainWidget: \"text\",\n    widgets: {\n      text: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"like\",\n          \"not_like\",\n          \"starts_with\",\n          \"ends_with\",\n          \"proximity\",\n          \"is_empty\",\n          \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {},\n        opProps: {},\n      },\n      textarea: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"like\",\n          \"not_like\",\n          \"starts_with\",\n          \"ends_with\",\n          \"is_empty\",\n          \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {},\n        opProps: {},\n      },\n      field: {\n        operators: [\n          //unary ops (like `is_empty`) will be excluded anyway, see getWidgetsForFieldOp()\n          \"equal\",\n          \"not_equal\",\n          \"proximity\", //can exclude if you want\n        ],\n      }\n    },\n  },\n  number: {\n    defaultOperator: \"equal\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n      slider: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\"\n        ],\n      },\n    },\n  },\n  date: {\n    defaultOperator: \"equal\",\n    widgets: {\n      date: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\"\n        ]\n      }\n    },\n  },\n  time: {\n    defaultOperator: \"equal\",\n    widgets: {\n      time: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ]\n      }\n    },\n  },\n  datetime: {\n    defaultOperator: \"equal\",\n    widgets: {\n      datetime: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      }\n    },\n  },\n  select: {\n    mainWidget: \"select\",\n    defaultOperator: \"select_equals\",\n    widgets: {\n      select: {\n        operators: [\n          \"select_equals\",\n          \"select_not_equals\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n      multiselect: {\n        operators: [\n          \"select_any_in\",\n          \"select_not_any_in\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n    },\n  },\n  multiselect: {\n    defaultOperator: \"multiselect_equals\",\n    widgets: {\n      multiselect: {\n        operators: [\n          \"multiselect_contains\",\n          \"multiselect_not_contains\",\n          \"multiselect_equals\",\n          \"multiselect_not_equals\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ]\n      }\n    },\n  },\n  boolean: {\n    defaultOperator: \"equal\",\n    widgets: {\n      boolean: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {\n          //you can enable this if you don't use fields as value sources\n          // hideOperator: true,\n          // operatorInlineLabel: \"is\",\n        }\n      },\n      field: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n        ],\n      }\n    },\n  },\n  \"!group\": {\n    defaultOperator: \"some\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        widgetProps: {\n          min: 0\n        },\n        operators: [\n          // w/o operand\n          \"some\",\n          \"all\",\n          \"none\",\n\n          // w/ operand - count\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n        ],\n        opProps: {\n          equal: {\n            label: \"Count ==\"\n          },\n          not_equal: {\n            label: \"Count !=\"\n          },\n          less: {\n            label: \"Count <\"\n          },\n          less_or_equal: {\n            label: \"Count <=\"\n          },\n          greater: {\n            label: \"Count >\"\n          },\n          greater_or_equal: {\n            label: \"Count >=\"\n          },\n          between: {\n            label: \"Count between\"\n          },\n          not_between: {\n            label: \"Count not between\"\n          }\n        }\n      }\n    }\n  },\n  \"case_value\": {\n    mainWidget: \"case_value\",\n    widgets: {\n      case_value: {}\n    }\n  },\n};\n\n//----------------------------  settings\n\nconst settings = {\n  ...defaultSettings,\n\n  convertableWidgets: {\n    \"number\": [\"slider\", \"rangeslider\"],\n    \"slider\": [\"number\", \"rangeslider\"],\n    \"rangeslider\": [\"number\", \"slider\"],\n    \"text\": [\"textarea\"],\n    \"textarea\": [\"text\"]\n  },\n\n  formatSpelField: (field, parentField, parts, partsExt, fieldDefinition, config) => {\n    let fieldName = partsExt.map(({key, parent}, ind) => {\n      if (ind == 0) {\n        if (parent == \"[map]\")\n          return `#this[${spelEscape(key)}]`;\n        else if (parent == \"[class]\")\n          return key;\n        else\n          return key;\n      } else {\n        if (parent == \"map\" || parent == \"[map]\")\n          return `[${spelEscape(key)}]`;\n        else if (parent == \"class\" || parent == \"[class]\")\n          return `.${key}`;\n        else\n          return `.${key}`;\n      }\n    }).join(\"\");\n    if (fieldDefinition.isSpelVariable) {\n      fieldName = \"#\" + fieldName;\n    }\n    return fieldName;\n  },\n  sqlFormatReverse: (q) => {\n    if (q == undefined) return undefined;\n    return \"NOT(\" + q + \")\";\n  },\n  spelFormatReverse: (q) => {\n    if (q == undefined) return undefined;\n    return \"!(\" + q + \")\";\n  },\n  formatReverse: (q, operator, reversedOp, operatorDefinition, revOperatorDefinition, isForDisplay) => {\n    if (q == undefined) return undefined;\n    if (isForDisplay)\n      return \"NOT (\" + q + \")\";\n    else\n      return \"!(\" + q + \")\";\n  },\n  formatAggr: (whereStr, aggrField, operator, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay, aggrFieldDef) => {\n    const {labelForFormat, cardinality} = opDef;\n    if (cardinality == 0) {\n      const cond = whereStr ? ` HAVE ${whereStr}` : \"\";\n      return `${labelForFormat} OF ${aggrField}${cond}`;\n    } else if (cardinality == undefined || cardinality == 1) {\n      const cond = whereStr ? ` WHERE ${whereStr}` : \"\";\n      return `COUNT OF ${aggrField}${cond} ${labelForFormat} ${value}`;\n    } else if (cardinality == 2) {\n      const cond = whereStr ? ` WHERE ${whereStr}` : \"\";\n      let valFrom = value.first();\n      let valTo = value.get(1);\n      return `COUNT OF ${aggrField}${cond} ${labelForFormat} ${valFrom} AND ${valTo}`;\n    }\n  },\n  jsonLogic: {\n    groupVarKey: \"var\",\n    altVarKey: \"var\",\n    lockedOp: \"locked\"\n  },\n  \n  canCompareFieldWithField: (leftField, leftFieldConfig, rightField, rightFieldConfig) => {\n    //for type == 'select'/'multiselect' you can check listValues\n    return true;\n  },\n\n  // enable compare fields\n  valueSourcesInfo: {\n    value: {\n      label: \"Value\"\n    },\n    field: {\n      label: \"Field\",\n      widget: \"field\",\n    },\n    func: {\n      label: \"Function\",\n      widget: \"func\",\n    }\n  },\n\n};\n\n//----------------------------\n\nexport default {\n  conjunctions,\n  operators,\n  widgets,\n  types,\n  settings,\n};\n","export const ADD_GROUP = \"ADD_GROUP\";\nexport const ADD_CASE_GROUP = \"ADD_CASE_GROUP\";\nexport const REMOVE_GROUP = \"REMOVE_GROUP\";\nexport const SET_CONJUNCTION = \"SET_CONJUNCTION\";\nexport const SET_NOT = \"SET_NOT\";\nexport const ADD_RULE = \"ADD_RULE\";\nexport const REMOVE_RULE = \"REMOVE_RULE\";\nexport const SET_FIELD = \"SET_FIELD\";\nexport const SET_OPERATOR = \"SET_OPERATOR\";\nexport const SET_VALUE = \"SET_VALUE\";\nexport const SET_VALUE_SRC = \"SET_VALUE_SRC\";\nexport const SET_OPERATOR_OPTION = \"SET_OPERATOR_OPTION\";\nexport const SET_LOCK = \"SET_LOCK\";\n\nexport const SET_TREE = \"SET_TREE\";\n\nexport const MOVE_ITEM = \"MOVE_ITEM\";\n\nexport const PLACEMENT_AFTER = \"after\";\nexport const PLACEMENT_BEFORE = \"before\";\nexport const PLACEMENT_APPEND = \"append\";\nexport const PLACEMENT_PREPEND = \"prepend\";\n\nexport const SET_DRAG_PROGRESS = \"SET_DRAG_PROGRESS\";\nexport const SET_DRAG_START = \"SET_DRAG_START\";\nexport const SET_DRAG_END = \"SET_DRAG_END\";\n","import Immutable from \"immutable\";\nimport {\n  expandTreePath, expandTreeSubpath, getItemByPath, fixPathsInTree, \n  getTotalRulesCountInTree, fixEmptyGroupsInTree, isEmptyTree, hasChildren, removeIsLockedInTree\n} from \"../utils/treeUtils\";\nimport {\n  defaultRuleProperties, defaultGroupProperties, defaultOperator, \n  defaultOperatorOptions, defaultRoot, defaultItemProperties\n} from \"../utils/defaultUtils\";\nimport * as constants from \"./constants\";\nimport uuid from \"../utils/uuid\";\nimport {\n  getFuncConfig, getFieldConfig, getFieldWidgetConfig, getOperatorConfig\n} from \"../utils/configUtils\";\nimport {\n  getOperatorsForField, getFirstOperator, getWidgetForFieldOp,\n  getNewValueForFieldOp\n} from \"../utils/ruleUtils\";\nimport {deepEqual, defaultValue, applyToJS} from \"../utils/stuff\";\nimport {validateValue} from \"../utils/validation\";\nimport omit from \"lodash/omit\";\nimport mapValues from \"lodash/mapValues\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nconst addNewGroup = (state, path, type, groupUuid, properties, config, children = null, meta = {}) => {\n  const {shouldCreateEmptyGroup} = config.settings;\n  const groupPath = path.push(groupUuid);\n  const canAddNewRule = !shouldCreateEmptyGroup;\n  const isDefaultCase = !!meta?.isDefaultCase;\n\n  const origState = state;\n  state = addItem(state, path, type, groupUuid, defaultGroupProperties(config).merge(properties || {}), config, children);\n  if (state !== origState) {\n    if (!children && !isDefaultCase) {\n      state = state.setIn(expandTreePath(groupPath, \"children1\"), new Immutable.OrderedMap());\n\n      // Add one empty rule into new group\n      if (canAddNewRule) {\n        state = addItem(state, groupPath, \"rule\", uuid(), defaultRuleProperties(config), config);\n      }\n    }\n\n    state = fixPathsInTree(state);\n  }\n  \n  return state;\n};\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nconst removeGroup = (state, path, config) => {\n  state = removeItem(state, path);\n\n  const {canLeaveEmptyGroup} = config.settings;\n  const parentPath = path.slice(0, -1);\n  const isEmptyParentGroup = !hasChildren(state, parentPath);\n  if (isEmptyParentGroup && !canLeaveEmptyGroup) {\n    // check ancestors for emptiness (and delete 'em if empty)\n    state = fixEmptyGroupsInTree(state);\n    \n    if (isEmptyTree(state) && !canLeaveEmptyGroup) {\n      // if whole query is empty, add one empty rule to root\n      state = addItem(state, new Immutable.List(), \"rule\", uuid(), defaultRuleProperties(config), config);\n    }\n  }\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nconst removeRule = (state, path, config) => {\n  state = removeItem(state, path);\n\n  const {canLeaveEmptyGroup} = config.settings;\n  const parentPath = path.pop();\n  const parent = state.getIn(expandTreePath(parentPath));\n\n  const parentField = parent.getIn([\"properties\", \"field\"]);\n  const parentOperator = parent.getIn([\"properties\", \"operator\"]);\n  const parentValue = parent.getIn([\"properties\", \"value\", 0]);\n  const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n  const parentOperatorConfig = parentOperator ? getOperatorConfig(config, parentOperator, parentField) : null;\n  const hasGroupCountRule = parentField && parentOperator && parentOperatorConfig.cardinality != 0; // && parentValue != undefined;\n  \n  const isParentRuleGroup = parent.get(\"type\") == \"rule_group\";\n  const isEmptyParentGroup = !hasChildren(state, parentPath);\n  const canLeaveEmpty = isParentRuleGroup \n    ? hasGroupCountRule && parentFieldConfig.initialEmptyWhere\n    : canLeaveEmptyGroup;\n  \n  if (isEmptyParentGroup && !canLeaveEmpty) {\n    if (isParentRuleGroup) {\n      // deleted last rule from rule_group, so delete whole rule_group\n      state = state.deleteIn(expandTreePath(parentPath));\n    }\n\n    // check ancestors for emptiness (and delete 'em if empty)\n    state = fixEmptyGroupsInTree(state);\n\n    if (isEmptyTree(state) && !canLeaveEmptyGroup) {\n      // if whole query is empty, add one empty rule to root\n      state = addItem(state, new Immutable.List(), \"rule\", uuid(), defaultRuleProperties(config), config);\n    }\n  }\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {bool} not\n */\nconst setNot = (state, path, not) =>\n  state.setIn(expandTreePath(path, \"properties\", \"not\"), not);\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {bool} lock\n */\nconst setLock = (state, path, lock) =>\n  removeIsLockedInTree(state.setIn(expandTreePath(path, \"properties\", \"isLocked\"), lock));\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} conjunction\n */\nconst setConjunction = (state, path, conjunction) =>\n  state.setIn(expandTreePath(path, \"properties\", \"conjunction\"), conjunction);\n\n// convert children deeply from JS to Immutable\nconst _addChildren1 = (config, item, children) => {\n  if (children && Array.isArray(children)) {\n    item.children1 = new Immutable.OrderedMap(\n      children.reduce((map, it) => {\n        const id1 = uuid();\n        const it1 = {\n          ...it,\n          properties: defaultItemProperties(config, it).merge(it.properties || {}),\n          id: id1\n        };\n        _addChildren1(config, it1, it1.children1);\n        //todo: guarantee order\n        return {\n          ...map,\n          [id1]: new Immutable.Map(it1)\n        };\n      }, {})\n    );\n  }\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} type\n * @param {string} id\n * @param {Immutable.OrderedMap} properties\n * @param {object} config\n */\nconst addItem = (state, path, type, id, properties, config, children = null) => {\n  if (type == \"switch_group\")\n    throw new Error(\"Can't add switch_group programmatically\");\n  const { maxNumberOfCases, maxNumberOfRules, maxNesting } = config.settings;\n  const rootType = state.get(\"type\");\n  const isTernary = rootType == \"switch_group\";\n  const targetItem = state.getIn(expandTreePath(path));\n  const caseGroup = isTernary ? state.getIn(expandTreePath(path.take(2))) : null;\n  const childrenPath = expandTreePath(path, \"children1\");\n  const targetChildren = state.getIn(childrenPath);\n  const hasChildren = !!targetChildren && targetChildren.size;\n  const targetChildrenSize = hasChildren ? targetChildren.size : null;\n  let currentNumber, maxNumber;\n  if (type == \"case_group\") {\n    currentNumber = targetChildrenSize;\n    maxNumber = maxNumberOfCases;\n  } else if (type == \"group\") {\n    currentNumber = path.size;\n    maxNumber = maxNesting;\n  } else if (targetItem?.get(\"type\") == \"rule_group\") {\n    // don't restrict\n  } else {\n    currentNumber = isTernary ? getTotalRulesCountInTree(caseGroup) : getTotalRulesCountInTree(state);\n    maxNumber = maxNumberOfRules;\n  }\n  const canAdd = maxNumber && currentNumber ? (currentNumber < maxNumber) : true;\n  \n  const item = {type, id, properties};\n  _addChildren1(config, item, children);\n\n  const isLastDefaultCase = type == \"case_group\" && hasChildren && targetChildren.last().get(\"children1\") == null;\n\n  if (canAdd) {\n    const newChildren = new Immutable.OrderedMap({\n      [id]: new Immutable.Map(item)\n    });\n    if (!hasChildren) {\n      state = state.setIn(childrenPath, newChildren);\n    } else if (isLastDefaultCase) {\n      const last = targetChildren.last();\n      const newChildrenWithLast = new Immutable.OrderedMap({\n        [id]: new Immutable.Map(item),\n        [last.get(\"id\")]: last\n      });\n      state = state.deleteIn(expandTreePath(childrenPath, \"children1\", last.get(\"id\")));\n      state = state.mergeIn(childrenPath, newChildrenWithLast);\n    } else {\n      state = state.mergeIn(childrenPath, newChildren);\n    }\n    state = fixPathsInTree(state);\n  }\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n */\nconst removeItem = (state, path) => {\n  state = state.deleteIn(expandTreePath(path));\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} fromPath\n * @param {Immutable.List} toPath\n * @param {string} placement, see constants PLACEMENT_*: PLACEMENT_AFTER, PLACEMENT_BEFORE, PLACEMENT_APPEND, PLACEMENT_PREPEND\n * @param {object} config\n */\nconst moveItem = (state, fromPath, toPath, placement, config) => {\n  const from = getItemByPath(state, fromPath);\n  const sourcePath = fromPath.pop();\n  const source = fromPath.size > 1 ? getItemByPath(state, sourcePath) : null;\n  const sourceChildren = source ? source.get(\"children1\") : null;\n\n  const to = getItemByPath(state, toPath);\n  const targetPath = (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND) ? toPath : toPath.pop();\n  const target = (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND) \n    ? to\n    : toPath.size > 1 ? getItemByPath(state, targetPath) : null;\n  const targetChildren = target ? target.get(\"children1\") : null;\n\n  if (!source || !target || !from)\n    return state;\n\n  const isSameParent = (source.get(\"id\") == target.get(\"id\"));\n  const isSourceInsideTarget = targetPath.size < sourcePath.size \n        && deepEqual(targetPath.toArray(), sourcePath.toArray().slice(0, targetPath.size));\n  const isTargetInsideSource = targetPath.size > sourcePath.size \n        && deepEqual(sourcePath.toArray(), targetPath.toArray().slice(0, sourcePath.size));\n  let sourceSubpathFromTarget = null;\n  let targetSubpathFromSource = null;\n  if (isSourceInsideTarget) {\n    sourceSubpathFromTarget = Immutable.List(sourcePath.toArray().slice(targetPath.size));\n  } else if (isTargetInsideSource) {\n    targetSubpathFromSource = Immutable.List(targetPath.toArray().slice(sourcePath.size));\n  }\n\n  let newTargetChildren = targetChildren, newSourceChildren = sourceChildren;\n  if (!isTargetInsideSource)\n    newSourceChildren = newSourceChildren.delete(from.get(\"id\"));\n  if (isSameParent) {\n    newTargetChildren = newSourceChildren;\n  } else if (isSourceInsideTarget) {\n    newTargetChildren = newTargetChildren.updateIn(expandTreeSubpath(sourceSubpathFromTarget, \"children1\"), (_oldChildren) => newSourceChildren);\n  }\n\n  if (placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER) {\n    newTargetChildren = Immutable.OrderedMap().withMutations(r => {\n      for (let [itemId, item] of newTargetChildren.entries()) {\n        if (itemId == to.get(\"id\") && placement == constants.PLACEMENT_BEFORE) {\n          r.set(from.get(\"id\"), from);\n        }\n                \n        r.set(itemId, item);\n\n        if (itemId == to.get(\"id\") && placement == constants.PLACEMENT_AFTER) {\n          r.set(from.get(\"id\"), from);\n        }\n      }\n    });\n  } else if (placement == constants.PLACEMENT_APPEND) {\n    newTargetChildren = newTargetChildren.merge({[from.get(\"id\")]: from});\n  } else if (placement == constants.PLACEMENT_PREPEND) {\n    newTargetChildren = Immutable.OrderedMap({[from.get(\"id\")]: from}).merge(newTargetChildren);\n  }\n\n  if (isTargetInsideSource) {\n    newSourceChildren = newSourceChildren.updateIn(expandTreeSubpath(targetSubpathFromSource, \"children1\"), (_oldChildren) => newTargetChildren);\n    newSourceChildren = newSourceChildren.delete(from.get(\"id\"));\n  }\n\n  if (!isSameParent && !isSourceInsideTarget)\n    state = state.updateIn(expandTreePath(sourcePath, \"children1\"), (_oldChildren) => newSourceChildren);\n  if (!isTargetInsideSource)\n    state = state.updateIn(expandTreePath(targetPath, \"children1\"), (_oldChildren) => newTargetChildren);\n\n  state = fixPathsInTree(state);\n  return state;\n};\n\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} field\n */\nconst setField = (state, path, newField, config) => {\n  if (!newField)\n    return removeItem(state, path);\n\n  const {fieldSeparator, setOpOnChangeField, showErrorMessage} = config.settings;\n  if (Array.isArray(newField))\n    newField = newField.join(fieldSeparator);\n\n  const currentType = state.getIn(expandTreePath(path, \"type\"));\n  const currentProperties = state.getIn(expandTreePath(path, \"properties\"));\n  const wasRuleGroup = currentType == \"rule_group\";\n  const newFieldConfig = getFieldConfig(config, newField);\n  const isRuleGroup = newFieldConfig.type == \"!group\";\n  const isRuleGroupExt = isRuleGroup && newFieldConfig.mode == \"array\";\n  const isChangeToAnotherType = wasRuleGroup != isRuleGroup;\n  \n  const currentOperator = currentProperties.get(\"operator\");\n  const currentOperatorOptions = currentProperties.get(\"operatorOptions\");\n  const _currentField = currentProperties.get(\"field\");\n  const _currentValue = currentProperties.get(\"value\");\n  const _currentValueSrc = currentProperties.get(\"valueSrc\", new Immutable.List());\n  const _currentValueType = currentProperties.get(\"valueType\", new Immutable.List());\n\n  // If the newly selected field supports the same operator the rule currently\n  // uses, keep it selected.\n  const lastOp = newFieldConfig && newFieldConfig.operators.indexOf(currentOperator) !== -1 ? currentOperator : null;\n  let newOperator = null;\n  const availOps = getOperatorsForField(config, newField);\n  if (availOps && availOps.length == 1)\n    newOperator = availOps[0];\n  else if (availOps && availOps.length > 1) {\n    for (let strategy of setOpOnChangeField || []) {\n      if (strategy == \"keep\" && !isChangeToAnotherType)\n        newOperator = lastOp;\n      else if (strategy == \"default\")\n        newOperator = defaultOperator(config, newField, false);\n      else if (strategy == \"first\")\n        newOperator = getFirstOperator(config, newField);\n      if (newOperator) //found op for strategy\n        break;\n    }\n  }\n\n  if (!isRuleGroup && !newFieldConfig.operators) {\n    console.warn(`Type ${newFieldConfig.type} is not supported`);\n    return state;\n  }\n\n  if (wasRuleGroup && !isRuleGroup) {\n    state = state.setIn(expandTreePath(path, \"type\"), \"rule\");\n    state = state.deleteIn(expandTreePath(path, \"children1\"));\n    state = state.setIn(expandTreePath(path, \"properties\"), new Immutable.OrderedMap());\n  }\n\n  if (isRuleGroup) {\n    state = state.setIn(expandTreePath(path, \"type\"), \"rule_group\");\n    const {canReuseValue, newValue, newValueSrc, newValueType, operatorCardinality} = getNewValueForFieldOp(\n      config, config, currentProperties, newField, newOperator, \"field\", true\n    );\n    let groupProperties = defaultGroupProperties(config, newFieldConfig).merge({\n      field: newField,\n      mode: newFieldConfig.mode,\n    });\n    if (isRuleGroupExt) {\n      groupProperties = groupProperties.merge({\n        operator: newOperator,\n        value: newValue,\n        valueSrc: newValueSrc,\n        valueType: newValueType,\n      });\n    }\n    state = state.setIn(expandTreePath(path, \"children1\"), new Immutable.OrderedMap());\n    state = state.setIn(expandTreePath(path, \"properties\"), groupProperties);\n    if (newFieldConfig.initialEmptyWhere && operatorCardinality == 1) { // just `COUNT(grp) > 1` without `HAVING ..`\n      // no childeren\n    } else {\n      state = addItem(state, path, \"rule\", uuid(), defaultRuleProperties(config, newField), config);\n    }\n    state = fixPathsInTree(state);\n\n    return state;\n  }\n\n  return state.updateIn(expandTreePath(path, \"properties\"), (map) => map.withMutations((current) => {\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      config, config, current, newField, newOperator, \"field\", true\n    );\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError);\n    }\n    const newOperatorOptions = canReuseValue ? currentOperatorOptions : defaultOperatorOptions(config, newOperator, newField);\n\n    return current\n      .set(\"field\", newField)\n      .set(\"operator\", newOperator)\n      .set(\"operatorOptions\", newOperatorOptions)\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType)\n      .delete(\"asyncListValues\");\n  }));\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} operator\n */\nconst setOperator = (state, path, newOperator, config) => {\n  const {showErrorMessage} = config.settings;\n\n  const properties = state.getIn(expandTreePath(path, \"properties\"));\n  const children = state.getIn(expandTreePath(path, \"children1\"));\n  const currentField = properties.get(\"field\");\n  const fieldConfig = getFieldConfig(config, currentField);\n  const isRuleGroup = fieldConfig.type == \"!group\";\n  const operatorConfig = getOperatorConfig(config, newOperator, currentField);\n  const operatorCardinality = operatorConfig ? defaultValue(operatorConfig.cardinality, 1) : null;\n\n  state = state.updateIn(expandTreePath(path, \"properties\"), (map) => map.withMutations((current) => {\n    const currentField = current.get(\"field\");\n    const currentOperatorOptions = current.get(\"operatorOptions\");\n    const _currentValue = current.get(\"value\", new Immutable.List());\n    const _currentValueSrc = current.get(\"valueSrc\", new Immutable.List());\n    const _currentOperator = current.get(\"operator\");\n\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      config, config, current, currentField, newOperator, \"operator\", true\n    );\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError);\n    }\n    const newOperatorOptions = canReuseValue ? currentOperatorOptions : defaultOperatorOptions(config, newOperator, currentField);\n\n    if (!canReuseValue) {\n      current = current\n        .delete(\"asyncListValues\");\n    }\n\n    return current\n      .set(\"operator\", newOperator)\n      .set(\"operatorOptions\", newOperatorOptions)\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType);\n  }));\n\n  if (isRuleGroup) {\n    if (operatorCardinality == 0 && children.size == 0) {\n      state = addItem(state, path, \"rule\", uuid(), defaultRuleProperties(config, currentField), config);\n    }\n  }\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} value\n * @param {string} valueType\n * @param {*} asyncListValues\n * @param {boolean} __isInternal\n */\nconst setValue = (state, path, delta, value, valueType, config, asyncListValues, __isInternal) => {\n  const {fieldSeparator, showErrorMessage} = config.settings;\n  let isInternalValueChange;\n  const valueSrc = state.getIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\")) || null;\n  if (valueSrc === \"field\" && Array.isArray(value))\n    value = value.join(fieldSeparator);\n\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? defaultValue(operatorConfig.cardinality, 1) : null;\n\n  const isEndValue = false;\n  const calculatedValueType = valueType || calculateValueType(value, valueSrc, config);\n  const canFix = false;\n  const [validateError, fixedValue] = validateValue(\n    config, field, field, operator, value, calculatedValueType, valueSrc, asyncListValues, canFix, isEndValue\n  );\n  const isValid = !validateError;\n  if (fixedValue !== value) {\n    // eg, get exact value from listValues (not string)\n    value = fixedValue;\n  }\n\n  // Additional validation for range values\n  if (showErrorMessage) {\n    const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDefinition = getFieldWidgetConfig(config, field, operator, w, valueSrc);\n    const valueSrcs = Array.from({length: operatorCardinality}, (_, i) => (state.getIn(expandTreePath(path, \"properties\", \"valueSrc\", i + \"\")) || null));\n        \n    if (operatorConfig && operatorConfig.validateValues && valueSrcs.filter(vs => vs == \"value\" || vs == null).length == operatorCardinality) {\n      const values = Array.from({length: operatorCardinality}, (_, i) => (i == delta ? value : state.getIn(expandTreePath(path, \"properties\", \"value\", i + \"\")) || null));\n      const jsValues = fieldWidgetDefinition && fieldWidgetDefinition.toJS ? values.map(v => fieldWidgetDefinition.toJS(v, fieldWidgetDefinition)) : values;\n      const rangeValidateError = operatorConfig.validateValues(jsValues);\n\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality), rangeValidateError);\n    }\n  }\n  \n  const lastValueArr = state.getIn(expandTreePath(path, \"properties\", \"value\"));\n  if (!lastValueArr) {\n    state = state\n      .setIn(expandTreePath(path, \"properties\", \"value\"), new Immutable.List(new Array(operatorCardinality)))\n      .setIn(expandTreePath(path, \"properties\", \"valueType\"), new Immutable.List(new Array(operatorCardinality)))\n      .setIn(expandTreePath(path, \"properties\", \"valueError\"), new Immutable.List(new Array(operatorCardinality)));\n  }\n\n  const lastValue = state.getIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"));\n  const lastError = state.getIn(expandTreePath(path, \"properties\", \"valueError\", delta));\n  const isLastEmpty = lastValue == undefined;\n  const isLastError = !!lastError;\n  if (isValid || showErrorMessage) {\n    state = state.deleteIn(expandTreePath(path, \"properties\", \"asyncListValues\"));\n    // set only good value\n    if (typeof value === \"undefined\") {\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), undefined);\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), null);\n    } else {\n      if (asyncListValues) {\n        state = state.setIn(expandTreePath(path, \"properties\", \"asyncListValues\"), asyncListValues);\n      }\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), value);\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), calculatedValueType);\n      isInternalValueChange = __isInternal && !isLastEmpty && !isLastError;\n    }\n  }\n  if (showErrorMessage) {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), validateError);\n  }\n  if (__isInternal && (isValid && isLastError || !isValid && !isLastError)) {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), validateError);\n    isInternalValueChange = false;\n  }\n  \n  return {tree: state, isInternalValueChange};\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nconst setValueSrc = (state, path, delta, srcKey, config) => {\n  const {showErrorMessage} = config.settings;\n\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n\n  state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), undefined);\n  state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), null);\n  state = state.deleteIn(expandTreePath(path, \"properties\", \"asyncListValues\"));\n\n  if (showErrorMessage) {\n    // clear value error\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), null);\n\n    // if current operator is range, clear possible range error\n    const operatorConfig = getOperatorConfig(config, operator, field);\n    const operatorCardinality = operator ? defaultValue(operatorConfig.cardinality, 1) : null;\n    if (operatorConfig.validateValues) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality), null);\n    }\n  }\n  \n  // set valueSrc\n  if (typeof srcKey === \"undefined\") {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\"), null);\n  } else {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\"), srcKey);\n  }\n\n  // maybe set default value\n  if (srcKey) {\n    const properties = state.getIn(expandTreePath(path, \"properties\"));\n    // this call should return canReuseValue = false and provide default value\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      config, config, properties, field, operator, \"valueSrc\", true\n    );\n    if (!canReuseValue && newValueSrc.get(delta) == srcKey) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), newValue.get(delta));\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), newValueType.get(delta));\n    }\n  }\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} name\n * @param {*} value\n */\nconst setOperatorOption = (state, path, name, value) => {\n  return state.setIn(expandTreePath(path, \"properties\", \"operatorOptions\", name), value);\n};\n\n/**\n * @param {Immutable.Map} state\n */\nconst checkEmptyGroups = (state, config) => {\n  const {canLeaveEmptyGroup} = config.settings;\n  if (!canLeaveEmptyGroup) {\n    state = fixEmptyGroupsInTree(state);\n  }\n  return state;\n};\n\n\n/**\n * \n */\nconst calculateValueType = (value, valueSrc, config) => {\n  let calculatedValueType = null;\n  if (value) {\n    if (valueSrc === \"field\") {\n      const fieldConfig = getFieldConfig(config, value);\n      if (fieldConfig) {\n        calculatedValueType = fieldConfig.type;\n      }\n    } else if (valueSrc === \"func\") {\n      const funcKey = value.get(\"func\");\n      if (funcKey) {\n        const funcConfig = getFuncConfig(config, funcKey);\n        if (funcConfig) {\n          calculatedValueType = funcConfig.returnType;\n        }\n      }\n    }\n  }\n  return calculatedValueType;\n};\n\nconst getField = (state, path) => {\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  return field;\n};\n\nconst emptyDrag = {\n  dragging: {\n    id: null,\n    x: null,\n    y: null,\n    w: null,\n    h: null\n  },\n  mousePos: {},\n  dragStart: {\n    id: null,\n  },\n};\n\nconst getActionMeta = (action, state) => {\n  if (!action || !action.type)\n    return null;\n  const actionKeysToOmit = [\n    \"config\", \"asyncListValues\", \"__isInternal\"\n  ];\n  const actionTypesToIgnore = [\n    constants.SET_TREE,\n    constants.SET_DRAG_START,\n    constants.SET_DRAG_PROGRESS,\n    constants.SET_DRAG_END,\n  ];\n  let meta = mapValues(omit(action, actionKeysToOmit), applyToJS);\n  let affectedField = action.path && getField(state.tree, action.path) || action.field;\n  if (affectedField)\n    meta.affectedField = affectedField;\n  if (actionTypesToIgnore.includes(action.type) || action.type.indexOf(\"@@redux\") == 0)\n    meta = null;\n  return meta;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {object} action\n */\nexport default (config, tree, getMemoizedTree, setLastTree) => {\n  const emptyTree = defaultRoot(config);\n  const initTree = tree || emptyTree;\n  const emptyState = {\n    tree: initTree, \n    ...emptyDrag\n  };\n    \n  return (state = emptyState, action) => {\n    const unset = {__isInternalValueChange: undefined, __lastAction: undefined};\n    let set = {};\n    let actionMeta = getActionMeta(action, state);\n\n    switch (action?.type) {\n    case constants.SET_TREE: {\n      const validatedTree = getMemoizedTree(action.config, action.tree);\n      set.tree = validatedTree;\n      break;\n    }\n\n    case constants.ADD_CASE_GROUP: {\n      set.tree = addNewGroup(state.tree, action.path, \"case_group\", action.id, action.properties, action.config,  action.children, action.meta);\n      break;\n    }\n\n    case constants.ADD_GROUP: {\n      set.tree = addNewGroup(state.tree, action.path, \"group\", action.id, action.properties, action.config,  action.children, action.meta);\n      break;\n    }\n\n    case constants.REMOVE_GROUP: {\n      set.tree = removeGroup(state.tree, action.path, action.config);\n      break;\n    }\n\n    case constants.ADD_RULE: {\n      set.tree = addItem(state.tree, action.path, action.ruleType, action.id, action.properties, action.config, action.children);\n      break;\n    }\n\n    case constants.REMOVE_RULE: {\n      set.tree = removeRule(state.tree, action.path, action.config);\n      break;\n    }\n\n    case constants.SET_CONJUNCTION: {\n      set.tree = setConjunction(state.tree, action.path, action.conjunction);\n      break;\n    }\n\n    case constants.SET_NOT: {\n      set.tree = setNot(state.tree, action.path, action.not);\n      break;\n    }\n\n    case constants.SET_FIELD: {\n      set.tree = setField(state.tree, action.path, action.field, action.config);\n      break;\n    }\n\n    case constants.SET_LOCK: {\n      set.tree = setLock(state.tree, action.path, action.lock);\n      break;\n    }\n\n    case constants.SET_OPERATOR: {\n      set.tree = setOperator(state.tree, action.path, action.operator, action.config);\n      break;\n    }\n\n    case constants.SET_VALUE: {\n      const {tree, isInternalValueChange} = setValue(\n        state.tree, action.path, action.delta, action.value, action.valueType, action.config, action.asyncListValues, action.__isInternal\n      );\n      set.__isInternalValueChange = isInternalValueChange;\n      set.tree = tree;\n      break;\n    }\n\n    case constants.SET_VALUE_SRC: {\n      set.tree = setValueSrc(state.tree, action.path, action.delta, action.srcKey, action.config);\n      break;\n    }\n\n    case constants.SET_OPERATOR_OPTION: {\n      set.tree = setOperatorOption(state.tree, action.path, action.name, action.value);\n      break;\n    }\n\n    case constants.MOVE_ITEM: {\n      set.tree = moveItem(state.tree, action.fromPath, action.toPath, action.placement, action.config);\n      break;\n    }\n\n    case constants.SET_DRAG_START: {\n      set.dragStart = action.dragStart;\n      set.dragging = action.dragging;\n      set.mousePos = action.mousePos;\n      break;\n    }\n\n    case constants.SET_DRAG_PROGRESS: {\n      set.mousePos = action.mousePos;\n      set.dragging = action.dragging;\n      break;\n    }\n\n    case constants.SET_DRAG_END: {\n      set.tree = checkEmptyGroups(state.tree, config);\n      set = { ...set, ...emptyDrag };\n      break;\n    }\n\n    default: {\n      break;\n    }\n    }\n\n    if (actionMeta) {\n      set.__lastAction = actionMeta;\n    }\n\n    if (setLastTree && set.tree && state.tree) {\n      setLastTree(state.tree);\n    }\n    \n    return {...state, ...unset, ...set};\n  };\n\n};\n","import Immutable from \"immutable\";\nimport {toImmutableList} from \"../utils/stuff\";\nimport * as constants from \"../stores/constants\";\nimport { defaultRuleProperties, defaultGroupProperties } from \"../utils/defaultUtils\";\nimport uuid from \"../utils/uuid\";\n\n\n/**\n * @param {object} config\n * @param {Immutable.Map} tree\n */\nexport const setTree = (config, tree) => ({\n  type: constants.SET_TREE,\n  tree: tree,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addRule = (config, path, properties, ruleType = \"rule\", children = null) => ({\n  type: constants.ADD_RULE,\n  ruleType: ruleType,\n  children: children,\n  path: toImmutableList(path),\n  id: uuid(),\n  properties: defaultRuleProperties(config).merge(properties || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nexport const removeRule = (config, path) => ({\n  type: constants.REMOVE_RULE,\n  path: toImmutableList(path),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addDefaultCaseGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_CASE_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(properties || {}),\n  config: config,\n  meta: {\n    isDefaultCase: true\n  }\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addCaseGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_CASE_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(properties || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(properties || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nexport const removeGroup = (config, path) => ({\n  type: constants.REMOVE_GROUP,\n  path: toImmutableList(path),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Array} fromPath\n * @param {Array} toPath\n * @param {String} placement, see constants PLACEMENT_*\n */\nexport const moveItem = (config, fromPath, toPath, placement) => ({\n  type: constants.MOVE_ITEM,\n  fromPath: toImmutableList(fromPath),\n  toPath: toImmutableList(toPath),\n  placement: placement,\n  config: config,\n});\n","import * as constants from \"../stores/constants\";\nimport {toImmutableList} from \"../utils/stuff\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} conjunction\n */\nexport const setConjunction = (config, path, conjunction) => ({\n  type: constants.SET_CONJUNCTION,\n  path: toImmutableList(path),\n  conjunction: conjunction\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {bool} not\n */\nexport const setNot = (config, path, not) => ({\n  type: constants.SET_NOT,\n  path: toImmutableList(path),\n  not: not\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {bool} lock\n */\nexport const setLock = (config, path, lock) => ({\n  type: constants.SET_LOCK,\n  path: toImmutableList(path),\n  lock: lock\n});","import * as constants from \"../stores/constants\";\nimport {toImmutableList} from \"../utils/stuff\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} field\n */\nexport const setField = (config, path, field) => ({\n  type: constants.SET_FIELD,\n  path: toImmutableList(path),\n  field: field,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} operator\n */\nexport const setOperator = (config, path, operator) => ({\n  type: constants.SET_OPERATOR,\n  path: toImmutableList(path),\n  operator: operator,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} value\n * @param {string} valueType\n * @param {*} asyncListValues\n * @param {boolean} __isInternal\n */\nexport const setValue = (config, path, delta, value, valueType, asyncListValues, __isInternal) => ({\n  type: constants.SET_VALUE,\n  path: toImmutableList(path),\n  delta: delta,\n  value: value,\n  valueType: valueType,\n  asyncListValues: asyncListValues,\n  config: config,\n  __isInternal: __isInternal\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nexport const setValueSrc = (config, path, delta, srcKey) => ({\n  type: constants.SET_VALUE_SRC,\n  path: toImmutableList(path),\n  delta: delta,\n  srcKey: srcKey,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} name\n * @param {*} value\n */\nexport const setOperatorOption = (config, path, name, value) => ({\n  type: constants.SET_OPERATOR_OPTION,\n  path: toImmutableList(path),\n  name: name,\n  value: value,\n  config: config\n});\n","import * as Export from \"./export\";\nimport * as Import from \"./import\";\nimport * as BasicUtils from \"./utils\";\nimport * as BasicFuncs from \"./config/funcs\";\nimport CoreConfig from \"./config\";\nimport TreeStore from \"./stores/tree\";\nimport * as TreeActions from \"./actions\";\n\nconst Utils = {...BasicUtils, ...Export, ...Import};\n\nexport {Utils, Export, Import, BasicFuncs, CoreConfig, TreeStore, TreeActions};\n","import React from \"react\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport omit from \"lodash/omit\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, placeholder, customProps}) => {\n  const renderOptions = () =>\n    mapListValues(listValues, ({title, value}) => {\n      return <MenuItem key={value} value={value}>{title}</MenuItem>;\n    });\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValue(e.target.value);\n  };\n\n  const renderValue = (selectedValue) => {\n    if (!readonly && selectedValue == null)\n      return placeholder;\n    return getListValueTitle(selectedValue);\n  };\n\n  const getListValueTitle = (selectedValue) => \n    mapListValues(listValues, ({title, value}) => \n      (value === selectedValue ? title : null)\n    )\n      .filter(v => v !== null)\n      .shift();\n  \n  const hasValue = value != null;\n\n  return (\n    <FormControl>\n      <Select\n        autoWidth\n        displayEmpty\n        label={!readonly ? placeholder : \"\"}\n        onChange={onChange}\n        value={hasValue ? value : \"\"}\n        disabled={readonly}\n        readOnly={readonly}\n        renderValue={renderValue}\n        {...omit(customProps, [\"showSearch\", \"input\"])}\n      >\n        {renderOptions()}\n      </Select>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport omit from \"lodash/omit\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, placeholder, customProps}) => {\n  const renderOptions = (selectedValues) => \n    mapListValues(listValues, ({title, value}) => {\n      return (\n        <MenuItem key={value} value={value}>\n          <Checkbox checked={selectedValues.indexOf(value) > -1} />\n          <ListItemText primary={title} />\n        </MenuItem>\n      );\n    });\n\n  const renderValue = (selectedValues) => {\n    if (!readonly && !selectedValues.length)\n      return placeholder;\n    const selectedTitles = mapListValues(listValues, ({title, value}) => (\n      selectedValues.indexOf(value) > -1 ? title : null\n    )).filter(v => v !== null);\n    return selectedTitles.join(\", \");\n  };\n\n  const hasValue = value != null && value.length > 0;\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValue(e.target.value);\n  };\n\n  return (\n    <FormControl>\n      <Select multiple\n        autoWidth\n        displayEmpty\n        label={!readonly ? placeholder : \"\"}\n        onChange={onChange}\n        value={hasValue ? value : []}\n        disabled={readonly}\n        readOnly={readonly}\n        renderValue={renderValue}\n        {...omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])}\n      >\n        {renderOptions(hasValue ? value : [])}\n      </Select>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport omit from \"lodash/omit\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Autocomplete, { createFilterOptions } from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport { Hooks } from \"@react-awesome-query-builder/ui\";\nconst { useListValuesAutocomplete } = Hooks;\n\nconst nonCheckedIcon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\nconst defaultFilterOptions = createFilterOptions();\nconst emptyArray = [];\n\nexport default (props) => {\n  const {\n    allowCustomValues, multiple,\n    value: selectedValue, customProps, readonly, config, groupBy, filterOptionsConfig\n  } = props;\n  const filterOptionsFn = filterOptionsConfig ? createFilterOptions(filterOptionsConfig) : defaultFilterOptions;\n\n  // hook\n  const {\n    open,\n    onOpen,\n    onClose,\n    onChange,\n    onInputChange,\n    inputValue,\n    options,\n    isInitialLoading,\n    isLoading,\n    aPlaceholder,\n    extendOptions,\n    getOptionSelected,\n    getOptionDisabled,\n    getOptionLabel,\n  } = useListValuesAutocomplete(props, {\n    debounceTimeout: 100,\n    multiple\n  });\n\n  // setings\n  const {defaultSelectWidth, defaultSearchWidth} = config.settings;\n  const {width, showCheckboxes, ...rest} = customProps || {};\n  let customInputProps = rest.input || {};\n  const inputWidth = customInputProps.width || defaultSearchWidth;\n  customInputProps = omit(customInputProps, [\"width\"]);\n  const customAutocompleteProps = omit(rest, [\"showSearch\", \"showCheckboxes\"]);\n\n  const fullWidth = true;\n  const minWidth = width || defaultSelectWidth;\n  const style = {\n    width: (multiple ? undefined : minWidth),\n    minWidth: minWidth\n  };\n  const placeholder = !readonly ? aPlaceholder : \"\";\n  const hasValue = selectedValue != null;\n  // should be simple value to prevent re-render!s\n  const value = hasValue ? selectedValue : (multiple ? emptyArray : null);\n  \n  const filterOptions = (options, params) => {\n    const filtered = filterOptionsFn(options, params);\n    const extended = extendOptions(filtered);\n    return extended;\n  };\n\n  // styles\n  const useStyles = makeStyles((theme) => ({\n    // fix too small width\n    input: {\n      minWidth: inputWidth + \" !important\",\n    }\n  }));\n\n  const useStylesChip = makeStyles((theme) => ({\n    // fix height\n    root: {\n      height: \"auto\"\n    },\n    label: {\n      marginTop: \"3px\",\n      marginBottom: \"3px\",\n    }\n  }));\n\n  const classesChip = useStylesChip();\n  const classes = useStyles();\n\n  // render\n  const renderInput = (params) => {\n    return (\n      <TextField \n        {...params} \n        InputProps={{\n          ...params.InputProps,\n          readOnly: readonly,\n          endAdornment: (\n            <React.Fragment>\n              {isLoading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n              {params.InputProps.endAdornment}\n            </React.Fragment>\n          ),\n        }}\n        disabled={readonly}\n        placeholder={placeholder}\n        //onChange={onInputChange}\n        {...customInputProps}\n      />\n    );\n  };\n\n  const renderTags = (value, getTagProps) => value.map((option, index) => {\n    return <Chip\n      key={index}\n      classes={classesChip}\n      label={getOptionLabel(option)}\n      {...getTagProps({ index })}\n    />;\n  });\n\n  const renderOption = (option, { selected }) => {\n    if (option.specialValue) {\n      return <React.Fragment>{option.renderTitle || option.title}</React.Fragment>;\n    } else if (multiple && showCheckboxes != false) {\n      return <React.Fragment>\n        <Checkbox\n          icon={nonCheckedIcon}\n          checkedIcon={checkedIcon}\n          style={{ marginRight: 8 }}\n          checked={selected}\n        />\n        {option.title}\n      </React.Fragment>;\n    } else {\n      return <React.Fragment>{option.renderTitle || option.title}</React.Fragment>;\n    }\n  };\n\n  return (\n    <FormControl fullWidth={fullWidth}>\n      <Autocomplete\n        disableCloseOnSelect={multiple}\n        fullWidth={fullWidth}\n        multiple={multiple}\n        style={style}\n        classes={classes}\n        freeSolo={allowCustomValues}\n        loading={isInitialLoading}\n        open={open}\n        onOpen={onOpen}\n        onClose={onClose}\n        inputValue={inputValue}\n        onInputChange={onInputChange}\n        label={placeholder}\n        onChange={onChange}\n        value={value}\n        getOptionSelected={getOptionSelected}\n        disabled={readonly}\n        readOnly={readonly}\n        options={options}\n        groupBy={groupBy}\n        getOptionLabel={getOptionLabel}\n        getOptionDisabled={getOptionDisabled}\n        renderInput={renderInput}\n        renderTags={renderTags}\n        renderOption={renderOption}\n        filterOptions={filterOptions}\n        {...customAutocompleteProps}\n      ></Autocomplete>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport MaterialAutocomplete from \"../value/MaterialAutocomplete\";\n\nconst itemsToListValues = (items, level = 0) => (\n  items.map(item => {\n    const {items, path, label, disabled, grouplabel} = item;\n    const prefix = \"\\u00A0\\u00A0\".repeat(level);\n    if (items) {\n      return itemsToListValues(items, level+1);\n    } else {\n      return {\n        title: label,\n        renderTitle: prefix+label,\n        value: path,\n        disabled,\n        groupTitle: level > 0 ? prefix+grouplabel : null,\n      };\n    }\n  }).flat(Infinity)\n);\n\nconst filterOptionsConfig = {\n  stringify: (option) => {\n    const keysForFilter = [\"title\", \"value\", \"grouplabel\", \"label\"];\n    const valueForFilter = keysForFilter\n      .map(k => (typeof option[k] == \"string\" ? option[k] : \"\"))\n      .join(\"\\0\");\n    return valueForFilter;\n  }\n};\n\nconst fieldAdapter = ({items, selectedKey, setField, ...rest}) => {\n  const listValues = itemsToListValues(items);\n  const groupBy = (option) => option.groupTitle;\n  const value = selectedKey;\n  const setValue = (value, _asyncValues) => {\n    if (!value) return undefined;\n    return setField(value);\n  };\n\n  return {\n    ...rest,\n    listValues,\n    setValue,\n    groupBy,\n    filterOptionsConfig,\n    allowCustomValues: false,\n    multiple: false,\n    value,\n  };\n};\n\nexport default (props) => {\n  return <MaterialAutocomplete  {...fieldAdapter(props)} />;\n};\n","import React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ExpandMoreSharpIcon from \"@material-ui/icons/ExpandMoreSharp\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(1),\n  },\n}));\n\nexport default ({ valueSources, valueSrc, title, setValueSrc, readonly}) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const classes = useStyles();\n\n\n  const handleOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const toggleOpenClose = (event) => {\n    anchorEl ? handleClose() : handleOpen(event);\n  };\n\n  const handleChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValueSrc(e.target.value);\n    handleClose();\n  };\n\n  const renderOptions = (valueSources) => (\n    valueSources.map(([srcKey, info]) => (\n      <FormControlLabel \n        key={srcKey} \n        value={srcKey} \n        checked={valueSrc == srcKey || !valueSrc && srcKey == \"value\"} \n        control={<Radio />} \n        label={info.label}\n      />\n    ))\n  );\n\n  const open = Boolean(anchorEl);\n\n  return (\n    <div>\n      <IconButton size=\"small\" onClick={toggleOpenClose}>\n        <ExpandMoreSharpIcon />\n      </IconButton>\n    \n      <Popover    \n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"left\",\n        }}\n        onClose={handleClose}\n        classes={{\n          paper: classes.paper,\n        }}\n        disablePortal\n      >\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">{title}</FormLabel>\n          <RadioGroup value={valueSrc || \"value\"} onChange={handleChange}>\n            {renderOptions(valueSources)}\n          </RadioGroup>\n        </FormControl>\n      </Popover>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { ThemeProvider, createTheme } from \"@material-ui/core/styles\";\nimport { ConfirmProvider, useConfirm } from \"material-ui-confirm\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\n\n\n// value widgets\nimport MaterialTextWidget from \"./value/MaterialText\";\nimport MaterialTextAreaWidget from \"./value/MaterialTextArea\";\nimport MaterialDateWidget from \"./value/MaterialDate\";\nimport MaterialDateTimeWidget from \"./value/MaterialDateTime\";\nimport MaterialTimeWidget from \"./value/MaterialTime\";\nimport MaterialSelectWidget from \"./value/MaterialSelect\";\nimport MaterialNumberWidget from \"./value/MaterialNumber\";\nimport MaterialSliderWidget from \"./value/MaterialSlider\";\nimport MaterialRangeWidget from \"./value/MaterialRange\";\nimport MaterialBooleanWidget from \"./value/MaterialBoolean\";\nimport MaterialMultiSelectWidget from \"./value/MaterialMultiSelect\";\nimport MaterialAutocompleteWidget from \"./value/MaterialAutocomplete\";\n\n// field select widgets\nimport MaterialFieldSelect from \"./core/MaterialFieldSelect\";\nimport MaterialFieldAutocomplete from \"./core/MaterialFieldAutocomplete\";\n\n// core components\nimport MaterialButton from \"./core/MaterialButton\";\nimport MaterialButtonGroup from \"./core/MaterialButtonGroup\";\nimport MaterialConjs from \"./core/MaterialConjs\";\nimport MaterialSwitch from \"./core/MaterialSwitch\";\nimport MaterialValueSources from \"./core/MaterialValueSources\";\nimport MaterialConfirm from \"./core/MaterialConfirm\";\n\n// provider\nconst MaterialProvider = ({config, children}) => {\n  const settingsTheme = config.settings.theme || {};\n  const settingsLocale = config.settings.locale || {};\n  const themeConfig = settingsTheme.material;\n  const locale = settingsLocale.material;\n  const useTheme = themeConfig || locale;\n  const theme = useTheme ? createTheme(themeConfig, locale) : null;\n\n  const base = (<div className=\"mui\">{children}</div>);\n  const withProviders = (\n    <MuiPickersUtilsProvider utils={MomentUtils}>\n      <ConfirmProvider>\n        {base}\n      </ConfirmProvider>\n    </MuiPickersUtilsProvider>\n  );\n  const withTheme = theme ? (\n    <ThemeProvider theme={theme}>\n      {withProviders}\n    </ThemeProvider>\n  ) : withProviders;\n\n  return withTheme;\n};\n\n\nexport default {\n  MaterialTextWidget,\n  MaterialTextAreaWidget,\n  MaterialDateWidget,\n  MaterialDateTimeWidget,\n  MaterialTimeWidget,\n  MaterialSelectWidget,\n  MaterialNumberWidget,\n  MaterialSliderWidget,\n  MaterialRangeWidget,\n  MaterialBooleanWidget,\n  MaterialMultiSelectWidget,\n  MaterialAutocompleteWidget,\n\n  MaterialFieldSelect,\n  MaterialFieldAutocomplete,\n\n  MaterialButton,\n  MaterialButtonGroup,\n  MaterialConjs,\n  MaterialSwitch,\n  MaterialValueSources,\n  MaterialConfirm,\n  MaterialUseConfirm: useConfirm,\n\n  MaterialProvider,\n};\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, customProps, maxLength} = props;\n\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n\n  const textValue = value || \"\";\n\n  return (\n    <FormControl>\n      <TextField \n        value={textValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          maxLength: maxLength,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, customProps, maxLength, maxRows, fullWidth} = props;\n  const {defaultMaxRows} = config.settings;\n\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  \n  const textValue = value || \"\";\n\n  return (\n    <FormControl fullWidth={fullWidth}>\n      <TextField \n        fullWidth={fullWidth}\n        maxRows={maxRows || defaultMaxRows}\n        multiline={true}\n        value={textValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          maxLength: maxLength,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport { KeyboardDatePicker, DatePicker } from \"@material-ui/pickers\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, readonly, customProps, dateFormat, valueFormat, placeholder, useKeyboard} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const Picker = useKeyboard ? KeyboardDatePicker : DatePicker;\n\n  return (\n    <FormControl>\n      <Picker\n        readOnly={readonly}\n        disabled={readonly}\n        placeholder={!readonly ? placeholder : \"\"}\n        format={dateFormat}\n        value={value || null}\n        onChange={handleChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};","import React from \"react\";\nimport { DateTimePicker, KeyboardDateTimePicker } from \"@material-ui/pickers\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, use12Hours, readonly, placeholder, dateFormat, timeFormat, valueFormat, customProps, useKeyboard} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const Picker = useKeyboard ? KeyboardDateTimePicker : DateTimePicker;\n  const dateTimeFormat = dateFormat + \" \" + timeFormat;\n  \n  return (\n    <FormControl>\n      <Picker\n        readOnly={readonly}\n        disabled={readonly}\n        ampm={!!use12Hours}\n        placeholder={!readonly ? placeholder : \"\"}\n        format={dateTimeFormat}\n        value={value || null}\n        onChange={handleChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport { TimePicker, KeyboardTimePicker } from \"@material-ui/pickers\";\nimport moment from \"moment\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, use12Hours, readonly, placeholder, timeFormat, valueFormat, customProps, useKeyboard} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const Picker = useKeyboard ? KeyboardTimePicker : TimePicker;\n  const hasSeconds = timeFormat.indexOf(\":ss\") != -1;\n  const timeValue = value ? moment(value, timeFormat) : null;\n\n  return (\n    <FormControl>\n      <Picker\n        readOnly={readonly}\n        disabled={readonly}\n        ampm={!!use12Hours}\n        placeholder={!readonly ? placeholder : \"\"}\n        format={timeFormat}\n        value={timeValue || null}\n        onChange={handleChange}\n        views={hasSeconds ? [\"hours\", \"minutes\", \"seconds\"] : [\"hours\", \"minutes\"]}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps} = props;\n  \n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n\n  const numberValue = value == undefined ? \"\" : value;\n  \n  return (\n    <FormControl>\n      <TextField \n        type=\"number\"\n        value={numberValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          min: min,\n          max: max,\n          step: step,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Slider from \"@material-ui/core/Slider\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {config, placeholder, customProps, value, setValue, min, max, step, marks, readonly} = props;\n  const {defaultSliderWidth} = config.settings;\n\n  const handleSliderChange = (_e, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleInputChange = (e) => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n\n  const handleInputBlur = () => {\n    // TIP: Fix if typed value out of range in input\n    if (value < min) {\n      setValue(min);\n    } else if (value > max) {\n      setValue(max);\n    }\n  };\n\n\n  const {width, ...rest} =  customProps || {};\n  const customInputProps = rest.input || {};\n  const customSliderProps = rest.slider || rest;\n  \n  // TIP: Can't pass undefined to MUI, cause it means uncontrolled component use.\n  //      For empty value input needs \"\", slider needs null or 0\n  const inputValue = typeof value === \"number\" ? value : \"\";\n  const sliderValue = typeof value === \"number\" ? value : null;\n\n  // marks example: { 0: \"0%\", 100: React.createElement('strong', null, \"100%\") }\n  const muiMarks = marks ? Object.keys(marks).map(v => ({value: v, label: marks[v]})) : false;\n\n\n  const InputCmp = (\n    <TextField \n      type=\"number\"\n      value={inputValue}\n      placeholder={placeholder}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChange}\n      onBlur={handleInputBlur}\n      {...customInputProps}\n    />\n  );\n\n  const SliderCmp = (\n    <Slider \n      value={sliderValue}\n      onChange={handleSliderChange}\n      disabled={readonly}\n      min={min}\n      max={max}\n      step={step}\n      marks={muiMarks}\n      valueLabelDisplay=\"auto\"\n      {...customSliderProps}\n    />\n  );\n\n  const stylesWrapper = {\n    display: \"inline-flex\", \n    alignItems: \"center\",\n    flexWrap: \"wrap\"\n  };\n\n  const stylesInputWrapper = {\n    marginLeft: \"5px\",\n  };\n\n  const stylesSliderWrapper = {\n    marginLeft: \"5px\", \n    paddingLeft: \"12px\", \n    marginBottom: muiMarks && \"-16px\", \n    width: width || defaultSliderWidth,\n  };\n\n  return (\n    <FormControl>\n      <div style={stylesWrapper}>\n        <div style={stylesInputWrapper}>\n          {InputCmp}\n        </div>\n        <div style={stylesSliderWrapper}>\n          {SliderCmp}\n        </div>\n      </div>\n    </FormControl>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport Slider from \"@material-ui/core/Slider\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {config, placeholders, customProps, value, setValue, min, max, step, marks, readonly, textSeparators} = props;\n  const {defaultSliderWidth} = config.settings;\n\n  useEffect(() => {\n    const [valueFrom, valueTo] = props.value || [undefined, undefined];\n    if (props.value && (valueFrom == undefined || valueTo == undefined)) {\n      // happens if we changed op from '==' to 'between'\n      // (I know, timeout is dirty hack..)\n      setTimeout(() => {\n        const oneValue = valueFrom || valueTo;\n        const value = [oneValue, oneValue];\n        setValue(value);\n      }, 1);\n    }\n  }, []);\n\n  const handleSliderChange = (_e, newValues) => {\n    setValue(newValues);\n  };\n\n  const handleInputChangeFrom = (e) => {\n    // TIP: need to use props.value instead of value\n    let valueFrom = e.target.value;\n    if (valueFrom === \"\" || valueFrom == null)\n      valueFrom = undefined;\n    else\n      valueFrom = Number(valueFrom);\n    let value = props.value ? [...props.value] : [undefined, undefined];\n    value[0] = valueFrom;\n    setValue(value);\n  };\n\n  const handleInputChangeTo = (e) => {\n    let valueTo = e.target.value;\n    if (valueTo === \"\" || valueTo == null)\n      valueTo = undefined;\n    else\n      valueTo = Number(valueTo);\n    let value = props.value ? [...props.value] : [undefined, undefined];\n    value[1] = valueTo;\n    setValue(value);\n  };\n\n  const handleInputBlur = () => {\n    // TIP: Fix if typed value out of range in inputs\n    if (!value) return;\n    if (value[0] < min) {\n      setValue([min, value[1]]);\n    } else if (value[1] > max) {\n      setValue([value[0], max]);\n    }\n  };\n\n  const {width, ...rest} =  customProps || {};\n  const customInputProps = rest.input || {};\n  const customSliderProps = rest.slider || rest;\n\n  // marks example: { 0: \"0%\", 100: React.createElement('strong', null, \"100%\") }\n  const muiMarks = marks ? Object.keys(marks).map(v => ({value: v, label: marks[v]})) : false;\n\n  // TIP: Can't pass undefined to MUI, cause it means uncontrolled component use.\n  //      For empty value input needs \"\", slider needs null or 0, but null will cause problems with range mode\n  let sliderValue = value ? [...value] : [undefined, undefined];\n  let [valueFrom, valueTo] = sliderValue;\n  if (valueFrom == undefined) {\n    valueFrom = \"\";\n    sliderValue[0] = 0;\n  }\n  if (valueTo == undefined) {\n    valueTo = \"\";\n    sliderValue[1] = 0;\n  }\n  \n\n  const FromInputCmp = (\n    <TextField \n      type=\"number\"\n      value={valueFrom}\n      placeholder={placeholders[0]}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChangeFrom}\n      onBlur={handleInputBlur}\n      {...customInputProps}\n    />\n  );\n\n  const ToInputCmp = (\n    <TextField \n      type=\"number\"\n      value={valueTo}\n      placeholder={placeholders[1]}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChangeTo}\n      onBlur={handleInputBlur}\n      {...customInputProps}\n    />\n  );\n\n  const SliderCmp = (\n    <Slider \n      value={sliderValue}\n      onChange={handleSliderChange}\n      disabled={readonly}\n      min={min}\n      max={max}\n      step={step}\n      marks={muiMarks}\n      valueLabelDisplay=\"auto\"\n      {...customSliderProps}\n    />\n  );\n\n  const stylesWrapper = {\n    display: \"inline-flex\", \n    flexWrap: \"wrap\"\n  };\n\n  const stylesInputWrapper = {\n    marginLeft: \"5px\",\n  };\n\n  const stylesSliderWrapper = {\n    marginLeft: \"5px\", \n    paddingLeft: \"12px\", \n    marginBottom: muiMarks && \"-16px\", \n    width: width || defaultSliderWidth,\n  };\n\n  return (\n    <FormControl>\n      <div style={stylesWrapper}>\n        <div style={stylesInputWrapper}>\n          {FromInputCmp}\n        </div>\n        <div className={\"widget--sep\"}>\n          <span>{ textSeparators[1] }</span>\n        </div>\n        <div style={stylesInputWrapper}>\n          {ToInputCmp}\n        </div>\n        <div style={stylesSliderWrapper}>\n          {SliderCmp}\n        </div>\n      </div>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default (props) => {\n  const { customProps, value, setValue, labelYes, labelNo, readonly } = props;\n\n  const onChange = () => {\n    setValue(!value);\n  };\n  \n  return (\n    <FormControl>\n      <Typography component=\"div\">\n        <Grid component=\"label\" container alignItems=\"center\" spacing={0}>\n          <Grid item component=\"span\">{labelNo}</Grid>\n          <Grid item component=\"span\">\n            <Switch\n              checked={!!value}\n              onChange={onChange}\n              disabled={readonly}\n              {...customProps}\n            />\n          </Grid>\n          <Grid item component=\"span\">{labelYes}</Grid>\n        </Grid>\n      </Typography>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default ({items, setField, selectedKey, readonly, placeholder}) => {\n  const renderOptions = (fields, level = 0) => (\n    fields.map(field => {\n      const {items, path, label, disabled} = field;\n      const prefix = \"\\u00A0\\u00A0\".repeat(level);\n      if (items) {\n        return [\n          <ListSubheader disabled={disabled} key={path} disableSticky={true}>\n            {prefix && <span>{prefix}</span>}\n            {label}\n          </ListSubheader>,\n          renderOptions(items, level+1),\n        ];\n      } else {\n        return <MenuItem disabled={disabled} key={path} value={path}>\n          {prefix && <span>{prefix}</span>}\n          {label}\n        </MenuItem>;\n      }\n    })\n  );\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setField(e.target.value);\n  };\n\n  const renderValue = (selectedValue) => {\n    if (!readonly && !selectedValue)\n      return placeholder;\n    const findLabel = (fields) => {\n      return fields.map(field => {\n        if(!field.items) return field.path === selectedValue ? field.label : null;\n        return findLabel(field.items);\n      });\n    };\n    return findLabel(items).filter((v) => {\n      if (Array.isArray(v)) {\n        return v.some((value) => value !== null);\n      } else {\n        return v !== null;\n      }\n    }).pop();\n  };\n  \n  const hasValue = selectedKey != null;\n  return (\n    <FormControl>\n      <Select\n        autoWidth\n        displayEmpty\n        label={placeholder}\n        onChange={onChange}\n        value={hasValue ? selectedKey : \"\"}\n        disabled={readonly}\n        renderValue={renderValue}\n      >\n        {renderOptions(items)}\n      </Select>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nexport default ({type, label, onClick, readonly, config}) => {\n  const hideLabelsFor = {\n    \"addRuleGroup\": true,\n    \"addRuleGroupExt\": true,\n  };\n  const typeToIcon = {\n    \"delGroup\": <DeleteIcon />,\n    \"delRuleGroup\": <DeleteIcon />,\n    \"delRule\": <DeleteIcon />,\n    \"addRuleGroup\": <AddIcon />,\n    \"addRuleGroupExt\": <AddIcon />,\n    \"addRule\": <AddIcon />,\n    \"addGroup\": <AddIcon />,\n  };\n  const typeToColor = {\n    \"addRule\": \"default\",\n    \"addGroup\": \"primary\",\n    \"delGroup\": \"secondary\",\n    \"delRuleGroup\": \"secondary\",\n    \"delRule\": \"secondary\",\n  };\n  if (!label || hideLabelsFor[type])\n    return <IconButton size=\"small\" disabled={readonly} onClick={onClick} color={typeToColor[type]}>{typeToIcon[type]}</IconButton>;\n  else\n    return <Button size=\"small\" disabled={readonly} onClick={onClick} color={typeToColor[type]} startIcon={typeToIcon[type]}>{label}</Button>;\n};\n","import React from \"react\";\n\nexport default ({children, config}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default ({id, not, setNot, conjunctionOptions, setConjunction, disabled, readonly, config, showNot, notLabel}) => {\n  //TIP: disabled=true if only 1 rule; readonly=true if immutable mode\n  const conjsCount = Object.keys(conjunctionOptions).length;\n  const lessThenTwo = disabled;\n  const {forceShowConj} = config.settings;\n  const showConj = forceShowConj || conjsCount > 1 && !lessThenTwo;\n\n  const renderOptions = () => \n    Object.keys(conjunctionOptions).map(key => {\n      const {id, name, label, checked} = conjunctionOptions[key];\n      const postfix = setConjunction.isDummyFn ? \"__dummy\" : \"\";\n      if ((readonly || disabled) && !checked)\n        return null;\n      return (\n        <Button \n          key={id+postfix} \n          id={id+postfix} \n          color={checked ? \"primary\" : \"default\"} \n          value={key} \n          onClick={onClick.bind(null, key)} \n          disabled={readonly || disabled}\n        >\n          {label}\n        </Button>\n      );\n    });\n  \n  const renderNot = () => {\n    if (readonly && !not)\n      return null;\n    return (\n      <Button \n        key={id}\n        id={id + \"__not\"}\n        color={not ? \"secondary\" : \"default\"} \n        onClick={onNotClick.bind(null, !not)} \n        disabled={readonly}\n      >\n        {notLabel || \"NOT\"}\n      </Button>\n    );\n  };\n\n  const onClick = value => setConjunction(value);\n  const onNotClick = checked => setNot(checked);\n\n  return (\n    <FormControl>\n      <ButtonGroup \n        disableElevation \n        variant=\"contained\" \n        size=\"small\" \n        disabled={readonly}\n      >\n        {showNot && renderNot()}\n        {showConj && renderOptions()}\n      </ButtonGroup>\n    </FormControl>\n  );\n  \n};\n","import React from \"react\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport LockIcon from \"@material-ui/icons/Lock\";\n\nexport default ({value, setValue, label, checkedLabel, hideLabel, id, config, type}) => {\n  const {renderSize} = config.settings;\n  const onChange = e => setValue(e.target.checked);\n  const onClick = () => setValue(!value);\n  const postfix = type;\n  const showLabel = value ? (checkedLabel || label) : label;\n  const icon = value ? <LockIcon /> : <LockOpenIcon />;\n\n  if (type == \"lock\") {\n    if (hideLabel) {\n      return <IconButton\n        key={id+postfix}\n        onClick={onClick}\n        size={\"small\"}\n      >{icon}</IconButton>;\n    } else {\n      return <Button\n        key={id+postfix}\n        onClick={onClick}\n        size={\"small\"}\n        startIcon={icon}\n      >{showLabel}</Button>;\n    }\n  }\n\n  return <FormControlLabel \n    control={<Switch\n      checked={!!value}\n      size={\"small\"}\n      onChange={onChange}\n    />} \n    label={showLabel} \n  />;\n};\n","export default ({onOk, okText, cancelText, title, confirmFn}) => {\n  confirmFn({ \n    description: title || \"Are you sure?\",\n    title: null,\n    confirmationText: okText || \"Ok\",\n    cancellationText: cancelText || \"Cancel\",\n  })\n    .then(onOk)\n    .catch(() => {});\n};\n","import MaterialWidgets from \"../widgets\";\nimport { Utils, BasicConfig } from \"@react-awesome-query-builder/ui\";\nimport React from \"react\";\nconst { SqlString, spelEscape, stringifyForDisplay } = Utils.ExportUtils;\n\n\nconst {\n  MaterialBooleanWidget,\n  MaterialTextWidget,\n  MaterialTextAreaWidget,\n  MaterialDateWidget,\n  MaterialTimeWidget,\n  MaterialDateTimeWidget,\n  MaterialMultiSelectWidget,\n  MaterialSelectWidget,\n  MaterialNumberWidget,\n  MaterialSliderWidget,\n  MaterialRangeWidget,\n  MaterialAutocompleteWidget,\n\n  MaterialFieldSelect,\n  MaterialFieldAutocomplete,\n  MaterialConjs,\n  MaterialSwitch,\n  MaterialButton,\n  MaterialButtonGroup,\n  MaterialValueSources,\n\n  MaterialProvider,\n  MaterialConfirm,\n  MaterialUseConfirm,\n} = MaterialWidgets;\n\n\nconst settings = {\n  ...BasicConfig.settings,\n\n  renderField: (props) => props?.customProps?.showSearch \n    ? <MaterialFieldAutocomplete {...props} /> \n    : <MaterialFieldSelect {...props} />,\n  renderOperator: (props) => <MaterialFieldSelect {...props} />,\n  renderFunc: (props) => <MaterialFieldSelect {...props} />,\n  renderConjs: (props) => <MaterialConjs {...props} />,\n  renderSwitch: (props) => <MaterialSwitch {...props} />,\n  renderButton: (props) => <MaterialButton {...props} />,\n  renderButtonGroup: (props) => <MaterialButtonGroup {...props} />,\n  renderValueSources: (props) => <MaterialValueSources {...props} />,\n  renderProvider: (props) => <MaterialProvider {...props} />,\n  renderConfirm: MaterialConfirm,\n  useConfirm: MaterialUseConfirm,\n};\n\n\nconst widgets = {\n  ...BasicConfig.widgets,\n  text: {\n    ...BasicConfig.widgets.text,\n    factory: (props) => <MaterialTextWidget {...props} />,\n  },\n  textarea: {\n    ...BasicConfig.widgets.textarea,\n    factory: (props) => <MaterialTextAreaWidget {...props} />,\n  },\n  number: {\n    ...BasicConfig.widgets.number,\n    factory: (props) => <MaterialNumberWidget {...props} />,\n  },\n  multiselect: {\n    ...BasicConfig.widgets.multiselect,\n    factory: (props) => {\n      return (props.asyncFetch || props.showSearch) \n        ? <MaterialAutocompleteWidget multiple {...props} /> \n        : <MaterialMultiSelectWidget {...props} />;\n    },\n  },\n  select: {\n    ...BasicConfig.widgets.select,\n    factory: (props) => {\n      return (props.asyncFetch || props.showSearch) \n        ? <MaterialAutocompleteWidget {...props} /> \n        : <MaterialSelectWidget {...props} />;\n    },\n  },\n  slider: {\n    ...BasicConfig.widgets.slider,\n    factory: (props) => <MaterialSliderWidget {...props} />,\n  },\n  boolean: {\n    ...BasicConfig.widgets.boolean,\n    factory: (props) => <MaterialBooleanWidget {...props} />,\n  },\n  date: {\n    ...BasicConfig.widgets.date,\n    factory: (props) => <MaterialDateWidget {...props} />,\n  },\n  time: {\n    ...BasicConfig.widgets.time,\n    factory: (props) => <MaterialTimeWidget {...props} />,\n  },\n  datetime: {\n    ...BasicConfig.widgets.datetime,\n    factory: (props) => <MaterialDateTimeWidget {...props} />,\n  },\n\n  rangeslider: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    factory: (props) => <MaterialRangeWidget {...props} />,\n    valueLabel: \"Range\",\n    valuePlaceholder: \"Select range\",\n    valueLabels: [\n      { label: \"Number from\", placeholder: \"Enter number from\" },\n      { label: \"Number to\", placeholder: \"Enter number to\" },\n    ],\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      return isForDisplay ? stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return SqlString.escape(val);\n    },\n    spelFormatValue: (val) => spelEscape(val),\n    singleWidget: \"slider\",\n    toJS: (val, fieldSettings) => (val),\n  },\n};\n\n\nconst types = {\n  ...BasicConfig.types,\n  number: {\n    ...BasicConfig.types.number,\n    widgets: {\n      ...BasicConfig.types.number.widgets,\n      rangeslider: {\n        opProps: {\n          between: {\n            isSpecialRange: true,\n          },\n          not_between: {\n            isSpecialRange: true,\n          }\n        },\n        operators: [\n          \"between\",\n          \"not_between\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      }\n    },\n  },\n};\n\nexport default {\n  ...BasicConfig,\n  types,\n  widgets,\n  settings,\n};","import { TreeStore } from \"@react-awesome-query-builder/core\";\nexport default TreeStore;\n","import React from \"react\";\n\nexport default React.createContext(); ","export const ADD_GROUP = \"ADD_GROUP\";\nexport const ADD_CASE_GROUP = \"ADD_CASE_GROUP\";\nexport const REMOVE_GROUP = \"REMOVE_GROUP\";\nexport const SET_CONJUNCTION = \"SET_CONJUNCTION\";\nexport const SET_NOT = \"SET_NOT\";\nexport const ADD_RULE = \"ADD_RULE\";\nexport const REMOVE_RULE = \"REMOVE_RULE\";\nexport const SET_FIELD = \"SET_FIELD\";\nexport const SET_OPERATOR = \"SET_OPERATOR\";\nexport const SET_VALUE = \"SET_VALUE\";\nexport const SET_VALUE_SRC = \"SET_VALUE_SRC\";\nexport const SET_OPERATOR_OPTION = \"SET_OPERATOR_OPTION\";\nexport const SET_LOCK = \"SET_LOCK\";\n\nexport const SET_TREE = \"SET_TREE\";\n\nexport const MOVE_ITEM = \"MOVE_ITEM\";\n\nexport const PLACEMENT_AFTER = \"after\";\nexport const PLACEMENT_BEFORE = \"before\";\nexport const PLACEMENT_APPEND = \"append\";\nexport const PLACEMENT_PREPEND = \"prepend\";\n\nexport const SET_DRAG_PROGRESS = \"SET_DRAG_PROGRESS\";\nexport const SET_DRAG_START = \"SET_DRAG_START\";\nexport const SET_DRAG_END = \"SET_DRAG_END\";\n","import * as constants from \"../stores/constants\";\n\n\n/**\n * @param {Object} mousePos\n * @param {Object} dragging\n */\nexport const setDragProgress = (mousePos, dragging) => ({\n  type: constants.SET_DRAG_PROGRESS,\n  mousePos: mousePos,\n  dragging: dragging,\n});\n\n/**\n * @param {Object} dragStart\n * @param {Object} dragging\n * @param {Object} mousePos\n */\nexport const setDragStart = (dragStart, dragging, mousePos) => ({\n  type: constants.SET_DRAG_START,\n  dragStart: dragStart,\n  dragging: dragging,\n  mousePos: mousePos,\n});\n\n/**\n *\n */\nexport const setDragEnd = () => ({\n  type: constants.SET_DRAG_END,\n});\n","import { TreeActions } from \"@react-awesome-query-builder/core\";\nimport * as drag from \"./drag\";\nconst { tree, group, rule } = TreeActions;\nexport {\n  tree,\n  group,\n  rule,\n  drag\n};\n","import pick from \"lodash/pick\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { extendConfig } = Utils.ConfigUtils;\n\nconst configKeys = [\"conjunctions\", \"fields\", \"types\", \"operators\", \"widgets\", \"settings\", \"funcs\"];\n\nconst pickConfig = (props) => {\n  return pick(props, configKeys);\n};\n\nexport const createConfigMemo = () => {\n  const configStore = new Map();\n  const maxSize = 2; // current and prev\n  let configId = 0;\n\n  const extendAndStore = (config) => {\n    const extendedConfig = extendConfig(config, ++configId);\n    if ((configStore.size + 1) > maxSize) {\n      configStore.delete(configStore.keys()[0]);\n    }\n    configStore.set(config, extendedConfig);\n    return extendedConfig;\n  };\n\n  const findExtended = (findConfig) => {\n    // strict find:\n    // return configStore.get(findConfig) || configStore.values().find(ec => ec === findConfig);\n\n    for (const savedConfig of configStore.keys()) {\n      const found = configKeys.map(k => savedConfig[k] === findConfig[k]).filter(v => !v).length === 0;\n      if (found) {\n        return configStore.get(savedConfig);\n      }\n    }\n\n    for (const extendedConfig of configStore.values()) {\n      const found = configKeys.map(k => extendedConfig[k] === findConfig[k]).filter(v => !v).length === 0;\n      if (found) {\n        return extendedConfig;\n      }\n    }\n\n    return null;\n  };\n\n  const findOrExtend = (config) => {\n    return findExtended(config) || extendAndStore(config);\n  };\n  \n  return (props) => findOrExtend(pickConfig(props));\n};\n","\nexport const defaultValue = (value, _default) => {\n  return (typeof value === \"undefined\") ? _default : value;\n};\n\nexport const truncateString = (str, n, useWordBoundary) => {\n  if (!n || str.length <= n) { return str; }\n  var subString = str.substr(0, n-1);\n  return (useWordBoundary \n    ? subString.substr(0, subString.lastIndexOf(\" \")) \n    : subString) + \"...\";\n};\n\nexport const immutableEqual = function(v1, v2) {\n  if (v1 === v2) {\n    return true;\n  } else {\n    return v1.equals(v2);\n  }\n};\n\n// const deepEqual = function(v1, v2) {\n//   if (v1 === v2) {\n//     return true;\n//   } else if (Map.isMap(v1)) {\n//     return v1.equals(v2);\n//   } else {\n//     return JSON.stringify(v1) == JSON.stringify(v2);\n//   }\n// };\n\n\nexport const shallowEqual = (a, b, deep = false) => {\n  if (a === b) {\n    return true;\n  } else if (Array.isArray(a))\n    return shallowEqualArrays(a, b, deep);\n  else if (a && typeof a.equals === \"function\")\n    return a.equals(b);\n  else if (typeof a === \"object\")\n    return shallowEqualObjects(a, b, deep);\n  else\n    return a === b;\n};\n\nfunction shallowEqualArrays(arrA, arrB, deep = false) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var isEqual = deep ? shallowEqual(arrA[i], arrB[i], deep) : arrA[i] === arrB[i];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowEqualObjects(objA, objB, deep = false) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n    var isEqual = deep ? shallowEqual(objA[key], objB[key], deep) : objA[key] === objB[key];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n\nconst isImmutable = (v) => {\n  return typeof v === \"object\" && v !== null && typeof v.toJS === \"function\";\n};\n\n\n// export function toImmutableList(v) {\n//   return (isImmutable(v) ? v : new Immutable.List(v));\n// }\n\n\nconst isDev = () => (typeof process !== \"undefined\" && process.env && process.env.NODE_ENV == \"development\");\n\nexport const getLogger = (devMode = false) => {\n  const verbose = devMode != undefined ? devMode : isDev(); \n  return verbose ? console : {\n    error: () => {},\n    log: () => {},\n    warn: () => {},\n    debug: () => {},\n    info: () => {},\n  };\n};\n\n\nexport const logger = getLogger();\n\n","import {immutableEqual} from \"../utils/stuff\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { validateAndFixTree } = Utils;\n\nexport const createValidationMemo = () => {\n  let originalTree;\n  let validatedTree;\n  let configId;\n\n  return (config, tree, oldConfig = undefined, sanitizeTree = true) => {\n    if (!tree) {\n      return null;\n    }\n    if (config.__configId === configId && (immutableEqual(tree, originalTree) || immutableEqual(tree, validatedTree))) {\n      return validatedTree;\n    } else {\n      configId = config.__configId;\n      originalTree = tree;\n      if (sanitizeTree === false) {\n        validatedTree = validateAndFixTree(tree, null, config, oldConfig || config, false, false);\n      } else {\n        validatedTree = validateAndFixTree(tree, null, config, oldConfig || config);\n      }\n      return validatedTree;\n    }\n  };\n};\n","import React from \"react\";\nimport mapValues from \"lodash/mapValues\";\nimport {shallowEqual} from \"./stuff\";\n\nconst getReactContainerType = (el) => {\n  if (el._reactRootContainer) {\n    return \"root\";\n  }\n  if (Object.getOwnPropertyNames(el).filter(k => k.startsWith(\"__reactContainer\")).length > 0) {\n    return \"container\";\n  }\n  return undefined;\n};\n\nconst getReactRootNodeType = (node) => {\n  if (!node) {\n    return undefined;\n  }\n  const type = getReactContainerType(node);\n  if (type !== undefined) {\n    return type;\n  } else {\n    return getReactRootNodeType(node.parentNode);\n  }\n};\n\nexport const isUsingLegacyReactDomRender = (node) => {\n  return getReactRootNodeType(node) === \"root\";\n};\n\n\nexport const liteShouldComponentUpdate = (self, config) => (nextProps, nextState) => {\n  const prevProps = self.props;\n  const prevState = self.state;\n\n  let should = nextProps != prevProps || nextState != prevState;\n  if (should) {\n    if (prevState == nextState && prevProps != nextProps) {\n      let chs = [];\n      for (let k in nextProps) {\n        let changed = (nextProps[k] != prevProps[k]);\n        if (changed) {\n          if (config[k] == \"ignore\")\n            changed = false;\n          else if (config[k] == \"shallow_deep\")\n            changed = !shallowEqual(nextProps[k], prevProps[k], true);\n          else if (config[k] == \"shallow\")\n            changed = !shallowEqual(nextProps[k], prevProps[k]);\n          else if (typeof config[k] == \"function\")\n            changed = config[k](nextProps[k], prevProps[k], nextState);\n        }\n        if (changed)\n          chs.push(k);\n      }\n      if (!chs.length)\n        should = false;\n    }\n  }\n  return should;\n};\n\nexport const pureShouldComponentUpdate = (self) => function(nextProps, nextState) {\n  return (\n    !shallowEqual(self.props, nextProps)\n    || !shallowEqual(self.state, nextState)\n  );\n};\n\nconst canUseOldComponentWillReceiveProps = () => {\n  const v = React.version.split(\".\").map(parseInt.bind(null, 10));\n  return v[0] == 16 && v[1] < 3 || v[0] < 16;\n};\n\nexport const useOnPropsChanged = (obj) => {\n  // 1. `shouldComponentUpdate` should be called after `componentWillReceiveProps`\n  // 2. `shouldComponentUpdate` should not be used for PureComponent\n\n  // Because `useOnPropsChanged` can only be applied to `Component` not `PureComponent`, make it pure now\n  if (!obj.shouldComponentUpdate) {\n    obj.shouldComponentUpdate = pureShouldComponentUpdate(obj);\n  }\n\n  if (canUseOldComponentWillReceiveProps()) {\n    // Use old method\n    obj.componentWillReceiveProps = (nextProps) => {\n      obj.onPropsChanged(nextProps);\n    };\n  } else {\n    // Simulate `componentWillReceiveProps` with `shouldComponentUpdate`\n    const origShouldComponentUpdate = obj.shouldComponentUpdate;\n    const newShouldComponentUpdate = function(nextProps, nextState) {\n      const shouldNotify = !shallowEqual(obj.props, nextProps);\n      if (shouldNotify) {\n        obj.onPropsChanged(nextProps);\n      }\n      const shouldUpdate = origShouldComponentUpdate.call(obj, nextProps, nextState);\n      return shouldUpdate;\n    };\n    obj.shouldComponentUpdate = newShouldComponentUpdate.bind(obj);\n  }\n};\n\nexport const bindActionCreators = (actionCreators, config, dispatch) =>\n  mapValues(actionCreators, (actionCreator) =>\n    (...args) => dispatch(actionCreator(config, ...args))\n  );\n","import React, { Component } from \"react\";\nimport {connect} from \"react-redux\";\nimport context from \"../stores/context\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../actions\";\nimport {immutableEqual} from \"../utils/stuff\";\nimport {useOnPropsChanged, liteShouldComponentUpdate, bindActionCreators} from \"../utils/reactUtils\";\n\n\nclass Query extends Component {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    onChange: PropTypes.func,\n    renderBuilder: PropTypes.func,\n    tree: PropTypes.any, //instanceOf(Immutable.Map)\n    //dispatch: PropTypes.func.isRequired,\n    //__isInternalValueChange\n    //__lastAction\n    //getMemoizedTree: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this._updateActions(props);\n\n    // For preventive validation (tree and config consistency)\n    // When config has changed from QueryContainer, \n    //  but new dispatched validated tree value is not in redux store yet (tree prop is old)\n    this.validatedTree = props.getMemoizedTree(props.config, props.tree);\n    this.oldValidatedTree = this.validatedTree;\n\n    //props.onChange && props.onChange(this.validatedTree, props.config);\n  }\n\n  _updateActions (props) {\n    const {config, dispatch} = props;\n    this.actions = bindActionCreators({...actions.tree, ...actions.group, ...actions.rule}, config, dispatch);\n  }\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    tree: (nextValue) => {\n      if (nextValue === this.oldValidatedTree && this.oldValidatedTree === this.validatedTree) {\n        // Got value dispatched from QueryContainer\n        // Ignore, because we've just rendered it\n        return false;\n      }\n      return true;\n    }\n  });\n\n  onPropsChanged(nextProps) {\n    const {onChange} = nextProps;\n    const oldConfig = this.props.config;\n    const newTree = nextProps.tree;\n    const oldTree = this.props.tree;\n    const newConfig = nextProps.config;\n\n    this.oldValidatedTree = this.validatedTree;\n    this.validatedTree = newTree;\n    if (oldConfig !== newConfig) {\n      this._updateActions(nextProps);\n      this.validatedTree = nextProps.getMemoizedTree(newConfig, newTree, oldConfig);\n    }\n\n    const validatedTreeChanged = !immutableEqual(this.validatedTree, this.oldValidatedTree);\n    if (validatedTreeChanged) {\n      onChange && onChange(this.validatedTree, newConfig, nextProps.__lastAction);\n    }\n  }\n\n  render() {\n    const {config, renderBuilder, dispatch, __isInternalValueChange} = this.props;\n    const builderProps = {\n      tree: this.validatedTree,\n      actions: this.actions,\n      config: config,\n      dispatch: dispatch,\n      __isInternalValueChange\n    };\n\n    return renderBuilder(builderProps);\n  }\n}\n\n\nconst ConnectedQuery = connect(\n  (state) => {\n    return {\n      tree: state.tree,\n      __isInternalValueChange: state.__isInternalValueChange,\n      __lastAction: state.__lastAction,\n    };\n  },\n  null,\n  null,\n  {\n    context\n  }\n)(Query);\nConnectedQuery.displayName = \"ConnectedQuery\";\n\n\nexport default ConnectedQuery;\n","import React, { Component, PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport treeStoreReducer from \"../stores/tree\";\nimport context from \"../stores/context\";\nimport {createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport * as actions from \"../actions\";\nimport {createConfigMemo} from \"../utils/configUtils\";\nimport {immutableEqual} from \"../utils/stuff\";\nimport {createValidationMemo} from \"../utils/validation\";\nimport {liteShouldComponentUpdate, useOnPropsChanged} from \"../utils/reactUtils\";\nimport ConnectedQuery from \"./Query\";\nconst {defaultRoot} = Utils.DefaultUtils;\n\n\nexport default class QueryContainer extends Component {\n  static propTypes = {\n    //config\n    conjunctions: PropTypes.object.isRequired,\n    fields: PropTypes.object.isRequired,\n    types: PropTypes.object.isRequired,\n    operators: PropTypes.object.isRequired,\n    widgets: PropTypes.object.isRequired,\n    settings: PropTypes.object.isRequired,\n\n    onChange: PropTypes.func,\n    renderBuilder: PropTypes.func,\n    value: PropTypes.any, //instanceOf(Immutable.Map)\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    useOnPropsChanged(this);\n\n    this.getMemoizedConfig = createConfigMemo();\n    this.getMemoizedTree = createValidationMemo();\n    \n    const config = this.getMemoizedConfig(props);\n    const tree = props.value;\n    const validatedTree = this.getMemoizedTree(config, tree);\n\n    const reducer = treeStoreReducer(config, validatedTree, this.getMemoizedTree, this.setLastTree);\n    const store = createStore(reducer);\n\n    this.config = config;\n    this.state = {\n      store\n    };\n  }\n\n  setLastTree = (lastTree) => {\n    if (this.prevTree) {\n      this.prevprevTree = this.prevTree;\n    }\n    this.prevTree = lastTree;\n  };\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    value: (nextValue, prevValue, state) => { return false; }\n  });\n\n  onPropsChanged(nextProps) {\n    // compare configs\n    const oldConfig = this.config;\n    const nextConfig = this.getMemoizedConfig(nextProps);\n    const isConfigChanged = oldConfig !== nextConfig;\n\n    // compare trees\n    const storeValue = this.state.store.getState().tree;\n    const isTreeChanged = !immutableEqual(nextProps.value, this.props.value) && !immutableEqual(nextProps.value, storeValue);\n    const currentTree = isTreeChanged ? nextProps.value || defaultRoot(nextProps) : storeValue;\n    const isTreeTrulyChanged = isTreeChanged && !immutableEqual(nextProps.value, this.prevTree) && !immutableEqual(nextProps.value, this.prevprevTree);\n    const sanitizeTree = isTreeTrulyChanged || isConfigChanged;\n\n    if (isConfigChanged) {\n      this.config = nextConfig;\n    }\n    \n    if (isTreeChanged || isConfigChanged) {\n      const validatedTree = this.getMemoizedTree(nextConfig, currentTree, oldConfig, sanitizeTree);\n      //return Promise.resolve().then(() => {\n      this.state.store.dispatch(\n        actions.tree.setTree(nextConfig, validatedTree)\n      );\n      //});\n    }\n  }\n\n  render() {\n    // `get_children` is deprecated!\n    const {renderBuilder, get_children, onChange, settings} = this.props;\n    const {store} = this.state;\n    const config = this.config;\n    const {renderProvider: QueryWrapper} = settings;\n\n    return (\n      <QueryWrapper config={config}>\n        <Provider store={store} context={context}>\n          <ConnectedQuery\n            config={config}\n            getMemoizedTree={this.getMemoizedTree}\n            onChange={onChange}\n            renderBuilder={renderBuilder || get_children}\n          />\n        </Provider>\n      </QueryWrapper>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport context from \"../../stores/context\";\nimport {pureShouldComponentUpdate} from \"../../utils/reactUtils\";\nimport {connect} from \"react-redux\";\nimport classNames from \"classnames\";\nconst {getFieldConfig} = Utils.ConfigUtils;\n\n\nconst createRuleContainer = (Rule) => \n  class RuleContainer extends Component {\n    static propTypes = {\n      id: PropTypes.string.isRequired,\n      groupId: PropTypes.string,\n      config: PropTypes.object.isRequired,\n      path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n      operator: PropTypes.string,\n      field: PropTypes.string,\n      actions: PropTypes.object.isRequired, //{removeRule: Funciton, setField, setOperator, setOperatorOption, setValue, setValueSrc, ...}\n      onDragStart: PropTypes.func,\n      value: PropTypes.any, //depends on widget\n      valueSrc: PropTypes.any,\n      asyncListValues: PropTypes.array,\n      valueError: PropTypes.any,\n      operatorOptions: PropTypes.object,\n      reordableNodesCnt: PropTypes.number,\n      parentField: PropTypes.string, //from RuleGroup\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n      //connected:\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isDraggingTempo: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      \n      this.dummyFn.isDummyFn = true;\n    }\n\n    dummyFn = () => {};\n\n    removeSelf = () => {\n      this.props.actions.removeRule(this.props.path);\n    };\n\n    setLock = (lock = null) => {\n      this.props.actions.setLock(this.props.path, lock);\n    };\n\n    setField = (field) => {\n      this.props.actions.setField(this.props.path, field);\n    };\n\n    setOperator = (operator) => {\n      this.props.actions.setOperator(this.props.path, operator);\n    };\n\n    setOperatorOption = (name, value) => {\n      this.props.actions.setOperatorOption(this.props.path, name, value);\n    };\n\n    setValue = (delta, value, type, asyncListValues, __isInternal) => {\n      this.props.actions.setValue(this.props.path, delta, value, type, asyncListValues, __isInternal);\n    };\n\n    setValueSrc = (delta, srcKey) => {\n      this.props.actions.setValueSrc(this.props.path, delta, srcKey);\n    };\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          const draggingId = (nextProps.dragging.id || prevProps.dragging.id);\n          const isDraggingMe = draggingId == nextProps.id;\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (k == \"dragging\" && !isDraggingMe) {\n              changed = false; //dragging another item -> ignore\n            }\n            if (changed) {\n              chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    render() {\n      const isDraggingMe = this.props.dragging.id == this.props.id;\n      const fieldConfig = getFieldConfig(this.props.config, this.props.field);\n      const {showErrorMessage} = this.props.config.settings;\n      const _isGroup = fieldConfig && fieldConfig.type == \"!struct\";\n      const isInDraggingTempo = !isDraggingMe && this.props.isDraggingTempo;\n\n      const valueError = this.props.valueError;\n      const oneValueError = valueError && valueError.toArray().filter(e => !!e).shift() || null;\n      const hasError = oneValueError != null && showErrorMessage;\n\n      return (\n        <div\n          className={classNames(\"group-or-rule-container\", \"rule-container\", hasError ? \"rule-with-error\" : null)}\n          data-id={this.props.id}\n        >\n          {[\n            isDraggingMe ? <Rule\n              key={\"dragging\"}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={true}\n              isDraggingTempo={true}\n              dragging={this.props.dragging}\n              setField={this.dummyFn}\n              setOperator={this.dummyFn}\n              setOperatorOption={this.dummyFn}\n              setLock={this.dummyFn}\n              removeSelf={this.dummyFn}\n              setValue={this.dummyFn}\n              setValueSrc={this.dummyFn}\n              selectedField={this.props.field || null}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              value={this.props.value || null}\n              valueSrc={this.props.valueSrc || null}\n              valueError={this.props.valueError || null}\n              operatorOptions={this.props.operatorOptions}\n              config={this.props.config}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              asyncListValues={this.props.asyncListValues}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            /> : null\n            ,\n            <Rule\n              key={this.props.id}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={isDraggingMe}\n              isDraggingTempo={isInDraggingTempo}\n              onDragStart={this.props.onDragStart}\n              setLock={isInDraggingTempo ? this.dummyFn : this.setLock}\n              removeSelf={isInDraggingTempo ? this.dummyFn : this.removeSelf}\n              setField={isInDraggingTempo ? this.dummyFn : this.setField}\n              setOperator={isInDraggingTempo ? this.dummyFn : this.setOperator}\n              setOperatorOption={isInDraggingTempo ? this.dummyFn : this.setOperatorOption}\n              setValue={isInDraggingTempo ? this.dummyFn : this.setValue}\n              setValueSrc={isInDraggingTempo ? this.dummyFn : this.setValueSrc}\n              selectedField={this.props.field || null}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              value={this.props.value || null}\n              valueSrc={this.props.valueSrc || null}\n              valueError={this.props.valueError || null}\n              operatorOptions={this.props.operatorOptions}\n              config={this.props.config}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              asyncListValues={this.props.asyncListValues}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            />\n          ]}\n        </div>\n      );\n    }\n\n  };\n\n\nexport default (Rule) => {\n  const ConnectedRuleContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n      };\n    },\n    null,\n    null,\n    {\n      context\n    }\n  )(createRuleContainer(Rule));\n  ConnectedRuleContainer.displayName = \"ConnectedRuleContainer\";\n\n  return ConnectedRuleContainer;\n};\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport {connect} from \"react-redux\";\nimport {logger} from \"../../utils/stuff\";\nimport context from \"../../stores/context\";\nimport * as constants from \"../../stores/constants\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../../actions\";\nimport {pureShouldComponentUpdate, useOnPropsChanged, isUsingLegacyReactDomRender} from \"../../utils/reactUtils\";\nconst {clone} = Utils;\nconst {getFlatTree} = Utils.TreeUtils;\n\nlet _isReorderingTree = false;\n\nconst createSortableContainer = (Builder, CanMoveFn = null) => \n  class SortableContainer extends Component {\n    static propTypes = {\n      tree: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n      actions: PropTypes.object.isRequired, // {moveItem: Function, ..}\n      //... see Builder\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      useOnPropsChanged(this);\n\n      this.onPropsChanged(props);\n    }\n\n    onPropsChanged(nextProps) {\n      this.tree = getFlatTree(nextProps.tree);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (changed) {\n              //don't render <Builder> on dragging - appropriate redux-connected components will do it\n              if(k != \"dragging\" && k != \"mousePos\")\n                chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    componentDidUpdate(_prevProps, _prevState) {\n      let dragging = this.props.dragging;\n      let startDragging = this.props.dragStart;\n      _isReorderingTree = false;\n      if (startDragging && startDragging.id) {\n        dragging.itemInfo = this.tree.items[dragging.id];\n        if (dragging.itemInfo) {\n          if (dragging.itemInfo.index != startDragging.itemInfo.index || dragging.itemInfo.parent != startDragging.itemInfo.parent) {\n            const treeEl = startDragging.treeEl;\n            const treeElContainer = startDragging.treeElContainer;\n            const plhEl = this._getPlaceholderNodeEl(treeEl, true);\n            if (plhEl) {\n              const plX = plhEl.getBoundingClientRect().left + window.scrollX;\n              const plY = plhEl.getBoundingClientRect().top + window.scrollY;\n              const oldPlX = startDragging.plX;\n              const oldPlY = startDragging.plY;\n              const scrollTop = treeElContainer.scrollTop;\n              startDragging.plX = plX;\n              startDragging.plY = plY;\n              startDragging.itemInfo = clone(dragging.itemInfo);\n              startDragging.y = plhEl.offsetTop;\n              startDragging.x = plhEl.offsetLeft;\n              startDragging.clientY += (plY - oldPlY);\n              startDragging.clientX += (plX - oldPlX);\n              if (treeElContainer != document.body)\n                startDragging.scrollTop = scrollTop;\n\n              this.onDrag(this.props.mousePos, false);\n            }\n          }\n        }\n      }\n    }\n\n    _getNodeElById (treeEl, indexId, ignoreCache = false) {\n      if (indexId == null)\n        return null;\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[indexId];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      el = treeEl.querySelector('.group-or-rule-container[data-id=\"'+indexId+'\"]');\n      this._cacheEls[indexId] = el;\n      return el;\n    }\n\n    _getDraggableNodeEl (treeEl, ignoreCache = false) {\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[\"draggable\"];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      const els = treeEl.getElementsByClassName(\"qb-draggable\");\n      el = els.length ? els[0] : null;\n      this._cacheEls[\"draggable\"] = el;\n      return el;\n    }\n\n    _getPlaceholderNodeEl (treeEl, ignoreCache = false) {\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[\"placeholder\"];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      const els = treeEl.getElementsByClassName(\"qb-placeholder\");\n      el = els.length ? els[0] : null;\n      this._cacheEls[\"placeholder\"] = el;\n      return el;\n    }\n\n    _isScrollable(node) {\n      const overflowY = window.getComputedStyle(node)[\"overflow-y\"];\n      return (overflowY === \"scroll\" || overflowY === \"auto\") && (node.scrollHeight > node.offsetHeight);\n    }\n\n    _getScrollParent(node) {\n      if (node == null)\n        return null;\n    \n      if (node === document.body || this._isScrollable(node)) {\n        return node;\n      } else {\n        return this._getScrollParent(node.parentNode);\n      }\n    }\n\n    _getEventTarget = (e, dragStart) => {\n      return e && e.__mocked_window || document.body || window;\n    };\n\n    onDragStart = (id, dom, e) => {\n      let treeEl = dom.closest(\".query-builder\");\n      if (this._isUsingLegacyReactDomRender === undefined) {\n        this._isUsingLegacyReactDomRender = isUsingLegacyReactDomRender(treeEl);\n      }\n      document.body.classList.add(\"qb-dragging\");\n      treeEl.classList.add(\"qb-dragging\");\n      let treeElContainer = treeEl.closest(\".query-builder-container\") || treeEl;\n      treeElContainer = this._getScrollParent(treeElContainer) || document.body;\n      const scrollTop = treeElContainer.scrollTop;\n      \n      const _dragEl = this._getDraggableNodeEl(treeEl);\n      const _plhEl = this._getPlaceholderNodeEl(treeEl);\n\n      const tmpAllGroups = treeEl.querySelectorAll(\".group--children\");\n      const anyGroup = tmpAllGroups.length ? tmpAllGroups[0] : null;\n      let groupPadding;\n      if (anyGroup) {\n        groupPadding = window.getComputedStyle(anyGroup, null).getPropertyValue(\"padding-left\");\n        groupPadding = parseInt(groupPadding);\n      }\n\n      const dragging = {\n        id: id,\n        x: dom.offsetLeft,\n        y: dom.offsetTop,\n        w: dom.offsetWidth,\n        h: dom.offsetHeight,\n        itemInfo: this.tree.items[id],\n        paddingLeft: groupPadding,\n      };\n      const dragStart = {\n        id: id,\n        x: dom.offsetLeft,\n        y: dom.offsetTop,\n        scrollTop: scrollTop,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        itemInfo: clone(this.tree.items[id]),\n        treeEl: treeEl,\n        treeElContainer: treeElContainer,\n      };\n      const mousePos = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      };\n\n      const target = this._getEventTarget(e, dragStart);\n      this.eventTarget = target;\n      target.addEventListener(\"mousemove\", this.onDrag);\n      target.addEventListener(\"mouseup\", this.onDragEnd);\n\n      this.props.setDragStart(dragStart, dragging, mousePos);\n    };\n\n\n    onDrag = (e, doHandleDrag = true) => {\n      let dragging = Object.assign({}, this.props.dragging);\n      let startDragging = this.props.dragStart;\n      const paddingLeft = dragging.paddingLeft; //this.props.paddingLeft;\n      const treeElContainer = startDragging.treeElContainer;\n      const scrollTop = treeElContainer.scrollTop;\n      dragging.itemInfo = this.tree.items[dragging.id];\n      if (!dragging.itemInfo) {\n        return;\n      }\n\n      let mousePos = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      };\n      const startMousePos = {\n        clientX: startDragging.clientX,\n        clientY: startDragging.clientY,\n      };\n\n      if (e.__mock_dom) {\n        const treeEl = startDragging.treeEl;\n        const dragEl = this._getDraggableNodeEl(treeEl);\n        const plhEl = this._getPlaceholderNodeEl(treeEl);\n        e.__mock_dom({treeEl, dragEl, plhEl});\n      }\n\n      //first init plX/plY\n      if (!startDragging.plX) {\n        const treeEl = startDragging.treeEl;\n        const plhEl = this._getPlaceholderNodeEl(treeEl);\n        if (plhEl) {\n          startDragging.plX = plhEl.getBoundingClientRect().left + window.scrollX;\n          startDragging.plY = plhEl.getBoundingClientRect().top + window.scrollY;\n        }\n      }\n\n      const startX = startDragging.x;\n      const startY = startDragging.y;\n      const startClientX = startDragging.clientX;\n      const startClientY = startDragging.clientY;\n      const startScrollTop = startDragging.scrollTop;\n      const pos = {\n        x: startX + (e.clientX - startClientX),\n        y: startY + (e.clientY - startClientY) + (scrollTop - startScrollTop)\n      };\n      dragging.x = pos.x;\n      dragging.y = pos.y;\n      dragging.paddingLeft = paddingLeft;\n      dragging.mousePos = mousePos;\n      dragging.startMousePos = startMousePos;\n\n\n      this.props.setDragProgress(mousePos, dragging);\n\n      const moved = doHandleDrag ? this.handleDrag(dragging, e, CanMoveFn) : false;\n\n      if (!moved) {\n        if (e.preventDefault)\n          e.preventDefault();\n      }\n    };\n\n    onDragEnd = () => {\n      let treeEl = this.props.dragStart.treeEl;\n\n      this.props.setDragEnd();\n\n      treeEl.classList.remove(\"qb-dragging\");\n      document.body.classList.remove(\"qb-dragging\");\n      this._cacheEls = {};\n\n      const target = this.eventTarget || this._getEventTarget();\n      target.removeEventListener(\"mousemove\", this.onDrag);\n      target.removeEventListener(\"mouseup\", this.onDragEnd);\n    };\n    \n\n    handleDrag (dragInfo, e, canMoveFn) {\n      const canMoveBeforeAfterGroup = true;\n      const itemInfo = dragInfo.itemInfo;\n      const paddingLeft = dragInfo.paddingLeft;\n\n      let moveInfo = null;\n      const treeEl = this.props.dragStart.treeEl;\n      const dragId = dragInfo.id;\n      const dragEl = this._getDraggableNodeEl(treeEl);\n      const plhEl = this._getPlaceholderNodeEl(treeEl);\n      let dragRect, plhRect, hovRect, treeRect;\n      if (dragEl && plhEl) {\n        dragRect = dragEl.getBoundingClientRect();\n        plhRect = plhEl.getBoundingClientRect();\n        if (!plhRect.width) {\n          return;\n        }\n        let dragDirs = {hrz: 0, vrt: 0};\n        if (dragRect.top < plhRect.top)\n          dragDirs.vrt = -1; //up\n        else if (dragRect.bottom > plhRect.bottom)\n          dragDirs.vrt = +1; //down\n        if (dragRect.left > plhRect.left)\n          dragDirs.hrz = +1; //right\n        else if (dragRect.left < plhRect.left)\n          dragDirs.hrz = -1; //left\n\n        treeRect = treeEl.getBoundingClientRect();\n        const trgCoord = {\n          x: treeRect.left + (treeRect.right - treeRect.left) / 2,\n          y: dragDirs.vrt >= 0 ? dragRect.bottom : dragRect.top,\n        };\n        let hovCNodeEl;\n        if (e.__mocked_hov_container) {\n          hovCNodeEl = e.__mocked_hov_container;\n        } else {\n          const hovNodeEl = document.elementFromPoint(trgCoord.x, trgCoord.y-1);\n          hovCNodeEl = hovNodeEl ? hovNodeEl.closest(\".group-or-rule-container\") : null;\n          if (!hovCNodeEl && hovNodeEl && hovNodeEl.classList.contains(\"query-builder-container\")) {\n            // fix 2022-01-24 - get root .group-or-rule-container\n            const rootGroupContainer = hovNodeEl?.firstChild?.firstChild;\n            if (rootGroupContainer && rootGroupContainer.classList.contains(\"group-or-rule-container\")) {\n              hovCNodeEl = rootGroupContainer;\n            }\n          }\n        }\n        if (!hovCNodeEl) {\n          logger.log(\"out of tree bounds!\");\n        } else {\n          const isGroup = hovCNodeEl.classList.contains(\"group-container\");\n          const hovNodeId = hovCNodeEl.getAttribute(\"data-id\");\n          const hovEl = hovCNodeEl;\n          let doAppend = false;\n          let doPrepend = false;\n          if (hovEl) {\n            hovRect = hovEl.getBoundingClientRect();\n            const hovHeight = hovRect.bottom - hovRect.top;\n            const hovII = this.tree.items[hovNodeId];\n            let trgRect = null,\n              trgEl = null,\n              trgII = null,\n              altII = null; //for canMoveBeforeAfterGroup\n\n            if (dragDirs.vrt == 0) {\n              trgII = itemInfo;\n              trgEl = plhEl;\n              if (trgEl)\n                trgRect = trgEl.getBoundingClientRect();\n            } else {\n              if (isGroup) {\n                if (dragDirs.vrt > 0) { //down\n                  //take group header (for prepend only)\n                  const hovInnerEl = hovCNodeEl.getElementsByClassName(\"group--header\");\n                  const hovEl2 = hovInnerEl.length ? hovInnerEl[0] : null;\n                  if (hovEl2) {\n                    const hovRect2 = hovEl2.getBoundingClientRect();\n                    const hovHeight2 = hovRect2.bottom - hovRect2.top;\n                    const isOverHover = ((dragRect.bottom - hovRect2.top) > hovHeight2*3/4);\n                    if (isOverHover && hovII.top > dragInfo.itemInfo.top) {\n                      trgII = hovII;\n                      trgRect = hovRect2;\n                      trgEl = hovEl2;\n                      doPrepend = true;\n                    }\n                  }\n                } else if (dragDirs.vrt < 0) { //up\n                  if (hovII.lev >= itemInfo.lev) {\n                    //take whole group\n                    const isClimbToHover = ((hovRect.bottom - dragRect.top) >= 2);\n                    if (isClimbToHover && hovII.top < dragInfo.itemInfo.top) {\n                      trgII = hovII;\n                      trgRect = hovRect;\n                      trgEl = hovEl;\n                      doAppend = true;\n                    }\n                  }\n                }\n                if (!doPrepend && !doAppend || canMoveBeforeAfterGroup) {\n                  //take whole group and check if we can move before/after group\n                  const isOverHover = (dragDirs.vrt < 0 //up\n                    ? ((hovRect.bottom - dragRect.top) > (hovHeight-5))\n                    : ((dragRect.bottom - hovRect.top) > (hovHeight-5)));\n                  if (isOverHover) {\n                    if (!doPrepend && !doAppend) {\n                      trgII = hovII;\n                      trgRect = hovRect;\n                      trgEl = hovEl;\n                    }\n                    if (canMoveBeforeAfterGroup) {\n                      altII = hovII;\n                    }\n                  }\n                }\n              } else {\n                //check if we can move before/after group\n                const isOverHover = (dragDirs.vrt < 0 //up\n                  ? ((hovRect.bottom - dragRect.top) > hovHeight/2)\n                  : ((dragRect.bottom - hovRect.top) > hovHeight/2));\n                if (isOverHover) {\n                  trgII = hovII;\n                  trgRect = hovRect;\n                  trgEl = hovEl;\n                }\n              }\n            }\n\n            const isSamePos = (trgII && trgII.id == dragId);\n            if (trgRect) {\n              const dragLeftOffset = dragRect.left - treeRect.left;\n              const trgLeftOffset = trgRect.left - treeRect.left;\n              const _trgLev = trgLeftOffset / paddingLeft;\n              const dragLev = Math.max(0, Math.round(dragLeftOffset / paddingLeft));\n\n              //find all possible moves\n              let availMoves = [];\n              let altMoves = []; //alternatively can move after/before group, if can't move into it\n              if (isSamePos) {\n                //do nothing\n              } else {\n                if (isGroup) {\n                  if (doAppend) {\n                    availMoves.push([constants.PLACEMENT_APPEND, trgII, trgII.lev+1]);\n                  } else if (doPrepend) {\n                    availMoves.push([constants.PLACEMENT_PREPEND, trgII, trgII.lev+1]);\n                  }\n                  //alt\n                  if (canMoveBeforeAfterGroup && altII) {\n                    // fix 2022-01-24: do prepend/append instead of before/after for root\n                    const isToRoot = altII.lev == 0;\n                    // fix 2022-01-25: fix prepend/append instead of before/after for case_group\n                    const isToCase = altII.type == \"case_group\" && itemInfo.type != \"case_group\";\n                    let prevCaseId = altII.prev && this.tree.items[altII.prev].caseId;\n                    let nextCaseId = altII.next && this.tree.items[altII.next].caseId;\n                    if (itemInfo.caseId == prevCaseId)\n                      prevCaseId = null;\n                    if (itemInfo.caseId == nextCaseId)\n                      nextCaseId = null;\n                    const prevCase = prevCaseId && this.tree.items[prevCaseId];\n                    const nextCase = nextCaseId && this.tree.items[nextCaseId];\n\n                    if (dragDirs.vrt > 0) { //down\n                      if (isToRoot) {\n                        altMoves.push([constants.PLACEMENT_APPEND, altII, altII.lev+1]);\n                      } else if (isToCase && nextCase) {\n                        altMoves.push([constants.PLACEMENT_PREPEND, nextCase, nextCase.lev+1]);\n                      } else {\n                        altMoves.push([constants.PLACEMENT_AFTER, altII, altII.lev]);\n                      }\n                    } else if (dragDirs.vrt < 0) { //up\n                      if (isToRoot) {\n                        altMoves.push([constants.PLACEMENT_PREPEND, altII, altII.lev+1]);\n                      } else if (isToCase && prevCase) {\n                        altMoves.push([constants.PLACEMENT_APPEND, prevCase, prevCase.lev+1]);\n                      } else {\n                        altMoves.push([constants.PLACEMENT_BEFORE, altII, altII.lev]);\n                      }\n                    }\n                  }\n                }\n                if (!doAppend && !doPrepend) {\n                  if (dragDirs.vrt < 0) { //up\n                    availMoves.push([constants.PLACEMENT_BEFORE, trgII, trgII.lev]);\n                  } else if (dragDirs.vrt > 0) { //down\n                    availMoves.push([constants.PLACEMENT_AFTER, trgII, trgII.lev]);\n                  }\n                }\n              }\n              \n              //add case\n              const addCaseII = am => {\n                const toII = am[1];\n                const fromCaseII = itemInfo.caseId ? this.tree.items[itemInfo.caseId] : null;\n                const toCaseII = toII.caseId ? this.tree.items[toII.caseId] : null;\n                return [...am, fromCaseII, toCaseII];\n              };\n              availMoves = availMoves.map(addCaseII);\n              altMoves = altMoves.map(addCaseII);\n\n              //sanitize\n              availMoves = availMoves.filter(am => {\n                const placement = am[0];\n                const trg = am[1];\n                if ((placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER) && trg.parent == null)\n                  return false;\n                if (trg.collapsed && (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND))\n                  return false;\n\n                let isInside = (trg.id == itemInfo.id);\n                if (!isInside) {\n                  let tmp = trg;\n                  while (tmp.parent) {\n                    tmp = this.tree.items[tmp.parent];\n                    if (tmp.id == itemInfo.id) {\n                      isInside = true;\n                      break;\n                    }\n                  }\n                }\n                return !isInside;\n              }).map(am => {\n                const placement = am[0],\n                  toII = am[1],\n                  _lev = am[2],\n                  _fromCaseII = am[3],\n                  _toCaseII = am[4];\n                let toParentII = null;\n                if (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND)\n                  toParentII = toII;\n                else\n                  toParentII = this.tree.items[toII.parent];\n                if (toParentII && toParentII.parent == null)\n                  toParentII = null;\n                am[5] = toParentII;\n                return am;\n              });\n\n              let bestMode = null;\n              let filteredMoves = availMoves.filter(am => this.canMove(itemInfo, am[1], am[0], am[3], am[4], am[5], canMoveFn));\n              if (canMoveBeforeAfterGroup && filteredMoves.length == 0 && altMoves.length > 0) {\n                filteredMoves = altMoves.filter(am => this.canMove(itemInfo, am[1], am[0], am[3], am[4], am[5], canMoveFn));\n              }\n              const levs = filteredMoves.map(am => am[2]);\n              const curLev = itemInfo.lev;\n              const allLevs = levs.concat(curLev);\n              let closestDragLev = null;\n              if (allLevs.indexOf(dragLev) != -1)\n                closestDragLev = dragLev;\n              else if (dragLev > Math.max(...allLevs))\n                closestDragLev = Math.max(...allLevs);\n              else if (dragLev < Math.min(...allLevs))\n                closestDragLev = Math.min(...allLevs);\n              bestMode = filteredMoves.find(am => am[2] == closestDragLev);\n              if (!isSamePos && !bestMode && filteredMoves.length)\n                bestMode = filteredMoves[0];\n              moveInfo = bestMode;\n            }\n          }\n        }\n      }\n\n      if (moveInfo) {\n        this.move(itemInfo, moveInfo[1], moveInfo[0], moveInfo[3]);\n\n        // logger.log(\"DRAG-N-DROP\", JSON.stringify({\n        //   dragRect,\n        //   plhRect,\n        //   treeRect,\n        //   hovRect,\n        //   startMousePos: dragInfo.startMousePos,\n        //   mousePos: dragInfo.mousePos,\n        // }));\n        return true;\n      }\n\n      return false;\n    }\n\n    canMove (fromII, toII, placement, fromCaseII, toCaseII, toParentII, canMoveFn) {\n      if (!fromII || !toII)\n        return false;\n      if (fromII.id === toII.id)\n        return false;\n\n      const { canRegroup, canRegroupCases, maxNesting, maxNumberOfRules, canLeaveEmptyCase } = this.props.config.settings;\n      const newLev = toParentII ? toParentII.lev + 1 : toII.lev;\n      const isBeforeAfter = placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER;\n      const isPend = placement == constants.PLACEMENT_PREPEND || placement == constants.PLACEMENT_APPEND;\n      const isLev1 = isBeforeAfter && toII.lev == 1 || isPend && toII.lev == 0;\n      const isParentChange = fromII.parent != toII.parent;\n      const isStructChange = isPend || isParentChange;\n      // can't move `case_group` anywhere but before/after anoter `case_group`\n      const isForbiddenStructChange = fromII.type == \"case_group\" && !isLev1\n        // can't restruct `rule_group`\n        || fromII.parentType == \"rule_group\" || toII.type == \"rule_group\" || toII.parentType == \"rule_group\" \n        // only `case_group` can be placed under `switch_group`\n        || fromII.type != \"case_group\" && toII.type == \"case_group\" && isBeforeAfter\n        || fromII.type != \"case_group\" && toII.type == \"switch_group\"\n        // can't move rule/group to another case\n        || !canRegroupCases && fromII.caseId != toII.caseId;\n      const isLockedChange = toII.isLocked || fromII.isLocked || toParentII && toParentII.isLocked;\n\n      if (maxNesting && newLev > maxNesting)\n        return false;\n      \n      if (isStructChange && (!canRegroup || isForbiddenStructChange || isLockedChange))\n        return false;\n      \n      if (fromII.type != \"case_group\" && fromII.caseId != toII.caseId) {\n        const isLastFromCase = fromCaseII ? fromCaseII._height == 2 : false;\n        const newRulesInTargetCase = toCaseII ? toCaseII.leafsCount + 1 : 0;\n        if (maxNumberOfRules && newRulesInTargetCase > maxNumberOfRules)\n          return false;\n        if (isLastFromCase && !canLeaveEmptyCase)\n          return false;\n      }\n\n      if (fromII.type == \"case_group\" && (\n        fromII.isDefaultCase || toII.isDefaultCase\n        || toII.type == \"switch_group\" && placement == constants.PLACEMENT_APPEND\n      )) {\n        // leave default case alone\n        return false;\n      }\n\n      let res = true;\n      if (canMoveFn) {\n        res = canMoveFn(fromII.node.toJS(), toII.node.toJS(), placement, toParentII ? toParentII.node.toJS() : null);\n      }\n      return res;\n    }\n\n    move (fromII, toII, placement, toParentII) {\n      if (!this._isUsingLegacyReactDomRender) {\n        _isReorderingTree = true;\n      }\n      //logger.log(\"move\", fromII, toII, placement, toParentII);\n      this.props.actions.moveItem(fromII.path, toII.path, placement);\n    }\n\n    render() {\n      return <Builder\n        {...this.props}\n        onDragStart={this.onDragStart}\n      />;\n    }\n  };\n\n\nexport default (Builder, CanMoveFn = null) => {\n  const ConnectedSortableContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n        dragStart: state.dragStart,\n        mousePos: state.mousePos,\n      };\n    }, {\n      setDragStart: actions.drag.setDragStart,\n      setDragProgress: actions.drag.setDragProgress,\n      setDragEnd: actions.drag.setDragEnd,\n    },\n    null,\n    {\n      context\n    }\n  )(createSortableContainer(Builder, CanMoveFn));\n  ConnectedSortableContainer.displayName = \"ConnectedSortableContainer\";\n\n  return ConnectedSortableContainer;\n};\n\nexport { _isReorderingTree };\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { _isReorderingTree } from \"./SortableContainer\";\nimport classNames from \"classnames\";\n\n\nexport default (className) => (GroupOrRule) =>\n  class Draggable extends PureComponent {\n    static propTypes = {\n      isDraggingTempo: PropTypes.bool,\n      isDraggingMe: PropTypes.bool,\n      onDragStart: PropTypes.func,\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.wrapper = React.createRef();\n    }\n\n    handleDraggerMouseDown = (e) => {\n      var nodeId = this.props.id;\n      var dom = this.wrapper.current;\n        \n      if (this.props.onDragStart) {\n        this.props.onDragStart(nodeId, dom, e);\n      }\n    };\n\n    render () {\n      const {\n        isDraggingTempo,\n        isDraggingMe,\n        dragging,\n        ...otherProps\n      } = this.props;\n      const {\n        isTrueLocked,\n      } = otherProps;\n\n      let styles = {};\n      if (isDraggingMe && isDraggingTempo) {\n        if (_isReorderingTree) {\n          // don't apply old styles for dragging tempo during reorder\n        } else {\n          styles = {\n            top: dragging.y,\n            left: dragging.x,\n            width: dragging.w\n          };\n        }\n      }\n\n      const cn = classNames(className, \"group-or-rule\",\n        isDraggingMe && isDraggingTempo ? \"qb-draggable\" : null,\n        isDraggingMe && !isDraggingTempo ? \"qb-placeholder\" : null,\n        isTrueLocked ? \"locked\" : null\n      );\n\n      return (\n        <div\n          className={cn}\n          style={styles}\n          ref={this.wrapper}\n          data-id={this.props.id}\n        >\n          <GroupOrRule\n            handleDraggerMouseDown={this.handleDraggerMouseDown}\n            isDraggingMe={isDraggingMe}\n            isDraggingTempo={isDraggingTempo}\n            {...otherProps}\n          />\n        </div>\n      );\n    }\n\n  };\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport keys from \"lodash/keys\";\nimport pickBy from \"lodash/pickBy\";\nimport mapValues from \"lodash/mapValues\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nconst {getFieldConfig, getOperatorConfig} = Utils.ConfigUtils;\n\n\nexport default class Operator extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    selectedField: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    readonly: PropTypes.bool,\n    //actions\n    setOperator: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"config\", \"selectedField\", \"selectedOperator\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({config, selectedField, selectedOperator}) {\n    const fieldConfig = getFieldConfig(config, selectedField);\n    const operators = fieldConfig?.operators;\n    const operatorOptions \n      = mapValues(\n        pickBy(\n          config.operators, \n          (item, key) => operators?.indexOf(key) !== -1\n        ), \n        (_opts, op) => getOperatorConfig(config, op, selectedField)\n      );\n      \n    const items = this.buildOptions(config, operatorOptions, operators);\n\n    const isOpSelected = !!selectedOperator;\n    const currOp = isOpSelected ? operatorOptions[selectedOperator] : null;\n    const selectedOpts = currOp || {};\n    const placeholder = this.props.config.settings.operatorPlaceholder;\n    const selectedKey = selectedOperator;\n    const selectedKeys = isOpSelected ? [selectedKey] : null;\n    const selectedPath = selectedKeys;\n    const selectedLabel = selectedOpts.label;\n    \n    return {\n      placeholder, items,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, fieldConfig\n    };\n  }\n\n  buildOptions(config, fields, ops) {\n    if (!fields || !ops)\n      return null;\n\n    return keys(fields).sort((a, b) => (ops.indexOf(a) - ops.indexOf(b))).map(fieldKey => {\n      const field = fields[fieldKey];\n      const label = field.label;\n      return {\n        key: fieldKey,\n        path: fieldKey,\n        label,\n      };\n    });\n  }\n\n  render() {\n    const {config, customProps, setOperator, readonly, id, groupId} = this.props;\n    const {renderOperator} = config.settings;\n    const renderProps = {\n      id,\n      groupId,\n      config, \n      customProps, \n      readonly,\n      setField: setOperator,\n      ...this.meta\n    };\n    if (!renderProps.items)\n      return null;\n    return renderOperator(renderProps);\n  }\n\n\n}\n","import React from \"react\";\n\nconst Col = ({children, ...props}) => (<div {...props}>{children}</div>);\n\nconst dummyFn = () => {};\n\nconst DragIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"gray\" width=\"18px\" height=\"18px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"/>\n  </svg>\n);\n\nconst ConfirmFn = (Cmp) => (\n  props => {\n    const {useConfirm} = props.config.settings;\n    const confirmFn = useConfirm ? useConfirm() : null;\n    return <Cmp {...props} confirmFn={confirmFn} />;\n  }\n);\n\nexport {\n  Col, dummyFn, DragIcon, ConfirmFn\n};\n","import React, { PureComponent } from \"react\";\nimport Operator from \"./Operator\";\nimport {Col} from \"../utils\";\n\n\nexport default class OperatorWrapper extends PureComponent {\n  render() {\n    const {\n      config, selectedField, selectedOperator, setOperator, \n      selectedFieldPartsLabels, showOperator, showOperatorLabel, selectedFieldWidgetConfig, readonly, id, groupId\n    } = this.props;\n    const operator = showOperator\n            && <Col key={\"operators-for-\"+(selectedFieldPartsLabels || []).join(\"_\")} className=\"rule--operator\">\n              { config.settings.showLabels\n                    && <label className=\"rule--label\">{config.settings.operatorLabel}</label>\n              }\n              <Operator\n                key=\"operator\"\n                config={config}\n                selectedField={selectedField}\n                selectedOperator={selectedOperator}\n                setOperator={setOperator}\n                readonly={readonly}\n                id={id}\n                groupId={groupId}\n              />\n            </Col>;\n    const hiddenOperator = showOperatorLabel\n            && <Col key={\"operators-for-\"+(selectedFieldPartsLabels || []).join(\"_\")} className=\"rule--operator\">\n              <div className=\"rule--operator-wrapper\">\n                {config.settings.showLabels\n                  ? <label className=\"rule--label\">&nbsp;</label>\n                  : null}\n                <div className=\"rule--operator-text-wrapper\">\n                  <span className=\"rule--operator-text\">{selectedFieldWidgetConfig.operatorInlineLabel}</span>\n                </div>\n              </div>\n            </Col>;\n    return [\n      operator,\n      hiddenOperator\n    ];\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst {getFieldPath, getFieldPathLabels} = Utils.RuleUtils;\nconst {getFieldConfig} = Utils.ConfigUtils;\n\n\nexport default class Field extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    selectedField: PropTypes.string,\n    parentField: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    //actions\n    setField: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"selectedField\", \"config\", \"parentField\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({selectedField, config, parentField}) {\n    const selectedKey = selectedField;\n    const {maxLabelsLength, fieldSeparatorDisplay, fieldPlaceholder, fieldSeparator} = config.settings;\n    const isFieldSelected = !!selectedField;\n    const placeholder = !isFieldSelected ? truncateString(fieldPlaceholder, maxLabelsLength) : null;\n    const currField = isFieldSelected ? getFieldConfig(config, selectedKey) : null;\n    const selectedOpts = currField || {};\n\n    const selectedKeys = getFieldPath(selectedKey, config);\n    const selectedPath = getFieldPath(selectedKey, config, true);\n    const selectedLabel = this.getFieldLabel(currField, selectedKey, config);\n    const partsLabels = getFieldPathLabels(selectedKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel || parentField)\n      selectedFullLabel = null;\n    const selectedAltLabel = selectedOpts.label2;\n\n    const parentFieldPath = typeof parentField == \"string\" ? parentField.split(fieldSeparator) : parentField;\n    const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n    const sourceFields = parentField ? parentFieldConfig && parentFieldConfig.subfields : config.fields;\n    const items = this.buildOptions(parentFieldPath, config, sourceFields, parentFieldPath);\n\n    return {\n      placeholder, items, parentField,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n    };\n  }\n\n  getFieldLabel(fieldOpts, fieldKey, config) {\n    if (!fieldKey) return null;\n    let fieldSeparator = config.settings.fieldSeparator;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let fieldParts = Array.isArray(fieldKey) ? fieldKey : fieldKey.split(fieldSeparator);\n    let label = fieldOpts && fieldOpts.label || last(fieldParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  buildOptions(parentFieldPath, config, fields, path = null, optGroupLabel = null) {\n    if (!fields)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    return keys(fields).map(fieldKey => {\n      const field = fields[fieldKey];\n      const label = this.getFieldLabel(field, fieldKey, config);\n      const partsLabels = getFieldPathLabels(prefix+fieldKey, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label || parentFieldPath)\n        fullLabel = null;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n      const subpath = (path ? path : []).concat(fieldKey);\n      const disabled = field.disabled;\n            \n      if (field.hideForSelect)\n        return undefined;\n\n      if (field.type == \"!struct\") {\n        return {\n          disabled,\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          items: this.buildOptions(parentFieldPath, config, field.subfields, subpath, label)\n        };\n      } else {\n        return {\n          disabled,\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          grouplabel: optGroupLabel\n        };\n      }\n    }).filter(o => !!o);\n  }\n\n  render() {\n    const {config, customProps, setField, readonly, id, groupId} = this.props;\n    const {renderField} = config.settings;\n    const renderProps = {\n      id,\n      groupId,\n      config, \n      customProps, \n      readonly,\n      setField,\n      ...this.meta\n    };\n    return renderField(renderProps);\n  }\n\n}\n","import React, { PureComponent } from \"react\";\nimport Field from \"./Field\";\nimport {Col} from \"../utils\";\n\n\nexport default class FieldWrapper extends PureComponent {\n  render() {\n    const {config, selectedField, setField, parentField, classname, readonly, id, groupId} = this.props;\n    return (\n      <Col className={classname}>\n        { config.settings.showLabels\n                    && <label className=\"rule--label\">{config.settings.fieldLabel}</label>\n        }\n        <Field\n          config={config}\n          selectedField={selectedField}\n          parentField={parentField}\n          setField={setField}\n          customProps={config.settings.customFieldSelectProps}\n          readonly={readonly}\n          id={id}\n          groupId={groupId}\n        />\n      </Col>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { getTitleInListValues } = Utils.ListUtils;\n\nexport default ({\n  delta, isFuncArg, valueSrc,\n  value: immValue, valueError: immValueError, asyncListValues,\n  isSpecialRange, fieldDefinition,\n  widget, widgetDefinition, widgetValueLabel, valueLabels, textSeparators, setValueHandler,\n  config, field, operator, readonly, parentField, parentFuncs, id, groupId\n}) => {\n  const {factory: widgetFactory, ...fieldWidgetProps} = widgetDefinition;\n  const isConst = isFuncArg && fieldDefinition.valueSources && fieldDefinition.valueSources.length == 1 && fieldDefinition.valueSources[0] == \"const\";\n  const defaultValue = fieldDefinition.defaultValue;\n\n  if (!widgetFactory) {\n    return \"?\";\n  }\n    \n  let value = isSpecialRange \n    ? [immValue.get(0), immValue.get(1)] \n    : (immValue ? immValue.get(delta) : undefined);\n  const valueError = immValueError && (isSpecialRange \n    ? [immValueError.get(0), immValueError.get(1)]\n    : immValueError.get(delta)\n  ) || null;\n  if (isSpecialRange && value[0] === undefined && value[1] === undefined)\n    value = undefined;\n  const {fieldSettings} = fieldDefinition || {};\n  const widgetProps = Object.assign({}, fieldWidgetProps, fieldSettings, {\n    config: config,\n    field: field,\n    parentField: parentField,\n    parentFuncs: parentFuncs,\n    fieldDefinition: fieldDefinition,\n    operator: operator,\n    delta: delta,\n    isSpecialRange: isSpecialRange,\n    isFuncArg: isFuncArg,\n    value: value,\n    valueError: valueError,\n    label: widgetValueLabel.label,\n    placeholder: widgetValueLabel.placeholder,\n    placeholders: valueLabels ? valueLabels.placeholder : null,\n    textSeparators: textSeparators,\n    setValue: setValueHandler,\n    readonly: readonly,\n    asyncListValues: asyncListValues,\n    id, groupId\n  });\n    \n  if (widget == \"field\") {\n    //\n  }\n\n  if (isConst && defaultValue) {\n    const listValues = fieldSettings.treeValues || fieldSettings.listValues;\n    if (typeof defaultValue == \"boolean\") {\n      return defaultValue ? (widgetProps.labelYes || \"YES\") : (widgetProps.labelNo || \"NO\");\n    } else if (listValues) {\n      if (Array.isArray(defaultValue))\n        return defaultValue.map(v => getTitleInListValues(listValues, v) || v).join(\", \");\n      else\n        return (getTitleInListValues(listValues, defaultValue) || defaultValue);  \n    }\n    return \"\"+defaultValue;\n  }\n    \n  return widgetFactory(widgetProps);\n};\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport range from \"lodash/range\";\nimport {defaultValue} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport pick from \"lodash/pick\";\nimport WidgetFactory from \"./WidgetFactory\";\nimport {Col} from \"../utils\";\nconst {getFieldConfig, getOperatorConfig, getFieldWidgetConfig} = Utils.ConfigUtils;\nconst {getValueSourcesForFieldOp, getWidgetsForFieldOp, getWidgetForFieldOp, getValueLabel} = Utils.RuleUtils;\nconst { createListFromArray } = Utils.DefaultUtils;\n\nconst funcArgDummyOpDef = {cardinality: 1};\n\nexport default class Widget extends Component {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    value: PropTypes.any, //instanceOf(Immutable.List)\n    valueSrc: PropTypes.any, //instanceOf(Immutable.List)\n    valueError: PropTypes.any,\n    field: PropTypes.string,\n    operator: PropTypes.string,\n    readonly: PropTypes.bool,\n    asyncListValues: PropTypes.array,\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    //actions\n    setValue: PropTypes.func,\n    setValueSrc: PropTypes.func,\n    // for isFuncArg\n    isFuncArg: PropTypes.bool,\n    fieldFunc: PropTypes.string,\n    fieldArg: PropTypes.string,\n    leftField: PropTypes.string,\n    // for RuleGroupExt\n    isForRuleGruop: PropTypes.bool,\n    parentField: PropTypes.string,\n    // for func in func\n    parentFuncs: PropTypes.array,\n    // for case_value\n    isCaseValue: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\n      \"config\", \"field\", \"fieldFunc\", \"fieldArg\", \"leftField\", \"operator\", \"valueSrc\", \"isFuncArg\", \"asyncListValues\"\n    ];\n    const needUpdateMeta = !this.meta \n          || keysForMeta\n            .map(k => (\n              nextProps[k] !== prevProps[k] \n                  //tip: for isFuncArg we need to wrap value in Imm list\n                  || k == \"isFuncArg\" && nextProps[\"isFuncArg\"] && nextProps[\"value\"] !== prevProps[\"value\"])\n            )\n            .filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  _setValue = (isSpecialRange, delta, widgetType, value, asyncListValues, __isInternal) => {\n    if (isSpecialRange && Array.isArray(value)) {\n      const oldRange = [this.props.value.get(0), this.props.value.get(1)];\n      if (oldRange[0] != value[0])\n        this.props.setValue(0, value[0], widgetType, asyncListValues, __isInternal);\n      if (oldRange[1] != value[1])\n        this.props.setValue(1, value[1], widgetType, asyncListValues, __isInternal);\n    } else {\n      this.props.setValue(delta, value, widgetType, asyncListValues, __isInternal);\n    }\n  };\n\n  _onChangeValueSrc = (delta, srcKey) => {\n    this.props.setValueSrc(delta, srcKey);\n  };\n\n  getMeta({\n    config, field: simpleField, fieldFunc, fieldArg, operator, valueSrc: valueSrcs, value: values, \n    isForRuleGruop, isCaseValue, isFuncArg, leftField, asyncListValues\n  }) {\n    const field = isFuncArg ? {func: fieldFunc, arg: fieldArg} : simpleField;\n    let iValueSrcs = valueSrcs;\n    let iValues = values;\n    if (isFuncArg || isForRuleGruop || isCaseValue) {\n      iValueSrcs = createListFromArray([valueSrcs]);\n      iValues = createListFromArray([values]);\n    }\n\n    const fieldDefinition = getFieldConfig(config, field);\n    const defaultWidget = getWidgetForFieldOp(config, field, operator);\n    const _widgets = getWidgetsForFieldOp(config, field, operator);\n    const operatorDefinition = isFuncArg ? funcArgDummyOpDef : getOperatorConfig(config, operator, field);\n    if ((fieldDefinition == null || operatorDefinition == null) && !isCaseValue) {\n      return null;\n    }\n    const isSpecialRange = operatorDefinition?.isSpecialRange;\n    const isSpecialRangeForSrcField = isSpecialRange && (iValueSrcs.get(0) == \"field\" || iValueSrcs.get(1) == \"field\");\n    const isTrueSpecialRange = isSpecialRange && !isSpecialRangeForSrcField;\n    const cardinality = isTrueSpecialRange ? 1 : defaultValue(operatorDefinition?.cardinality, 1);\n    if (cardinality === 0) {\n      return null;\n    }\n\n    const valueSources = getValueSourcesForFieldOp(config, field, operator, fieldDefinition, isFuncArg ? leftField : null);\n\n    const widgets = range(0, cardinality).map(delta => {\n      const valueSrc = iValueSrcs.get(delta) || null;\n      let widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      let widgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc);\n      if (isSpecialRangeForSrcField) {\n        widget = widgetDefinition.singleWidget;\n        widgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc);\n      }\n      const widgetType = widgetDefinition?.type;\n      const valueLabel = getValueLabel(config, field, operator, delta, valueSrc, isTrueSpecialRange);\n      const widgetValueLabel = getValueLabel(config, field, operator, delta, null, isTrueSpecialRange);\n      const sepText = operatorDefinition?.textSeparators ? operatorDefinition?.textSeparators[delta] : null;\n      const setValueSrcHandler = this._onChangeValueSrc.bind(this, delta);\n\n      let valueLabels = null;\n      let textSeparators = null;\n      if (isSpecialRange) {\n        valueLabels = [\n          getValueLabel(config, field, operator, 0),\n          getValueLabel(config, field, operator, 1)\n        ];\n        valueLabels = {\n          placeholder: [ valueLabels[0].placeholder, valueLabels[1].placeholder ],\n          label: [ valueLabels[0].label, valueLabels[1].label ],\n        };\n        textSeparators = operatorDefinition?.textSeparators;\n      }\n\n      const setValueHandler = this._setValue.bind(this, isSpecialRange, delta, widgetType);\n\n      return {\n        valueSrc,\n        valueLabel,\n        widget,\n        sepText,\n        setValueSrcHandler,\n        widgetDefinition,\n        widgetValueLabel,\n        valueLabels,\n        textSeparators,\n        setValueHandler\n      };\n    });\n      \n    return {\n      defaultWidget,\n      fieldDefinition,\n      operatorDefinition,\n      isSpecialRange: isTrueSpecialRange,\n      cardinality,\n      valueSources,\n      widgets,\n      iValues, //correct for isFuncArg\n      aField: field, //correct for isFuncArg\n      asyncListValues,\n    };\n  }\n\n  renderWidget = (delta, meta, props) => {\n    const {config, isFuncArg, leftField, operator, value: values, valueError, readonly, parentField, parentFuncs, id, groupId} = props;\n    const {settings} = config;\n    const { widgets, iValues, aField } = meta;\n    const value = isFuncArg ? iValues : values;\n    const field = isFuncArg ? leftField : aField;\n    const {valueSrc, valueLabel} = widgets[delta];\n \n    const widgetLabel = settings.showLabels\n      ? <label className=\"rule--label\">{valueLabel.label}</label>\n      : null;\n\n    return (\n      <div key={\"widget-\"+field+\"-\"+delta} className=\"widget--widget\">\n        {valueSrc == \"func\" ? null : widgetLabel}\n        <WidgetFactory\n          id={id}\n          groupId={groupId}\n          valueSrc={valueSrc}\n          delta={delta}\n          value={value}\n          valueError={valueError}\n          isFuncArg={isFuncArg}\n          {...pick(meta, [\"isSpecialRange\", \"fieldDefinition\", \"asyncListValues\"])}\n          {...pick(widgets[delta], [\"widget\", \"widgetDefinition\", \"widgetValueLabel\", \"valueLabels\", \"textSeparators\", \"setValueHandler\"])}\n          config={config}\n          field={field}\n          parentField={parentField}\n          parentFuncs={parentFuncs}\n          operator={operator}\n          readonly={readonly}\n        />\n      </div>\n    );\n  };\n\n  renderValueSources = (delta, meta, props) => {\n    const {config, isFuncArg, leftField, operator, readonly} = props;\n    const {settings} = config;\n    const { valueSources, widgets, aField } = meta;\n    const field = isFuncArg ? leftField : aField;\n    const {valueSrc, setValueSrcHandler} = widgets[delta];\n    const {valueSourcesInfo, renderValueSources: ValueSources} = settings;\n    const valueSourcesOptions = valueSources.map(srcKey => [srcKey, {\n      label: valueSourcesInfo[srcKey].label\n    }]);\n\n    const sourceLabel = settings.showLabels\n      ? <label className=\"rule--label\">&nbsp;</label>\n      : null;\n\n    return valueSources.length > 1 && !readonly\n      && <div key={\"valuesrc-\"+field+\"-\"+delta} className=\"widget--valuesrc\">\n        {sourceLabel}\n        <ValueSources\n          key={\"valuesrc-\"+delta}\n          delta={delta}\n          valueSources={valueSourcesOptions}\n          valueSrc={valueSrc}\n          config={config}\n          field={field}\n          operator={operator}\n          setValueSrc={setValueSrcHandler}\n          readonly={readonly}\n          title={settings.valueSourcesPopupTitle}\n        />\n      </div>;\n  };\n\n  renderSep = (delta, meta, props) => {\n    const {config} = props;\n    const {widgets} = meta;\n    const {settings} = config;\n    const {sepText} = widgets[delta];\n\n    const sepLabel = settings.showLabels\n      ? <label className=\"rule--label\">&nbsp;</label>\n      : null;\n\n    return sepText\n      && <div key={\"widget-separators-\"+delta} className=\"widget--sep\" >\n        {sepLabel}\n        <span>{sepText}</span>\n      </div>;\n  };\n\n  renderWidgetDelta = (delta) => {\n    const sep = this.renderSep(delta, this.meta, this.props);\n    const sources = this.renderValueSources(delta, this.meta, this.props);\n    const widgetCmp = this.renderWidget(delta, this.meta, this.props);\n\n    return [\n      sep,\n      sources,\n      widgetCmp,\n    ];\n  };\n\n  render() {\n    if (!this.meta) return null;\n    const { defaultWidget, cardinality } = this.meta;\n    if (!defaultWidget) return null;\n    const name = defaultWidget;\n\n    return (\n      <Col\n        className={`rule--widget rule--widget--${name.toUpperCase()}`}\n        key={\"widget-col-\"+name}\n      >\n        {range(0, cardinality).map(this.renderWidgetDelta)}\n      </Col>\n    );\n  }\n\n}\n","import React, { PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nconst {getOperatorConfig} = Utils.ConfigUtils;\n\nexport default class OperatorOptions extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    operatorOptions: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    selectedField: PropTypes.string.isRequired,\n    selectedOperator: PropTypes.string.isRequired,\n    readonly: PropTypes.bool,\n    //actions\n    setOperatorOption: PropTypes.func.isRequired,\n  };\n\n  render() {\n    if (!this.props.selectedOperator)\n      return null;\n    const operatorDefinitions = getOperatorConfig(this.props.config, this.props.selectedOperator, this.props.selectedField);\n    if (typeof operatorDefinitions.options === \"undefined\") {\n      return null;\n    }\n\n    const { factory: optionsFactory, ...basicOptionsProps } = operatorDefinitions.options;\n    const optionsProps = Object.assign({}, basicOptionsProps, {\n      config: this.props.config,\n      field: this.props.selectedField,\n      operator: this.props.selectedOperator,\n      options: this.props.operatorOptions,\n      setOption: this.props.setOperatorOption,\n      readonly: this.props.readonly,\n    });\n    const optionsCmp = optionsFactory(optionsProps);\n    const name = this.props.selectedOperator;\n\n    return (\n      <div className={`rule--operator rule--operator--${name.toUpperCase()}`}>\n        {optionsCmp}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport RuleContainer from \"../containers/RuleContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport OperatorWrapper from \"../rule/OperatorWrapper\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport Widget from \"../rule/Widget\";\nimport OperatorOptions from \"../rule/OperatorOptions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, DragIcon, dummyFn, ConfirmFn} from \"../utils\";\nimport classNames from \"classnames\";\nconst {getFieldConfig, getOperatorConfig, getFieldWidgetConfig} = Utils.ConfigUtils;\nconst {getFieldPathLabels} = Utils.RuleUtils;\n\n\nclass Rule extends Component {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    selectedField: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    operatorOptions: PropTypes.object,\n    config: PropTypes.object.isRequired,\n    value: PropTypes.any, //depends on widget\n    valueSrc: PropTypes.any,\n    asyncListValues: PropTypes.array,\n    isDraggingMe: PropTypes.bool,\n    isDraggingTempo: PropTypes.bool,\n    parentField: PropTypes.string, //from RuleGroup\n    valueError: PropTypes.any,\n    isLocked: PropTypes.bool,\n    isTrueLocked: PropTypes.bool,\n    //path: PropTypes.instanceOf(Immutable.List),\n    //actions\n    handleDraggerMouseDown: PropTypes.func,\n    setField: PropTypes.func,\n    setOperator: PropTypes.func,\n    setOperatorOption: PropTypes.func,\n    setLock: PropTypes.func,\n    removeSelf: PropTypes.func,\n    setValue: PropTypes.func,\n    setValueSrc: PropTypes.func,\n    reordableNodesCnt: PropTypes.number,\n    totalRulesCnt: PropTypes.number,\n    parentReordableNodesCnt: PropTypes.number,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.removeSelf = this.removeSelf.bind(this);\n    this.setLock = this.setLock.bind(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"selectedField\", \"selectedOperator\", \"config\", \"reordableNodesCnt\", \"isLocked\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({selectedField, selectedOperator, config, reordableNodesCnt, isLocked}) {\n    const selectedFieldPartsLabels = getFieldPathLabels(selectedField, config);\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    const isSelectedGroup = selectedFieldConfig && selectedFieldConfig.type == \"!struct\";\n    const isFieldAndOpSelected = selectedField && selectedOperator && !isSelectedGroup;\n    const selectedOperatorConfig = getOperatorConfig(config, selectedOperator, selectedField);\n    const selectedOperatorHasOptions = selectedOperatorConfig && selectedOperatorConfig.options != null;\n    const selectedFieldWidgetConfig = getFieldWidgetConfig(config, selectedField, selectedOperator) || {};\n    const hideOperator = selectedFieldWidgetConfig.hideOperator;\n\n    const showDragIcon = config.settings.canReorder && reordableNodesCnt > 1 && !isLocked;\n    const showOperator = selectedField && !hideOperator;\n    const showOperatorLabel = selectedField && hideOperator && selectedFieldWidgetConfig.operatorInlineLabel;\n    const showWidget = isFieldAndOpSelected;\n    const showOperatorOptions = isFieldAndOpSelected && selectedOperatorHasOptions;\n\n    return {\n      selectedFieldPartsLabels, selectedFieldWidgetConfig,\n      showDragIcon, showOperator, showOperatorLabel, showWidget, showOperatorOptions\n    };\n  }\n\n  setLock(lock) {\n    this.props.setLock(lock);\n  }\n\n  removeSelf() {\n    const {confirmFn} = this.props;\n    const {renderConfirm, removeRuleConfirmOptions: confirmOptions} = this.props.config.settings;\n    const doRemove = () => {\n      this.props.removeSelf();\n    };\n    if (confirmOptions && !this.isEmptyCurrentRule()) {\n      renderConfirm({...confirmOptions,\n        onOk: doRemove,\n        onCancel: null,\n        confirmFn: confirmFn\n      });\n    } else {\n      doRemove();\n    }\n  }\n\n  isEmptyCurrentRule() {\n    return !(\n      this.props.selectedField !== null\n            && this.props.selectedOperator !== null\n            && this.props.value.filter((val) => val !== undefined).size > 0\n    );\n  }\n\n  renderField() {\n    const {config, isLocked} = this.props;\n    const { immutableFieldsMode } = config.settings;\n\n    return <FieldWrapper\n      key=\"field\"\n      classname={\"rule--field\"}\n      config={config}\n      selectedField={this.props.selectedField}\n      setField={!immutableFieldsMode ? this.props.setField : dummyFn}\n      parentField={this.props.parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  renderOperator () {\n    const {config, isLocked} = this.props;\n    const {\n      selectedFieldPartsLabels, selectedFieldWidgetConfig, showOperator, showOperatorLabel\n    } = this.meta;\n    const { immutableOpsMode } = config.settings;\n\n    return <OperatorWrapper\n      key=\"operator\"\n      config={config}\n      selectedField={this.props.selectedField}\n      selectedOperator={this.props.selectedOperator}\n      setOperator={!immutableOpsMode ? this.props.setOperator : dummyFn}\n      selectedFieldPartsLabels={selectedFieldPartsLabels}\n      showOperator={showOperator}\n      showOperatorLabel={showOperatorLabel}\n      selectedFieldWidgetConfig={selectedFieldWidgetConfig}\n      readonly={immutableOpsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  renderWidget() {\n    const {config, valueError, isLocked} = this.props;\n    const { showWidget } = this.meta;\n    const { immutableValuesMode } = config.settings;\n    if (!showWidget) return null;\n\n    const widget = <Widget\n      key=\"values\"\n      field={this.props.selectedField}\n      parentField={this.props.parentField}\n      operator={this.props.selectedOperator}\n      value={this.props.value}\n      valueSrc={this.props.valueSrc}\n      asyncListValues={this.props.asyncListValues}\n      valueError={valueError}\n      config={config}\n      setValue={!immutableValuesMode ? this.props.setValue : dummyFn}\n      setValueSrc={!immutableValuesMode ? this.props.setValueSrc : dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n\n    return (\n      <Col key={\"widget-for-\"+this.props.selectedOperator} className=\"rule--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderOperatorOptions() {\n    const {config} = this.props;\n    const { showOperatorOptions } = this.meta;\n    const { immutableOpsMode, immutableValuesMode } = config.settings;\n    if (!showOperatorOptions) return null;\n\n    const opOpts = <OperatorOptions\n      key=\"operatorOptions\"\n      selectedField={this.props.selectedField}\n      selectedOperator={this.props.selectedOperator}\n      operatorOptions={this.props.operatorOptions}\n      setOperatorOption={!immutableOpsMode ? this.props.setOperatorOption : dummyFn}\n      config={config}\n      readonly={immutableValuesMode}\n    />;\n\n    return (\n      <Col key={\"op-options-for-\"+this.props.selectedOperator} className=\"rule--operator-options\">\n        {opOpts}\n      </Col>\n    );\n  }\n\n  renderBeforeWidget() {\n    const {config} = this.props;\n    const { renderBeforeWidget } = config.settings;\n    return renderBeforeWidget \n        && <Col key={\"before-widget-for-\" +this.props.selectedOperator} className=\"rule--before-widget\">\n          {typeof renderBeforeWidget === \"function\" ? renderBeforeWidget(this.props) : renderBeforeWidget}\n        </Col>;\n  }\n\n  renderAfterWidget() {\n    const {config} = this.props;\n    const { renderAfterWidget } = config.settings;\n    return renderAfterWidget \n        && <Col key={\"after-widget-for-\" +this.props.selectedOperator} className=\"rule--after-widget\">\n          {typeof renderAfterWidget === \"function\" ? renderAfterWidget(this.props) : renderAfterWidget}\n        </Col>;\n  }\n\n  renderError() {\n    const {config, valueError} = this.props;\n    const { renderRuleError, showErrorMessage } = config.settings;\n    const oneValueError = valueError && valueError.toArray().filter(e => !!e).shift() || null;\n    return showErrorMessage && oneValueError \n        && <div className=\"rule--error\">\n          {renderRuleError ? renderRuleError({error: oneValueError}) : oneValueError}\n        </div>;\n  }\n\n  renderDrag() {\n    const { showDragIcon } = this.meta;\n\n    return showDragIcon\n        && <span\n          key=\"rule-drag-icon\"\n          className={\"qb-drag-handler rule--drag-handler\"}\n          onMouseDown={this.props.handleDraggerMouseDown}\n        ><DragIcon /> </span>;\n  }\n\n  renderDel() {\n    const {config, isLocked} = this.props;\n    const {\n      deleteLabel, \n      immutableGroupsMode, \n      renderButton: Btn,\n      canDeleteLocked\n    } = config.settings;\n\n    return !immutableGroupsMode && (!isLocked || isLocked && canDeleteLocked) && (\n      <Btn \n        type=\"delRule\" onClick={this.removeSelf} label={deleteLabel} config={config}\n      />\n    );\n  }\n\n  renderLock() {\n    const {config, isLocked, isTrueLocked, id} = this.props;\n    const {\n      lockLabel, lockedLabel, showLock,\n      renderSwitch: Switch\n    } = config.settings;\n      \n    return showLock && !(isLocked && !isTrueLocked) && (\n      <Switch \n        type=\"lock\" id={id} value={isLocked} setValue={this.setLock} label={lockLabel} checkedLabel={lockedLabel} hideLabel={true} config={config}\n      />\n    );\n  }\n\n  render () {\n    const { showOperatorOptions, selectedFieldWidgetConfig } = this.meta;\n    const { valueSrc, value, config } = this.props;\n    const canShrinkValue = valueSrc.first() == \"value\" && !showOperatorOptions && value.size == 1 && selectedFieldWidgetConfig.fullWidth;\n    const { renderButtonGroup: BtnGrp } = config.settings;\n\n    const parts = [\n      this.renderField(),\n      this.renderOperator(),\n      this.renderBeforeWidget(),\n      this.renderWidget(),\n      this.renderAfterWidget(),\n      this.renderOperatorOptions(),\n    ];\n    const body = <div key=\"rule-body\" className={classNames(\"rule--body\", canShrinkValue && \"can--shrink--value\")}>{parts}</div>;\n\n    const error = this.renderError();\n    const drag = this.renderDrag();\n    const lock = this.renderLock();\n    const del = this.renderDel();\n      \n    return (\n      <>\n        {drag}\n        <div className=\"rule--body--wrapper\">\n          {body}{error}\n        </div>\n        <div className=\"rule--header\">\n          <BtnGrp config={config}>\n            {lock}\n            {del}\n          </BtnGrp>\n        </div>\n      </>\n    );\n  }\n\n}\n\n\nexport default RuleContainer(Draggable(\"rule\")(ConfirmFn(Rule)));\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport mapValues from \"lodash/mapValues\";\nimport context from \"../../stores/context\";\nimport {pureShouldComponentUpdate, useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {connect} from \"react-redux\";\nconst {defaultGroupConjunction} = Utils.DefaultUtils;\n\n\nconst createGroupContainer = (Group) => \n  class GroupContainer extends Component {\n    static propTypes = {\n      //tree: PropTypes.instanceOf(Immutable.Map).isRequired,\n      config: PropTypes.object.isRequired,\n      actions: PropTypes.object.isRequired, //{setConjunction: Funciton, removeGroup, addGroup, addRule, ...}\n      path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n      id: PropTypes.string.isRequired,\n      groupId: PropTypes.string,\n      not: PropTypes.bool,\n      conjunction: PropTypes.string,\n      children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n      onDragStart: PropTypes.func,\n      reordableNodesCnt: PropTypes.number,\n      field: PropTypes.string, // for RuleGroup\n      parentField: PropTypes.string, //from RuleGroup\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n      //connected:\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isDraggingTempo: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      useOnPropsChanged(this);\n\n      this.selectedConjunction = this._selectedConjunction(props);\n      this.conjunctionOptions = this._getConjunctionOptions(props);\n      this.dummyFn.isDummyFn = true;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          const draggingId = (nextProps.dragging.id || prevProps.dragging.id);\n          const isDraggingMe = draggingId == nextProps.id;\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (k == \"dragging\" && !isDraggingMe) {\n              changed = false; //dragging another item -> ignore\n            }\n            if (changed) {\n              chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    onPropsChanged(nextProps) {\n      const {config, id, conjunction} = nextProps;\n      const oldConfig = this.props.config;\n      const oldConjunction = this.props.conjunction;\n      if (oldConfig != config || oldConjunction != conjunction) {\n        this.selectedConjunction = this._selectedConjunction(nextProps);\n        this.conjunctionOptions = this._getConjunctionOptions(nextProps);\n      }\n    }\n\n    _getConjunctionOptions (props) {\n      return mapValues(props.config.conjunctions, (item, index) => ({\n        id: `conjunction-${props.id}-${index}`,\n        name: `conjunction[${props.id}]`,\n        key: index,\n        label: item.label,\n        checked: index === this._selectedConjunction(props),\n      }));\n    }\n\n    _selectedConjunction = (props) => {\n      props = props || this.props;\n      return props.conjunction || defaultGroupConjunction(props.config, props.field);\n    };\n\n    setConjunction = (conj = null) => {\n      this.props.actions.setConjunction(this.props.path, conj);\n    };\n\n    setNot = (not = null) => {\n      this.props.actions.setNot(this.props.path, not);\n    };\n\n    setLock = (lock = null) => {\n      this.props.actions.setLock(this.props.path, lock);\n    };\n\n    dummyFn = () => {};\n\n    removeSelf = () => {\n      this.props.actions.removeGroup(this.props.path);\n    };\n\n    addGroup = () => {\n      this.props.actions.addGroup(this.props.path);\n    };\n\n    addCaseGroup = () => {\n      this.props.actions.addCaseGroup(this.props.path);\n    };\n\n    addDefaultCaseGroup = () => {\n      this.props.actions.addDefaultCaseGroup(this.props.path);\n    };\n\n    addRule = () => {\n      this.props.actions.addRule(this.props.path);\n    };\n\n    // for RuleGroup\n    setField = (field) => {\n      this.props.actions.setField(this.props.path, field);\n    };\n\n    // for RuleGroupExt\n    setOperator = (operator) => {\n      this.props.actions.setOperator(this.props.path, operator);\n    };\n\n    setValue = (delta, value, type) => {\n      this.props.actions.setValue(this.props.path, delta, value, type);\n    };\n\n    render() {\n      const isDraggingMe = this.props.dragging.id == this.props.id;\n      const currentNesting = this.props.path.size;\n      const maxNesting = this.props.config.settings.maxNesting;\n      const isInDraggingTempo = !isDraggingMe && this.props.isDraggingTempo;\n\n      // Don't allow nesting further than the maximum configured depth and don't\n      // allow removal of the root group.\n      const allowFurtherNesting = typeof maxNesting === \"undefined\" || currentNesting < maxNesting;\n      const isRoot = currentNesting == 1;\n      return (\n        <div\n          className={\"group-or-rule-container group-container\"}\n          data-id={this.props.id}\n        >\n          {[\n            isDraggingMe ? <Group\n              key={\"dragging\"}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={true}\n              isDraggingTempo={true}\n              dragging={this.props.dragging}\n              isRoot={isRoot}\n              allowFurtherNesting={allowFurtherNesting}\n              conjunctionOptions={this.conjunctionOptions}\n              not={this.props.not}\n              selectedConjunction={this.selectedConjunction}\n              setConjunction={this.dummyFn}\n              setNot={this.dummyFn}\n              setLock={this.dummyFn}\n              removeSelf={this.dummyFn}\n              addGroup={this.dummyFn}\n              addCaseGroup={this.dummyFn}\n              addDefaultCaseGroup={this.dummyFn}\n              addRule={this.dummyFn}\n              setField={this.dummyFn}\n              setOperator={this.dummyFn}\n              setValue={this.dummyFn}\n              value={this.props.value || null}\n              config={this.props.config}\n              children1={this.props.children1}\n              actions={this.props.actions}\n              //tree={this.props.tree}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              selectedField={this.props.field || null}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            /> : null\n            ,\n            <Group\n              key={this.props.id}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={isDraggingMe}\n              isDraggingTempo={isInDraggingTempo}\n              onDragStart={this.props.onDragStart}\n              isRoot={isRoot}\n              allowFurtherNesting={allowFurtherNesting}\n              conjunctionOptions={this.conjunctionOptions}\n              not={this.props.not}\n              selectedConjunction={this.selectedConjunction}\n              setConjunction={isInDraggingTempo ? this.dummyFn : this.setConjunction}\n              setNot={isInDraggingTempo ? this.dummyFn : this.setNot}\n              setLock={isInDraggingTempo ? this.dummyFn : this.setLock}\n              removeSelf={isInDraggingTempo ? this.dummyFn : this.removeSelf}\n              addGroup={isInDraggingTempo ? this.dummyFn : this.addGroup}\n              addCaseGroup={isInDraggingTempo ? this.dummyFn : this.addCaseGroup}\n              addDefaultCaseGroup={isInDraggingTempo ? this.dummyFn : this.addDefaultCaseGroup}\n              addRule={isInDraggingTempo ? this.dummyFn : this.addRule}\n              setField={isInDraggingTempo ? this.dummyFn : this.setField}\n              setOperator={isInDraggingTempo ? this.dummyFn : this.setOperator}\n              setValue={isInDraggingTempo ? this.dummyFn : this.setValue}\n              value={this.props.value || null}\n              config={this.props.config}\n              children1={this.props.children1}\n              actions={this.props.actions}\n              //tree={this.props.tree}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              selectedField={this.props.field || null}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            />\n          ]}\n        </div>\n      );\n    }\n\n  };\n\n\nexport default (Group) => {\n  const ConnectedGroupContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n      };\n    },\n    null,\n    null,\n    {\n      context\n    }\n  )(createGroupContainer(Group));\n  ConnectedGroupContainer.displayName = \"ConnectedGroupContainer\";\n\n  return ConnectedGroupContainer;\n};\n","import React, { PureComponent } from \"react\";\n\nconst groupActionsPositionList = {\n  topLeft: \"group--actions--tl\",\n  topCenter: \"group--actions--tc\",\n  topRight: \"group--actions--tr\",\n  bottomLeft: \"group--actions--bl\",\n  bottomCenter: \"group--actions--bc\",\n  bottomRight: \"group--actions--br\"\n};\nconst defaultPosition = \"topRight\";\n\n\nexport class GroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, addGroup, removeSelf, setLock, isLocked, isTrueLocked, id,\n      canAddGroup, canAddRule, canDeleteGroup\n    } = this.props;\n    const {\n      immutableGroupsMode, addRuleLabel, addGroupLabel, delGroupLabel, groupActionsPosition, \n      renderButton: Btn, renderSwitch: Switch, renderButtonGroup: BtnGrp,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const position = groupActionsPositionList[groupActionsPosition || defaultPosition];\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn\n      type=\"addRule\" onClick={addRule} label={addRuleLabel} readonly={isLocked} config={config}\n    />;\n    const addGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type=\"addGroup\" onClick={addGroup} label={addGroupLabel} readonly={isLocked} config={config}\n    />;\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn\n      type=\"delGroup\" onClick={removeSelf} label={delGroupLabel} config={config}\n    />;\n\n    return (\n      <div className={`group--actions ${position}`}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {addGroupBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport startsWith from \"lodash/startsWith\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport classNames from \"classnames\";\nimport { Item } from \"./Item\";\nimport {GroupActions} from \"./GroupActions\";\nimport {ConfirmFn, DragIcon, dummyFn} from \"../utils\";\n\nconst defaultPosition = \"topRight\";\n\n\nexport class BasicGroup extends Component {\n  static propTypes = {\n    //tree: PropTypes.instanceOf(Immutable.Map).isRequired,\n    reordableNodesCnt: PropTypes.number,\n    conjunctionOptions: PropTypes.object.isRequired,\n    allowFurtherNesting: PropTypes.bool.isRequired,\n    isRoot: PropTypes.bool.isRequired,\n    not: PropTypes.bool,\n    selectedConjunction: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    path: PropTypes.any, //instanceOf(Immutable.List)\n    children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n    isDraggingMe: PropTypes.bool,\n    isDraggingTempo: PropTypes.bool,\n    isLocked: PropTypes.bool,\n    isTrueLocked: PropTypes.bool,\n    //actions\n    handleDraggerMouseDown: PropTypes.func,\n    onDragStart: PropTypes.func,\n    addRule: PropTypes.func.isRequired,\n    addGroup: PropTypes.func.isRequired,\n    removeSelf: PropTypes.func.isRequired,\n    setConjunction: PropTypes.func.isRequired,\n    setNot: PropTypes.func.isRequired,\n    setLock: PropTypes.func.isRequired,\n    actions: PropTypes.object.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.removeSelf = this.removeSelf.bind(this);\n    this.setLock = this.setLock.bind(this);\n    this.renderItem = this.renderItem.bind(this);\n  }\n\n  isGroupTopPosition() {\n    return startsWith(this.props.config.settings.groupActionsPosition || defaultPosition, \"top\");\n  }\n\n  setLock(lock) {\n    this.props.setLock(lock);\n  }\n\n  removeSelf() {\n    const {confirmFn} = this.props;\n    const {renderConfirm, removeGroupConfirmOptions: confirmOptions} = this.props.config.settings;\n    const doRemove = () => {\n      this.props.removeSelf();\n    };\n    if (confirmOptions && !this.isEmptyCurrentGroup()) {\n      renderConfirm({...confirmOptions,\n        onOk: doRemove,\n        onCancel: null,\n        confirmFn: confirmFn\n      });\n    } else {\n      doRemove();\n    }\n  }\n\n  isEmptyCurrentGroup() {\n    const children = this.props.children1;\n    return !children || children.size == 0\n      || children.size == 1 && this.isEmpty(children.first());\n  }\n\n  isEmpty(item) {\n    const isGroup = (item.get(\"type\") == \"group\" || item.get(\"type\") == \"rule_group\");\n    return isGroup ? this.isEmptyGroup(item) : this.isEmptyRule(item);\n  }\n\n  isEmptyGroup(group) {\n    const children = group.get(\"children1\");\n    return !children || children.size == 0\n      || children.size == 1 && this.isEmpty(children.first());\n  }\n\n  isEmptyRule(rule) {\n    const properties = rule.get(\"properties\");\n    return !(\n      properties.get(\"field\") !== null\n          && properties.get(\"operator\") !== null\n          && properties.get(\"value\").filter((val) => val !== undefined).size > 0\n    );\n  }\n\n  render() {\n    return <>\n      {this.renderHeaderWrapper()}\n      {this.renderChildrenWrapper()}\n      {this.renderFooterWrapper()}\n    </>;\n  }\n\n  showNot() {\n    const {config} = this.props;\n    return config.settings.showNot;\n  }\n\n  // show conjs for 2+ children?\n  showConjs() {\n    const {conjunctionOptions, children1, config} = this.props;\n    const conjunctionCount = Object.keys(conjunctionOptions).length;\n    return conjunctionCount > 1 || this.showNot();\n  }\n\n  isNoChildren() {\n    const {children1} = this.props;\n    return children1 ? children1.size == 0 : true;\n  }\n\n\n  isOneChild() {\n    const {children1} = this.props;\n    return children1 ? children1.size < 2 : true;\n  }\n\n  renderChildrenWrapper() {\n    const {children1} = this.props;\n\n    return children1 && (\n      <div key=\"group-children\" className={classNames(\n        \"group--children\",\n        !this.showConjs() ? \"hide--conjs\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isOneChild() ? \"one--child\" : \"\",\n        this.childrenClassName()\n      )}>{this.renderChildren()}</div>\n    );\n  }\n\n  childrenClassName = () => \"\";\n\n  renderHeaderWrapper() {\n    const isGroupTopPosition = this.isGroupTopPosition();\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\",\n        this.isOneChild() ? \"one--child\" : \"\",\n        !this.showConjs() ? \"hide--conjs\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n      )}>\n        {this.renderHeader()}\n        {isGroupTopPosition && this.renderBeforeActions()}\n        {isGroupTopPosition && this.renderActions()}\n        {isGroupTopPosition && this.renderAfterActions()}\n      </div>\n    );\n  }\n\n  renderFooterWrapper() {\n    const isGroupTopPosition = this.isGroupTopPosition();\n    return !isGroupTopPosition && (\n      <div key=\"group-footer\" className='group--footer'>\n        {this.renderBeforeActions()}\n        {this.renderActions()}\n        {this.renderAfterActions()}\n      </div>\n    );\n  }\n\n  renderBeforeActions = () => {\n    const BeforeActions = this.props.config.settings.renderBeforeActions;\n    if (BeforeActions == undefined)\n      return null;\n\n    return typeof BeforeActions === \"function\" ? <BeforeActions {...this.props}/> : BeforeActions;\n  };\n\n  renderAfterActions = () => {\n    const AfterActions = this.props.config.settings.renderAfterActions;\n    if (AfterActions == undefined)\n      return null;\n\n    return typeof AfterActions === \"function\" ? <AfterActions {...this.props}/> : AfterActions;\n  };\n\n  renderActions() {\n    const {config, addRule, addGroup, isLocked, isTrueLocked, id} = this.props;\n\n    return <GroupActions\n      config={config}\n      addRule={addRule}\n      addGroup={addGroup}\n      canAddGroup={this.canAddGroup()}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  canAddGroup() {\n    return this.props.allowFurtherNesting;\n  }\n  canAddRule() {\n    const maxNumberOfRules = this.props.config.settings.maxNumberOfRules;\n    const totalRulesCnt = this.props.totalRulesCnt;\n    if (maxNumberOfRules) {\n      return totalRulesCnt < maxNumberOfRules;\n    }\n    return true;\n  }\n  canDeleteGroup() {\n    return !this.props.isRoot;\n  }\n\n  renderChildren() {\n    const {children1} = this.props;\n    return children1 ? children1.map(this.renderItem).toList() : null;\n  }\n\n  renderItem(item) {\n    const props = this.props;\n    const {config, actions, onDragStart, isLocked} = props;\n    const isRuleGroup = item.get(\"type\") == \"group\" && item.getIn([\"properties\", \"field\"]) != null;\n    const type = isRuleGroup ? \"rule_group\" : item.get(\"type\");\n    \n    return (\n      <Item\n        {...this.extraPropsForItem(item)}\n        key={item.get(\"id\")}\n        id={item.get(\"id\")}\n        groupId={props.id}\n        //path={props.path.push(item.get('id'))}\n        path={item.get(\"path\")}\n        type={type}\n        properties={item.get(\"properties\")}\n        config={config}\n        actions={actions}\n        children1={item.get(\"children1\")}\n        //tree={props.tree}\n        reordableNodesCnt={this.reordableNodesCntForItem(item)}\n        totalRulesCnt={this.totalRulesCntForItem(item)}\n        parentReordableNodesCnt={this.reordableNodesCnt()}\n        onDragStart={onDragStart}\n        isDraggingTempo={this.props.isDraggingTempo}\n        isParentLocked={isLocked}\n      />\n    );\n  }\n\n  extraPropsForItem(_item) {\n    return {};\n  }\n\n  reordableNodesCnt() {\n    if (this.props.isLocked)\n      return 0;\n    return this.props.reordableNodesCnt;\n  }\n\n  totalRulesCntForItem(_item) {\n    return this.props.totalRulesCnt;\n  }\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    return this.reordableNodesCnt();\n  }\n\n  showDragIcon() {\n    const { config, isRoot, isLocked } = this.props;\n    const reordableNodesCnt = this.reordableNodesCnt();\n    return config.settings.canReorder && !isRoot && reordableNodesCnt > 1 && !isLocked;\n  }\n\n  renderDrag() {\n    const { handleDraggerMouseDown } = this.props;\n    const drag = this.showDragIcon()\n      && <span\n        key=\"group-drag-icon\"\n        className={\"qb-drag-handler group--drag-handler\"}\n        onMouseDown={handleDraggerMouseDown}\n      ><DragIcon /> </span>;\n    return drag;\n  }\n\n  conjunctionOptions() {\n    const { conjunctionOptions } = this.props;\n    return conjunctionOptions;\n  }\n\n  renderConjs() {\n    const {\n      config, children1, id,\n      selectedConjunction, setConjunction, not, setNot, isLocked\n    } = this.props;\n\n    const {immutableGroupsMode, renderConjs: Conjs, showNot: _showNot, notLabel} = config.settings;\n    const conjunctionOptions = this.conjunctionOptions();\n    if (!this.showConjs())\n      return null;\n    if (!children1 || !children1.size)\n      return null;\n\n    const renderProps = {\n      disabled: this.isOneChild(),\n      readonly: immutableGroupsMode || isLocked,\n      selectedConjunction: selectedConjunction,\n      setConjunction: immutableGroupsMode ? dummyFn : setConjunction,\n      conjunctionOptions: conjunctionOptions,\n      config: config,\n      not: not || false,\n      id: id,\n      setNot: immutableGroupsMode ? dummyFn : setNot,\n      notLabel: notLabel,\n      showNot: this.showNot(),\n      isLocked: isLocked\n    };\n    return <Conjs {...renderProps} />;\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n}\n\nexport default GroupContainer(Draggable(\"group\")(ConfirmFn(BasicGroup)));\n","import React, { PureComponent } from \"react\";\n\nexport class RuleGroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, canAddRule, canDeleteGroup, removeSelf, \n      setLock, isLocked, isTrueLocked, id,\n    } = this.props;\n    const {\n      immutableGroupsMode, addRuleLabel, delGroupLabel,\n      renderButton: Btn, renderSwitch: Switch, renderButtonGroup: BtnGrp,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} hideLabel={true} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn \n      type=\"addRuleGroup\" onClick={addRule} label={addRuleLabel} readonly={isLocked} config={config}\n    />;\n\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn \n      type=\"delRuleGroup\" onClick={removeSelf} label={delGroupLabel} config={config}\n    />;\n\n    return (\n      <div className={\"group--actions\"}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {RuleGroupActions} from \"./RuleGroupActions\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {ConfirmFn} from \"../utils\";\n\n\nclass RuleGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    selectedField: PropTypes.string,\n    parentField: PropTypes.string,\n    setField: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n  }\n\n  childrenClassName = () => \"rule_group--children\";\n  \n  renderHeaderWrapper = () => null;\n  renderFooterWrapper = () => null;\n  renderConjs = () => null;\n  canAddGroup = () => false;\n  canAddRule = () => true;\n  canDeleteGroup = () => false;\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    const {children1} = this.props;\n    return children1?.size || 0;\n  }\n\n  renderChildrenWrapper() {\n    return (\n      <>\n        {this.renderDrag()}\n        {this.renderField()}\n        {this.renderActions()}\n        {super.renderChildrenWrapper()}\n      </>\n    );\n  }\n\n  renderField() {\n    const { config, selectedField, setField, parentField, id, groupId, isLocked } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    return <FieldWrapper\n      key=\"field\"\n      classname={\"group--field\"}\n      config={config}\n      selectedField={selectedField}\n      setField={setField}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderActions() {\n    const {config, addRule, isLocked, isTrueLocked, id} = this.props;\n\n    return <RuleGroupActions\n      config={config}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  extraPropsForItem(_item) {\n    return {\n      parentField: this.props.selectedField\n    };\n  }\n}\n\n\nexport default GroupContainer(Draggable(\"group rule_group\")(ConfirmFn(RuleGroup)));\n","import React, { PureComponent } from \"react\";\n\nexport class RuleGroupExtActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, canAddRule, canDeleteGroup, removeSelf, \n      setLock, isLocked, isTrueLocked, id,\n    } = this.props;\n    const {\n      immutableGroupsMode, addSubRuleLabel, delGroupLabel,\n      renderButton: Btn, renderSwitch: Switch, renderButtonGroup: BtnGrp,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn \n      type=\"addRuleGroupExt\" onClick={addRule} label={addSubRuleLabel} readonly={isLocked} config={config}\n    />;\n\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn \n      type=\"delRuleGroup\" onClick={removeSelf} label={delGroupLabel} config={config}\n    />;\n\n    return (\n      <div className={\"group--actions group--actions--tr\"}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {RuleGroupExtActions} from \"./RuleGroupExtActions\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport OperatorWrapper from \"../rule/OperatorWrapper\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, ConfirmFn} from \"../utils\";\nimport Widget from \"../rule/Widget\";\nimport classNames from \"classnames\";\nconst {getFieldConfig, getFieldWidgetConfig} = Utils.ConfigUtils;\n\n\nclass RuleGroupExt extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    selectedField: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    value: PropTypes.any,\n    parentField: PropTypes.string,\n    setField: PropTypes.func,\n    setOperator: PropTypes.func,\n    setValue: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n  }\n\n  childrenClassName = () => \"rule_group_ext--children\";\n  \n  renderFooterWrapper = () => null;\n  canAddGroup = () => false;\n  canAddRule = () => true;\n  canDeleteGroup = () => true;\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeader()}\n        {this.renderGroupField()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderGroupField() {\n    return (\n      <div className={\"group--field--count--rule\"}>\n        {this.renderField()}\n        {this.renderOperator()}\n        {this.renderWidget()}\n      </div>\n    );\n  }\n\n  showNot() {\n    const {config, selectedField, selectedOperator} = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField) || {};\n    return selectedFieldConfig.showNot != undefined ? selectedFieldConfig.showNot : config.settings.showNot;\n  }\n\n  conjunctionOptions() {\n    const {config, selectedField, selectedOperator} = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField) || {};\n    let conjunctionOptions = super.conjunctionOptions();\n    if (selectedFieldConfig.conjunctions) {\n      let filtered = {};\n      for (let k of selectedFieldConfig.conjunctions) {\n        filtered[k] = conjunctionOptions[k];\n      }\n      conjunctionOptions = filtered;\n    }\n    return conjunctionOptions;\n  }\n\n  renderField() {\n    const { config, selectedField, setField, parentField, id, groupId, isLocked } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    return <FieldWrapper\n      key=\"field\"\n      classname={\"rule--field\"}\n      config={config}\n      selectedField={selectedField}\n      setField={setField}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderOperator() {\n    const {config, selectedField, selectedOperator, setField, setOperator, isLocked} = this.props;\n    const { immutableFieldsMode } = config.settings;\n    const selectedFieldWidgetConfig = getFieldWidgetConfig(config, selectedField, selectedOperator) || {};\n    const hideOperator = selectedFieldWidgetConfig.hideOperator;\n    const showOperatorLabel = selectedField && hideOperator && selectedFieldWidgetConfig.operatorInlineLabel;\n    const showOperator = selectedField && !hideOperator;\n\n    return <OperatorWrapper\n      key=\"operator\"\n      classname={\"group--operator\"}\n      config={config}\n      selectedField={selectedField}\n      selectedOperator={selectedOperator}\n      setField={setField}\n      setOperator={setOperator}\n      selectedFieldPartsLabels={[\"group\"]}\n      showOperator={showOperator}\n      showOperatorLabel={showOperatorLabel}\n      selectedFieldWidgetConfig={selectedFieldWidgetConfig}\n      readonly={immutableFieldsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  renderWidget() {\n    const {config, selectedField, selectedOperator, isLocked} = this.props;\n    const { immutableValuesMode } = config.settings;\n    const isFieldAndOpSelected = selectedField && selectedOperator;\n    const showWidget = isFieldAndOpSelected;\n    if (!showWidget) return null;\n\n    const widget = <Widget\n      key=\"values\"\n      isForRuleGruop={true}\n      field={this.props.selectedField}\n      operator={this.props.selectedOperator}\n      value={this.props.value}\n      valueSrc={\"value\"}\n      valueError={null}\n      config={config}\n      setValue={!immutableValuesMode ? this.props.setValue : dummyFn}\n      setValueSrc={dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n\n    return (\n      <Col key={\"widget-for-\"+this.props.selectedOperator} className=\"rule--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderActions() {\n    const {config, addRule, isLocked, isTrueLocked, id} = this.props;\n\n    return <RuleGroupExtActions\n      config={config}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    const {children1} = this.props;\n    return children1?.size || 0;\n  }\n\n  extraPropsForItem(_item) {\n    return {\n      parentField: this.props.selectedField\n    };\n  }\n}\n\n\nexport default GroupContainer(Draggable(\"group rule_group_ext\")(ConfirmFn(RuleGroupExt)));\n\n","import React, { PureComponent } from \"react\";\n\nconst groupActionsPositionList = {\n  topLeft: \"group--actions--tl\",\n  topCenter: \"group--actions--tc\",\n  topRight: \"group--actions--tr\",\n  bottomLeft: \"group--actions--bl\",\n  bottomCenter: \"group--actions--bc\",\n  bottomRight: \"group--actions--br\"\n};\nconst defaultPosition = \"topRight\";\n\n\nexport class SwitchGroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addCaseGroup, addDefaultCaseGroup, setLock, isLocked, isTrueLocked, id, canAddGroup, canAddDefault\n    } = this.props;\n    const {\n      immutableGroupsMode, addCaseLabel, addDefaultCaseLabel, groupActionsPosition, \n      renderButton: Btn, renderSwitch: Switch, renderButtonGroup: BtnGrp,\n      lockLabel, lockedLabel, showLock,\n    } = config.settings;\n    const position = groupActionsPositionList[groupActionsPosition || defaultPosition];\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addCaseGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type=\"addCaseGroup\" onClick={addCaseGroup} label={addCaseLabel} readonly={isLocked} config={config}\n    />;\n\n    const addDefaultCaseGroupBtn = !immutableGroupsMode && canAddDefault && !isLocked && <Btn\n      type=\"addDefaultCaseGroup\" onClick={addDefaultCaseGroup} label={addDefaultCaseLabel} readonly={isLocked} config={config}\n    />;\n\n    return (\n      <div className={`group--actions ${position}`}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addCaseGroupBtn}\n          {addDefaultCaseGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {SwitchGroupActions} from \"./SwitchGroupActions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, ConfirmFn} from \"../utils\";\nimport classNames from \"classnames\";\nconst {getTotalReordableNodesCountInTree, getTotalRulesCountInTree} = Utils.TreeUtils;\n\n\nclass SwitchGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n  }\n\n  childrenClassName = () => \"switch_group--children\";\n  \n  renderFooterWrapper = () => null;\n  hasDefaultCase = () => {\n    return this.props.children1?.size && this.props.children1.filter(c => c.get(\"children1\") == null).size > 0;\n  };\n  canAddGroup() {\n    const { maxNumberOfCases } = this.props.config.settings;\n    const totalCasesCnt = this.props.children1?.size || 0;\n    if (maxNumberOfCases) {\n      return totalCasesCnt < maxNumberOfCases;\n    }\n    return true;\n  }\n  canAddRule() {\n    return false;\n  }\n\n  reordableNodesCnt() {\n    // result will be passed to each case's `parentReordableNodesCnt` prop\n    const totalCasesCnt = this.props.children1?.size || 0;\n    let casesToReorder = totalCasesCnt;\n    if (this.hasDefaultCase()) {\n      casesToReorder--;\n    }\n    return casesToReorder;\n  }\n\n  totalRulesCntForItem(item) {\n    return getTotalRulesCountInTree(item);\n  }\n\n  reordableNodesCntForItem(item) {\n    if (this.props.isLocked)\n      return 0;\n    const { canLeaveEmptyCase, canRegroupCases } = this.props.config.settings;\n\n    const totalCasesCnt = this.props.children1?.size || 0;\n    let casesToReorder = totalCasesCnt;\n    if (this.hasDefaultCase()) {\n      casesToReorder--;\n    }\n\n    const nodesInCase = getTotalReordableNodesCountInTree(item);\n    let cnt = nodesInCase;\n    if (cnt == 1 && canRegroupCases && canLeaveEmptyCase && casesToReorder > 1)\n      cnt = 111;\n    return cnt;\n  }\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        //this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeader()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderConjs() {\n    const { renderSwitchPrefix } = this.props.config.settings;\n    return renderSwitchPrefix ? renderSwitchPrefix() : null;\n  }\n\n  showNot() {\n    return false;\n  }\n\n\n  renderActions() {\n    const {config, addCaseGroup, addDefaultCaseGroup, isLocked, isTrueLocked, id} = this.props;\n\n    return <SwitchGroupActions\n      config={config}\n      addCaseGroup={addCaseGroup}\n      addDefaultCaseGroup={addDefaultCaseGroup}\n      canAddDefault={!this.hasDefaultCase()}\n      canAddGroup={this.canAddGroup()}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n}\n\n\nexport default GroupContainer(Draggable(\"group switch_group\")(ConfirmFn(SwitchGroup)));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {GroupActions} from \"./GroupActions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, ConfirmFn} from \"../utils\";\nimport Widget from \"../rule/Widget\";\nimport classNames from \"classnames\";\n\n\nclass CaseGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    parentReordableNodesCnt: PropTypes.number,\n    value: PropTypes.any,\n    setValue: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n  }\n\n  isDefaultCase() {\n    return this.props.children1 == undefined;\n  }\n\n  reordableNodesCnt() {\n    // `parentReordableNodesCnt` is number of cases to reorder\n    return this.props.parentReordableNodesCnt;\n  }\n\n  reordableNodesCntForItem(_item) {\n    // `reordableNodesCnt` is number of nodes is current case\n    if (this.props.isLocked)\n      return 0;\n    return this.props.reordableNodesCnt;\n  }\n\n  totalRulesCntForItem(_item) {\n    // `totalRulesCnt` is number of nodes is current case\n    return this.props.totalRulesCnt;\n  }\n\n  showDragIcon() {\n    // default impl of `showDragIcon()` uses `this.reordableNodesCnt()`\n    if (this.isDefaultCase())\n      return false;\n    return super.showDragIcon();\n  }\n\n  childrenClassName = () => \"case_group--children\";\n  \n  renderFooterWrapper = () => null;\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeaderLeft()}\n        {this.renderHeaderCenter()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderChildrenWrapper() {\n    if (this.isDefaultCase())\n      return null;\n    // body has 2 columns: condition & value\n    return (\n      <div className={\"case_group--body\"}>\n        {this.renderCondition()}\n        {this.renderValue()}\n      </div>\n    );\n  }\n\n  renderHeaderLeft() {\n    if (this.isDefaultCase()) {\n      const { defaultCaseLabel } = this.props.config.settings;\n      return defaultCaseLabel || \"\";\n    }\n    // default impl:\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderCondition() {\n    if (this.isDefaultCase())\n      return null;\n    return super.renderChildrenWrapper();\n  }\n\n  renderHeaderCenter() {\n    if (this.isDefaultCase())\n      return this.renderValue();\n    else\n      return null;\n  }\n\n  canAddGroup() {\n    if (this.isDefaultCase())\n      return false;\n    return super.canAddGroup();\n  }\n\n  canAddRule() {\n    if (this.isDefaultCase())\n      return false;\n    return super.canAddRule();\n  }\n\n  renderValue() {\n    const { config, isLocked, value, setValue, id } = this.props;\n    const { immutableValuesMode } = config.settings;\n\n    const widget = <Widget\n      key=\"values\"\n      isCaseValue={true}\n      field={\"!case_value\"}\n      operator={null}\n      value={value}\n      valueSrc={\"value\"}\n      valueError={null}\n      config={config}\n      setValue={!immutableValuesMode ? setValue : dummyFn}\n      setValueSrc={dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={id}\n      groupId={null}\n    />;\n\n    return (\n      <Col className=\"case_group--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderActions() {\n    const {config, addGroup, addRule, isLocked, isTrueLocked, id} = this.props;\n    return <GroupActions\n      config={config}\n      addGroup={addGroup}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canAddGroup={this.canAddGroup()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  isEmptyCurrentGroup() {\n    // used to confirm self-deletion\n    const { value } = this.props;\n    const oneValue = value && value.size ? value.get(0) : null;\n    const hasValue = oneValue != null && (Array.isArray(oneValue) ? oneValue.length > 0 : true);\n    return super.isEmptyCurrentGroup() && !hasValue;\n  }\n\n}\n\nexport default GroupContainer(Draggable(\"group case_group\")(ConfirmFn(CaseGroup)));\n\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Rule from \"./Rule\";\nimport Group from \"./Group\";\nimport RuleGroup from \"./RuleGroup\";\nimport RuleGroupExt from \"./RuleGroupExt\";\nimport SwitchGroup from \"./SwitchGroup\";\nimport CaseGroup from \"./CaseGroup\";\n\nconst types = [\n  \"rule\",\n  \"group\",\n  \"rule_group\",\n  \"switch_group\",\n  \"case_group\"\n];\n\nconst getProperties = (props) => {\n  const properties = props.properties?.toObject() || {};\n  const result = {...properties};\n  if (props.isParentLocked) {\n    result.isLocked = true;\n  }\n  if (properties.isLocked) {\n    result.isTrueLocked = true;\n  }\n  return result;\n};\n\nconst typeMap = {\n  rule: (props) => (\n    <Rule\n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      config={props.config}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      parentField={props.parentField}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  group: (props) => (\n    <Group \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      //tree={props.tree}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  rule_group: (props) => (\n    <RuleGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      //tree={props.tree}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  rule_group_ext: (props) => (\n    <RuleGroupExt \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      //tree={props.tree}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  switch_group: (props) => (\n    <SwitchGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      //tree={props.tree}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  case_group: (props) => (\n    <CaseGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      //tree={props.tree}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n};\n\n\nclass Item extends PureComponent {\n  static propTypes = {\n    //tree: PropTypes.instanceOf(Immutable.Map).isRequired,\n    config: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    type: PropTypes.oneOf(types).isRequired,\n    path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n    properties: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n    actions: PropTypes.object.isRequired,\n    reordableNodesCnt: PropTypes.number,\n    onDragStart: PropTypes.func,\n    parentField: PropTypes.string, //from RuleGroup\n    isDraggingTempo: PropTypes.bool,\n    isParentLocked: PropTypes.bool,\n  };\n\n  render() {\n    const { type, ...props } = this.props;\n    const mode = props.properties?.get(\"mode\");\n    const postfix = mode == \"array\" ? \"_ext\" : \"\";    \n    const renderItem = props.config.settings.renderItem;\n    let Cmp = typeMap[type + postfix];\n    if (renderItem) {\n      return renderItem({...props, type, itemComponent: Cmp});\n    }\n    if (!Cmp) return null;\n    return Cmp(props);\n  }\n}\n\nexport { Item };\n","import { Utils } from \"@react-awesome-query-builder/core\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Item } from \"./item/Item\";\nimport SortableContainer from \"./containers/SortableContainer\";\nimport {pureShouldComponentUpdate} from \"../utils/reactUtils\";\nconst { getTotalReordableNodesCountInTree, getTotalRulesCountInTree } = Utils.TreeUtils;\nconst { createListFromArray, emptyProperies } = Utils.DefaultUtils;\n\nclass Builder extends Component {\n  static propTypes = {\n    tree: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    config: PropTypes.object.isRequired,\n    actions: PropTypes.object.isRequired,\n    onDragStart: PropTypes.func,\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const prevProps = this.props;\n    let should = this.pureShouldComponentUpdate(nextProps, nextState);\n    if (should) {\n      let chs = [];\n      for (let k in nextProps) {\n        let changed = (nextProps[k] !== prevProps[k]);\n        if (changed && k != \"__isInternalValueChange\") {\n          chs.push(k);\n        }\n      }\n      if (!chs.length)\n        should = false;\n      //optimize render\n      if (chs.length == 1 && chs[0] == \"tree\" && nextProps.__isInternalValueChange)\n        should = false;\n    }\n    return should;\n  }\n\n  constructor(props) {\n    super(props);\n    this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n\n    this._updPath(props);\n  }\n\n  _updPath (props) {\n    const id = props.tree.get(\"id\");\n    this.path = createListFromArray([id]);\n  }\n\n  render() {\n    const tree = this.props.tree;\n    const rootType = tree.get(\"type\");\n    const isTernary = rootType == \"switch_group\";\n    const reordableNodesCnt = isTernary ? null : getTotalReordableNodesCountInTree(tree);\n    const totalRulesCnt = isTernary ? null : getTotalRulesCountInTree(tree);\n    const id = tree.get(\"id\");\n    return (\n      <Item \n        key={id}\n        id={id}\n        path={this.path}\n        type={rootType}\n        properties={tree.get(\"properties\") || emptyProperies()}\n        config={this.props.config}\n        actions={this.props.actions}\n        children1={tree.get(\"children1\") || emptyProperies()}\n        //tree={tree}\n        reordableNodesCnt={reordableNodesCnt}\n        totalRulesCnt={totalRulesCnt}\n        parentReordableNodesCnt={0}\n        onDragStart={this.props.onDragStart}\n      />\n    );\n  }\n}\n\nexport default SortableContainer(Builder);\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst {clone} = Utils;\nconst {getFieldConfig} = Utils.ConfigUtils;\nconst {getFieldPath, getFieldPathLabels, getWidgetForFieldOp} = Utils.RuleUtils;\n\n//tip: this.props.value - right value, this.props.field - left value\n\nexport default class ValueField extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.string.isRequired,\n    value: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    parentField: PropTypes.string,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForItems = [\"config\", \"field\", \"operator\", \"isFuncArg\", \"parentField\"];\n    const keysForMeta = [\"config\", \"field\", \"operator\", \"value\", \"placeholder\", \"isFuncArg\", \"parentField\"];\n    const needUpdateItems = !this.items || keysForItems.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateItems) {\n      this.items = this.getItems(nextProps);\n    }\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getItems({config, field, operator, parentField, isFuncArg, fieldDefinition}) {\n    const {canCompareFieldWithField} = config.settings;\n    const fieldSeparator = config.settings.fieldSeparator;\n    const parentFieldPath = typeof parentField == \"string\" ? parentField.split(fieldSeparator) : parentField;\n    const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n    const sourceFields = parentField ? parentFieldConfig && parentFieldConfig.subfields : config.fields;\n\n    const filteredFields = this.filterFields(config, sourceFields, field, parentField, parentFieldPath, operator, canCompareFieldWithField, isFuncArg, fieldDefinition);\n    const items = this.buildOptions(parentFieldPath, config, filteredFields, parentFieldPath);\n    return items;\n  }\n\n  getMeta({config, field, operator, value, placeholder: customPlaceholder, isFuncArg, parentField}) {\n    const {fieldPlaceholder, fieldSeparatorDisplay} = config.settings;\n    const selectedKey = value;\n    const isFieldSelected = !!value;\n\n    const leftFieldConfig = getFieldConfig(config, field);\n    const leftFieldWidgetField = leftFieldConfig.widgets.field;\n    const leftFieldWidgetFieldProps = leftFieldWidgetField && leftFieldWidgetField.widgetProps || {};\n    const placeholder = isFieldSelected ? null \n      : (isFuncArg && customPlaceholder || leftFieldWidgetFieldProps.valuePlaceholder || fieldPlaceholder);\n    const currField = isFieldSelected ? getFieldConfig(config, selectedKey) : null;\n    const selectedOpts = currField || {};\n\n    const selectedKeys = getFieldPath(selectedKey, config);\n    const selectedPath = getFieldPath(selectedKey, config, true);\n    const selectedLabel = this.getFieldLabel(currField, selectedKey, config);\n    const partsLabels = getFieldPathLabels(selectedKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel || parentField)\n      selectedFullLabel = null;\n    const selectedAltLabel = selectedOpts.label2;\n\n    return {\n      placeholder,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n    };\n  }\n\n  filterFields(config, fields, leftFieldFullkey, parentField, parentFieldPath, operator, canCompareFieldWithField, isFuncArg, fieldDefinition) {\n    fields = clone(fields);\n    const fieldSeparator = config.settings.fieldSeparator;\n    const leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n    const _relyOnWidgetType = false; //TODO: remove this, see issue #758\n    const widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n    const widgetConfig = config.widgets[widget];\n    let expectedType;\n    if (isFuncArg && fieldDefinition) {\n      expectedType = fieldDefinition.type;\n    } else if (_relyOnWidgetType && widgetConfig) {\n      expectedType = widgetConfig.type;\n    } else {\n      expectedType = leftFieldConfig.type;\n    }\n    \n    function _filter(list, path) {\n      for (let rightFieldKey in list) {\n        let subfields = list[rightFieldKey].subfields;\n        let subpath = (path ? path : []).concat(rightFieldKey);\n        let rightFieldFullkey = subpath.join(fieldSeparator);\n        let rightFieldConfig = getFieldConfig(config, rightFieldFullkey);\n        if (!rightFieldConfig) {\n          delete list[rightFieldKey];\n        } else if (rightFieldConfig.type == \"!struct\" || rightFieldConfig.type == \"!group\") {\n          if(_filter(subfields, subpath) == 0)\n            delete list[rightFieldKey];\n        } else {\n          // tip: LHS field can be used as arg in RHS function\n          let canUse = rightFieldConfig.type == expectedType && (isFuncArg ? true : rightFieldFullkey != leftFieldFullkey);\n          let fn = canCompareFieldWithField || config.settings.canCompareFieldWithField;\n          if (fn)\n            canUse = canUse && fn(leftFieldFullkey, leftFieldConfig, rightFieldFullkey, rightFieldConfig, operator);\n          if (!canUse)\n            delete list[rightFieldKey];\n        }\n      }\n      return keys(list).length;\n    }\n\n    _filter(fields, parentFieldPath || []);\n\n    return fields;\n  }\n\n  buildOptions(parentFieldPath, config, fields, path = null, optGroupLabel = null) {\n    if (!fields)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    return keys(fields).map(fieldKey => {\n      const field = fields[fieldKey];\n      const label = this.getFieldLabel(field, fieldKey, config);\n      const partsLabels = getFieldPathLabels(fieldKey, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label || parentFieldPath)\n        fullLabel = null;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n      const subpath = (path ? path : []).concat(fieldKey);\n\n      if (field.hideForCompare)\n        return undefined;\n\n      if (field.type == \"!struct\" || field.type == \"!group\") {\n        return {\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          items: this.buildOptions(parentFieldPath, config, field.subfields, subpath, label)\n        };\n      } else {\n        return {\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          grouplabel: optGroupLabel\n        };\n      }\n    }).filter(o => !!o);\n  }\n\n  getFieldLabel(fieldOpts, fieldKey, config) {\n    if (!fieldKey) return null;\n    let fieldSeparator = config.settings.fieldSeparator;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let fieldParts = Array.isArray(fieldKey) ? fieldKey : fieldKey.split(fieldSeparator);\n    let label = fieldOpts.label || last(fieldParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  render() {\n    const {config, customProps, setValue, readonly, id, groupId} = this.props;\n    const {renderField} = config.settings;\n    const renderProps = {\n      config,\n      customProps,\n      setField: setValue,\n      readonly,\n      items: this.items,\n      id,\n      groupId,\n      ...this.meta\n    };\n    return renderField(renderProps);\n  }\n\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst { clone } = Utils;\nconst {getFieldConfig, getFuncConfig} = Utils.ConfigUtils;\nconst {getFieldPath, getFuncPathLabels, getWidgetForFieldOp} = Utils.RuleUtils;\n\n//tip: this.props.value - right value, this.props.field - left value\n\nexport default class FuncSelect extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.string.isRequired,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    value: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n      \n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForItems = [\"config\", \"field\", \"operator\", \"isFuncArg\"];\n    const keysForMeta = [\"config\", \"field\", \"value\"];\n    const needUpdateItems = !this.items || keysForItems.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n    if (needUpdateItems) {\n      this.items = this.getItems(nextProps);\n    }\n  }\n\n  getItems({config, field, operator, parentFuncs, fieldDefinition, isFuncArg}) {\n    const {canUseFuncForField} = config.settings;\n    const filteredFuncs = this.filterFuncs(config, config.funcs, field, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition);\n    const items = this.buildOptions(config, filteredFuncs);\n    return items;\n  }\n\n  getMeta({config, field, value}) {\n    const {funcPlaceholder, fieldSeparatorDisplay} = config.settings;\n    const selectedFuncKey = value;\n    const isFuncSelected = !!value;\n\n    const leftFieldConfig = getFieldConfig(config, field);\n    const leftFieldWidgetField = leftFieldConfig.widgets.field;\n    const leftFieldWidgetFieldProps = leftFieldWidgetField && leftFieldWidgetField.widgetProps || {};\n    const placeholder = !isFuncSelected ? funcPlaceholder : null;\n\n    const currFunc = isFuncSelected ? getFuncConfig(config, selectedFuncKey) : null;\n    const selectedOpts = currFunc || {};\n\n    const selectedKeys = getFieldPath(selectedFuncKey, config);\n    const selectedPath = getFieldPath(selectedFuncKey, config, true);\n    const selectedLabel = this.getFuncLabel(currFunc, selectedFuncKey, config);\n    const partsLabels = getFuncPathLabels(selectedFuncKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel)\n      selectedFullLabel = null;\n    \n    return {\n      placeholder,\n      selectedKey: selectedFuncKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedFullLabel,\n    };\n  }\n\n  filterFuncs(config, funcs, leftFieldFullkey, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition) {\n    funcs = clone(funcs);\n    const fieldSeparator = config.settings.fieldSeparator;\n    const leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n    let expectedType;\n    let targetDefinition = leftFieldConfig;\n    const widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n    if (isFuncArg && fieldDefinition) {\n      targetDefinition = fieldDefinition;\n      expectedType = fieldDefinition.type;\n    } else if (widget) {\n      let widgetConfig = config.widgets[widget];\n      let widgetType = widgetConfig.type;\n      //expectedType = leftFieldConfig.type;\n      expectedType = widgetType;\n    } else {\n      expectedType = leftFieldConfig.type;\n    }\n\n    function _filter(list, path) {\n      for (let funcKey in list) {\n        let subfields = list[funcKey].subfields;\n        let subpath = (path ? path : []).concat(funcKey);\n        let funcFullkey = subpath.join(fieldSeparator);\n        let funcConfig = getFuncConfig(config, funcFullkey);\n        if (funcConfig.type == \"!struct\") {\n          if(_filter(subfields, subpath) == 0)\n            delete list[funcKey];\n        } else {\n          let canUse = funcConfig.returnType == expectedType;\n          if (targetDefinition.funcs)\n            canUse = canUse && targetDefinition.funcs.includes(funcFullkey);\n          if (canUseFuncForField)\n            canUse = canUse && canUseFuncForField(leftFieldFullkey, leftFieldConfig, funcFullkey, funcConfig, operator);\n          // don't use func in func (can be configurable, but usually users don't need this)\n          if (!funcConfig.allowSelfNesting && parentFuncs && parentFuncs.map(([func, _arg]) => func).includes(funcFullkey))\n            canUse = false;\n          if (!canUse)\n            delete list[funcKey];\n        }\n      }\n      return keys(list).length;\n    }\n\n    _filter(funcs, []);\n\n    return funcs;\n  }\n\n  buildOptions(config, funcs, path = null, optGroupLabel = null) {\n    if (!funcs)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    return keys(funcs).map(funcKey => {\n      const func = funcs[funcKey];\n      const label = this.getFuncLabel(func, funcKey, config);\n      const partsLabels = getFuncPathLabels(funcKey, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label)\n        fullLabel = null;\n      const tooltip = func.tooltip;\n      const subpath = (path ? path : []).concat(funcKey);\n\n      if (func.type == \"!struct\") {\n        return {\n          key: funcKey,\n          path: prefix+funcKey,\n          label,\n          fullLabel,\n          tooltip,\n          items: this.buildOptions(config, func.subfields, subpath, label)\n        };\n      } else {\n        return {\n          key: funcKey,\n          path: prefix+funcKey,\n          label,\n          fullLabel,\n          tooltip,\n          grouplabel: optGroupLabel\n        };\n      }\n    });\n  }\n\n  getFuncLabel(funcOpts, funcKey, config) {\n    if (!funcKey) return null;\n    let fieldSeparator = config.settings.fieldSeparator;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let funcParts = Array.isArray(funcKey) ? funcKey : funcKey.split(fieldSeparator);\n    let label = funcOpts.label || last(funcParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  render() {\n    const {config, customProps, setValue, readonly, id, groupId} = this.props;\n    const {renderFunc} = config.settings;\n    const renderProps = {\n      config,\n      customProps,\n      readonly,\n      setField: setValue,\n      items: this.items,\n      id,\n      groupId,\n      ...this.meta\n    };\n    return renderFunc(renderProps);\n  }\n\n}\n","import React, { Component, PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport FuncSelect from \"./FuncSelect\";\nimport Widget from \"./Widget\";\nimport {Col} from \"../utils\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nconst {getFuncConfig} = Utils.ConfigUtils;\nconst {setFunc, setArgValue, setArgValueSrc} = Utils.FuncUtils;\n\n\nexport default class FuncWidget extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.string.isRequired,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    value: PropTypes.object, //instanceOf(Immutable.Map) //with keys 'func' and `args`\n    setValue: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"config\", \"field\", \"operator\", \"value\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({config, field, operator, value}) {\n    const funcKey = value ? value.get(\"func\") : null;\n    const funcDefinition = funcKey ? getFuncConfig(config, funcKey) : null;\n\n    return {\n      funcDefinition, funcKey\n    };\n  }\n\n  setFunc = (funcKey) => {\n    this.props.setValue( setFunc(this.props.value, funcKey, this.props.config) );\n  };\n\n  setArgValue = (argKey, argVal) => {\n    const {config} = this.props;\n    const {funcDefinition} = this.meta;\n    const {args} = funcDefinition;\n    const argDefinition = args[argKey];\n\n    this.props.setValue( setArgValue(this.props.value, argKey, argVal, argDefinition, config) );\n  };\n\n  setArgValueSrc = (argKey, argValSrc) => {\n    const {config} = this.props;\n    const {funcDefinition} = this.meta;\n    const {args} = funcDefinition;\n    const argDefinition = args[argKey];\n\n    this.props.setValue( setArgValueSrc(this.props.value, argKey, argValSrc, argDefinition, config) );\n  };\n\n  renderFuncSelect = () => {\n    const {config, field, operator, customProps, value, readonly, parentFuncs, id, groupId, isFuncArg, fieldDefinition} = this.props;\n    const funcKey = value ? value.get(\"func\") : null;\n    const selectProps = {\n      value: funcKey,\n      setValue: this.setFunc,\n      config, field, operator, customProps, readonly, parentFuncs, \n      isFuncArg, fieldDefinition,\n      id, groupId,\n    };\n    const {showLabels, funcLabel} = config.settings;\n    const widgetLabel = showLabels\n      ? <label className=\"rule--label\">{funcLabel}</label>\n      : null;\n\n    return (\n      <Col key=\"func\" className=\"rule--func\">\n        {widgetLabel}\n        <FuncSelect {...selectProps} />\n      </Col>\n    );\n  };\n\n  renderArgLabel = (argKey, argDefinition) => {\n    const {valueSources, type, showPrefix, label} = argDefinition;\n    const {config} = this.props;\n    const isConst = valueSources && valueSources.length == 1 && valueSources[0] == \"const\";\n    const forceShow = !config.settings.showLabels && (type == \"boolean\" || isConst) && showPrefix;\n    if (!forceShow) return null;\n    return (\n      <Col className=\"rule--func--arg-label\">\n        {label || argKey}\n      </Col>\n    );\n  };\n\n  renderArgLabelSep = (argKey, argDefinition) => {\n    const {valueSources, type, showPrefix} = argDefinition;\n    const {config} = this.props;\n    const isConst = valueSources && valueSources.length == 1 && valueSources[0] == \"const\";\n    const forceShow = !config.settings.showLabels && (type == \"boolean\" || isConst) && showPrefix;\n    if (!forceShow) return null;\n    return (\n      <Col className=\"rule--func--arg-label-sep\">\n        {\":\"}\n      </Col>\n    );\n  };\n\n  renderArgVal = (funcKey, argKey, argDefinition) => {\n    const {config, field, operator, value, readonly, parentFuncs, id, groupId} = this.props;\n    const arg = value ? value.getIn([\"args\", argKey]) : null;\n    const argVal = arg ? arg.get(\"value\") : undefined;\n    const defaultValueSource = argDefinition.valueSources.length == 1 ? argDefinition.valueSources[0] : undefined;\n    const argValSrc = arg ? (arg.get(\"valueSrc\") || defaultValueSource || \"value\") : defaultValueSource;\n\n    const widgetProps = {\n      config, \n      fieldFunc: funcKey,\n      fieldArg: argKey,\n      leftField: field,\n      operator: null,\n      value: argVal,\n      valueSrc: argValSrc,\n      setValue: this.setArgValue,\n      setValueSrc: this.setArgValueSrc,\n      funcKey,\n      argKey,\n      argDefinition,\n      readonly,\n      parentFuncs,\n      id,\n      groupId,\n    };\n    //tip: value & valueSrc will be converted to Immutable.List at <Widget>\n\n    return (\n      <Col className=\"rule--func--arg-value\">\n        <ArgWidget {...widgetProps} />\n      </Col>\n    );\n  };\n\n  renderArgSep = (argKey, argDefinition, argIndex, {renderSeps}) => {\n    if (!argIndex) return null;\n    return (\n      <Col className=\"rule--func--arg-sep\">\n        {renderSeps ? renderSeps[argIndex - 1] : \", \"}\n      </Col>\n    );\n  };\n\n  renderBracketBefore = ({renderBrackets}) => {\n    return (\n      <Col key=\"before_args\" className=\"rule--func--bracket-before\">\n        {renderBrackets ? renderBrackets[0] : \"(\"}\n      </Col>\n    );\n  };\n\n  renderBracketAfter = ({renderBrackets}) => {\n    return (\n      <Col key=\"after_args\" className=\"rule--func--bracket-after\">\n        {renderBrackets ? renderBrackets[1] : \")\"}\n      </Col>\n    );\n  };\n\n  renderFuncArgs = () => {\n    const {funcDefinition, funcKey} = this.meta;\n    if (!funcKey) return null;\n    const {args} = funcDefinition;\n    if (!args) return null;\n\n    return (\n      <>\n        {this.renderBracketBefore(funcDefinition)}\n        <Col key=\"args\" className=\"rule--func--args\">\n          {Object.keys(args).map((argKey, argIndex) => (\n            <Col key={`arg-${argKey}-${argIndex}`} className=\"rule--func--arg\">\n              {this.renderArgSep(argKey, args[argKey], argIndex, funcDefinition)}\n              {this.renderArgLabel(argKey, args[argKey])}\n              {this.renderArgLabelSep(argKey, args[argKey])}\n              {this.renderArgVal(funcKey, argKey, args[argKey])}\n            </Col>\n          ))}\n        </Col>\n        {this.renderBracketAfter(funcDefinition)}\n      </>\n    );\n  };\n\n  render() {\n    return (\n      <Col className=\"rule--func--wrapper\">\n        {this.renderFuncSelect()}\n        {this.renderFuncArgs()}\n      </Col>\n    );\n  }\n}\n\n\nclass ArgWidget extends PureComponent {\n  static propTypes = {\n    funcKey: PropTypes.string.isRequired,\n    argKey: PropTypes.string.isRequired,\n    setValue: PropTypes.func.isRequired,\n    setValueSrc: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n  };\n\n  setValue = (_delta, value, _widgetType) => {\n    const {setValue, argKey} = this.props;\n    setValue(argKey, value);\n  };\n\n  setValueSrc = (_delta, valueSrc, _widgetType) => {\n    const {setValueSrc, argKey} = this.props;\n    setValueSrc(argKey, valueSrc);\n  };\n\n  render() {\n    const {funcKey, argKey, parentFuncs} = this.props;\n    return (\n      <Widget\n        {...this.props} \n        setValue={this.setValue} \n        setValueSrc={this.setValueSrc} \n        isFuncArg={true}\n        parentFuncs={[...(parentFuncs || []), [funcKey, argKey]]}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { uuid } = Utils;\n\nexport default (props) => {\n  const {value, setValue, config, labelYes, labelNo, readonly, customProps = {}} = props;\n  const customRadioYesProps = customProps.radioYes || {};\n  const customRadioNoProps = customProps.radioNo || {};\n\n  const onCheckboxChange = e => setValue(e.target.checked);\n  const onRadioChange = e => setValue(e.target.value == \"true\");\n  const id = uuid(), id2 = uuid();\n\n  // return <>\n  //     <input key={id}  type=\"checkbox\" id={id} checked={!!value} disabled={readonly} onChange={onCheckboxChange} />\n  //     <label style={{display: \"inline\"}} key={id+\"label\"}  htmlFor={id}>{value ? labelYes : labelNo}</label>\n  // </>;\n\n  return <>\n    <input key={id}  type=\"radio\" id={id} value={true} checked={!!value} disabled={readonly} onChange={onRadioChange} { ...customRadioYesProps }/>\n    <label style={{display: \"inline\"}} key={id+\"label\"}  htmlFor={id}>{labelYes}</label>\n    <input key={id2}  type=\"radio\" id={id2} value={false} checked={!value} disabled={readonly} onChange={onRadioChange} { ...customRadioNoProps } />\n    <label style={{display: \"inline\"}} key={id2+\"label\"}  htmlFor={id2}>{labelNo}</label>\n  </>;\n\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { moment } = Utils;\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, readonly, customProps, } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    setValue(value);\n  };\n  \n  return (\n    <input type=\"date\"  value={value || \"\"}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { moment } = Utils;\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, use12Hours, readonly, customProps, } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    else\n      value = moment(new Date(value)).format(valueFormat);\n    setValue(value);\n  };\n\n  let dtValue = value;\n  if (!value)\n    dtValue = \"\";\n  else\n    dtValue = moment(value).format(\"YYYY-MM-DDTHH:mm\");\n  \n  return (\n    <input type=\"datetime-local\"  value={dtValue}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, customProps,}) => {\n  const renderOptions = () => \n    mapListValues(listValues, ({title, value}) => {\n      return <option key={value} value={value}>{title}</option>;\n    });\n\n  const getMultiSelectValues = (multiselect) => {\n    let values = [];\n    const options = multiselect.options;\n    for (let i = 0 ; i < options.length ; i++) {\n      const opt = options[i];\n      if (opt.selected) {\n        values.push(opt.value);\n      }\n    }\n    if (!values.length)\n      values = undefined; //not allow []\n    return values;\n  };\n\n  const onChange = e => setValue(getMultiSelectValues(e.target));\n  \n  return (\n    <select multiple\n      onChange={onChange}\n      value={value}\n      disabled={readonly}\n      {...omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])}\n    >\n      {renderOptions()}\n    </select>\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, customProps,}) => {\n  const renderOptions = () => \n    mapListValues(listValues, ({title, value}) => {\n      return <option key={value} value={value}>{title}</option>;\n    });\n\n  const onChange = e => setValue(e.target.value);\n  \n  const hasValue = value != null;\n  return (\n    <select\n      onChange={onChange}\n      value={hasValue ? value : \"\"}\n      disabled={readonly}\n      {...omit(customProps, [\"showSearch\", \"input\"])}\n    >\n      {!hasValue && <option disabled value={\"\"}></option>}\n      {renderOptions()}\n    </select>\n  );\n};\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport range from \"lodash/range\";\n\nexport default class Proximity extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    setOption: PropTypes.func.isRequired,\n    options: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    minProximity: PropTypes.number,\n    maxProximity: PropTypes.number,\n    optionPlaceholder: PropTypes.string,\n    optionTextBefore: PropTypes.string,\n    optionLabel: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    //children\n  };\n\n  static defaultProps = {\n    customProps: {},\n    minProximity: 2,\n    maxProximity: 10,\n    optionPlaceholder: \"Select words between\",\n    optionLabel: \"Words between\",\n    optionTextBefore: null,\n  };\n\n  handleChange = (value) => {\n    this.props.setOption(\"proximity\", parseInt(value));\n  };\n\n  render() {\n    const {\n      defaults, options, config, optionLabel, optionPlaceholder, customProps, \n      minProximity, maxProximity, optionTextBefore, readonly\n    } = this.props;\n    const {settings, widgets} = config;\n    const defaultProximity = defaults ? defaults.proximity : undefined;\n    const {showLabels} = settings;\n    const selectedProximity = options.get(\"proximity\", defaultProximity);\n    const proxValues = range(minProximity, maxProximity + 1).map((item) => ({title: item, value: item}));\n    const Select = widgets.select.factory;\n\n    return (\n      <div className=\"operator--PROXIMITY\">\n        <div className=\"operator--options\">\n          { showLabels\n            && <label className=\"rule--label\">{optionLabel}</label>\n          }\n          { !showLabels && optionTextBefore\n            && <div className=\"operator--options--sep\">\n              <span>{optionTextBefore}</span>\n            </div>\n          }\n          <Select\n            config={config}\n            value={selectedProximity}\n            listValues={proxValues}\n            setValue={this.handleChange}\n            readonly={readonly}\n            placeholder={optionPlaceholder}\n            {...customProps}\n          />\n        </div>\n        <div className=\"operator--widgets\">{this.props.children}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport * as Widgets from \"../components/widgets\";\nimport * as CustomOperators from \"../components/operators\";\nimport {CoreConfig} from \"@react-awesome-query-builder/core\";\n\nconst {\n  //value\n  VanillaBooleanWidget,\n  VanillaTextWidget,\n  VanillaTextAreaWidget,\n  VanillaDateWidget,\n  VanillaTimeWidget,\n  VanillaDateTimeWidget,\n  VanillaMultiSelectWidget,\n  VanillaSelectWidget,\n  VanillaNumberWidget,\n  VanillaSliderWidget,\n\n  //core\n  VanillaFieldSelect,\n  VanillaConjs,\n  VanillaButton,\n  VanillaButtonGroup,\n  VanillaProvider,\n  VanillaValueSources,\n  vanillaConfirm,\n  VanillaSwitch,\n\n  //common\n  ValueFieldWidget,\n  FuncWidget\n} = Widgets;\nconst { ProximityOperator } = CustomOperators;\n\n\n//----------------------------  conjunctions\n\nconst conjunctions = {\n  ...CoreConfig.conjunctions,\n};\n\n//----------------------------  operators\n\nconst operators = {\n  ...CoreConfig.operators,\n  proximity: {\n    ...CoreConfig.operators.proximity,\n    options: {\n      ...CoreConfig.operators.proximity.options,\n      factory: (props) => <ProximityOperator {...props} />,\n    },\n  },\n};\n\n\n//----------------------------  widgets\n\nconst widgets = {\n  text: {\n    ...CoreConfig.widgets.text,\n    factory: (props) => <VanillaTextWidget {...props} />,\n  },\n  textarea: {\n    ...CoreConfig.widgets.textarea,\n    factory: (props) => <VanillaTextAreaWidget {...props} />,\n  },\n  number: {\n    ...CoreConfig.widgets.number,\n    factory: (props) => <VanillaNumberWidget {...props} />,\n  },\n  slider: {\n    ...CoreConfig.widgets.slider,\n    factory: (props) => <VanillaSliderWidget {...props} />,\n  },\n  select: {\n    ...CoreConfig.widgets.select,\n    factory: (props) => <VanillaSelectWidget {...props} />,\n  },\n  multiselect: {\n    ...CoreConfig.widgets.multiselect,\n    factory: (props) => <VanillaMultiSelectWidget {...props} />,\n  },\n  date: {\n    ...CoreConfig.widgets.date,\n    factory: (props) => <VanillaDateWidget {...props} />,\n  },\n  time: {\n    ...CoreConfig.widgets.time,\n    factory: (props) => <VanillaTimeWidget {...props} />,\n  },\n  datetime: {\n    ...CoreConfig.widgets.datetime,\n    factory: (props) => <VanillaDateTimeWidget {...props} />,\n  },\n  boolean: {\n    ...CoreConfig.widgets.boolean,\n    factory: (props) => <VanillaBooleanWidget {...props} />,\n  },\n  field: {\n    ...CoreConfig.widgets.field,\n    factory: (props) => <ValueFieldWidget {...props} />,\n    customProps: {\n      showSearch: true\n    }\n  },\n  func: {\n    ...CoreConfig.widgets.func,\n    factory: (props) => <FuncWidget {...props} />,\n    customProps: {\n      //showSearch: true\n    }\n  },\n  case_value: {\n    ...CoreConfig.widgets.case_value,\n    factory: ({value, setValue}) =>  \n      <input \n        type=\"text\" \n        value={value || \"\"} \n        onChange={e => setValue(e.target.value)} \n      />\n  }\n};\n\n//----------------------------  types\n\nconst types = {\n  ...CoreConfig.types,\n  select: {\n    ...CoreConfig.types.select,\n    widgets: {\n      ...CoreConfig.types.select.widgets,\n      select: {\n        ...CoreConfig.types.select.widgets.select,\n        widgetProps: {\n          customProps: {\n            showSearch: true\n          }\n        },\n      }\n    }\n  }\n};\n\n//----------------------------  settings\n\nconst settings = {\n  ...CoreConfig.settings,\n\n  renderField: (props) => <VanillaFieldSelect {...props} />,\n  renderOperator: (props) => <VanillaFieldSelect {...props} />,\n  renderFunc: (props) => <VanillaFieldSelect {...props} />,\n  renderConjs: (props) => <VanillaConjs {...props} />,\n  renderSwitch: (props) => <VanillaSwitch {...props} />,\n  renderButton: (props) => <VanillaButton {...props} />,\n  renderButtonGroup: (props) => <VanillaButtonGroup {...props} />,\n  renderProvider: (props) => <VanillaProvider {...props} />,\n  renderValueSources: (props) => <VanillaValueSources {...props} />,\n  renderConfirm: vanillaConfirm,\n  renderSwitchPrefix: () => <>{\"Conditions\"}</>,\n\n  customFieldSelectProps: {\n    showSearch: true\n  },\n\n  defaultSliderWidth: \"200px\",\n  defaultSelectWidth: \"200px\",\n  defaultSearchWidth: \"100px\",\n  defaultMaxRows: 5,\n  renderSize: \"small\",\n  maxLabelsLength: 100,\n\n  showLock: false,\n  showNot: true,\n  forceShowConj: false,\n  groupActionsPosition: \"topRight\", // oneOf [topLeft, topCenter, topRight, bottomLeft, bottomCenter, bottomRight]\n  \n};\n\n//----------------------------\n\nexport default {\n  conjunctions,\n  operators,\n  widgets,\n  types,\n  settings,\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, maxLength, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  const textValue = value || \"\";\n  return (\n    <input\n      type=\"text\" \n      value={textValue} \n      placeholder={placeholder} \n      disabled={readonly} \n      onChange={onChange}\n      maxLength={maxLength}\n      {...customProps}\n    />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, maxLength, maxRows, fullWidth, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  const textValue = value || \"\";\n  return (\n    <textarea\n      value={textValue} \n      placeholder={placeholder}\n      disabled={readonly}\n      onChange={onChange}\n      maxLength={maxLength}\n      style={{\n        width: fullWidth ? \"100%\" : undefined\n      }}\n      {...customProps}\n    />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, use12Hours, readonly, customProps } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    setValue(value);\n  };\n  \n  return (\n    <input type=\"time\"  value={value || \"\"}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n  const numberValue = value == undefined ? \"\" : value;\n  return (\n    <input type=\"number\"  value={numberValue} placeholder={placeholder} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps = {}, } = props;\n  const customInputProps = customProps.input || {};\n  const customSliderProps = customProps.slider || customProps;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n  const numberValue = value == undefined ? \"\" : value;\n  return (\n    <div style={{display: \"inline-flex\"}}>\n      <input key={\"number\"} type=\"number\"  value={numberValue} placeholder={placeholder} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customInputProps} />\n      <input key={\"range\"} type=\"range\"  value={numberValue} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customSliderProps} />\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default ({items, setField, selectedKey, readonly}) => {\n  const renderOptions = (fields) => (\n    fields.map(field => {\n      const {items, path, label, disabled} = field;\n      if (items) {\n        return <optgroup disabled={disabled} key={path} label={label}>{renderOptions(items)}</optgroup>;\n      } else {\n        return <option disabled={disabled} key={path} value={path}>{label}</option>;\n      }\n    })\n  );\n\n  const onChange = e => setField(e.target.value);\n  \n  const hasValue = selectedKey != null;\n  return (\n    <select \n      onChange={onChange}\n      value={hasValue ? selectedKey : \"\"}\n      disabled={readonly}\n    >\n      {!hasValue && <option disabled value={\"\"}></option>}\n      {renderOptions(items)}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default ({id, not, setNot, conjunctionOptions, setConjunction, disabled, readonly, config, showNot, notLabel}) => {\n  const conjsCount = Object.keys(conjunctionOptions).length;\n  const lessThenTwo = disabled;\n  const {forceShowConj} = config.settings;\n  const showConj = forceShowConj || conjsCount > 1 && !lessThenTwo;\n\n  const renderOptions = () => \n    Object.keys(conjunctionOptions).map(key => {\n      const {id, name, label, checked} = conjunctionOptions[key];\n      const postfix = setConjunction.isDummyFn ? \"__dummy\" : \"\";\n      if ((readonly || disabled) && !checked)\n        return null;\n      return [\n        <input key={id+postfix} type=\"radio\" id={id+postfix} name={name+postfix} checked={checked} disabled={readonly || disabled} value={key} onChange={onChange} />\n        ,\n        <label key={id+postfix+\"label\"} htmlFor={id+postfix}>{label}</label>\n      ];\n    });\n  \n  const renderNot = () => {\n    const postfix = \"not\";\n    return [\n      <input key={id+postfix}  type=\"checkbox\" id={id+postfix} checked={not} disabled={readonly} onChange={onNotChange} />\n      ,\n      <label key={id+postfix+\"label\"}  htmlFor={id+postfix}>{notLabel || \"NOT\"}</label>\n    ];\n  };\n\n  const onChange = e => setConjunction(e.target.value);\n\n  const onNotChange = e => setNot(e.target.checked);\n\n  return [\n    showNot && renderNot(),\n    showConj && renderOptions()\n  ];\n  \n};\n","import React from \"react\";\n\nexport default ({type, label, onClick, readonly, config}) => {\n  const typeToLabel = {\n    \"addRuleGroup\": \"+\",\n    \"addRuleGroupExt\": \"+\",\n    \"delGroup\": \"x\",\n    \"delRuleGroup\": \"x\",\n    \"delRule\": \"x\",\n  };\n  const btnLabel = label || typeToLabel[type];\n  return <button onClick={onClick} type=\"button\" disabled={readonly}>{btnLabel}</button>;\n};\n","import React from \"react\";\n\nexport default ({children, config}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\n\n// value widgets\nexport {default as VanillaBooleanWidget} from \"./value/VanillaBoolean\";\nexport {default as VanillaTextWidget} from \"./value/VanillaText\";\nexport {default as VanillaTextAreaWidget} from \"./value/VanillaTextArea\";\nexport {default as VanillaDateWidget} from \"./value/VanillaDate\";\nexport {default as VanillaTimeWidget} from \"./value/VanillaTime\";\nexport {default as VanillaDateTimeWidget} from \"./value/VanillaDateTime\";\nexport {default as VanillaMultiSelectWidget} from \"./value/VanillaMultiSelect\";\nexport {default as VanillaSelectWidget} from \"./value/VanillaSelect\";\nexport {default as VanillaNumberWidget} from \"./value/VanillaNumber\";\nexport {default as VanillaSliderWidget} from \"./value/VanillaSlider\";\n\n// field select widget\nexport {default as VanillaFieldSelect} from \"./core/VanillaFieldSelect\";\n\n// core components\nexport {default as VanillaConjs} from \"./core/VanillaConjs\";\nexport {default as VanillaButton} from \"./core/VanillaButton\";\nexport {default as VanillaButtonGroup} from \"./core/VanillaButtonGroup\";\nexport {default as VanillaValueSources} from \"./core/VanillaValueSources\";\nexport {default as VanillaSwitch} from \"./core/VanillaSwitch\";\nexport {default as vanillaConfirm} from \"./core/vanillaConfirm\";\n\nexport const VanillaProvider = ({config, children}) => children;\n","import React from \"react\";\n\nexport default ({config, valueSources, valueSrc, title, setValueSrc, readonly}) => {\n  const renderOptions = (valueSources) => (\n    valueSources.map(([srcKey, info]) => (\n      <option key={srcKey} value={srcKey}>{info.label}</option>\n    ))\n  );\n\n  const onChange = e => setValueSrc(e.target.value);\n  \n  return (\n    <select \n      onChange={onChange}\n      value={valueSrc}\n      disabled={readonly}\n    >\n      {renderOptions(valueSources)}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default ({value, setValue, label, id, config, type}) => {\n  const onChange = e => setValue(e.target.checked);\n  const postfix = type;\n  return [\n    <input key={id+postfix}  type=\"checkbox\" id={id+postfix} checked={!!value} onChange={onChange} />\n    ,\n    <label key={id+postfix+\"label\"}  htmlFor={id+postfix}>{label}</label>\n  ];\n};\n","export default ({onOk, okText, cancelText, title}) => {\n  if (confirm(title)) {\n    onOk();\n  }\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport debounce from \"lodash/debounce\";\nconst { mergeListValues, listValueToOption, getListValue } = Utils.Autocomplete;\nconst { mapListValues, listValuesToArray } = Utils.ListUtils;\n\n\nconst useListValuesAutocomplete = ({\n  asyncFetch, useLoadMore, useAsyncSearch, forceAsyncSearch,\n  asyncListValues: selectedAsyncListValues,\n  listValues: staticListValues, allowCustomValues,\n  value: selectedValue, setValue, placeholder\n}, {\n  debounceTimeout,\n  multiple\n}) => {\n  const knownSpecialValues = [\"LOAD_MORE\", \"LOADING_MORE\"];\n  const loadMoreTitle = \"Load more...\";\n  const loadingMoreTitle = \"Loading more...\";\n  const aPlaceholder = forceAsyncSearch ? \"Type to search\" : placeholder;\n\n  // state\n  const [open, setOpen] = React.useState(false);\n  const [asyncFetchMeta, setAsyncFetchMeta] = React.useState(undefined);\n  const [loadingCnt, setLoadingCnt] = React.useState(0);\n  const [isLoadingMore, setIsLoadingMore] = React.useState(false);\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [asyncListValues, setAsyncListValues] = React.useState(undefined);\n\n  // ref\n  const asyncFectchCnt = React.useRef(0);\n  const componentIsMounted = React.useRef(0);\n  const isSelectedLoadMore = React.useRef(false);\n\n  // compute\n  const nSelectedAsyncListValues = listValuesToArray(selectedAsyncListValues);\n  const listValues = asyncFetch\n    ? (!allowCustomValues ? mergeListValues(asyncListValues, nSelectedAsyncListValues, true) : asyncListValues)\n    : staticListValues;\n  //const isDirtyInitialListValues = asyncListValues == undefined && selectedAsyncListValues && selectedAsyncListValues.length && typeof selectedAsyncListValues[0] != \"object\";\n  const isLoading = loadingCnt > 0;\n  const canInitialLoad = open && asyncFetch\n    && asyncListValues === undefined\n    && (forceAsyncSearch ? inputValue : true);\n  const isInitialLoading = canInitialLoad && isLoading;\n  const canLoadMore = !isInitialLoading && listValues && listValues.length > 0\n    && asyncFetchMeta && asyncFetchMeta.hasMore && (asyncFetchMeta.filter || \"\") === inputValue;\n  const canShowLoadMore = !isLoading && canLoadMore;\n  const options = mapListValues(listValues, listValueToOption);\n  const hasValue = selectedValue != null;\n  // const selectedListValue = hasValue ? getListValue(selectedValue, listValues) : null;\n  // const selectedOption = listValueToOption(selectedListValue);\n\n  // fetch\n  const fetchListValues = async (filter = null, isLoadMore = false) => {\n    // clear obsolete meta\n    if (!isLoadMore && asyncFetchMeta) {\n      setAsyncFetchMeta(undefined);\n    }\n\n    const offset = isLoadMore && asyncListValues ? asyncListValues.length : 0;\n    const meta = isLoadMore && asyncFetchMeta || !useLoadMore && { pageSize: 0 };\n\n    const newAsyncFetchCnt = ++asyncFectchCnt.current;\n    const res = await asyncFetch(filter, offset, meta);\n    const isFetchCancelled = asyncFectchCnt.current != newAsyncFetchCnt;\n    if (isFetchCancelled || !componentIsMounted.current) {\n      return null;\n    }\n\n    const { values, hasMore, meta: newMeta } = res && res.values ? res : { values: res };\n    const nValues = listValuesToArray(values);\n    let assumeHasMore;\n    let newValues;\n    if (isLoadMore) {\n      newValues = mergeListValues(asyncListValues, nValues, false);\n      assumeHasMore = newValues.length > asyncListValues.length;\n    } else {\n      newValues = nValues;\n      if (useLoadMore) {\n        assumeHasMore = newValues.length > 0;\n      }\n    }\n\n    // save new meta\n    const realNewMeta = hasMore != null || newMeta != null || assumeHasMore != null ? {\n      ...(assumeHasMore != null ? { hasMore: assumeHasMore } : {}),\n      ...(hasMore != null ? { hasMore } : {}),\n      ...(newMeta != null ? newMeta : {}),\n      filter\n    } : undefined;\n    if (realNewMeta) {\n      setAsyncFetchMeta(realNewMeta);\n    }\n\n    return newValues;\n  };\n\n  const loadListValues = async (filter = null, isLoadMore = false) => {\n    setLoadingCnt(x => (x + 1));\n    setIsLoadingMore(isLoadMore);\n    const list = await fetchListValues(filter, isLoadMore);\n    if (!componentIsMounted.current) {\n      return;\n    }\n    if (list != null) {\n      // tip: null can be used for reject (eg, if user don't want to filter by input)\n      setAsyncListValues(list);\n    }\n    setLoadingCnt(x => (x - 1));\n    setIsLoadingMore(false);\n  };\n  const loadListValuesDebounced = React.useCallback(debounce(loadListValues, debounceTimeout), []);\n\n  React.useEffect(() => {\n    componentIsMounted.current++;\n    // Initial loading\n    if (canInitialLoad && loadingCnt == 0 && asyncFectchCnt.current == 0) {\n      (async () => {\n        await loadListValues();\n      })();\n    }\n    // Unmount\n    return () => {\n      componentIsMounted.current--;\n    };\n  }, [canInitialLoad]);\n\n  // Event handlers\n  const onOpen = () => {\n    setOpen(true);\n  };\n\n  const onClose = (_e) => {\n    if (isSelectedLoadMore.current) {\n      isSelectedLoadMore.current = false;\n      if (multiple) {\n        setOpen(false);\n      }\n    } else {\n      setOpen(false);\n    }\n  };\n\n  const onDropdownVisibleChange = (open) => {\n    if (open) {\n      onOpen();\n    } else {\n      onClose();\n    }\n  };\n\n  const isSpecialValue = (option) => {\n    const specialValue = option?.specialValue || option?.value;\n    return knownSpecialValues.includes(specialValue);\n  };\n\n  const onChange = async (_e, option) => {\n    let specialValue = option?.specialValue || option?.value \n      || multiple && option.map(opt => opt?.specialValue || opt?.value).find(v => !!v);\n    if (specialValue == \"LOAD_MORE\") {\n      isSelectedLoadMore.current = true;\n      await loadListValues(inputValue, true);\n    } else if (specialValue == \"LOADING_MORE\") {\n      isSelectedLoadMore.current = true;\n    } else {\n      if (multiple) {\n        const options = option;\n        let newSelectedListValues = options.map((o, i) => {\n          const item = o.value != null ? o : getListValue(o, listValues);\n          // AntDesign puts array of labels in `_e` (`option` is array of objects, but custom option is always `{}`)\n          // MUI puts array of labels in `option`\n          const customItem = allowCustomValues && !item ? (Array.isArray(_e) ? _e[i] : o) : null;\n          return item || customItem;\n        });\n        let newSelectedValues = newSelectedListValues\n          .filter(o => o !== undefined)\n          .map(o => (o.value !== undefined ? o.value : o));\n        if (!newSelectedValues.length)\n          newSelectedValues = undefined; //not allow []\n        setValue(newSelectedValues, newSelectedListValues);\n      } else {\n        const v = option == null ? undefined : option.value;\n        setValue(v, [option]);\n      }\n    }\n  };\n\n  const onInputChange = async (_e, newInputValue) => {\n    const val = newInputValue;\n    //const isTypeToSearch = e.type == 'change';\n\n    if (val === loadMoreTitle || val === loadingMoreTitle) {\n      return;\n    }\n\n    setInputValue(val);\n\n    if (allowCustomValues) {\n      if (multiple) {\n        //todo\n      } else {\n        setValue(val, [val]);\n      }\n    }\n\n    const canSearchAsync = useAsyncSearch && (forceAsyncSearch ? !!val : true);\n    if (canSearchAsync) {\n      await loadListValuesDebounced(val);\n    } else if (useAsyncSearch && forceAsyncSearch) {\n      setAsyncListValues([]);\n    }\n  };\n\n  // to keep compatibility with antD\n  const onSearch = async (newInputValue) => {\n    if (newInputValue === \"\" && !open) {\n      return;\n    }\n\n    await onInputChange(null, newInputValue);\n  };\n\n  // Options\n  const extendOptions = (options) => {\n    const filtered = [...options];\n    if (useLoadMore) {\n      if (canShowLoadMore) {\n        filtered.push({\n          specialValue: \"LOAD_MORE\",\n          title: loadMoreTitle,\n        });\n      } else if (isLoadingMore) {\n        filtered.push({\n          specialValue: \"LOADING_MORE\",\n          title: loadingMoreTitle,\n          disabled: true\n        });\n      }\n    }\n    return filtered;\n  };\n\n  const getOptionSelected = (option, valueOrOption) => {\n    if (valueOrOption == null)\n      return null;\n    const selectedValue = valueOrOption.value != undefined ? valueOrOption.value : valueOrOption;\n    return option.value === selectedValue;\n  };\n\n  const getOptionDisabled = (valueOrOption) => {\n    return valueOrOption && valueOrOption.disabled;\n  };\n\n  const getOptionLabel = (valueOrOption) => {\n    if (valueOrOption == null)\n      return null;\n    const option = valueOrOption.value != undefined ? valueOrOption\n      : listValueToOption(getListValue(valueOrOption, listValues));\n    if (!option && valueOrOption.specialValue) {\n      // special last 'Load more...' item\n      return valueOrOption.title;\n    }\n    if (!option && allowCustomValues) {\n      // there is just string value, it's not item from list\n      return valueOrOption;\n    }\n    if (!option) {\n      // weird\n      return valueOrOption;\n    }\n    return option.title;\n  };\n\n  return {\n    options,\n    listValues,\n    hasValue,\n\n    open,\n    onOpen,\n    onClose,\n    onDropdownVisibleChange,\n    onChange,\n    \n    inputValue,\n    onInputChange,\n    onSearch,\n    canShowLoadMore,\n    isInitialLoading,\n    isLoading,\n    isLoadingMore,\n    isSpecialValue,\n\n    extendOptions,\n    getOptionSelected,\n    getOptionDisabled,\n    getOptionLabel,\n\n    // unused\n    //selectedListValue,\n    //selectedOption,\n    aPlaceholder,\n  };\n};\n\nexport default useListValuesAutocomplete;\n","import { Utils } from \"@react-awesome-query-builder/core\";\nimport * as ReactUtils from \"./reactUtils\";\nexport default { ...Utils, ReactUtils };\n","var map = {\n\t\"./es-us\": 88218,\n\t\"./es-us.js\": 88218,\n\t\"./ru\": 31313,\n\t\"./ru.js\": 31313\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 40164;"],"names":["defaultValue","value","_default","deepEqual","v1","v2","Map","equals","JSON","stringify","shallowEqual","a","b","deep","Array","isArray","shallowEqualArrays","shallowEqualObjects","arrA","arrB","len","length","i","isEqual","objA","objB","aKeys","Object","keys","bKeys","key","isImmutable","v","toJS","toImmutableList","Immutable","applyToJS","escapeRegExp","string","replace","isJsonLogic","logic","sleep","delay","Promise","resolve","setTimeout","mergeArraysSmart","arr1","arr2","map","op","indexOf","orig","next","slice","after","reverse","find","before","filter","x","reduce","acc","newOp","rel","relOp","ind","splice","Infinity","isDev","process","getFirstDefined","ret","arr","undefined","logger","devMode","verbose","console","error","log","warn","debug","info","getLogger","query_builder_seed","timePart","Date","getTime","toString","substr","c","r","Math","floor","random","settings","formatField","field","parts","label2","fieldDefinition","config","isForDisplay","valueSourcesInfo","fieldSeparator","fieldSeparatorDisplay","canReorder","canRegroup","canDeleteLocked","canLeaveEmptyGroup","shouldCreateEmptyGroup","canShortMongoQuery","removeEmptyGroupsOnLoad","removeIncompleteRulesOnLoad","removeInvalidMultiSelectValuesOnLoad","setOpOnChangeField","groupOperators","defaultGroupConjunction","locale","moment","valueLabel","valuePlaceholder","fieldLabel","operatorLabel","funcLabel","fieldPlaceholder","funcPlaceholder","operatorPlaceholder","lockLabel","lockedLabel","deleteLabel","addGroupLabel","addCaseLabel","addDefaultCaseLabel","defaultCaseLabel","addRuleLabel","addSubRuleLabel","delGroupLabel","notLabel","valueSourcesPopupTitle","removeRuleConfirmOptions","removeGroupConfirmOptions","isObject","listValue","title","listValuesToArray","listValuesObj","listValuesArr","push","getItemInListValues","listValues","values","getTitleInListValues","it","getValueInListValues","mapListValues","mapFn","lv","defaultField","canGetFirst","parentRuleGroupPath","getFirstField","defaultOperator","fieldConfig","getFieldConfig","fieldOperators","operators","fieldDefaultOperator","includes","getFirstOperator","defaultOperatorOptions","operator","operatorConfig","getOperatorConfig","options","defaults","defaultRuleProperties","item","setDefaultFieldAndOp","showErrorMessage","properties","current","valueSrc","operatorOptions","set","getNewValueForFieldOp","newValue","newValueSrc","newValueType","newValueError","conjs","conjunctions","defaultConjunction","defaultGroupProperties","conjunction","not","defaultItemProperties","type","defaultRule","id","defaultRoot","uuid","children1","createListFromArray","ids","emptyProperies","expandTreePath","path","suffix","interpose","withMutations","list","skip","apply","expandTreeSubpath","getItemByPath","tree","children","get","res","forEach","removePathsInTree","newTree","_processNode","itemPath","removeIn","child","_childId","removeIsLockedInTree","isParentLocked","isLocked","getIn","deleteIn","fixPathsInTree","lev","nodeId","currPath","currId","itemId","setIn","constructor","name","childId","fixEmptyGroupsInTree","allChildrenGone","curr","size","getFlatTree","flat","items","realHeight","_flatizeTree","insideCollapsed","insideLocked","insideRuleGroup","parentType","caseId","collapsed","childrenIds","_child","isRuleGroup","isLeaf","itemsBefore","top","height","parent","isDefaultCase","concat","leaf","index","leafsCount","_top","node","subinfo","itemsAfter","assign","_height","bottom","prevId","nextId","prev","getTotalReordableNodesCountInTree","cnt","getTotalRulesCountInTree","getTreeBadFields","badFields","valueError","from","Set","getLightTree","children1AsArray","getSwitchValues","vals","caseValue","isEmptyTree","hasChildren","isTypeOf","typeOf","isNaN","validateAndFixTree","_oldTree","newConfig","oldConfig","removeEmptyGroups","removeIncompleteRules","validateTree","validateItem","meta","oldChildren","sanitized","submeta","currentChild","validateGroup","oldSerialized","operatorDefinition","availOps","getOperatorsForField","cardinality","newSerialized","isComplete","validateRule","validateValue","leftField","valueType","asyncListValues","canFix","isEndValue","isRawValue","validError","fixedValue","validateFieldValue","validateFuncValue","validateNormalValue","w","getWidgetForFieldOp","fieldWidgetDefinition","omit","getFieldWidgetConfig","rightFieldDefinition","fieldSettings","fn","args","validResult","validateValueInList","List","val","goodVals","badVals","vv","goodValues","badValues","plural","join","wConfig","widgets","wType","jsType","treeValues","realListValues","allowCustomValues","min","max","_valueSrc","isFuncArg","_isFuncArg","leftFieldStr","rightFieldStr","funcKey","funcConfig","getFuncConfig","returnType","argKey","argConfig","argVal","fieldDef","argValue","argValueSrc","argValidError","fixedArgVal","selectTypes","newField","newOperator","changedProp","currentField","currentOperator","currentValue","currentValueSrc","currentValueType","currentAsyncListValues","convertableWidgets","clearValueOnChangeField","clearValueOnChangeOp","newOperatorConfig","operatorCardinality","currentFieldConfig","newFieldConfig","canReuseValue","vs","currentWidget","newWidget","currentValueWidget","newValueWidget","canReuseWidget","firstWidgetConfig","first","valueSources","getValueSourcesForFieldOp","valueFixes","valueErrors","vType","vSrc","isValidSrc","validateError","fixValue","dropValue","_ignore","validateValues","jsValues","rangeValidateError","vt","parentPathArr","split","parentField","getFieldRawConfig","firstField","keysPath","subfields","fields","fieldOps","getFieldPath","onlyKeys","_curr","getFuncPathLabels","getFieldPathLabels","fieldsKey","subfieldsKey","parentParts","part","cnf","label","last","getFieldPartsConfigs","parentFieldDef","getValueLabel","delta","isSpecialRange","func","arg","showLabels","fieldWidgetConfig","mergedOpConfig","valueLabels","placeholder","_getWidgetsAndSrcsForFieldOp","valueSrcs","opConfig","widgetConfig","widget","widgetValueSrc","canAdd","filterValueSourcesForField","canAddValueSrc","widgetWeight","wg","preferWidgets","mainWidget","sort","w1","w2","getWidgetsForFieldOp","_fieldsCntByType","minCnt","_funcsCntByType","funcs","filteredValueSrcs","formatFieldName","fieldParts","fieldName","tableName","fieldPartsCopy","parentFieldName","errors","extendConfig","configId","__configId","merge","defaultSettings","types","clone","typesConfig","_extendTypeConfig","_extendTypesConfig","__fieldNames","_extendFieldsConfig","_extendFuncArgsConfig","defineProperty","enumerable","writable","typeConfig","typeWidgetConfig","typeWidgetOperators","excludeOperators","widgetProps","mainWidgetProps","subconfig","_extendFieldConfig","funcDef","tmpIsOptional","argDef","isOptional","excludeOperatorsForField","keysToPutInFieldSettings","k","normalizeListValues","disabled","excludeOperatorsForType","shouldIncludeOperators","addOperators","o","computedFieldName","computeFieldName","targetFields","pathKey","f","fConfig","l","pop","unshift","normalizeField","fieldStr","getFuncArgConfig","mergeWith","objValue","srcValue","_key","_object","_source","_stack","widgetOpProps","opProps","fieldWidgetOpProps","fieldWidgetProps","valueFieldSettings","mergedConfig","completeValue","completeFuncValue","complValue","tmpHasOptional","filteredValueSources","argDefaultValueSrc","completeArgValue","getDefaultArgValue","_checkFuncValue","setFunc","firstValueSrc","toList","toOrderedMap","setArgValue","setArgValueSrc","argValSrc","_argConfig","_config","queryBuilderFormat","usedFields","formatItem","formatGroup","formatRule","rules","condition","toUpperCase","hasUndefinedValues","fieldType","toArray","secondField","ruleQuery","input","jsonLogicFormat","data","ff","tmp","p","pdef","mode","isRoot","lockedOp","jsonLogic","conjunctionDefinition","conj","jsonLogicConj","toLowerCase","groupField","groupOperator","groupOperatorDefinition","formattedValue","formatItemValue","isGroup0","resultQuery","formattedField","count","var","formatLogic","reversedOp","revOperatorDefinition","isRev","iValueSrc","iValueType","iValue","valueTypes","oldUsedFields","fvalue","cValue","fieldWidgetDef","fv","formatValue","operatorDef","formatFunc","pick","formattedArgs","formattedArgVal","formattedArgsArr","funcName","isMethod","jsonLogicIsMethod","obj","params","varName","jsonLogicVar","groupVarKey","buildFnToFormatOp","formatteOp","isReverseArgs","_jsonLogicIsRevArgs","rangeOps","eqOps","opDef","opOpts","mongodbFormat","_mongodbFormat","returnErrors","parents","_not","_canWrapExpr","_fieldName","_value","hasParentRuleGroup","parentPath","realParentPath","groupFieldName","groupFieldDef","canHaveEmptyChildren","reversedConj","mongoConj","canShort","rule","totalQuery","filterQuery","as","cond","_f","useExpr","fvUseExpr","wrapExpr","mongoFormatOp","formatRightField","mongoFormatValue","rightField","fieldPartsLabels","fieldFullLabel","formatFieldFn","mongoFunc","mongoArgsAsObject","argsCnt","lastArg","argAsyncListValues","mongoFormatFunc","SqlString","SqlStringOrig","trim","charAt","substring","escapeLike","any_start","any_end","escape","sqlEmptyValue","mongoEmptyValue","spelEscapeString","spelInlineList","javaType","jt","escapedVals","numberJavaTypes","Error","Number","isInteger","spelEscape","spelFixList","numberToFloat","arrayToArray","isFinite","spelFormatConcat","spelImportConcat","isVariable","stringifyForDisplay","sqlFormat","_sqlFormat","sqlFormatConj","revOpDef","canFormatOp","sqlOp","sqlFormatOp","canFormatRevOp","valFrom","valTo","sqlFormatReverse","sqlFormatValue","valFieldDefinition","sqlFunc","sqlFormatFunc","argsStr","entries","spelFormat","_spelFormat","formatSwitch","formatCase","cases","filteredCases","left","right","isRuleGroupArray","isSpelArray","realGroupOperator","checkOp","isGroupOpRev","realGroupOperatorDefinition","omitBrackets","spelFormatConj","getSize","fullSize","filteredSize","groupValue","formatExpression","spelOp","objectIsFirstArg","isFunction","sop","spelFormatOp","spelFormatReverse","realOp","expectedValueType","spelFormatValue","fieldPartsConfigs","formatSpelField","fieldPartsMeta","parentCnf","isSpelMap","isSpelItemMap","isSpelVariable","spelFunc","spelFormatFunc","queryString","conjStr","formatConj","aggrArgs","formatAggr","formatReverse","_operator","fop","labelForFormat","returnArgs","revOperatorDef","formatOp","cutParentField","fieldLabel2","funcValue","formattedArgsWithNames","argName","buildEsRule","syntax","elasticSearchQueryType","queryType","parameters","elasticSearchFormatValue","textField","determineField","script","elasticSearchScript","ES_7_SYNTAX","geoPointString","coordsNumberArray","top_left","lat","lon","bottom_right","buildEsGeoPoint","gte","lte","dateTime","lt","gt","buildEsRangeParameters","buildEsWildcardParameters","buildRegexpParameters","buildParameters","bool","must_not","buildEsGroup","recursiveFxn","childrenArray","valueSeq","occurrence","combinator","determineOccurrence","result","resultFlat","ES_6_SYNTAX","elasticSearchFormat","getTree","immutableTree","light","loadTree","serTree","isImmutableTree","isTree","jsTreeToImmutable","startsWith","parse","checkTree","extendedConfig","isValidTree","fromJS","outValue","valueJs","arrayUniq","loadFromJsonLogic","logicTree","_loadFromJsonLogic","conv","buildConv","jsTree","convertFromLogic","wrapInDefaultConj","immTree","opKey","opk","jsonLogic2","conjKey","fk","varKeys","altVarKey","expectedType","beforeErrorsCnt","isEmptyOp","convertField","convertFunc","convertVal","convertConj","convertOp","afterErrorsCnt","h","m","s","valueFormat","dateVal","setMilliseconds","setHours","setMinutes","setSeconds","format","toISOString","e","asyncFetch","argsArr","opts","funcKeys","fc","jsonLogicImport","parsed","_e","argKeys","parentFieldConfig","complexFields","complexFieldsGroupAncestors","fromEntries","ancs","fp","usedRuleGroups","topLevelFieldsFilter","groupToId","groupAncestors","at","ch","parentFieldParts","gf","gfc","groupId","j","wrapInDefaultConjRuleGroup","parseRule","arity","_parseRule","isRevArgs","opKeys","jlField","having","init","group","op2","parseRes","havingVals","canRev","showNot","havingNot","convertedArgs","asyncListValuesArr","loadFromSpel","_loadFromSpel","spelStr","compiledExpression","convertedObj","compileRes","SpelExpressionEvaluator","_compiledExpression","convertCompiled","convertToTree","expr","parentExpr","getType","getChildren","selection","lastChild","isSize","methodName","isLength","sourceParts","source","isThis","itype","getRaw","getValue","flatizeTernary","functionName","qid","cls","isVar","_processTernaryChildren","tern","if_val","else_val","spelOps","spelConj","convertPath","isError","convertArg","spel","parentSpel","literalTypes","number","boolean","null","groupFieldParts","_groupField","fullParts","isUnary","funcToOpMap","buildRule","dateFormat","dateString","isValid","timeString","buildCaseValueConcat","needWrapReverse","buildRuleGroup","groupFilter","groupFieldValue","groupOpRule","compareArgs","leftSource","rightSource","leftVal","rightVal","isBetweenNormal","isBetweenRev","isBetween","to","isNumbers","isSameSource","oneSpel","convertChildren","fieldObj","opArg","ws","buildSimpleSwitch","caseI","buildCase","sw","valProperties","buildCaseValProperties","_processConcatChildren","convertedChild","convVal","widgetDef","importCaseValue","spelImportValue","normVal","normErrors","simulateAsyncFetch","all","cPageSize","search","offset","pageSize","filtered","ceil","currentOffset","newOffset","hasMore","mergeListValues","newValues","toStart","old","newFiltered","av","merged","listValueToOption","groupTitle","renderTitle","option","getListValue","selectedValue","shift","NOW","jsonLogicCustomOps","now","RELATIVE_DATETIME","renderBrackets","renderSeps","date","dim","abs","date_add","add","toDate","parseInt","customProps","showSearch","plus","minus","day","week","month","year","LOWER","str","UPPER","LINEAR_REGRESSION","_","coef","bias","mongoFormatOp1","mop","mc","_op","$field","mv","mongoFormatOp2","mops","AND","sqlConj","spelConjs","OR","equal","opStr","bind","not_equal","isNotOp","less","less_or_equal","greater","greater_or_equal","like","not_like","starts_with","ends_with","between","textSeparators","not_between","is_empty","empty","is_not_empty","is_null","is_not_null","select_equals","select_not_equals","select_any_in","select_not_any_in","multiselect_contains","multiselect_not_contains","multiselect_equals","multiselect_not_equals","proximity","val1","val2","prox","aVal1","aVal2","optionLabel","optionTextBefore","optionPlaceholder","minProximity","maxProximity","some","none","text","wgtDef","regex","textarea","fullWidth","isFloat","step","slider","select","valLabel","multiselect","valsLabels","isCallable","useKeyboard","time","timeFormat","use12Hours","datetime","labelYes","labelNo","rightFieldDef","case_value","partsExt","q","whereStr","aggrField","aggrFieldDef","canCompareFieldWithField","leftFieldConfig","rightFieldConfig","ADD_GROUP","ADD_CASE_GROUP","REMOVE_GROUP","SET_CONJUNCTION","SET_NOT","ADD_RULE","REMOVE_RULE","SET_FIELD","SET_OPERATOR","SET_VALUE","SET_VALUE_SRC","SET_OPERATOR_OPTION","SET_LOCK","SET_TREE","MOVE_ITEM","PLACEMENT_AFTER","PLACEMENT_BEFORE","PLACEMENT_APPEND","PLACEMENT_PREPEND","SET_DRAG_PROGRESS","SET_DRAG_START","SET_DRAG_END","addNewGroup","state","groupUuid","groupPath","canAddNewRule","origState","addItem","removeGroup","removeItem","removeRule","parentOperator","parentOperatorConfig","hasGroupCountRule","isParentRuleGroup","isEmptyParentGroup","canLeaveEmpty","initialEmptyWhere","setNot","setLock","lock","setConjunction","_addChildren1","id1","it1","currentNumber","maxNumber","maxNumberOfCases","maxNumberOfRules","maxNesting","rootType","isTernary","targetItem","caseGroup","take","childrenPath","targetChildren","targetChildrenSize","isLastDefaultCase","newChildren","newChildrenWithLast","mergeIn","moveItem","fromPath","toPath","placement","sourcePath","sourceChildren","targetPath","constants","target","isSameParent","isSourceInsideTarget","isTargetInsideSource","sourceSubpathFromTarget","targetSubpathFromSource","newTargetChildren","newSourceChildren","updateIn","_oldChildren","setField","currentType","currentProperties","wasRuleGroup","isRuleGroupExt","isChangeToAnotherType","currentOperatorOptions","lastOp","strategy","groupProperties","newOperatorOptions","setOperator","setValue","__isInternal","isInternalValueChange","calculatedValueType","calculateValueType","isLastEmpty","isLastError","setValueSrc","srcKey","setOperatorOption","checkEmptyGroups","emptyDrag","dragging","y","mousePos","dragStart","getActionMeta","action","actionTypesToIgnore","mapValues","affectedField","getField","getMemoizedTree","setLastTree","emptyTree","emptyState","unset","__isInternalValueChange","__lastAction","actionMeta","validatedTree","ruleType","setTree","addRule","addDefaultCaseGroup","addCaseGroup","addGroup","Utils","BasicUtils","Export","Import","useListValuesAutocomplete","Hooks","nonCheckedIcon","CheckBoxOutlineBlank","fontSize","checkedIcon","CheckBox","defaultFilterOptions","createFilterOptions","emptyArray","props","multiple","readonly","groupBy","filterOptionsConfig","filterOptionsFn","debounceTimeout","open","onOpen","onClose","onChange","onInputChange","inputValue","isInitialLoading","isLoading","aPlaceholder","extendOptions","getOptionSelected","getOptionDisabled","getOptionLabel","defaultSelectWidth","defaultSearchWidth","width","showCheckboxes","rest","customInputProps","inputWidth","customAutocompleteProps","minWidth","style","useStyles","makeStyles","theme","classesChip","root","marginTop","marginBottom","useStylesChip","classes","FormControl","Autocomplete","disableCloseOnSelect","freeSolo","loading","readOnly","renderInput","TextField","InputProps","endAdornment","CircularProgress","color","renderTags","getTagProps","Chip","renderOption","selected","specialValue","Checkbox","icon","marginRight","checked","filterOptions","itemsToListValues","level","grouplabel","prefix","repeat","paper","padding","spacing","MaterialTextWidget","maxLength","textValue","inputProps","MaterialTextAreaWidget","maxRows","defaultMaxRows","multiline","MaterialDateWidget","Picker","KeyboardDatePicker","DatePicker","formatSingleValue","MaterialDateTimeWidget","KeyboardDateTimePicker","DateTimePicker","dateTimeFormat","ampm","MaterialTimeWidget","KeyboardTimePicker","TimePicker","hasSeconds","timeValue","views","MaterialSelectWidget","hasValue","Select","autoWidth","displayEmpty","renderValue","getListValueTitle","MenuItem","MaterialNumberWidget","numberValue","MaterialSliderWidget","marks","defaultSliderWidth","customSliderProps","sliderValue","muiMarks","InputCmp","onBlur","SliderCmp","Slider","valueLabelDisplay","stylesSliderWrapper","marginLeft","paddingLeft","display","alignItems","flexWrap","MaterialRangeWidget","placeholders","useEffect","valueFrom","valueTo","oneValue","handleInputBlur","FromInputCmp","ToInputCmp","stylesInputWrapper","className","MaterialBooleanWidget","Typography","component","Grid","container","Switch","MaterialMultiSelectWidget","selectedValues","selectedTitles","ListItemText","primary","MaterialAutocompleteWidget","MaterialFieldSelect","selectedKey","findLabel","renderOptions","ListSubheader","disableSticky","MaterialFieldAutocomplete","MaterialAutocomplete","_asyncValues","MaterialButton","onClick","typeToIcon","Delete","Add","typeToColor","IconButton","Button","startIcon","MaterialButtonGroup","MaterialConjs","conjunctionOptions","conjsCount","lessThenTwo","showConj","forceShowConj","ButtonGroup","disableElevation","variant","postfix","isDummyFn","MaterialSwitch","checkedLabel","hideLabel","renderSize","showLabel","Lock","LockOpen","FormControlLabel","control","MaterialValueSources","React","anchorEl","setAnchorEl","handleClose","Boolean","event","currentTarget","handleOpen","ExpandMoreSharp","Popover","anchorOrigin","vertical","horizontal","transformOrigin","disablePortal","FormLabel","RadioGroup","Radio","MaterialConfirm","onOk","okText","cancelText","confirmFn","description","confirmationText","cancellationText","then","MaterialUseConfirm","useConfirm","MaterialProvider","settingsTheme","settingsLocale","themeConfig","material","createTheme","base","withProviders","M","utils","MomentUtils","ThemeProvider","MaterialWidgets","BasicConfig","renderField","renderOperator","renderFunc","renderConjs","renderSwitch","renderButton","renderButtonGroup","renderValueSources","renderProvider","renderConfirm","factory","rangeslider","singleWidget","TreeStore","setDragProgress","setDragStart","setDragEnd","TreeActions","configKeys","createConfigMemo","configStore","findConfig","savedConfig","findExtended","extendAndStore","findOrExtend","pickConfig","truncateString","n","useWordBoundary","subString","lastIndexOf","immutableEqual","getReactRootNodeType","el","_reactRootContainer","getOwnPropertyNames","parentNode","isUsingLegacyReactDomRender","liteShouldComponentUpdate","self","nextProps","nextState","prevProps","prevState","should","chs","changed","pureShouldComponentUpdate","useOnPropsChanged","shouldComponentUpdate","componentWillReceiveProps","onPropsChanged","origShouldComponentUpdate","call","bindActionCreators","actionCreators","dispatch","actionCreator","Query","nextValue","oldValidatedTree","_updateActions","this","actions","renderBuilder","Component","propTypes","PropTypes","ConnectedQuery","connect","context","displayName","QueryContainer","lastTree","prevTree","prevprevTree","prevValue","getMemoizedConfig","originalTree","sanitizeTree","createValidationMemo","reducer","treeStoreReducer","store","createStore","nextConfig","isConfigChanged","storeValue","getState","isTreeChanged","currentTree","get_children","QueryWrapper","_isReorderingTree","createSortableContainer","Builder","CanMoveFn","_getEventTarget","__mocked_window","document","body","window","onDragStart","dom","treeEl","closest","_isUsingLegacyReactDomRender","classList","groupPadding","treeElContainer","scrollTop","_getScrollParent","tmpAllGroups","_getDraggableNodeEl","_getPlaceholderNodeEl","querySelectorAll","anyGroup","getComputedStyle","getPropertyValue","offsetLeft","offsetTop","offsetWidth","offsetHeight","itemInfo","clientX","clientY","eventTarget","addEventListener","onDrag","onDragEnd","doHandleDrag","startDragging","startMousePos","__mock_dom","dragEl","plhEl","plX","getBoundingClientRect","scrollX","plY","scrollY","startX","startY","startClientX","startClientY","startScrollTop","pos","moved","handleDrag","preventDefault","remove","_cacheEls","removeEventListener","_prevProps","_prevState","oldPlX","oldPlY","indexId","ignoreCache","contains","querySelector","els","getElementsByClassName","overflowY","scrollHeight","_isScrollable","dragInfo","canMoveFn","dragRect","plhRect","hovRect","treeRect","moveInfo","dragId","dragDirs","hrz","vrt","hovCNodeEl","trgCoord","__mocked_hov_container","hovNodeEl","elementFromPoint","rootGroupContainer","firstChild","isGroup","hovNodeId","getAttribute","hovEl","doAppend","doPrepend","hovHeight","hovII","trgRect","trgEl","trgII","altII","hovInnerEl","hovEl2","hovRect2","hovHeight2","isSamePos","dragLeftOffset","dragLev","round","availMoves","altMoves","isToRoot","isToCase","prevCaseId","nextCaseId","prevCase","nextCase","addCaseII","am","toII","fromCaseII","toCaseII","bestMode","filteredMoves","trg","isInside","toParentII","canMove","levs","curLev","allLevs","closestDragLev","move","fromII","canRegroupCases","canLeaveEmptyCase","newLev","isBeforeAfter","isPend","isLev1","isParentChange","isStructChange","isForbiddenStructChange","isLockedChange","isLastFromCase","newRulesInTargetCase","GroupOrRule","handleDraggerMouseDown","wrapper","isDraggingTempo","isDraggingMe","otherProps","isTrueLocked","styles","cn","classNames","ref","PureComponent","Operator","getMeta","selectedField","selectedOperator","pickBy","_opts","buildOptions","isOpSelected","selectedOpts","selectedKeys","selectedPath","selectedLabel","ops","fieldKey","renderProps","Col","dummyFn","DragIcon","xmlns","viewBox","fill","d","ConfirmFn","Cmp","OperatorWrapper","selectedFieldPartsLabels","showOperator","showOperatorLabel","selectedFieldWidgetConfig","operatorInlineLabel","Field","maxLabelsLength","isFieldSelected","currField","getFieldLabel","partsLabels","selectedFullLabel","selectedAltLabel","parentFieldPath","sourceFields","fieldOpts","optGroupLabel","fullLabel","altLabel","tooltip","subpath","hideForSelect","FieldWrapper","classname","customFieldSelectProps","immValue","immValueError","widgetDefinition","widgetValueLabel","setValueHandler","parentFuncs","widgetFactory","isConst","funcArgDummyOpDef","Widget","_setValue","widgetType","oldRange","_onChangeValueSrc","renderWidget","iValues","aField","widgetLabel","WidgetFactory","setValueSrcHandler","ValueSources","valueSourcesOptions","sourceLabel","renderSep","sepText","sepLabel","renderWidgetDelta","simpleField","fieldFunc","fieldArg","isForRuleGruop","isCaseValue","iValueSrcs","defaultWidget","isSpecialRangeForSrcField","isTrueSpecialRange","range","OperatorOptions","operatorDefinitions","optionsFactory","basicOptionsProps","optionsCmp","setOption","Rule","removeSelf","reordableNodesCnt","selectedFieldConfig","isSelectedGroup","isFieldAndOpSelected","selectedOperatorConfig","selectedOperatorHasOptions","hideOperator","showDragIcon","showWidget","showOperatorOptions","confirmOptions","doRemove","isEmptyCurrentRule","onCancel","immutableFieldsMode","immutableOpsMode","immutableValuesMode","renderBeforeWidget","renderAfterWidget","renderRuleError","oneValueError","onMouseDown","immutableGroupsMode","Btn","showLock","canShrinkValue","BtnGrp","renderOperatorOptions","renderError","drag","renderDrag","renderLock","del","renderDel","totalRulesCnt","parentReordableNodesCnt","ConnectedRuleContainer","isInDraggingTempo","hasError","createRuleContainer","Draggable","Group","ConnectedGroupContainer","_selectedConjunction","selectedConjunction","_getConjunctionOptions","oldConjunction","currentNesting","allowFurtherNesting","createGroupContainer","groupActionsPositionList","topLeft","topCenter","topRight","bottomLeft","bottomCenter","bottomRight","GroupActions","canAddGroup","canAddRule","canDeleteGroup","groupActionsPosition","position","setLockSwitch","addRuleBtn","addGroupBtn","delGroupBtn","BasicGroup","childrenClassName","renderBeforeActions","BeforeActions","renderAfterActions","AfterActions","renderItem","isEmptyCurrentGroup","isEmpty","isEmptyGroup","isEmptyRule","renderHeaderWrapper","renderChildrenWrapper","renderFooterWrapper","showConjs","isOneChild","renderChildren","isGroupTopPosition","isNoChildren","renderHeader","renderActions","Item","extraPropsForItem","reordableNodesCntForItem","totalRulesCntForItem","_item","Conjs","GroupContainer","RuleGroupActions","RuleGroup","RuleGroupExtActions","RuleGroupExt","renderGroupField","SwitchGroupActions","canAddDefault","addCaseGroupBtn","addDefaultCaseGroupBtn","SwitchGroup","hasDefaultCase","totalCasesCnt","casesToReorder","renderSwitchPrefix","CaseGroup","renderHeaderLeft","renderHeaderCenter","renderCondition","getProperties","toObject","typeMap","rule_group","rule_group_ext","switch_group","case_group","itemComponent","isRequired","_updPath","ConnectedSortableContainer","ValueField","needUpdateItems","needUpdateMeta","getItems","filteredFields","filterFields","customPlaceholder","leftFieldWidgetField","leftFieldWidgetFieldProps","leftFieldFullkey","_filter","rightFieldKey","rightFieldFullkey","canUse","hideForCompare","FuncSelect","canUseFuncForField","filteredFuncs","filterFuncs","selectedFuncKey","isFuncSelected","currFunc","getFuncLabel","targetDefinition","funcFullkey","allowSelfNesting","funcOpts","funcParts","FuncWidget","argDefinition","funcDefinition","renderFuncSelect","selectProps","renderArgLabel","showPrefix","renderArgLabelSep","renderArgVal","defaultValueSource","ArgWidget","renderArgSep","argIndex","renderBracketBefore","renderBracketAfter","renderFuncArgs","_delta","_widgetType","Proximity","handleChange","defaultProximity","selectedProximity","proxValues","defaultProps","VanillaBooleanWidget","customRadioYesProps","radioYes","customRadioNoProps","radioNo","onRadioChange","id2","htmlFor","VanillaTextWidget","VanillaTextAreaWidget","VanillaDateWidget","VanillaTimeWidget","VanillaDateTimeWidget","dtValue","VanillaMultiSelectWidget","opt","getMultiSelectValues","VanillaSelectWidget","VanillaNumberWidget","VanillaSliderWidget","VanillaFieldSelect","VanillaConjs","VanillaButton","btnLabel","VanillaButtonGroup","VanillaProvider","VanillaValueSources","VanillaSwitch","ValueFieldWidget","Widgets","ProximityOperator","CustomOperators","CoreConfig","confirm","useLoadMore","useAsyncSearch","forceAsyncSearch","selectedAsyncListValues","staticListValues","knownSpecialValues","loadMoreTitle","loadingMoreTitle","setOpen","asyncFetchMeta","setAsyncFetchMeta","loadingCnt","setLoadingCnt","isLoadingMore","setIsLoadingMore","setInputValue","setAsyncListValues","asyncFectchCnt","componentIsMounted","isSelectedLoadMore","nSelectedAsyncListValues","canInitialLoad","canLoadMore","canShowLoadMore","fetchListValues","isLoadMore","newAsyncFetchCnt","newMeta","nValues","assumeHasMore","realNewMeta","loadListValues","loadListValuesDebounced","debounce","newSelectedListValues","customItem","newSelectedValues","newInputValue","onSearch","onDropdownVisibleChange","isSpecialValue","valueOrOption","ReactUtils","webpackContext","req","webpackContextResolve","__webpack_require__","code","module","exports"],"sourceRoot":""}