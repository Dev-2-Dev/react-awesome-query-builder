{"version":3,"file":"753.bundle.js","mappings":"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","sources":["webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialSelect.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialMultiSelect.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialFieldAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialValueSources.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/index.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialText.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialTextArea.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialDate.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialDateTime.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialTime.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialNumber.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialSlider.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialRange.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialBoolean.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialFieldSelect.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialButton.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialButtonGroup.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialConjs.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialSwitch.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialConfirm.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/config/index.jsx","webpack://@react-awesome-query-builder/examples/../core/modules/utils/stuff.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/uuid.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/default.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/listValues.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/defaultUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/treeUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/validation.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/ruleUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configSerialize.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/funcUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/queryBuilder.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/mongoDb.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/export.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/sql.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/spel.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/queryString.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/elasticSearch.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/autocomplete.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/funcs.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/ctx.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/index.js","webpack://@react-awesome-query-builder/examples/../core/modules/stores/constants.js","webpack://@react-awesome-query-builder/examples/../core/modules/stores/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/group.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/rule.js","webpack://@react-awesome-query-builder/examples/../core/modules/index.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/tree.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/context.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/constants.js","webpack://@react-awesome-query-builder/examples/../ui/modules/actions/drag.js","webpack://@react-awesome-query-builder/examples/../ui/modules/actions/index.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/configUtils.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/stuff.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/validation.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/reactUtils.js","webpack://@react-awesome-query-builder/examples/../ui/modules/components/Query.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/QueryContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/RuleContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/SortableContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/Draggable.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Operator.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/utils.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/OperatorWrapper.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Field.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FieldWrapper.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/WidgetFactory.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Widget.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/OperatorOptions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Rule.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/GroupContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/GroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Group.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupExtActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupExt.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/SwitchGroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/SwitchGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/CaseGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Item.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/Builder.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/ValueField.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FuncSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FuncWidget.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaBoolean.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaText.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaTextArea.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaDate.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaTime.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaDateTime.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaMultiSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaNumber.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaSlider.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaFieldSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaConjs.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaButton.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaButtonGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaValueSources.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaSwitch.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/vanillaConfirm.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/index.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/operators/Proximity.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/config/index.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/hooks/useListValuesAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/index.js","webpack://@react-awesome-query-builder/examples/../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ sync [/\\\\](es-us(\\.js)"],"sourcesContent":["import React from \"react\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport omit from \"lodash/omit\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, placeholder, customProps}) => {\n  const renderOptions = () =>\n    mapListValues(listValues, ({title, value}) => {\n      return <MenuItem key={value} value={value}>{title}</MenuItem>;\n    });\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValue(e.target.value);\n  };\n\n  const renderValue = (selectedValue) => {\n    if (!readonly && selectedValue == null)\n      return placeholder;\n    return getListValueTitle(selectedValue);\n  };\n\n  const getListValueTitle = (selectedValue) => \n    mapListValues(listValues, ({title, value}) => \n      (value === selectedValue ? title : null)\n    )\n      .filter(v => v !== null)\n      .shift();\n  \n  const hasValue = value != null;\n\n  return (\n    <FormControl>\n      <Select\n        autoWidth\n        displayEmpty\n        label={!readonly ? placeholder : \"\"}\n        onChange={onChange}\n        value={hasValue ? value : \"\"}\n        disabled={readonly}\n        readOnly={readonly}\n        renderValue={renderValue}\n        {...omit(customProps, [\"showSearch\", \"input\"])}\n      >\n        {renderOptions()}\n      </Select>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport omit from \"lodash/omit\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, placeholder, customProps}) => {\n  const renderOptions = (selectedValues) => \n    mapListValues(listValues, ({title, value}) => {\n      return (\n        <MenuItem key={value} value={value}>\n          <Checkbox checked={selectedValues.indexOf(value) > -1} />\n          <ListItemText primary={title} />\n        </MenuItem>\n      );\n    });\n\n  const renderValue = (selectedValues) => {\n    if (!readonly && !selectedValues.length)\n      return placeholder;\n    const selectedTitles = mapListValues(listValues, ({title, value}) => (\n      selectedValues.indexOf(value) > -1 ? title : null\n    )).filter(v => v !== null);\n    return selectedTitles.join(\", \");\n  };\n\n  const hasValue = value != null && value.length > 0;\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValue(e.target.value);\n  };\n\n  return (\n    <FormControl>\n      <Select multiple\n        autoWidth\n        displayEmpty\n        label={!readonly ? placeholder : \"\"}\n        onChange={onChange}\n        value={hasValue ? value : []}\n        disabled={readonly}\n        readOnly={readonly}\n        renderValue={renderValue}\n        {...omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])}\n      >\n        {renderOptions(hasValue ? value : [])}\n      </Select>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport omit from \"lodash/omit\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Autocomplete, { createFilterOptions } from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport { Hooks } from \"@react-awesome-query-builder/ui\";\nconst { useListValuesAutocomplete } = Hooks;\n\nconst nonCheckedIcon = <CheckBoxOutlineBlankIcon fontSize=\"small\" style={{ marginRight: 10, marginTop: 4 }} />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" style={{ marginRight: 10, marginTop: 4 }} />;\nconst defaultFilterOptions = createFilterOptions();\nconst emptyArray = [];\n\nexport default (props) => {\n  const {\n    allowCustomValues, multiple,\n    value: selectedValue, customProps, readonly, config, groupBy, filterOptionsConfig\n  } = props;\n  const filterOptionsFn = filterOptionsConfig ? createFilterOptions(filterOptionsConfig) : defaultFilterOptions;\n\n  // hook\n  const {\n    open,\n    onOpen,\n    onClose,\n    onChange,\n    onInputChange,\n    inputValue,\n    options,\n    isInitialLoading,\n    isLoading,\n    aPlaceholder,\n    extendOptions,\n    getOptionSelected,\n    getOptionDisabled,\n    getOptionIsCustom,\n    getOptionLabel,\n    selectedListValue,\n  } = useListValuesAutocomplete(props, {\n    debounceTimeout: 100,\n    multiple,\n    uif: \"mui\"\n  });\n\n  // setings\n  const {defaultSelectWidth, defaultSearchWidth} = config.settings;\n  const {width, ...rest} = customProps || {};\n  let customInputProps = rest.input || {};\n  const inputWidth = customInputProps.width || defaultSearchWidth;\n  customInputProps = omit(customInputProps, [\"width\"]);\n  const customAutocompleteProps = omit(rest, [\"showSearch\", \"showCheckboxes\"]);\n\n  const fullWidth = true;\n  const minWidth = width || defaultSelectWidth;\n  const style = {\n    width: (multiple ? undefined : minWidth),\n    minWidth: minWidth\n  };\n  const placeholder = !readonly ? aPlaceholder : \"\";\n  const hasValue = selectedValue != null;\n  // should be simple value to prevent re-render!s\n  const value = hasValue ? selectedValue : (multiple ? emptyArray : null);\n  \n  const filterOptions = (options, params) => {\n    const filtered = filterOptionsFn(options, params);\n    const extended = extendOptions(filtered);\n    return extended;\n  };\n\n  // styles\n  const useStyles = makeStyles((theme) => ({\n    // fix too small width\n    input: {\n      minWidth: inputWidth + \" !important\",\n    }\n  }));\n\n  const useStylesChip = makeStyles((theme) => ({\n    // fix height\n    root: {\n      height: \"auto\"\n    },\n    label: {\n      marginTop: \"3px\",\n      marginBottom: \"3px\",\n    }\n  }));\n\n  const classesChip = useStylesChip();\n  const classes = useStyles();\n\n  // render\n  const renderInput = (params) => {\n    // parity with Antd\n    const shouldRenderSelected = !multiple && !open;\n    const selectedTitle = selectedListValue?.title ?? \"\";\n    const shouldHide = multiple && !open;\n    const value = shouldRenderSelected ? selectedTitle : (shouldHide ? \"\" : inputValue ?? \"\");\n    return (\n      <TextField \n        {...params}\n        inputProps={{\n          ...params.inputProps,\n          value,\n        }}\n        InputProps={{\n          ...params.InputProps,\n          readOnly: readonly,\n          endAdornment: (\n            <React.Fragment>\n              {isLoading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n              {params.InputProps.endAdornment}\n            </React.Fragment>\n          ),\n        }}\n        disabled={readonly}\n        placeholder={placeholder}\n        //onChange={onInputChange}\n        {...customInputProps}\n      />\n    );\n  };\n\n  const renderTags = (value, getTagProps) => value.map((option, index) => {\n    const className = getOptionIsCustom(option) ? \"customSelectOption\" : undefined;\n    const titleSpan = (\n      <span className={className}>\n        {getOptionLabel(option)}\n      </span>\n    );\n    return <Chip\n      key={option.value}\n      classes={classesChip}\n      label={titleSpan}\n      size={\"small\"}\n      //variant={getOptionIsCustom(option) ? \"outlined\" : undefined}\n      {...getTagProps({ index })}\n    />;\n  });\n\n  const renderOption = (option, { selected }) => {\n    const { title, renderTitle, value, specialValue, isHidden } = option;\n    const isSelected = selected;\n    //const isSelected = multiple ? (selectedValue || []).includes(value) : selectedValue == value;\n    const className = getOptionIsCustom(option) ? \"customSelectOption\" : undefined;\n    const titleSpan = (\n      <span className={className}>\n        {renderTitle || title}\n      </span>\n    );\n    if (isHidden)\n      return null;\n    if (multiple) {\n      if (specialValue)\n        return (\n          <Box>\n            {renderTitle || title}\n          </Box>\n        );\n      else\n        return (\n          <Box>\n            {selected ? checkedIcon : nonCheckedIcon}\n            {titleSpan}\n          </Box>\n        );\n    } else {\n      if (specialValue)\n        return <React.Fragment>{renderTitle || title}</React.Fragment>;\n      else\n        return <React.Fragment>{titleSpan}</React.Fragment>;\n    }\n  };\n\n  return (\n    <FormControl fullWidth={fullWidth}>\n      <Autocomplete\n        disableCloseOnSelect={multiple}\n        fullWidth={fullWidth}\n        multiple={multiple}\n        style={style}\n        classes={classes}\n        freeSolo={allowCustomValues}\n        loading={isInitialLoading}\n        open={open}\n        onOpen={onOpen}\n        onClose={onClose}\n        inputValue={inputValue}\n        onInputChange={onInputChange}\n        label={placeholder}\n        onChange={onChange}\n        value={value}\n        getOptionSelected={getOptionSelected}\n        disabled={readonly}\n        readOnly={readonly}\n        options={options}\n        groupBy={groupBy}\n        getOptionLabel={getOptionLabel}\n        getOptionDisabled={getOptionDisabled}\n        renderInput={renderInput}\n        renderTags={renderTags}\n        renderOption={renderOption}\n        filterOptions={filterOptions}\n        {...customAutocompleteProps}\n      ></Autocomplete>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport MaterialAutocomplete from \"../value/MaterialAutocomplete\";\n\nconst itemsToListValues = (items, level = 0) => (\n  items.map(item => {\n    const {items, path, label, disabled, grouplabel} = item;\n    const prefix = \"\\u00A0\\u00A0\".repeat(level);\n    if (items) {\n      return itemsToListValues(items, level+1);\n    } else {\n      return {\n        title: label,\n        renderTitle: prefix+label,\n        value: path,\n        disabled,\n        groupTitle: level > 0 ? prefix+grouplabel : null,\n      };\n    }\n  }).flat(Infinity)\n);\n\nconst filterOptionsConfig = {\n  stringify: (option) => {\n    const keysForFilter = [\"title\", \"value\", \"grouplabel\", \"label\"];\n    const valueForFilter = keysForFilter\n      .map(k => (typeof option[k] == \"string\" ? option[k] : \"\"))\n      .join(\"\\0\");\n    return valueForFilter;\n  }\n};\n\nconst fieldAdapter = ({items, selectedKey, setField, ...rest}) => {\n  const listValues = itemsToListValues(items);\n  const groupBy = (option) => option.groupTitle;\n  const value = selectedKey;\n  const setValue = (value, _asyncValues) => {\n    if (!value) return undefined;\n    return setField(value);\n  };\n\n  return {\n    ...rest,\n    listValues,\n    setValue,\n    groupBy,\n    filterOptionsConfig,\n    allowCustomValues: false,\n    multiple: false,\n    value,\n  };\n};\n\nexport default (props) => {\n  return <MaterialAutocomplete  {...fieldAdapter(props)} />;\n};\n","import React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ExpandMoreSharpIcon from \"@material-ui/icons/ExpandMoreSharp\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(1),\n  },\n}));\n\nexport default ({ valueSources, valueSrc, title, setValueSrc, readonly}) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const classes = useStyles();\n\n\n  const handleOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const toggleOpenClose = (event) => {\n    anchorEl ? handleClose() : handleOpen(event);\n  };\n\n  const handleChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValueSrc(e.target.value);\n    handleClose();\n  };\n\n  const renderOptions = (valueSources) => (\n    valueSources.map(([srcKey, info]) => (\n      <FormControlLabel \n        key={srcKey} \n        value={srcKey} \n        checked={valueSrc == srcKey || !valueSrc && srcKey == \"value\"} \n        control={<Radio />} \n        label={info.label}\n      />\n    ))\n  );\n\n  const open = Boolean(anchorEl);\n\n  return (\n    <div>\n      <IconButton size=\"small\" onClick={toggleOpenClose}>\n        <ExpandMoreSharpIcon />\n      </IconButton>\n    \n      <Popover    \n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"left\",\n        }}\n        onClose={handleClose}\n        classes={{\n          paper: classes.paper,\n        }}\n        disablePortal\n      >\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">{title}</FormLabel>\n          <RadioGroup value={valueSrc || \"value\"} onChange={handleChange}>\n            {renderOptions(valueSources)}\n          </RadioGroup>\n        </FormControl>\n      </Popover>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { ThemeProvider, createTheme } from \"@material-ui/core/styles\";\nimport { ConfirmProvider, useConfirm } from \"material-ui-confirm\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\n\n\n// value widgets\nimport MaterialTextWidget from \"./value/MaterialText\";\nimport MaterialTextAreaWidget from \"./value/MaterialTextArea\";\nimport MaterialDateWidget from \"./value/MaterialDate\";\nimport MaterialDateTimeWidget from \"./value/MaterialDateTime\";\nimport MaterialTimeWidget from \"./value/MaterialTime\";\nimport MaterialSelectWidget from \"./value/MaterialSelect\";\nimport MaterialNumberWidget from \"./value/MaterialNumber\";\nimport MaterialSliderWidget from \"./value/MaterialSlider\";\nimport MaterialRangeWidget from \"./value/MaterialRange\";\nimport MaterialBooleanWidget from \"./value/MaterialBoolean\";\nimport MaterialMultiSelectWidget from \"./value/MaterialMultiSelect\";\nimport MaterialAutocompleteWidget from \"./value/MaterialAutocomplete\";\n\n// field select widgets\nimport MaterialFieldSelect from \"./core/MaterialFieldSelect\";\nimport MaterialFieldAutocomplete from \"./core/MaterialFieldAutocomplete\";\n\n// core components\nimport MaterialButton from \"./core/MaterialButton\";\nimport MaterialButtonGroup from \"./core/MaterialButtonGroup\";\nimport MaterialConjs from \"./core/MaterialConjs\";\nimport MaterialSwitch from \"./core/MaterialSwitch\";\nimport MaterialValueSources from \"./core/MaterialValueSources\";\nimport MaterialConfirm from \"./core/MaterialConfirm\";\n\n// provider\nconst MaterialProvider = ({config, children}) => {\n  const settingsTheme = config.settings.theme || {};\n  const settingsLocale = config.settings.locale || {};\n  const themeConfig = settingsTheme.material;\n  const locale = settingsLocale.material;\n  const useTheme = themeConfig || locale;\n  const theme = useTheme ? createTheme(themeConfig, locale) : null;\n\n  const base = (<div className=\"mui\">{children}</div>);\n  const withProviders = (\n    <MuiPickersUtilsProvider utils={MomentUtils}>\n      <ConfirmProvider>\n        {base}\n      </ConfirmProvider>\n    </MuiPickersUtilsProvider>\n  );\n  const withTheme = theme ? (\n    <ThemeProvider theme={theme}>\n      {withProviders}\n    </ThemeProvider>\n  ) : withProviders;\n\n  return withTheme;\n};\n\n\nexport default {\n  MaterialTextWidget,\n  MaterialTextAreaWidget,\n  MaterialDateWidget,\n  MaterialDateTimeWidget,\n  MaterialTimeWidget,\n  MaterialSelectWidget,\n  MaterialNumberWidget,\n  MaterialSliderWidget,\n  MaterialRangeWidget,\n  MaterialBooleanWidget,\n  MaterialMultiSelectWidget,\n  MaterialAutocompleteWidget,\n\n  MaterialFieldSelect,\n  MaterialFieldAutocomplete,\n\n  MaterialButton,\n  MaterialButtonGroup,\n  MaterialConjs,\n  MaterialSwitch,\n  MaterialValueSources,\n  MaterialConfirm,\n  MaterialUseConfirm: useConfirm,\n\n  MaterialProvider,\n};\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, customProps, maxLength} = props;\n\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n\n  const textValue = value || \"\";\n\n  return (\n    <FormControl>\n      <TextField \n        value={textValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          maxLength: maxLength,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, customProps, maxLength, maxRows, fullWidth} = props;\n  const {defaultMaxRows} = config.settings;\n\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  \n  const textValue = value || \"\";\n\n  return (\n    <FormControl fullWidth={fullWidth}>\n      <TextField \n        fullWidth={fullWidth}\n        maxRows={maxRows || defaultMaxRows}\n        multiline={true}\n        value={textValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          maxLength: maxLength,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport { KeyboardDatePicker, DatePicker } from \"@material-ui/pickers\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, readonly, customProps, dateFormat, valueFormat, placeholder} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const useKeyboard = window?.matchMedia\n    ? window.matchMedia?.(\"(pointer:fine), (pointer:none)\").matches\n    : props.useKeyboard;\n  const Picker = useKeyboard ? KeyboardDatePicker : DatePicker;\n\n  return (\n    <FormControl>\n      <Picker\n        readOnly={readonly}\n        disabled={readonly}\n        placeholder={!readonly ? placeholder : \"\"}\n        format={dateFormat}\n        value={value || null}\n        onChange={handleChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};","import React from \"react\";\nimport { DateTimePicker, KeyboardDateTimePicker } from \"@material-ui/pickers\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, use12Hours, readonly, placeholder, dateFormat, timeFormat, valueFormat, customProps} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const useKeyboard = window?.matchMedia\n    ? window.matchMedia?.(\"(pointer:fine), (pointer:none)\").matches\n    : props.useKeyboard;\n  const Picker = useKeyboard ? KeyboardDateTimePicker : DateTimePicker;\n  const dateTimeFormat = dateFormat + \" \" + timeFormat;\n  \n  return (\n    <FormControl>\n      <Picker\n        readOnly={readonly}\n        disabled={readonly}\n        ampm={!!use12Hours}\n        placeholder={!readonly ? placeholder : \"\"}\n        format={dateTimeFormat}\n        value={value || null}\n        onChange={handleChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport { TimePicker, KeyboardTimePicker } from \"@material-ui/pickers\";\nimport moment from \"moment\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, use12Hours, readonly, placeholder, timeFormat, valueFormat, customProps} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const useKeyboard = window?.matchMedia\n    ? window.matchMedia?.(\"(pointer:fine), (pointer:none)\").matches\n    : props.useKeyboard;\n  const Picker = useKeyboard ? KeyboardTimePicker : TimePicker;\n  const hasSeconds = timeFormat.indexOf(\":ss\") != -1;\n  const timeValue = value ? moment(value, timeFormat) : null;\n\n  return (\n    <FormControl>\n      <Picker\n        readOnly={readonly}\n        disabled={readonly}\n        ampm={!!use12Hours}\n        placeholder={!readonly ? placeholder : \"\"}\n        format={timeFormat}\n        value={timeValue || null}\n        onChange={handleChange}\n        views={hasSeconds ? [\"hours\", \"minutes\", \"seconds\"] : [\"hours\", \"minutes\"]}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps} = props;\n  \n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n\n  const numberValue = value == undefined ? \"\" : value;\n  \n  return (\n    <FormControl>\n      <TextField \n        type=\"number\"\n        value={numberValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          min: min,\n          max: max,\n          step: step,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Slider from \"@material-ui/core/Slider\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {config, placeholder, customProps, value, setValue, min, max, step, marks, readonly} = props;\n  const {defaultSliderWidth} = config.settings;\n\n  const handleSliderChange = (_e, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleInputChange = (e) => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n\n  const handleInputBlur = () => {\n    // TIP: Fix if typed value out of range in input\n    if (value < min) {\n      setValue(min);\n    } else if (value > max) {\n      setValue(max);\n    }\n  };\n\n\n  const {width, ...rest} =  customProps || {};\n  const customInputProps = rest.input || {};\n  const customSliderProps = rest.slider || rest;\n  \n  // TIP: Can't pass undefined to MUI, cause it means uncontrolled component use.\n  //      For empty value input needs \"\", slider needs null or 0\n  const inputValue = typeof value === \"number\" ? value : \"\";\n  const sliderValue = typeof value === \"number\" ? value : null;\n\n  // marks example: { 0: \"0%\", 100: React.createElement('strong', null, \"100%\") }\n  const muiMarks = marks ? Object.keys(marks).map(v => ({value: v, label: marks[v]})) : false;\n\n\n  const InputCmp = (\n    <TextField \n      type=\"number\"\n      value={inputValue}\n      placeholder={placeholder}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChange}\n      onBlur={handleInputBlur}\n      {...customInputProps}\n    />\n  );\n\n  const SliderCmp = (\n    <Slider \n      value={sliderValue}\n      onChange={handleSliderChange}\n      disabled={readonly}\n      min={min}\n      max={max}\n      step={step}\n      marks={muiMarks}\n      valueLabelDisplay=\"auto\"\n      {...customSliderProps}\n    />\n  );\n\n  const stylesWrapper = {\n    display: \"inline-flex\", \n    alignItems: \"center\",\n    flexWrap: \"wrap\"\n  };\n\n  const stylesInputWrapper = {\n    marginLeft: \"5px\",\n  };\n\n  const stylesSliderWrapper = {\n    marginLeft: \"5px\", \n    paddingLeft: \"12px\", \n    marginBottom: muiMarks && \"-16px\", \n    width: width || defaultSliderWidth,\n  };\n\n  return (\n    <FormControl>\n      <div style={stylesWrapper}>\n        <div style={stylesInputWrapper}>\n          {InputCmp}\n        </div>\n        <div style={stylesSliderWrapper}>\n          {SliderCmp}\n        </div>\n      </div>\n    </FormControl>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport Slider from \"@material-ui/core/Slider\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {config, placeholders, customProps, value, setValue, min, max, step, marks, readonly, textSeparators} = props;\n  const {defaultSliderWidth} = config.settings;\n\n  useEffect(() => {\n    const [valueFrom, valueTo] = props.value || [undefined, undefined];\n    if (props.value && (valueFrom == undefined || valueTo == undefined)) {\n      // happens if we changed op from '==' to 'between'\n      // (I know, timeout is dirty hack..)\n      setTimeout(() => {\n        const oneValue = valueFrom || valueTo;\n        const value = [oneValue, oneValue];\n        setValue(value);\n      }, 1);\n    }\n  }, []);\n\n  const handleSliderChange = (_e, newValues) => {\n    setValue(newValues);\n  };\n\n  const handleInputChangeFrom = (e) => {\n    // TIP: need to use props.value instead of value\n    let valueFrom = e.target.value;\n    if (valueFrom === \"\" || valueFrom == null)\n      valueFrom = undefined;\n    else\n      valueFrom = Number(valueFrom);\n    let value = props.value ? [...props.value] : [undefined, undefined];\n    value[0] = valueFrom;\n    setValue(value);\n  };\n\n  const handleInputChangeTo = (e) => {\n    let valueTo = e.target.value;\n    if (valueTo === \"\" || valueTo == null)\n      valueTo = undefined;\n    else\n      valueTo = Number(valueTo);\n    let value = props.value ? [...props.value] : [undefined, undefined];\n    value[1] = valueTo;\n    setValue(value);\n  };\n\n  const handleInputBlur = () => {\n    // TIP: Fix if typed value out of range in inputs\n    if (!value) return;\n    if (value[0] < min) {\n      setValue([min, value[1]]);\n    } else if (value[1] > max) {\n      setValue([value[0], max]);\n    }\n  };\n\n  const {width, ...rest} =  customProps || {};\n  const customInputProps = rest.input || {};\n  const customSliderProps = rest.slider || rest;\n\n  // marks example: { 0: \"0%\", 100: React.createElement('strong', null, \"100%\") }\n  const muiMarks = marks ? Object.keys(marks).map(v => ({value: v, label: marks[v]})) : false;\n\n  // TIP: Can't pass undefined to MUI, cause it means uncontrolled component use.\n  //      For empty value input needs \"\", slider needs null or 0, but null will cause problems with range mode\n  let sliderValue = value ? [...value] : [undefined, undefined];\n  let [valueFrom, valueTo] = sliderValue;\n  if (valueFrom == undefined) {\n    valueFrom = \"\";\n    sliderValue[0] = 0;\n  }\n  if (valueTo == undefined) {\n    valueTo = \"\";\n    sliderValue[1] = 0;\n  }\n  \n\n  const FromInputCmp = (\n    <TextField \n      type=\"number\"\n      value={valueFrom}\n      placeholder={placeholders[0]}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChangeFrom}\n      onBlur={handleInputBlur}\n      {...customInputProps}\n    />\n  );\n\n  const ToInputCmp = (\n    <TextField \n      type=\"number\"\n      value={valueTo}\n      placeholder={placeholders[1]}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChangeTo}\n      onBlur={handleInputBlur}\n      {...customInputProps}\n    />\n  );\n\n  const SliderCmp = (\n    <Slider \n      value={sliderValue}\n      onChange={handleSliderChange}\n      disabled={readonly}\n      min={min}\n      max={max}\n      step={step}\n      marks={muiMarks}\n      valueLabelDisplay=\"auto\"\n      {...customSliderProps}\n    />\n  );\n\n  const stylesWrapper = {\n    display: \"inline-flex\", \n    flexWrap: \"wrap\"\n  };\n\n  const stylesInputWrapper = {\n    marginLeft: \"5px\",\n  };\n\n  const stylesSliderWrapper = {\n    marginLeft: \"5px\", \n    paddingLeft: \"12px\", \n    marginBottom: muiMarks && \"-16px\", \n    width: width || defaultSliderWidth,\n  };\n\n  return (\n    <FormControl>\n      <div style={stylesWrapper}>\n        <div style={stylesInputWrapper}>\n          {FromInputCmp}\n        </div>\n        <div className={\"widget--sep\"}>\n          <span>{ textSeparators[1] }</span>\n        </div>\n        <div style={stylesInputWrapper}>\n          {ToInputCmp}\n        </div>\n        <div style={stylesSliderWrapper}>\n          {SliderCmp}\n        </div>\n      </div>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default (props) => {\n  const { customProps, value, setValue, labelYes, labelNo, readonly } = props;\n\n  const onChange = () => {\n    setValue(!value);\n  };\n  \n  return (\n    <FormControl>\n      <Typography component=\"div\">\n        <Grid component=\"label\" container alignItems=\"center\" spacing={0}>\n          <Grid item component=\"span\">{labelNo}</Grid>\n          <Grid item component=\"span\">\n            <Switch\n              checked={!!value}\n              onChange={onChange}\n              disabled={readonly}\n              {...customProps}\n            />\n          </Grid>\n          <Grid item component=\"span\">{labelYes}</Grid>\n        </Grid>\n      </Typography>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default ({items, setField, selectedKey, readonly, placeholder}) => {\n  const renderOptions = (fields, level = 0) => (\n    fields.map(field => {\n      const {items, path, label, disabled} = field;\n      const prefix = \"\\u00A0\\u00A0\".repeat(level);\n      if (items) {\n        return [\n          <ListSubheader disabled={disabled} key={path} disableSticky={true}>\n            {prefix && <span>{prefix}</span>}\n            {label}\n          </ListSubheader>,\n          renderOptions(items, level+1),\n        ];\n      } else {\n        return <MenuItem disabled={disabled} key={path} value={path}>\n          {prefix && <span>{prefix}</span>}\n          {label}\n        </MenuItem>;\n      }\n    })\n  );\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setField(e.target.value);\n  };\n\n  const renderValue = (selectedValue) => {\n    if (!readonly && !selectedValue)\n      return placeholder;\n    const findLabel = (fields) => {\n      return fields.map(field => {\n        if(!field.items) return field.path === selectedValue ? field.label : null;\n        return findLabel(field.items);\n      });\n    };\n    return findLabel(items).filter((v) => {\n      if (Array.isArray(v)) {\n        return v.some((value) => value !== null);\n      } else {\n        return v !== null;\n      }\n    }).pop();\n  };\n  \n  const hasValue = selectedKey != null;\n  return (\n    <FormControl>\n      <Select\n        autoWidth\n        displayEmpty\n        label={placeholder}\n        onChange={onChange}\n        value={hasValue ? selectedKey : \"\"}\n        disabled={readonly}\n        renderValue={renderValue}\n      >\n        {renderOptions(items)}\n      </Select>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nexport default ({type, label, onClick, readonly, config}) => {\n  const hideLabelsFor = {\n    \"addRuleGroup\": true,\n    \"addRuleGroupExt\": true,\n  };\n  const typeToIcon = {\n    \"delGroup\": <DeleteIcon />,\n    \"delRuleGroup\": <DeleteIcon />,\n    \"delRule\": <DeleteIcon />,\n    \"addRuleGroup\": <AddIcon />,\n    \"addRuleGroupExt\": <AddIcon />,\n    \"addRule\": <AddIcon />,\n    \"addGroup\": <AddIcon />,\n  };\n  const typeToColor = {\n    \"addRule\": \"default\",\n    \"addGroup\": \"primary\",\n    \"delGroup\": \"secondary\",\n    \"delRuleGroup\": \"secondary\",\n    \"delRule\": \"secondary\",\n  };\n  if (!label || hideLabelsFor[type])\n    return <IconButton size=\"small\" disabled={readonly} onClick={onClick} color={typeToColor[type]}>{typeToIcon[type]}</IconButton>;\n  else\n    return <Button size=\"small\" disabled={readonly} onClick={onClick} color={typeToColor[type]} startIcon={typeToIcon[type]}>{label}</Button>;\n};\n","import React from \"react\";\n\nexport default ({children, config}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default ({id, not, setNot, conjunctionOptions, setConjunction, disabled, readonly, config, showNot, notLabel}) => {\n  //TIP: disabled=true if only 1 rule; readonly=true if immutable mode\n  const conjsCount = Object.keys(conjunctionOptions).length;\n  const lessThenTwo = disabled;\n  const {forceShowConj} = config.settings;\n  const showConj = forceShowConj || conjsCount > 1 && !lessThenTwo;\n\n  const renderOptions = () => \n    Object.keys(conjunctionOptions).map(key => {\n      const {id, name, label, checked} = conjunctionOptions[key];\n      const postfix = setConjunction.isDummyFn ? \"__dummy\" : \"\";\n      if ((readonly || disabled) && !checked)\n        return null;\n      return (\n        <Button \n          key={id+postfix} \n          id={id+postfix} \n          color={checked ? \"primary\" : \"default\"} \n          value={key} \n          onClick={onClick.bind(null, key)} \n          disabled={readonly || disabled}\n        >\n          {label}\n        </Button>\n      );\n    });\n  \n  const renderNot = () => {\n    if (readonly && !not)\n      return null;\n    return (\n      <Button \n        key={id}\n        id={id + \"__not\"}\n        color={not ? \"secondary\" : \"default\"} \n        onClick={onNotClick.bind(null, !not)} \n        disabled={readonly}\n      >\n        {notLabel || \"NOT\"}\n      </Button>\n    );\n  };\n\n  const onClick = value => setConjunction(value);\n  const onNotClick = checked => setNot(checked);\n\n  return (\n    <FormControl>\n      <ButtonGroup \n        disableElevation \n        variant=\"contained\" \n        size=\"small\" \n        disabled={readonly}\n      >\n        {showNot && renderNot()}\n        {showConj && renderOptions()}\n      </ButtonGroup>\n    </FormControl>\n  );\n  \n};\n","import React from \"react\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport LockIcon from \"@material-ui/icons/Lock\";\n\nexport default ({value, setValue, label, checkedLabel, hideLabel, id, config, type}) => {\n  const {renderSize} = config.settings;\n  const onChange = e => setValue(e.target.checked);\n  const onClick = () => setValue(!value);\n  const postfix = type;\n  const showLabel = value ? (checkedLabel || label) : label;\n  const icon = value ? <LockIcon /> : <LockOpenIcon />;\n\n  if (type == \"lock\") {\n    if (hideLabel) {\n      return <IconButton\n        key={id+postfix}\n        onClick={onClick}\n        size={\"small\"}\n      >{icon}</IconButton>;\n    } else {\n      return <Button\n        key={id+postfix}\n        onClick={onClick}\n        size={\"small\"}\n        startIcon={icon}\n      >{showLabel}</Button>;\n    }\n  }\n\n  return <FormControlLabel \n    control={<Switch\n      checked={!!value}\n      size={\"small\"}\n      onChange={onChange}\n    />} \n    label={showLabel} \n  />;\n};\n","export default ({onOk, okText, cancelText, title, confirmFn}) => {\n  confirmFn({ \n    description: title || \"Are you sure?\",\n    title: null,\n    confirmationText: okText || \"Ok\",\n    cancellationText: cancelText || \"Cancel\",\n  })\n    .then(onOk)\n    .catch(() => {});\n};\n","import React from \"react\";\nimport MaterialWidgets from \"../widgets\";\nimport { BasicConfig, Utils } from \"@react-awesome-query-builder/ui\";\n\n\nconst settings = {\n  ...BasicConfig.settings,\n\n  renderField: (props, {RCE, W: {MaterialFieldAutocomplete, MaterialFieldSelect}}) => props?.customProps?.showSearch \n    ? RCE(MaterialFieldAutocomplete, props)\n    : RCE(MaterialFieldSelect, props),\n  renderOperator: (props, {RCE, W: {MaterialFieldSelect}}) => RCE(MaterialFieldSelect, props),\n\n  renderFunc: (props, {RCE, W: {MaterialFieldSelect}}) => RCE(MaterialFieldSelect, props),\n  renderConjs: (props, {RCE, W: {MaterialConjs}}) => RCE(MaterialConjs, props),\n  renderSwitch: (props, {RCE, W: {MaterialSwitch}}) => RCE(MaterialSwitch, props),\n  renderButton: (props, {RCE, W: {MaterialButton}}) => RCE(MaterialButton, props),\n  renderButtonGroup: (props, {RCE, W: {MaterialButtonGroup}}) => RCE(MaterialButtonGroup, props),\n  renderValueSources: (props, {RCE, W: {MaterialValueSources}}) => RCE(MaterialValueSources, props),\n  renderProvider: (props, {RCE, W: {MaterialProvider}}) => RCE(MaterialProvider, props),\n  renderConfirm: (props, {W: {MaterialConfirm}}) => MaterialConfirm(props),\n  useConfirm: ({W: {MaterialUseConfirm}}) => MaterialUseConfirm(),\n};\n\n\nconst widgets = {\n  ...BasicConfig.widgets,\n  text: {\n    ...BasicConfig.widgets.text,\n    factory: (props, {RCE, W: {MaterialTextWidget}}) => RCE(MaterialTextWidget, props),\n  },\n  textarea: {\n    ...BasicConfig.widgets.textarea,\n    factory: (props, {RCE, W: {MaterialTextAreaWidget}}) => RCE(MaterialTextAreaWidget, props),\n  },\n  number: {\n    ...BasicConfig.widgets.number,\n    factory: (props, {RCE, W: {MaterialNumberWidget}}) => RCE(MaterialNumberWidget, props),\n  },\n  multiselect: {\n    ...BasicConfig.widgets.multiselect,\n    factory: (props, {RCE, W: {MaterialAutocompleteWidget, MaterialMultiSelectWidget}}) => {\n      return (props.asyncFetch || props.showSearch) \n        ? RCE(MaterialAutocompleteWidget, {...props, multiple: true}) \n        : RCE(MaterialMultiSelectWidget, props);\n    },\n  },\n  select: {\n    ...BasicConfig.widgets.select,\n    factory: (props, {RCE, W: {MaterialAutocompleteWidget, MaterialSelectWidget}}) => {\n      return (props.asyncFetch || props.showSearch) \n        ? RCE(MaterialAutocompleteWidget, props) \n        : RCE(MaterialSelectWidget, props);\n    },\n  },\n  slider: {\n    ...BasicConfig.widgets.slider,\n    factory: (props, {RCE, W: {MaterialSliderWidget}}) => RCE(MaterialSliderWidget, props),\n  },\n  boolean: {\n    ...BasicConfig.widgets.boolean,\n    factory: (props, {RCE, W: {MaterialBooleanWidget}}) => RCE(MaterialBooleanWidget, props),\n  },\n  date: {\n    ...BasicConfig.widgets.date,\n    factory: (props, {RCE, W: {MaterialDateWidget}}) => RCE(MaterialDateWidget, props),\n  },\n  time: {\n    ...BasicConfig.widgets.time,\n    factory: (props, {RCE, W: {MaterialTimeWidget}}) => RCE(MaterialTimeWidget, props),\n  },\n  datetime: {\n    ...BasicConfig.widgets.datetime,\n    factory: (props, {RCE, W: {MaterialDateTimeWidget}}) => RCE(MaterialDateTimeWidget, props),\n  },\n\n  rangeslider: {\n    ...BasicConfig.widgets.rangeslider,\n    factory: (props, {RCE, W: {MaterialRangeWidget}}) => RCE(MaterialRangeWidget, props),\n  },\n};\n\n\nconst types = {\n  ...BasicConfig.types,\n};\n\nconst ctx = {\n  ...BasicConfig.ctx,\n  W: {\n    ...BasicConfig.ctx.W,\n    ...MaterialWidgets,\n  },\n};\n\nlet config = {\n  ...BasicConfig,\n  ctx,\n  types,\n  widgets,\n  settings,\n};\nconfig = Utils.ConfigMixins.addMixins(config, [\n  \"rangeslider\",\n]);\n\nexport default config;","import Immutable, { Map } from \"immutable\";\nimport omit from \"lodash/omit\";\n\n// RegExp.quote = function (str) {\n//     return str.replace(/([.?*+^$[\\]\\\\(){}|-])/g, \"\\\\$1\");\n// };\n\nexport const defaultValue = (value, _default) => {\n  return (typeof value === \"undefined\") ? _default : value;\n};\n\n// const immutableEqual = function(v1, v2) {\n//   if (v1 === v2) {\n//     return true;\n//   } else {\n//     return v1.equals(v2);\n//   }\n// };\n\nexport const deepEqual = function(v1, v2) {\n  if (v1 === v2) {\n    return true;\n  } else if (Map.isMap(v1)) {\n    return v1.equals(v2);\n  } else {\n    return JSON.stringify(v1) == JSON.stringify(v2);\n  }\n};\n\n// //Do sets have same values?\n// const eqSet = function (as, bs) {\n//   if (as.size !== bs.size) return false;\n//   for (var a of as) if (!bs.has(a)) return false;\n//   return true;\n// };\n\n\n// //Do arrays have same values?\n// const eqArrSet = function (arr1, arr2) {\n//   return eqSet(new Set(arr1), new Set(arr2));\n// };\n\nexport const shallowEqual = (a, b, deep = false) => {\n  if (a === b) {\n    return true;\n  } else if (Array.isArray(a))\n    return shallowEqualArrays(a, b, deep);\n  else if (Map.isMap(a))\n    return a.equals(b);\n  else if (typeof a == \"object\")\n    return shallowEqualObjects(a, b, deep);\n  else\n    return a === b;\n};\n\nfunction shallowEqualArrays(arrA, arrB, deep = false) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var isEqual = deep ? shallowEqual(arrA[i], arrB[i], deep) : arrA[i] === arrB[i];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowEqualObjects(objA, objB, deep = false) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n    var isEqual = deep ? shallowEqual(objA[key], objB[key], deep) : objA[key] === objB[key];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nconst isImmutable = (v) => {\n  return typeof v === \"object\" && v !== null && typeof v.toJS === \"function\";\n};\n\nexport function toImmutableList(v) {\n  return (isImmutable(v) ? v : new Immutable.List(v));\n}\n\nexport function applyToJS(v) {\n  return (isImmutable(v) ? v.toJS() : v);\n}\n\nexport const escapeRegExp = (string) => {\n  return string.replace(/[.*+?^${}()|[\\]\\\\/]/g, \"\\\\$&\"); // $& means the whole matched string\n};\n\nexport const cleanJSX = (jsx) => {\n  const jsxKeys = [\"$$typeof\", \"_owner\", \"_store\", \"ref\", \"key\"];\n\n  const getName = (val) => {\n    if (typeof val === \"string\") {\n      return val;\n    } else if (typeof val === \"function\") {\n      return val.name;\n    }\n    return val;\n  };\n\n  if (jsx instanceof Array) {\n    return jsx.map((el, _i) => cleanJSX(el));\n  } else if (typeof jsx === \"object\" && jsx !== null) {\n    if (isDirtyJSX(jsx)) {\n      const cleaned = omit(jsx, jsxKeys);\n      if (cleaned.type) {\n        cleaned.type = getName(cleaned.type);\n      }\n      if (cleaned?.props?.children) {\n        cleaned.props.children = cleanJSX(cleaned.props.children);\n      }\n      return cleaned;\n    }\n  }\n  return jsx;\n};\n\nexport const isDirtyJSX = (jsx) => {\n  return typeof jsx === \"object\"\n    && jsx !== null\n    && !Array.isArray(jsx)\n    && Object.keys(jsx).includes(\"type\")\n    && Object.keys(jsx).includes(\"props\") // even if {}\n    && Object.keys(jsx).includes(\"key\") // even if null\n    && Object.keys(jsx).includes(\"ref\") // even if null\n    && Object.keys(jsx).includes(\"$$typeof\"); // Symbol(react.element)\n};\n\nexport const isJSX = (jsx) => (\n  typeof jsx === \"object\"\n  && jsx !== null\n  && !Array.isArray(jsx)\n  && typeof jsx[\"type\"] === \"string\"\n  && Object.keys(jsx).includes(\"props\")\n);\n\nexport const isJsonLogic = (logic) => {\n  let isJL = typeof logic === \"object\" // An object\n    && logic !== null // but not null\n    && !Array.isArray(logic) // and not an array\n    && Object.keys(logic).length === 1; // with exactly one key\n  if (isJL) {\n    // additional checks ?\n  }\n  return isJL;\n};\n\nexport function sleep(delay) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\n\n// [1, 4, 9] + [1, 5, 9] => [1, 4, 5, 9]\n// Used for merging arrays of operators for different widgets of 1 type\nexport function mergeArraysSmart(arr1, arr2) {\n  if (!arr1) arr1 = [];\n  if (!arr2) arr2 = [];\n  return arr2\n    .map(op => [op, arr1.indexOf(op)])\n    .map(([op, ind], i, orig) => {\n      if (ind == -1) {\n        const next = orig.slice(i+1);\n        const prev = orig.slice(0, i);\n        const after = prev.reverse().find(([_cop, ci]) => ci != -1);\n        const before = next.find(([_cop, ci]) => ci != -1);\n        if (before)\n          return [op, \"before\", before[0]];\n        else if (after)\n          return [op, \"after\", after[0]];\n        else\n          return [op, \"append\", null];\n      } else {\n      // already exists\n        return null;\n      }\n    })\n    .filter(x => x !== null)\n    .reduce((acc, [newOp, rel, relOp]) => {\n      const ind = acc.indexOf(relOp);\n      if (acc.indexOf(newOp) == -1) {\n        if (ind > -1) {\n        // insert after or before\n          acc.splice( ind + (rel == \"after\" ? 1 : 0), 0, newOp );\n        } else {\n        // insert to end or start\n          acc.splice( (rel == \"append\" ? Infinity : 0), 0, newOp );\n        }\n      }\n      return acc;\n    }, arr1.slice());\n}\n\nconst isDev = () => (typeof process !== \"undefined\" && process.env && process.env.NODE_ENV == \"development\");\n\nexport const getLogger = (devMode = false) => {\n  const verbose = devMode != undefined ? devMode : isDev(); \n  return verbose ? console : {\n    error: () => {},\n    log: () => {},\n    warn: () => {},\n    debug: () => {},\n    info: () => {},\n  };\n};\n\nexport const getFirstDefined = (arr = []) => {\n  let ret;\n  for (let i = 0 ; i < arr.length ; i++) {\n    const v = arr[i];\n    if (v !== undefined) {\n      ret = v;\n      break;\n    }\n  }\n  return ret;\n};\n\nexport const logger = getLogger();\n\n","// Had to make uuid use a constant seed so it would generate same sequence across runs. This was needed\n// so server side rendering and client side rendering yield same results (e.g. the uuid is used when rendering\n// the concunctions with their name and id)\nvar query_builder_seed = 0;\nexport default () => {\n  // Generate a random GUID http://stackoverflow.com/a/2117523.\n  const timePart = (new Date().getTime().toString(16)+\"FF\").substr(0,11);\n  const s = \"ssssssss-xxxx-4xxx-yxxx-x\".replace(/[xys]/g, (c) => {\n    const r = c === \"s\" ? Math.floor(Math.random() * 16) : (query_builder_seed++) & 0xf;\n    const v = c === \"x\" ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n  return s + timePart;\n};\n","\n\nexport const settings = {\n  formatField: (field, parts, label2, fieldDefinition, config, isForDisplay) => {\n    if (isForDisplay)\n      return label2;\n    else\n      return field;\n  },\n\n\n  valueSourcesInfo: {\n    value: {},\n  },\n  fieldSeparator: \".\",\n  fieldSeparatorDisplay: \".\",\n  canReorder: true,\n  canRegroup: true,\n  canDeleteLocked: false,\n  canLeaveEmptyGroup: true,\n  shouldCreateEmptyGroup: false,\n  canShortMongoQuery: true,\n  removeEmptyGroupsOnLoad: true,\n  removeIncompleteRulesOnLoad: true,\n  removeInvalidMultiSelectValuesOnLoad: true,\n  setOpOnChangeField: [\"keep\", \"default\"], // 'default' (default if present), 'keep' (keep prev from last field), 'first', 'none'\n  groupOperators: [\"some\", \"all\", \"none\"],\n\n  defaultGroupConjunction: \"AND\",\n\n  // localization\n  locale: {\n    moment: \"en\",\n  },\n  valueLabel: \"Value\",\n  valuePlaceholder: \"Value\",\n  fieldLabel: \"Field\",\n  operatorLabel: \"Operator\",\n  funcLabel: \"Function\",\n  fieldPlaceholder: \"Select field\",\n  funcPlaceholder: \"Select function\",\n  operatorPlaceholder: \"Select operator\",\n  lockLabel: \"Lock\",\n  lockedLabel: \"Locked\",\n  deleteLabel: null,\n  addGroupLabel: \"Add group\",\n  addCaseLabel: \"Add condition\",\n  addDefaultCaseLabel: \"Add default condition\",\n  defaultCaseLabel: \"Default:\",\n  addRuleLabel: \"Add rule\",\n  addSubRuleLabel: \"Add sub rule\",\n  delGroupLabel: \"\",\n  notLabel: \"Not\",\n  valueSourcesPopupTitle: \"Select value source\",\n  removeRuleConfirmOptions: null,\n  removeGroupConfirmOptions: null,\n\n};\n","\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\nexport const toListValue = (v, title) => {\n  if (v == null || v == \"\") {\n    return undefined;\n  } else if (isObject(v)) {\n    return v;\n  } else {\n    return {\n      value: v,\n      title: (title !== undefined ? title : v)\n    };\n  }\n};\n\nexport const makeCustomListValue = (v) => {\n  const lv = toListValue(v);\n  if (isObject(lv)) {\n    return {\n      ...toListValue(v),\n      isCustom: true,\n    };\n  } else {\n    return lv;\n  }\n};\n\n// convert {<value>: <title>, ..} or [value, ..] to normal [{value, title}, ..]\nexport const listValuesToArray = (listValuesObj) => {\n  if (Array.isArray(listValuesObj))\n    return listValuesObj.map(v => toListValue(v));\n  if (!isObject(listValuesObj))\n    return listValuesObj;\n  \n  let listValuesArr = [];\n  for (let v in listValuesObj) {\n    const title = listValuesObj[v];\n    listValuesArr.push(toListValue(v, title));\n  }\n  return listValuesArr;\n};\n\n// listValues can be {<value>: <title>, ..} or [{value, title}, ..] or [value, ..]\nexport const getItemInListValues = (listValues, value) => {\n  if (Array.isArray(listValues)) {\n    const values = listValues.map(v => toListValue(v));\n    return values.find(v => (\"\"+v.value === \"\"+value));\n  } else {\n    return listValues[value] !== undefined ? toListValue(value, listValues[value]) : undefined;\n  }\n};\n\nexport const getTitleInListValues = (listValues, value) => {\n  if (listValues == undefined)\n    return value;\n  const it = getItemInListValues(listValues, value);\n  return it !== undefined ? it.title : value;\n};\n\nexport const getValueInListValues = (listValues, value) => {\n  if (listValues == undefined)\n    return value;\n  const it = getItemInListValues(listValues, value);\n  return it !== undefined ? it.value : value;\n};\n\nexport const mapListValues = (listValues, mapFn) => {\n  let ret = [];\n  if (Array.isArray(listValues)) {\n    for (let v of listValues) {\n      const lv = mapFn(toListValue(v));\n      if (lv != null)\n        ret.push(lv);\n    }\n  } else {\n    for (let value in listValues) {\n      const lv = mapFn(toListValue(value, listValues[value]));\n      if (lv != null)\n        ret.push(lv);\n    }\n  }\n  return ret;\n};\n\nexport const searchListValue = (search, listValues) => \n  mapListValues(listValues, (lv) => (\n    `${lv.value}`.indexOf(search) != -1 || lv.title.indexOf(search) != -1\n      ? lv : null\n  ))\n    .filter(v => v !== null)\n    .shift();\n\nexport const getListValue = (selectedValue, listValues) => \n  mapListValues(listValues, \n    (lv) => (\"\"+lv.value === \"\"+selectedValue ? lv : null)\n  )\n    .filter(v => v !== null)\n    .shift();\n","import Immutable from \"immutable\";\nimport uuid from \"./uuid\";\nimport {getFieldConfig, getOperatorConfig} from \"./configUtils\";\nimport {getNewValueForFieldOp, getFirstField, getFirstOperator} from \"../utils/ruleUtils\";\n\n\nexport const defaultField = (config, canGetFirst = true, parentRuleGroupPath = null) => {\n  return typeof config.settings.defaultField === \"function\"\n    ? config.settings.defaultField(parentRuleGroupPath) \n    : (config.settings.defaultField || (canGetFirst ? getFirstField(config, parentRuleGroupPath) : null));\n};\n\nexport const defaultOperator = (config, field, canGetFirst = true) => {\n  let fieldConfig = getFieldConfig(config, field);\n  let fieldOperators = fieldConfig && fieldConfig.operators || [];\n  let fieldDefaultOperator = fieldConfig && fieldConfig.defaultOperator;\n  if (!fieldOperators.includes(fieldDefaultOperator))\n    fieldDefaultOperator = null;\n  if (!fieldDefaultOperator && canGetFirst)\n    fieldDefaultOperator = getFirstOperator(config, field);\n  let op = typeof config.settings.defaultOperator === \"function\"\n    ? config.settings.defaultOperator(field, fieldConfig) : fieldDefaultOperator;\n  return op;\n};\n\n//used for complex operators like proximity\nexport const defaultOperatorOptions = (config, operator, field) => {\n  let operatorConfig = operator ? getOperatorConfig(config, operator, field) : null;\n  if (!operatorConfig)\n    return null; //new Immutable.Map();\n  return operatorConfig.options ? new Immutable.Map(\n    operatorConfig.options\n    && operatorConfig.options.defaults || {}\n  ) : null;\n};\n\nexport const defaultRuleProperties = (config, parentRuleGroupPath = null, item = null) => {\n  let field = null, operator = null;\n  const {setDefaultFieldAndOp, showErrorMessage} = config.settings;\n  if (item) {\n    field = item?.properties?.field;\n    operator = item?.properties?.operator;\n  } else if (setDefaultFieldAndOp) {\n    field = defaultField(config, true, parentRuleGroupPath);\n    operator = defaultOperator(config, field);\n  }\n  let current = new Immutable.Map({\n    field: field,\n    operator: operator,\n    value: new Immutable.List(),\n    valueSrc: new Immutable.List(),\n    //used for complex operators like proximity\n    operatorOptions: defaultOperatorOptions(config, operator, field),\n  });\n  if (showErrorMessage) {\n    current = current.set(\"valueError\", new Immutable.List());\n  }\n  \n  if (field && operator) {\n    let {newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      config, config, current, field, operator, \"operator\", false\n    );\n    current = current\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType);\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError);\n    }\n  }\n  return current; \n};\n\n\nexport const defaultGroupConjunction = (config, fieldConfig = null) => {\n  fieldConfig = getFieldConfig(config, fieldConfig); // if `fieldConfig` is field name, not config\n  const conjs = fieldConfig && fieldConfig.conjunctions || Object.keys(config.conjunctions);\n  if (conjs.length == 1)\n    return conjs[0];\n  return config.settings.defaultGroupConjunction || config.settings.defaultConjunction || conjs[0];\n};\n\nexport const defaultConjunction = (config) =>\n  config.settings.defaultConjunction || Object.keys(config.conjunctions)[0];\n\nexport const defaultGroupProperties = (config, fieldConfig = null) => new Immutable.Map({\n  conjunction: defaultGroupConjunction(config, fieldConfig),\n  not: false\n});\n\nexport const defaultItemProperties = (config, item) => {\n  return item && item.type == \"group\" \n    ? defaultGroupProperties(config, item?.properties?.field) \n    : defaultRuleProperties(config, null, item);\n};\n\nexport const defaultRule = (id, config) => ({\n  [id]: new Immutable.Map({\n    type: \"rule\",\n    id: id,\n    properties: defaultRuleProperties(config)\n  })\n});\n\nexport const defaultRoot = (config) => {\n  return new Immutable.Map({\n    type: \"group\",\n    id: uuid(),\n    children1: new Immutable.OrderedMap({ ...defaultRule(uuid(), config) }),\n    properties: defaultGroupProperties(config)\n  });\n};\n\nexport const createListFromArray = (ids) => {\n  return new Immutable.List(ids);\n};\n\nexport const emptyProperies = () => new Immutable.Map();\n","import Immutable  from \"immutable\";\n\n/**\n * @param {Immutable.List} path\n * @param {...string} suffix\n * @return {Immutable.List}\n */\nexport const expandTreePath = (path, ...suffix) =>\n  path.interpose(\"children1\").withMutations((list) => {\n    list.skip(1);\n    list.push.apply(list, suffix);\n    return list;\n  });\n\n\n/**\n * @param {Immutable.List} path\n * @param {...string} suffix\n * @return {Immutable.List}\n */\nexport const expandTreeSubpath = (path, ...suffix) =>\n  path.interpose(\"children1\").withMutations((list) => {\n    list.push.apply(list, suffix);\n    return list;\n  });\n\n\n/**\n * @param {Immutable.Map} path\n * @param {Immutable.List} path\n * @return {Immutable.Map}\n */\nexport const getItemByPath = (tree, path) => {\n  let children = new Immutable.OrderedMap({ [tree.get(\"id\")] : tree });\n  let res = tree;\n  path.forEach((id) => {\n    res = children.get(id);\n    children = res.get(\"children1\");\n  });\n  return res;\n};\n\n\n/**\n * Remove `path` in every item\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const removePathsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path) {\n    const itemPath = path.push(item.get(\"id\"));\n    if (item.get(\"path\")) {\n      newTree = newTree.removeIn(expandTreePath(itemPath, \"path\"));\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      children.map((child, _childId) => {\n        _processNode(child, itemPath);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List());\n\n  return newTree;\n};\n\n\n/**\n * Remove `isLocked` in items that inherit parent's `isLocked`\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const removeIsLockedInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, isParentLocked = false) {\n    const itemPath = path.push(item.get(\"id\"));\n    const isLocked = item.getIn([\"properties\", \"isLocked\"]);\n    if (isParentLocked && isLocked) {\n      newTree = newTree.deleteIn(expandTreePath(itemPath, \"properties\", \"isLocked\"));\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      children.map((child, _childId) => {\n        _processNode(child, itemPath, isLocked || isParentLocked);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List());\n\n  return newTree;\n};\n\n\n/**\n * Set correct `path` and `id` in every item\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const fixPathsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, lev, nodeId) {\n    if (!item) return;\n    const currPath = item.get(\"path\");\n    const currId = item.get(\"id\");\n    const itemId = currId || nodeId;\n    const itemPath = path.push(itemId);\n    if (!currPath || !currPath.equals(itemPath)) {\n      newTree = newTree.setIn(expandTreePath(itemPath, \"path\"), itemPath);\n    }\n    if (!currId) {\n      newTree = newTree.setIn(expandTreePath(itemPath, \"id\"), itemId);\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      if (children.constructor.name == \"Map\") {\n        // protect: should me OrderedMap, not Map (issue #501)\n        newTree = newTree.setIn(\n          expandTreePath(itemPath, \"children1\"), \n          new Immutable.OrderedMap(children)\n        );\n      }\n      children.map((child, childId) => {\n        _processNode(child, itemPath, lev + 1, childId);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List(), 0);\n\n\n  return newTree;\n};\n\nexport const fixEmptyGroupsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, lev, nodeId) {\n    if (!item) return false;\n    const itemId = item.get(\"id\") || nodeId;\n    const itemPath = path.push(itemId);\n\n    const children = item.get(\"children1\");\n    if (children) {\n      const allChildrenGone = children.map((child, childId) => {\n        return _processNode(child, itemPath, lev + 1, childId);\n      }).reduce((curr, v) => (curr && v), true);\n      if ((children.size == 0 || allChildrenGone) && lev > 0) {\n        newTree = newTree.deleteIn(expandTreePath(itemPath));\n        return true;\n      }\n    }\n    return false;\n  }\n\n  _processNode(tree, new Immutable.List(), 0);\n\n\n  return newTree;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @return {Object} {flat, items}\n */\nexport const getFlatTree = (tree) => {\n  let flat = [];\n  let items = {};\n  let realHeight = 0;\n\n  function _flatizeTree (item, path, insideCollapsed, insideLocked, insideRuleGroup, lev, info, parentType, caseId) {\n    const type = item.get(\"type\");\n    const collapsed = item.get(\"collapsed\");\n    const id = item.get(\"id\");\n    const children = item.get(\"children1\");\n    const isLocked = item.getIn([\"properties\", \"isLocked\"]);\n    const childrenIds = children ? children.map((_child, childId) => childId) : null;\n    const isRuleGroup = type == \"rule_group\";\n    // tip: count rule_group as 1 rule\n    const isLeaf = !insideRuleGroup && (!children || isRuleGroup);\n\n    const itemsBefore = flat.length;\n    const top = realHeight;\n    flat.push(id);\n    if (!insideCollapsed)\n      realHeight += 1;\n    info.height = (info.height || 0) + 1;\n\n    items[id] = {\n      type: type,\n      parent: path.length ? path[path.length-1] : null,\n      parentType: parentType,\n      caseId: type == \"case_group\" ? id : caseId,\n      isDefaultCase: type == \"case_group\" && !children,\n      path: path.concat(id),\n      lev: lev,\n      leaf: !children,\n      index: itemsBefore,\n      id: id,\n      children: childrenIds,\n      leafsCount: 0,\n      _top: itemsBefore,\n      //_height: (itemsAfter - itemsBefore),\n      top: (insideCollapsed ? null : top),\n      //height: height,\n      //bottom: (insideCollapsed ? null : top) + height,\n      collapsed: collapsed,\n      node: item,\n      isLocked: isLocked || insideLocked,\n    };\n\n    if (children) {\n      let subinfo = {};\n      children.map((child, _childId) => {\n        _flatizeTree(\n          child, path.concat(id), \n          insideCollapsed || collapsed, insideLocked || isLocked, insideRuleGroup || isRuleGroup,\n          lev + 1, subinfo, type, type == \"case_group\" ? id : caseId\n        );\n      });\n      if (!collapsed) {\n        info.height = (info.height || 0) + (subinfo.height || 0);\n      }\n    }\n    \n    if (caseId && isLeaf) {\n      items[caseId].leafsCount++;\n    }\n\n    const itemsAfter = flat.length;\n    const _bottom = realHeight;\n    const height = info.height;\n        \n    Object.assign(items[id], {\n      _height: (itemsAfter - itemsBefore),\n      height: height,\n      bottom: (insideCollapsed ? null : top) + height,\n    });\n  }\n\n  _flatizeTree(tree, [], false, false, false, 0, {}, null, null);\n\n  for (let i = 0 ; i < flat.length ; i++) {\n    const prevId = i > 0 ? flat[i-1] : null;\n    const nextId = i < (flat.length-1) ? flat[i+1] : null;\n    let item = items[flat[i]];\n    item.prev = prevId;\n    item.next = nextId;\n  }\n\n  return {flat, items};\n};\n\n\n/**\n * Returns count of reorderable(!) nodes\n * @param {Immutable.Map} tree\n * @return {Integer}\n */\nexport const getTotalReordableNodesCountInTree = (tree) => {\n  if (!tree)\n    return -1;\n  let cnt = 0;\n\n  function _processNode (item, path, lev) {\n    let id, children, type;\n    if (typeof item.get === \"function\") {\n      id = item.get(\"id\");\n      children = item.get(\"children1\");\n      type = item.get(\"type\");\n    } else {\n      id = item.id;\n      children = item.children1;\n      type = item.type;\n    }\n    const isRuleGroup = type == \"rule_group\";\n    cnt++;\n    //tip: rules in rule-group can be reordered only inside\n    if (children && !isRuleGroup) {\n      children.map((child, _childId) => {\n        _processNode(child, path.concat(id), lev + 1);\n      });\n    }\n  }\n\n  _processNode(tree, [], 0);\n    \n  return cnt - 1; // -1 for root\n};\n\n/**\n * Returns count of rules (leafs, i.e. don't count groups)\n * @param {Immutable.Map} tree\n * @return {Integer}\n */\nexport const getTotalRulesCountInTree = (tree) => {\n  if (!tree)\n    return -1;\n  let cnt = 0;\n\n  function _processNode (item, path, lev) {\n    let id, children, type;\n    if (typeof item.get === \"function\") {\n      id = item.get(\"id\");\n      children = item.get(\"children1\");\n      type = item.get(\"type\");\n    } else {\n      id = item.id;\n      children = item.children1;\n      type = item.type;\n    }\n    \n    if (type == \"rule\" || type == \"rule_group\") {\n      // tip: count rule_group as 1 rule\n      cnt++;\n    } else if (children) {\n      children.map((child, _childId) => {\n        _processNode(child, path.concat(id), lev + 1);\n      });\n    }\n  }\n\n  _processNode(tree, [], 0);\n    \n  return cnt;\n};\n\nexport const getTreeBadFields = (tree) => {\n  let badFields = [];\n\n  function _processNode (item, path, lev) {\n    const id = item.get(\"id\");\n    const children = item.get(\"children1\");\n    const valueError = item.getIn([\"properties\", \"valueError\"]);\n    const field = item.getIn([\"properties\", \"field\"]);\n    if (valueError && valueError.size > 0 && valueError.filter(v => v != null).size > 0) {\n      badFields.push(field);\n    }\n    if (children) {\n      children.map((child, _childId) => {\n        _processNode(child, path.concat(id), lev + 1);\n      });\n    }\n  }\n\n  if (tree)\n    _processNode(tree, [], 0);\n    \n  return Array.from(new Set(badFields));\n};\n\n\n// Remove fields that can be calced: \"id\", \"path\"\n// Remove empty fields: \"operatorOptions\"\nexport const getLightTree = (tree, children1AsArray = false) => {\n  let newTree = tree;\n\n  function _processNode (item, itemId) {\n    if (item.path)\n      delete item.path;\n    if (!children1AsArray && itemId)\n      delete item.id;\n    let properties = item.properties;\n    if (properties) {\n      if (properties.operatorOptions == null)\n        delete properties.operatorOptions;\n    }\n\n    const children = item.children1;\n    if (children) {\n      for (let id in children) {\n        _processNode(children[id], id);\n      }\n      if (children1AsArray) {\n        item.children1 = Object.values(children);\n      }\n    }\n  }\n\n  _processNode(tree, null);\n\n  return newTree;\n};\n\nexport const getSwitchValues = (tree) => {\n  let vals = [];\n  const children = tree.get(\"children1\");\n  if (children) {\n    children.map((child) => {\n      const value = child.getIn([\"properties\", \"value\"]);\n      let caseValue;\n      if (value && value.size == 1) {\n        caseValue = value.get(0);\n        if (Array.isArray(caseValue) && caseValue.length == 0) {\n          caseValue = null;\n        }\n      } else {\n        caseValue = null;\n      }\n      vals = [...vals, caseValue];\n    });\n  }\n\n  return vals;\n};\n\nexport const isEmptyTree = (tree) => (!tree.get(\"children1\") || tree.get(\"children1\").size == 0);\n\nexport const hasChildren = (tree, path) => tree.getIn(expandTreePath(path, \"children1\")).size > 0;\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig,\n} from \"./configUtils\";\nimport {getOperatorsForField, getWidgetForFieldOp, getNewValueForFieldOp} from \"../utils/ruleUtils\";\nimport {defaultValue, deepEqual, logger} from \"../utils/stuff\";\nimport {getItemInListValues} from \"../utils/listValues\";\nimport {defaultOperatorOptions} from \"../utils/defaultUtils\";\nimport {fixPathsInTree} from \"../utils/treeUtils\";\nimport omit from \"lodash/omit\";\nimport { List } from \"immutable\";\n\n\nconst typeOf = (v) => {\n  if (typeof v == \"object\" && v !== null && Array.isArray(v))\n    return \"array\";\n  else\n    return (typeof v);\n};\n\nconst isTypeOf = (v, type) => {\n  if (typeOf(v) == type)\n    return true;\n  if (type == \"number\" && !isNaN(v))\n    return true; //can be casted\n  return false;\n};\n\nexport const validateAndFixTree = (newTree, _oldTree, newConfig, oldConfig, removeEmptyGroups, removeIncompleteRules) => {\n  let tree = validateTree(newTree, _oldTree, newConfig, oldConfig, removeEmptyGroups, removeIncompleteRules);\n  tree = fixPathsInTree(tree);\n  return tree;\n};\n\nexport const validateTree = (tree, _oldTree, config, oldConfig, removeEmptyGroups, removeIncompleteRules) => {\n  if (removeEmptyGroups === undefined) {\n    removeEmptyGroups = config.settings.removeEmptyGroupsOnLoad;\n  }\n  if (removeIncompleteRules === undefined) {\n    removeIncompleteRules = config.settings.removeIncompleteRulesOnLoad;\n  }\n  const c = {\n    config, oldConfig, removeEmptyGroups, removeIncompleteRules\n  };\n  return validateItem(tree, [], null, {}, c);\n};\n\nfunction validateItem (item, path, itemId, meta, c) {\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\" || type == \"case_group\" || type == \"switch_group\") && children && children.size) {\n    return validateGroup(item, path, itemId, meta, c);\n  } else if (type === \"rule\") {\n    return validateRule(item, path, itemId, meta, c);\n  } else {\n    return item;\n  }\n}\n\nfunction validateGroup (item, path, itemId, meta, c) {\n  const {removeEmptyGroups} = c;\n  let id = item.get(\"id\");\n  let children = item.get(\"children1\");\n  const oldChildren = children;\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  }\n\n  //validate children\n  let submeta = {};\n  children = children\n    .map( (currentChild, childId) => validateItem(currentChild, path.concat(id), childId, submeta, c) );\n  if (removeEmptyGroups)\n    children = children.filter((currentChild) => (currentChild != undefined));\n  let sanitized = submeta.sanitized || (oldChildren.size != children.size);\n  if (!children.size && removeEmptyGroups && path.length) {\n    sanitized = true;\n    item = undefined;\n  }\n\n  if (sanitized)\n    meta.sanitized = true;\n  if (sanitized && item)\n    item = item.set(\"children1\", children);\n  return item;\n}\n\n\nfunction validateRule (item, path, itemId, meta, c) {\n  const {removeIncompleteRules, config, oldConfig} = c;\n  const {showErrorMessage} = config.settings;\n  let id = item.get(\"id\");\n  let properties = item.get(\"properties\");\n  let field = properties.get(\"field\") || null;\n  let operator = properties.get(\"operator\") || null;\n  let operatorOptions = properties.get(\"operatorOptions\");\n  let valueSrc = properties.get(\"valueSrc\");\n  let value = properties.get(\"value\");\n  let valueError = properties.get(\"valueError\");\n  const oldSerialized = {\n    field,\n    operator,\n    operatorOptions: operatorOptions ? operatorOptions.toJS() : {},\n    valueSrc: valueSrc ? valueSrc.toJS() : null,\n    value: value ? value.toJS() : null,\n    valueError: valueError ? valueError.toJS() : null,\n  };\n  let _wasValid = field && operator && value && !value.includes(undefined);\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  }\n\n  //validate field\n  const fieldDefinition = field ? getFieldConfig(config, field) : null;\n  if (field && !fieldDefinition) {\n    logger.warn(`No config for field ${field}`);\n    field = null;\n  }\n  if (field == null) {\n    properties = [\"operator\", \"operatorOptions\", \"valueSrc\", \"value\"].reduce((map, key) => map.delete(key), properties);\n    operator = null;\n  }\n\n  //validate operator\n  // Backward compatibility: obsolete operator range_between\n  if (operator == \"range_between\" || operator == \"range_not_between\") {\n    operator = operator == \"range_between\" ? \"between\" : \"not_between\";\n    console.info(`Fixed operator ${properties.get(\"operator\")} to ${operator}`);\n    properties = properties.set(\"operator\", operator);\n  }\n  const operatorDefinition = operator ? getOperatorConfig(config, operator, field) : null;\n  if (operator && !operatorDefinition) {\n    console.warn(`No config for operator ${operator}`);\n    operator = null;\n  }\n  const availOps = field ? getOperatorsForField(config, field) : [];\n  if (!availOps) {\n    console.warn(`Type of field ${field} is not supported`);\n    operator = null;\n  } else if (operator && availOps.indexOf(operator) == -1) {\n    if (operator == \"is_empty\" || operator == \"is_not_empty\") {\n      // Backward compatibility: is_empty #494\n      operator = operator == \"is_empty\" ? \"is_null\" : \"is_not_null\";\n      console.info(`Fixed operator ${properties.get(\"operator\")} to ${operator} for ${field}`);\n      properties = properties.set(\"operator\", operator);\n    } else {\n      console.warn(`Operator ${operator} is not supported for field ${field}`);\n      operator = null;\n    }\n  }\n  if (operator == null) {\n    properties = properties.delete(\"operatorOptions\");\n    properties = properties.delete(\"valueSrc\");\n    properties = properties.delete(\"value\");\n  }\n\n  //validate operator options\n  operatorOptions = properties.get(\"operatorOptions\");\n  let _operatorCardinality = operator ? defaultValue(operatorDefinition.cardinality, 1) : null;\n  if (!operator || operatorOptions && !operatorDefinition.options) {\n    operatorOptions = null;\n    properties = properties.delete(\"operatorOptions\");\n  } else if (operator && !operatorOptions && operatorDefinition.options) {\n    operatorOptions = defaultOperatorOptions(config, operator, field);\n    properties = properties.set(\"operatorOptions\", operatorOptions);\n  }\n\n  //validate values\n  valueSrc = properties.get(\"valueSrc\");\n  value = properties.get(\"value\");\n  const canFix = !showErrorMessage;\n  const isEndValue = true;\n  let {newValue, newValueSrc, newValueError} = getNewValueForFieldOp(config, oldConfig, properties, field, operator, null, canFix, isEndValue);\n  value = newValue;\n  valueSrc = newValueSrc;\n  valueError = newValueError;\n  properties = properties.set(\"value\", value);\n  properties = properties.set(\"valueSrc\", valueSrc);\n  if (showErrorMessage) {\n    properties = properties.set(\"valueError\", valueError);\n  }\n\n  const newSerialized = {\n    field,\n    operator,\n    operatorOptions: operatorOptions ? operatorOptions.toJS() : {},\n    valueSrc: valueSrc ? valueSrc.toJS() : null,\n    value: value ? value.toJS() : null,\n    valueError: valueError ? valueError.toJS() : null,\n  };\n  const sanitized = !deepEqual(oldSerialized, newSerialized);\n  const isComplete = field && operator && value && !value.includes(undefined);\n  if (sanitized)\n    meta.sanitized = true;\n  if (!isComplete && removeIncompleteRules)\n    item = undefined;\n  else if (sanitized)\n    item = item.set(\"properties\", properties);\n\n  return item;\n}\n\n\n/**\n * \n * @param {bool} canFix true is useful for func values to remove bad args\n * @param {bool} isEndValue false if value is in process of editing by user\n * @param {bool} isRawValue false is used only internally from validateFuncValue\n * @return {array} [validError, fixedValue] - if validError === null and canFix == true, fixedValue can differ from value if was fixed\n */\nexport const validateValue = (config, leftField, field, operator, value, valueType, valueSrc, asyncListValues, canFix = false, isEndValue = false, isRawValue = true) => {\n  let validError = null;\n  let fixedValue = value;\n\n  if (value != null) {\n    if (valueSrc == \"field\") {\n      [validError, fixedValue] = validateFieldValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, isEndValue, canFix);\n    } else if (valueSrc == \"func\") {\n      [validError, fixedValue] = validateFuncValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, isEndValue, canFix);\n    } else if (valueSrc == \"value\" || !valueSrc) {\n      [validError, fixedValue] = validateNormalValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, isEndValue, canFix);\n    }\n\n    if (!validError) {\n      const fieldConfig = getFieldConfig(config, field);\n      const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const operatorDefinition = operator ? getOperatorConfig(config, operator, field) : null;\n      const fieldWidgetDefinition = omit(getFieldWidgetConfig(config, field, operator, w, valueSrc), [\"factory\"]);\n      const rightFieldDefinition = (valueSrc == \"field\" ? getFieldConfig(config, value) : null);\n      const fieldSettings = fieldWidgetDefinition; // widget definition merged with fieldSettings\n\n      const fn = fieldWidgetDefinition.validateValue;\n      if (typeof fn == \"function\") {\n        const args = [\n          fixedValue, \n          fieldSettings,\n          operator,\n          operatorDefinition\n        ];\n        if (valueSrc == \"field\")\n          args.push(rightFieldDefinition);\n        const validResult = fn.call(config.ctx, ...args);\n        if (typeof validResult == \"boolean\") {\n          if (validResult == false)\n            validError = \"Invalid value\";\n        } else {\n          validError = validResult;\n        }\n      }\n    }\n  }\n\n  if (isRawValue && validError) {\n    console.warn(\"[RAQB validate]\", `Field ${field}: ${validError}`);\n  }\n  \n  return [validError, fixedValue];\n};\n\nconst validateValueInList = (value, listValues, canFix, isEndValue, removeInvalidMultiSelectValuesOnLoad) => {\n  const values = List.isList(value) ? value.toJS() : (value instanceof Array ? [...value] : undefined);\n  if (values) {\n    const [goodValues, badValues] = values.reduce(([goodVals, badVals], val) => {\n      const vv = getItemInListValues(listValues, val);\n      if (vv == undefined) {\n        return [goodVals, [...badVals, val]];\n      } else {\n        return [[...goodVals, vv.value], badVals];\n      }\n    }, [[], []]);\n    const plural = badValues.length > 1;\n    const err = badValues.length ? `${plural ? \"Values\" : \"Value\"} ${badValues.join(\", \")} ${plural ? \"are\" : \"is\"} not in list of values` : null;\n    // always remove bad values at tree validation as user can't unselect them (except AntDesign widget)\n    if (removeInvalidMultiSelectValuesOnLoad !== undefined) {\n      canFix = removeInvalidMultiSelectValuesOnLoad;\n    } else {\n      canFix = canFix || isEndValue;\n    }\n    return [err, canFix ? goodValues : value];\n  } else {\n    const vv = getItemInListValues(listValues, value);\n    if (vv == undefined) {\n      return [`Value ${value} is not in list of values`, value];\n    } else {\n      value = vv.value;\n    }\n    return [null, value];\n  }\n};\n\n/**\n* \n*/\nconst validateNormalValue = (leftField, field, value, valueSrc, valueType, asyncListValues, config, operator = null, isEndValue = false, canFix = false) => {\n  if (field) {\n    const fieldConfig = getFieldConfig(config, field);\n    const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const wConfig = config.widgets[w];\n    const wType = wConfig.type;\n    const jsType = wConfig.jsType;\n    const fieldSettings = fieldConfig.fieldSettings;\n    const listValues = fieldSettings?.treeValues || fieldSettings?.listValues;\n    const isAsyncListValues = !!fieldSettings?.asyncFetch;\n    // todo: for select/multiselect value can be string or number\n    const canSkipCheck = listValues || isAsyncListValues; \n\n    if (valueType && valueType != wType)\n      return [`Value should have type ${wType}, but got value of type ${valueType}`, value];\n    if (jsType && !isTypeOf(value, jsType) && !canSkipCheck) {\n      return [`Value should have JS type ${jsType}, but got value of type ${typeof value}`, value];\n    }\n\n    if (fieldSettings) {\n      const realListValues = asyncListValues || listValues;\n      if (realListValues && !fieldSettings.allowCustomValues) {\n        return validateValueInList(value, realListValues, canFix, isEndValue, config.settings.removeInvalidMultiSelectValuesOnLoad);\n      }\n      if (fieldSettings.min != null && value < fieldSettings.min) {\n        return [`Value ${value} < min ${fieldSettings.min}`, canFix ? fieldSettings.min : value];\n      }\n      if (fieldSettings.max != null && value > fieldSettings.max) {\n        return [`Value ${value} > max ${fieldSettings.max}`, canFix ? fieldSettings.max : value];\n      }\n    }\n  }\n\n  return [null, value];\n};\n\n\n/**\n* \n*/\nconst validateFieldValue = (leftField, field, value, _valueSrc, valueType, asyncListValues, config, operator = null, isEndValue = false, canFix = false) => {\n  const {fieldSeparator} = config.settings;\n  const isFuncArg = typeof field == \"object\" && field?._isFuncArg;\n  const leftFieldStr = Array.isArray(leftField) ? leftField.join(fieldSeparator) : leftField;\n  const rightFieldStr = Array.isArray(value) ? value.join(fieldSeparator) : value;\n  const rightFieldDefinition = getFieldConfig(config, value);\n  if (!rightFieldDefinition)\n    return [`Unknown field ${value}`, value];\n  if (rightFieldStr == leftFieldStr && !isFuncArg)\n    return [`Can't compare field ${leftField} with itself`, value];\n  if (valueType && valueType != rightFieldDefinition.type)\n    return [`Field ${value} is of type ${rightFieldDefinition.type}, but expected ${valueType}`, value];\n  return [null, value];\n};\n\n/**\n* \n*/\nconst validateFuncValue = (leftField, field, value, _valueSrc, valueType, asyncListValues, config, operator = null, isEndValue = false, canFix = false) => {\n  let fixedValue = value;\n\n  if (value) {\n    const funcKey = value.get(\"func\");\n    if (funcKey) {\n      const funcConfig = getFuncConfig(config, funcKey);\n      if (funcConfig) {\n        if (valueType && funcConfig.returnType != valueType)\n          return [`Function ${funcKey} should return value of type ${funcConfig.returnType}, but got ${valueType}`, value];\n        for (const argKey in funcConfig.args) {\n          const argConfig = funcConfig.args[argKey];\n          const args = fixedValue.get(\"args\");\n          const argVal = args ? args.get(argKey) : undefined;\n          const fieldDef = getFieldConfig(config, argConfig);\n          const argValue = argVal ? argVal.get(\"value\") : undefined;\n          const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n          if (argValue !== undefined) {\n            const [argValidError, fixedArgVal] = validateValue(\n              config, leftField, fieldDef, operator, argValue, argConfig.type, argValueSrc, asyncListValues, canFix, isEndValue, false\n            );\n            if (argValidError !== null) {\n              if (canFix) {\n                fixedValue = fixedValue.deleteIn([\"args\", argKey]);\n                if (argConfig.defaultValue !== undefined) {\n                  fixedValue = fixedValue.setIn([\"args\", argKey, \"value\"], argConfig.defaultValue);\n                  fixedValue = fixedValue.setIn([\"args\", argKey, \"valueSrc\"], \"value\");\n                }\n              } else {\n                return [`Invalid value of arg ${argKey} for func ${funcKey}: ${argValidError}`, value];\n              }\n            } else if (fixedArgVal !== argValue) {\n              fixedValue = fixedValue.setIn([\"args\", argKey, \"value\"], fixedArgVal);\n            }\n          } else if (isEndValue && argConfig.defaultValue === undefined && !canFix) {\n            return [`Value of arg ${argKey} for func ${funcKey} is required`, value];\n          }\n        }\n      } else return [`Unknown function ${funcKey}`, value];\n    } // else it's not function value\n  } // empty value\n\n  return [null, fixedValue];\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFieldRawConfig\n} from \"./configUtils\";\nimport {defaultValue, getFirstDefined} from \"../utils/stuff\";\nimport Immutable from \"immutable\";\nimport {validateValue} from \"../utils/validation\";\nimport last from \"lodash/last\";\n\nconst selectTypes = [\n  \"select\",\n  \"multiselect\",\n  \"treeselect\",\n  \"treemultiselect\",\n];\n\n/**\n * @param {object} config\n * @param {object} oldConfig\n * @param {Immutable.Map} current\n * @param {string} newField\n * @param {string} newOperator\n * @param {string} changedProp\n * @return {object} - {canReuseValue, newValue, newValueSrc, newValueType, newValueError}\n */\nexport const getNewValueForFieldOp = function (config, oldConfig = null, current, newField, newOperator, changedProp = null, canFix = true, isEndValue = false) {\n  if (!oldConfig)\n    oldConfig = config;\n  const currentField = current.get(\"field\");\n  const currentOperator = current.get(\"operator\");\n  const currentValue = current.get(\"value\");\n  const currentValueSrc = current.get(\"valueSrc\", new Immutable.List());\n  const currentValueType = current.get(\"valueType\", new Immutable.List());\n  const currentAsyncListValues = current.get(\"asyncListValues\");\n\n  //const isValidatingTree = (changedProp === null);\n  const {convertableWidgets, clearValueOnChangeField, clearValueOnChangeOp, showErrorMessage} = config.settings;\n\n  //const currentOperatorConfig = getOperatorConfig(oldConfig, currentOperator, currentField);\n  const newOperatorConfig = getOperatorConfig(config, newOperator, newField);\n  //const currentOperatorCardinality = currentOperator ? defaultValue(currentOperatorConfig.cardinality, 1) : null;\n  const operatorCardinality = newOperator ? defaultValue(newOperatorConfig.cardinality, 1) : null;\n  const currentFieldConfig = getFieldConfig(oldConfig, currentField);\n  const newFieldConfig = getFieldConfig(config, newField);\n\n  let canReuseValue = currentField && currentOperator && newOperator && currentValue != undefined\n    && (!changedProp \n      || changedProp == \"field\" && !clearValueOnChangeField \n      || changedProp == \"operator\" && !clearValueOnChangeOp)\n    && (currentFieldConfig && newFieldConfig && currentFieldConfig.type == newFieldConfig.type);\n  if (canReuseValue && selectTypes.includes(currentFieldConfig.type) && changedProp == \"field\") {\n    // different fields of select types has different listValues\n    canReuseValue = false;\n  }\n\n  // compare old & new widgets\n  for (let i = 0 ; i < operatorCardinality ; i++) {\n    const vs = currentValueSrc.get(i) || null;\n    const currentWidget = getWidgetForFieldOp(oldConfig, currentField, currentOperator, vs);\n    const newWidget = getWidgetForFieldOp(config, newField, newOperator, vs);\n    // need to also check value widgets if we changed operator and current value source was 'field'\n    // cause for select type op '=' requires single value and op 'in' requires array value\n    const currentValueWidget = vs == \"value\" ? currentWidget : getWidgetForFieldOp(oldConfig, currentField, currentOperator, \"value\");\n    const newValueWidget = vs == \"value\" ? newWidget : getWidgetForFieldOp(config, newField, newOperator, \"value\");\n\n    const canReuseWidget = newValueWidget == currentValueWidget || (convertableWidgets[currentValueWidget] || []).includes(newValueWidget);\n    if (!canReuseWidget)\n      canReuseValue = false;\n  }\n\n  if (currentOperator != newOperator && [currentOperator, newOperator].includes(\"proximity\"))\n    canReuseValue = false;\n\n  const firstWidgetConfig = getFieldWidgetConfig(config, newField, newOperator, null, currentValueSrc.first());\n  const valueSources = getValueSourcesForFieldOp(config, newField, newOperator);\n  \n  let valueFixes = {};\n  let valueErrors = Array.from({length: operatorCardinality}, () => null);\n  if (canReuseValue) {\n    for (let i = 0 ; i < operatorCardinality ; i++) {\n      const v = currentValue.get(i);\n      const vType = currentValueType.get(i) || null;\n      const vSrc = currentValueSrc.get(i) || null;\n      let isValidSrc = (valueSources.find(v => v == vSrc) != null);\n      if (!isValidSrc && i > 0 && vSrc == null)\n        isValidSrc = true; // make exception for range widgets (when changing op from '==' to 'between')\n      const asyncListValues = currentAsyncListValues;\n      const [validateError, fixedValue] = validateValue(\n        config, newField, newField, newOperator, v, vType, vSrc, asyncListValues, canFix, isEndValue\n      );\n      const isValid = !validateError;\n      // Allow bad value with error message\n      // But not on field change - in that case just drop bad value that can't be reused\n      // ? Maybe we should also drop bad value on op change?\n      // For bad multiselect value we have both error message + fixed value.\n      //  If we show error message, it will gone on next tree validation\n      const fixValue = fixedValue !== v;\n      const dropValue = !isValidSrc || !isValid && (changedProp == \"field\" || !showErrorMessage && !fixValue);\n      const showValueError = !!validateError && showErrorMessage && !dropValue && !fixValue;\n      if (showValueError) {\n        valueErrors[i] = validateError;\n      }\n      if (fixValue) {\n        valueFixes[i] = fixedValue;\n      }\n      if (dropValue) {\n        canReuseValue = false;\n        break;\n      }\n    }\n  }\n\n  // reuse value OR get defaultValue for cardinality 1 (it means default range values is not supported yet, todo)\n  let newValue = null, newValueSrc = null, newValueType = null, newValueError = null;\n  newValue = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n    let v = undefined;\n    if (canReuseValue) {\n      if (i < currentValue.size) {\n        v = currentValue.get(i);\n        if (valueFixes[i] !== undefined) {\n          v = valueFixes[i];\n        }\n      }\n    } else if (operatorCardinality == 1) {\n      v = getFirstDefined([\n        newFieldConfig?.defaultValue,\n        newFieldConfig?.fieldSettings?.defaultValue,\n        firstWidgetConfig?.defaultValue\n      ]);\n    }\n    return v;\n  }));\n\n  newValueSrc = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n    let vs = null;\n    if (canReuseValue) {\n      if (i < currentValueSrc.size)\n        vs = currentValueSrc.get(i);\n    } else if (valueSources.length == 1) {\n      vs = valueSources[0];\n    } else if (valueSources.length > 1) {\n      vs = valueSources[0];\n    }\n    return vs;\n  }));\n\n  if (showErrorMessage) {\n    if (newOperatorConfig && newOperatorConfig.validateValues && newValueSrc.toJS().filter(vs => vs == \"value\" || vs == null).length == operatorCardinality) {\n      // last element in `valueError` list is for range validation error\n      const jsValues = firstWidgetConfig && firstWidgetConfig.toJS \n        ? newValue.toJS().map(v => firstWidgetConfig.toJS.call(config.ctx, v, firstWidgetConfig)) \n        : newValue.toJS();\n      const rangeValidateError = newOperatorConfig.validateValues(jsValues);\n      if (showErrorMessage) {\n        valueErrors.push(rangeValidateError);\n      }\n    }\n    newValueError = new Immutable.List(valueErrors);\n  }\n\n  newValueType = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n    let vt = null;\n    if (canReuseValue) {\n      if (i < currentValueType.size)\n        vt = currentValueType.get(i);\n    } else if (operatorCardinality == 1 && firstWidgetConfig && firstWidgetConfig.type !== undefined) {\n      vt = firstWidgetConfig.type;\n    } else if (operatorCardinality == 1 && newFieldConfig && newFieldConfig.type !== undefined) {\n      vt = newFieldConfig.type == \"!group\" ? \"number\" : newFieldConfig.type;\n    }\n    return vt;\n  }));\n\n  return {canReuseValue, newValue, newValueSrc, newValueType, newValueError, operatorCardinality};\n};\n\nexport const getFirstField = (config, parentRuleGroupPath = null) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parentPathArr = typeof parentRuleGroupPath == \"string\" ? parentRuleGroupPath.split(fieldSeparator) : parentRuleGroupPath;\n  const parentField = parentRuleGroupPath ? getFieldRawConfig(config, parentRuleGroupPath) : config;\n\n  let firstField = parentField, key = null, keysPath = [];\n  do {\n    const subfields = firstField === config ? config.fields : firstField.subfields;\n    if (!subfields || !Object.keys(subfields).length) {\n      firstField = key = null;\n      break;\n    }\n    key = Object.keys(subfields)[0];\n    keysPath.push(key);\n    firstField = subfields[key];\n  } while (firstField.type == \"!struct\" || firstField.type == \"!group\");\n  return (parentPathArr || []).concat(keysPath).join(fieldSeparator);\n};\n\nexport const getOperatorsForField = (config, field) => {\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldOps = fieldConfig ? fieldConfig.operators : [];\n  return fieldOps;\n};\n\nexport const getFirstOperator = (config, field) => {\n  const fieldOps = getOperatorsForField(config, field);\n  return fieldOps ? fieldOps[0] : null;\n};\n\nexport const getFieldPath = (field, config, onlyKeys = false) => {\n  if (!field)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = Array.isArray(field) ? field : field.split(fieldSeparator);\n  if (onlyKeys)\n    return parts;\n  else\n    return parts\n      .map((_curr, ind, arr) => arr.slice(0, ind+1))\n      .map((parts) => parts.join(fieldSeparator));\n};\n\nexport const getFuncPathLabels = (field, config, parentField = null) => {\n  return getFieldPathLabels(field, config, parentField, \"funcs\", \"subfields\");\n};\n\nexport const getFieldPathLabels = (field, config, parentField = null, fieldsKey = \"fields\", subfieldsKey = \"subfields\") => {\n  if (!field)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = Array.isArray(field) ? field : field.split(fieldSeparator);\n  const parentParts = parentField ? (Array.isArray(parentField) ? parentField : parentField.split(fieldSeparator)) : [];\n  return parts\n    .slice(parentParts.length)\n    .map((_curr, ind, arr) => arr.slice(0, ind+1))\n    .map((parts) => [...parentParts, ...parts].join(fieldSeparator))\n    .map(part => {\n      const cnf = getFieldRawConfig(config, part, fieldsKey, subfieldsKey);\n      return cnf && cnf.label || last(part.split(fieldSeparator));\n    })\n    .filter(label => label != null);\n};\n\nexport const getFieldPartsConfigs = (field, config, parentField = null) => {\n  if (!field)\n    return null;\n  const parentFieldDef = parentField && getFieldRawConfig(config, parentField) || null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = Array.isArray(field) ? field : field.split(fieldSeparator);\n  const parentParts = parentField ? (Array.isArray(parentField) ? parentField : parentField.split(fieldSeparator)) : [];\n  return parts\n    .slice(parentParts.length)\n    .map((_curr, ind, arr) => arr.slice(0, ind+1))\n    .map((parts) => ({\n      part: [...parentParts, ...parts].join(fieldSeparator),\n      key: parts[parts.length - 1]\n    }))\n    .map(({part, key}) => {\n      const cnf = getFieldRawConfig(config, part);\n      return {key, cnf};\n    })\n    .map(({key, cnf}, ind, arr) => {\n      const parentCnf = ind > 0 ? arr[ind - 1].cnf : parentFieldDef;\n      return [key, cnf, parentCnf];\n    });\n};\n\nexport const getValueLabel = (config, field, operator, delta, valueSrc = null, isSpecialRange = false) => {\n  const isFuncArg = field && typeof field == \"object\" && !!field.func && !!field.arg;\n  const {showLabels} = config.settings;\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldWidgetConfig = getFieldWidgetConfig(config, field, operator, null, valueSrc) || {};\n  const mergedOpConfig = getOperatorConfig(config, operator, field) || {};\n    \n  const cardinality = isSpecialRange ? 1 : mergedOpConfig.cardinality;\n  let ret = null;\n  if (cardinality > 1) {\n    const valueLabels = fieldWidgetConfig.valueLabels || mergedOpConfig.valueLabels;\n    if (valueLabels)\n      ret = valueLabels[delta];\n    if (ret && typeof ret != \"object\") {\n      ret = {label: ret, placeholder: ret};\n    }\n    if (!ret) {\n      ret = {\n        label: config.settings.valueLabel + \" \" + (delta+1),\n        placeholder: config.settings.valuePlaceholder + \" \" + (delta+1),\n      };\n    }\n  } else {\n    let label = fieldWidgetConfig.valueLabel;\n    let placeholder = fieldWidgetConfig.valuePlaceholder;\n    if (isFuncArg) {\n      if (!label)\n        label = fieldConfig.label || field.arg;\n      if (!placeholder && !showLabels)\n        placeholder = fieldConfig.label || field.arg;\n    }\n\n    ret = {\n      label: label || config.settings.valueLabel, \n      placeholder: placeholder || config.settings.valuePlaceholder,\n    };\n  }\n  return ret;\n};\n\nfunction _getWidgetsAndSrcsForFieldOp (config, field, operator = null, valueSrc = null) {\n  let widgets = [];\n  let valueSrcs = [];\n  if (!field)\n    return {widgets, valueSrcs};\n  const isFuncArg = typeof field == \"object\" && (!!field.func && !!field.arg || field._isFuncArg);\n  const fieldConfig = getFieldConfig(config, field);\n  const opConfig = operator ? config.operators[operator] : null;\n  \n  if (fieldConfig && fieldConfig.widgets) {\n    for (const widget in fieldConfig.widgets) {\n      const widgetConfig = fieldConfig.widgets[widget];\n      if (!config.widgets[widget]) {\n        continue;\n      }\n      const widgetValueSrc = config.widgets[widget].valueSrc || \"value\";\n      let canAdd = true;\n      if (widget == \"field\") {\n        canAdd = canAdd && filterValueSourcesForField(config, [\"field\"], fieldConfig).length > 0;\n      }\n      if (widget == \"func\") {\n        canAdd = canAdd && filterValueSourcesForField(config, [\"func\"], fieldConfig).length > 0;\n      }\n      // If can't check operators, don't add\n      // Func args don't have operators\n      if (valueSrc == \"value\" && !widgetConfig.operators && !isFuncArg && field != \"!case_value\")\n        canAdd = false;\n      if (widgetConfig.operators && operator)\n        canAdd = canAdd && widgetConfig.operators.indexOf(operator) != -1;\n      if (valueSrc && valueSrc != widgetValueSrc && valueSrc != \"const\")\n        canAdd = false;\n      if (opConfig && opConfig.cardinality == 0 && (widgetValueSrc != \"value\"))\n        canAdd = false;\n      if (canAdd) {\n        widgets.push(widget);\n        let canAddValueSrc = fieldConfig.valueSources && fieldConfig.valueSources.indexOf(widgetValueSrc) != -1;\n        if (opConfig && opConfig.valueSources && opConfig.valueSources.indexOf(widgetValueSrc) == -1)\n          canAddValueSrc = false;\n        if (canAddValueSrc && !valueSrcs.find(v => v == widgetValueSrc))\n          valueSrcs.push(widgetValueSrc);\n      }\n    }\n  }\n\n  const widgetWeight = (w) => {\n    let wg = 0;\n    if (fieldConfig.preferWidgets) {\n      if (fieldConfig.preferWidgets.includes(w))\n        wg += (10 - fieldConfig.preferWidgets.indexOf(w));\n    } else if (w == fieldConfig.mainWidget) {\n      wg += 100;\n    }\n    if (w == \"field\") {\n      wg -= 1;\n    }\n    if (w == \"func\") {\n      wg -= 2;\n    }\n    return wg;\n  };\n\n  widgets.sort((w1, w2) => (widgetWeight(w2) - widgetWeight(w1)));\n    \n  return {widgets, valueSrcs};\n}\n\nexport const getWidgetsForFieldOp = (config, field, operator, valueSrc = null) => {\n  const {widgets} = _getWidgetsAndSrcsForFieldOp(config, field, operator, valueSrc);\n  return widgets;\n};\n\nexport const filterValueSourcesForField = (config, valueSrcs, fieldDefinition) => {\n  if (!fieldDefinition)\n    return valueSrcs;\n  return valueSrcs.filter(vs => {\n    let canAdd = true;\n    if (vs == \"field\") {\n      if (config._fieldsCntByType) {\n        // tip: LHS field can be used as arg in RHS function\n        const minCnt = fieldDefinition._isFuncArg ? 0 : 1;\n        canAdd = canAdd && config._fieldsCntByType[fieldDefinition.type] > minCnt;\n      }\n    }\n    if (vs == \"func\") {\n      if (config._funcsCntByType)\n        canAdd = canAdd && !!config._funcsCntByType[fieldDefinition.type];\n      if (fieldDefinition.funcs)\n        canAdd = canAdd && fieldDefinition.funcs.length > 0;\n    }\n    return canAdd;\n  });\n};\n\nexport const getValueSourcesForFieldOp = (config, field, operator, fieldDefinition = null, leftFieldForFunc = null) => {\n  const {valueSrcs} = _getWidgetsAndSrcsForFieldOp(config, field, operator, null);\n  const filteredValueSrcs = filterValueSourcesForField(config, valueSrcs, fieldDefinition);\n  return filteredValueSrcs;\n};\n\nexport const getWidgetForFieldOp = (config, field, operator, valueSrc = null) => {\n  const {widgets} = _getWidgetsAndSrcsForFieldOp(config, field, operator, valueSrc);\n  let widget = null;\n  if (widgets.length)\n    widget = widgets[0];\n  return widget;\n};\n\nexport const formatFieldName = (field, config, meta, parentField = null, options = {}) => {\n  if (!field) return;\n  const fieldDef = getFieldConfig(config, field) || {};\n  const {fieldSeparator} = config.settings;\n  const fieldParts = Array.isArray(field) ? field : field.split(fieldSeparator);\n  let fieldName = Array.isArray(field) ? field.join(fieldSeparator) : field;\n  if (options?.useTableName && fieldDef.tableName) { // legacy\n    const fieldPartsCopy = [...fieldParts];\n    fieldPartsCopy[0] = fieldDef.tableName;\n    fieldName = fieldPartsCopy.join(fieldSeparator);\n  }\n  if (fieldDef.fieldName) {\n    fieldName = fieldDef.fieldName;\n  }\n  if (parentField) {\n    const parentFieldDef = getFieldConfig(config, parentField) || {};\n    let parentFieldName = parentField;\n    if (parentFieldDef.fieldName) {\n      parentFieldName = parentFieldDef.fieldName;\n    }\n    if (fieldName.indexOf(parentFieldName + fieldSeparator) == 0) {\n      fieldName = fieldName.slice((parentFieldName + fieldSeparator).length);\n      // fieldName = \"#this.\" + fieldName; // ? for spel\n    } else {\n      meta.errors.push(`Can't cut group ${parentFieldName} from field ${fieldName}`);\n    }\n  }\n  return fieldName;\n};\n\n","import JL from \"json-logic-js\";\nimport moment from \"moment\";\n\nexport function applyJsonLogic(logic, data) {\n  return JL.apply(logic, data);\n}\n\nfunction addJsonLogicOperation(name, op) {\n  return JL.add_operation(name, op);\n}\n\nexport const customJsonLogicOperations = {\n  CALL: (fn, ctx, ...args) => (fn.call(ctx, ...args)),\n  JSX: (type, props) => ({type, props}),\n  mergeObjects: (obj1, obj2) => ({...obj1, ...obj2}),\n  fromEntries: (entries) => Object.fromEntries(entries),\n  strlen: (str) => (str?.length || 0),\n  regexTest: (str, pattern, flags) => str?.match(new RegExp(pattern, flags)) != null,\n  now: () => new Date(),\n  date_add: (date, val, dim) => { return moment(date).add(val, dim).toDate(); },\n  toLowerCase: (str) => str.toLowerCase(),\n  toUpperCase: (str) => str.toUpperCase(),\n};\n\nexport function addRequiredJsonLogicOperations() {\n  for (let k in customJsonLogicOperations) {\n    addJsonLogicOperation(k, customJsonLogicOperations[k]);\n  }\n}\n","import merge from \"lodash/merge\";\nimport pick from \"lodash/pick\";\nimport {isJsonLogic, isJSX, isDirtyJSX, cleanJSX, shallowEqual} from \"./stuff\";\nimport clone from \"clone\";\nimport JL from \"json-logic-js\";\nimport { addRequiredJsonLogicOperations, applyJsonLogic } from \"./jsonLogic\";\nimport { BasicFuncs } from \"..\";\nimport { getFuncConfig } from \"./configUtils\";\n\n// Add new operations for JsonLogic\naddRequiredJsonLogicOperations();\n\nexport { isJSX, isDirtyJSX, cleanJSX, applyJsonLogic };\n\nfunction applyJsonLogicWithPath(logic, data, path) {\n  let ret;\n  try {\n    ret = JL.apply(logic, data);\n  } catch (e) {\n    e.message = `${path.join(\".\")} :: ${e.message}`;\n    throw e;\n  }\n  return ret;\n}\n\nfunction callContextFn(_this, fn, args, path) {\n  let ret;\n  try {\n    ret = fn.call(_this, ...args);\n  } catch (e) {\n    e.message = `${path.join(\".\")} :: ${e.message}`;\n    throw e;\n  }\n  return ret;\n}\n\nexport const configKeys = [\"conjunctions\", \"fields\", \"types\", \"operators\", \"widgets\", \"settings\", \"funcs\", \"ctx\"];\n\n// type: \n//  x - iterate (with nesting `subfields`)\n//  \"r\" - RenderedReactElement\n//    Will be compiled with renderReactElement() into React element rendered with `React.createElement` (`ctx.RCE`)\n//  \"rf\" - JsonLogicFunction/string to render React\n//    JL data is { props, ctx }\n//    Should return {type, props} or string, where type or string - React component\n//    Can use { JSX: [\"SomeComponent\", {var: \"props\"}] } or just return \"SomeComponent\"\n//    Returned component will be searched in ctx.components/ctx.W/ctx.O, see getReactComponentFromCtx()\n//    Will be compiled with compileJsonLogicReact() into function with args (props, ctx) that will return renderReactElement()\n//  \"f\" - JsonLogicFunction/string\n//    JL data is { args, ctx } plus named args defined in `args` inside `compileMeta`\n//    Can use { CALL: [ {var: \"ctx.someFunc\"}, null, {var: \"args[0]\" }] } \n//    If string is passed, it's a path to function in ctx (with dot notation)\n//    Will be compiled with compileJsonLogic() into function with any args and `this` should be `ctx`\n\nconst compileMetaFieldSettings = {\n  asyncFetch: { type: \"f\", args: [\"search\", \"offset\"] },\n  labelYes: { type: \"r\" },\n  labelNo: { type: \"r\" },\n  marks: { type: \"r\", isArr: true },\n  validateValue: { type: \"f\", args: [\"val\", \"fieldSettings\", \"op\", \"opDef\", \"rightFieldDef\"] },\n};\n\nconst compileMetaWidget = {\n  ...compileMetaFieldSettings,\n  factory: { type: \"rf\" },\n  formatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"isForDisplay\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  sqlFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  spelFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  spelImportValue: { type: \"f\", args: [\"val\"] },\n  mongoFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\"] },\n  elasticSearchFormatValue: { type: \"f\", args: [\"queryType\", \"val\", \"op\", \"field\", \"config\"] },\n  jsonLogic: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\"] },\n  validateValue: { type: \"f\", args: [\"val\", \"fieldSettings\", \"op\", \"opDef\", \"rightFieldDef\"] }, // obsolete\n  toJS: { type: \"f\", args: [\"val\"] },\n};\n\nconst compileMetaOperator = {\n  options: { // proximity\n    factory: { type: \"rf\" },\n  },\n  formatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"isForDisplay\", \"fieldDef\"] },\n  mongoFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"useExpr\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  sqlFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  spelFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  jsonLogic: { type: \"f\", ignore: \"string\", args: [\"field\", \"op\", \"vals\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  elasticSearchQueryType: { type: \"f\", ignore: \"string\", args: [\"valueType\"] },\n  textSeparators: { type: \"r\", isArr: true },\n};\n\nconst compileMetaConjunction = {\n  formatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\", \"isForDisplay\"] },\n  sqlFormatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\"] },\n  spelFormatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\", \"omitBrackets\"] },\n};\n\nconst compileMetaWidgetForType = {\n  widgetProps: compileMetaWidget,\n  opProps: compileMetaOperator\n};\n\nconst compileMetaFunc = {\n  renderBrackets: { type: \"r\", isArr: true },\n  renderSeps: { type: \"r\", isArr: true },\n\n  jsonLogic: { type: \"f\", ignore: \"string\", args: [\"formattedArgs\"] },\n  jsonLogicImport: { type: \"f\", args: [\"val\"] },\n  formatFunc: { type: \"f\", args: [\"formattedArgs\", \"isForDisplay\"] },\n  sqlFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n  mongoFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n  spelFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n};\n\nconst compileMetaSettings = {\n  locale: {\n    mui: { type: \"f\", args: [], invokeWith: [], ignore: \"jl\" },\n  },\n\n  canCompareFieldWithField: { type: \"f\", args: [\"leftField\", \"leftFieldConfig\", \"rightField\", \"rightFieldConfig\", \"op\"] },\n  formatReverse: { type: \"f\", args: [\"q\", \"op\", \"reversedOp\", \"operatorDefinition\", \"revOperatorDefinition\", \"isForDisplay\"] },\n  sqlFormatReverse: { type: \"f\", args: [\"q\"] },\n  spelFormatReverse: { type: \"f\", args: [\"q\"] },\n  formatField: { type: \"f\", args: [\"field\", \"parts\", \"label2\", \"fieldDefinition\", \"config\", \"isForDisplay\"] },\n  formatSpelField: { type: \"f\", args: [\"field\", \"parentField\", \"parts\", \"partsExt\", \"fieldDefinition\", \"config\"] },\n  formatAggr: { type: \"f\", args: [\"whereStr\", \"aggrField\", \"operator\", \"value\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"isForDisplay\", \"aggrFieldDef\"] },\n  \n  normalizeListValues: { type: \"f\", args: [\"listValues\", \"type\", \"fieldSettings\"] },\n\n  renderConfirm: { type: \"f\", args: [\"props\"] },\n  useConfirm: { type: \"f\", args: [] },\n\n  renderField: { type: \"rf\" },\n  renderOperator: { type: \"rf\" },\n  renderFunc: { type: \"rf\" },\n  renderConjs: { type: \"rf\" },\n  renderButton: { type: \"rf\" },\n  renderButtonGroup: { type: \"rf\" },\n  renderValueSources: { type: \"rf\" },\n  renderProvider: { type: \"rf\" },\n  renderSwitch: { type: \"rf\" },\n  renderSwitchPrefix: { type: \"r\" },\n\n  renderItem: { type: \"rf\" },\n  renderBeforeWidget: { type: \"rf\" },\n  renderAfterWidget: { type: \"rf\" },\n  renderBeforeActions: { type: \"rf\" },\n  renderAfterActions: { type: \"rf\" },\n  renderRuleError: { type: \"rf\" },\n};\n\nconst compileMeta = {\n  fields: {\n    x: {\n      fieldSettings: compileMetaFieldSettings,\n      widgets: {\n        x: compileMetaWidgetForType\n      },\n      mainWidgetProps: compileMetaWidget\n    },\n  },\n  widgets: {\n    x: compileMetaWidget\n  },\n  conjunctions: {\n    x: compileMetaConjunction\n  },\n  operators: {\n    x: compileMetaOperator\n  },\n  types: {\n    x: {\n      widgets: {\n        x: compileMetaWidgetForType\n      }\n    }\n  },\n  funcs: {\n    x: compileMetaFunc\n  },\n  settings: compileMetaSettings,\n};\n\n/////////////\n\nexport const compressConfig = (config, baseConfig) => {\n  if (config.__fieldNames) {\n    throw new Error(\"Don't apply `compressConfig()` to extended config\");\n  }\n  let zipConfig = pick(config, configKeys);\n  delete zipConfig.ctx;\n\n  const isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\n  const _clean = (target, base, path, meta) => {\n    if (isObject(target)) {\n      if (isDirtyJSX(target)) {\n        target = cleanJSX(target);\n      }\n      if (path[0] === \"funcs\" && !base) {\n        const funcKey = path[path.length - 1];\n        // todo: if there will be change in `BasicFuncs` when funcs can be nested, need to chnage code to find `base`\n        base = getFuncConfig({\n          funcs: meta.BasicFuncs\n        }, funcKey) || undefined;\n        if (base) {\n          target[\"$$key\"] = funcKey;\n        }\n      }\n      if (base !== undefined && isObject(base)) {\n        for (let k in base) {\n          if (Object.prototype.hasOwnProperty.call(base, k)) {\n            if (!Object.keys(target).includes(k) || target[k] === undefined && base[k] !== undefined) {\n              // deleted in target\n              target[k] = \"$$deleted\";\n            } else {\n              target[k] = _clean(target[k], base[k], [...path, k], meta);\n              if (target[k] === undefined) {\n                delete target[k];\n              }\n            }\n          }\n        }\n      }\n      for (let k in target) {\n        if (Object.prototype.hasOwnProperty.call(target, k)) {\n          if (!base || !Object.keys(base).includes(k)) {\n            // new in target\n            target[k] = _clean(target[k], base?.[k], [...path, k], meta);\n          }\n          if (target[k] === undefined) {\n            delete target[k];\n          }\n        }\n      }\n      if (Object.keys(target).length === 0) {\n        target = undefined;\n      }\n    } else if (Array.isArray(target)) {\n      // don't deep compare arrays, but allow clean JSX inside array\n      target.forEach((val, ind) => {\n        target[ind] = _clean(target[ind], undefined, [...path, ind], meta);\n      });\n    }\n\n    if (base !== undefined && shallowEqual(target, base, true)) {\n      return undefined;\n    }\n\n    if (typeof target === \"function\") {\n      throw new Error(`compressConfig: function at ${path.join(\".\")} should be converted to JsonLogic`);\n    }\n\n    return target;\n  };\n\n  for (const rootKey of configKeys) {\n    if (rootKey === \"ctx\") {\n      // ignore\n    } else if (rootKey === \"fields\") {\n      // just copy\n      zipConfig[rootKey] = clone(zipConfig[rootKey]);\n      _clean(zipConfig[rootKey], {}, [rootKey]);\n    } else if (rootKey === \"funcs\") {\n      // leave only diff for every used func\n      zipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n      for (let k in zipConfig[rootKey]) {\n        _clean(zipConfig[rootKey][k], null, [rootKey, k], {\n          BasicFuncs\n        });\n      }\n    } else {\n      // leave only diff\n      zipConfig[rootKey] = clone(zipConfig[rootKey]);\n      _clean(zipConfig[rootKey], baseConfig[rootKey], [rootKey]);\n    }\n  }\n\n  return zipConfig;\n};\n\n\nexport const decompressConfig = (zipConfig, baseConfig, ctx) => {\n  if (!zipConfig.settings.useConfigCompress) {\n    throw new Error(\"Please enable `useConfigCompress` in config settings to use decompressConfig()\");\n  }\n  let unzipConfig = {};\n\n  const isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\n  const _mergeDeep = (target, mixin, path) => {\n    if (isObject(mixin)) {\n      if (!isObject(target)) {\n        target = {};\n      }\n      for (let k in mixin) {\n        if (Object.prototype.hasOwnProperty.call(mixin, k)) {\n          if (mixin[k] === \"$$deleted\") {\n            delete target[k];\n          } else {\n            target[k] = _mergeDeep(target[k], mixin[k], [...path, k]);\n          }\n        }\n      }\n    } else if (Array.isArray(mixin)) {\n      // don't merge arrays, just replace\n      target = clone(mixin);\n    } else {\n      target = mixin;\n    }\n\n    return target;\n  };\n\n  const _resolveAndMergeDeep = (target, path, meta) => {\n    // try to resolve by $$key and merge\n    let resolved = false;\n    if (isObject(target) && Object.prototype.hasOwnProperty.call(target, \"$$key\") && target[\"$$key\"]) {\n      const func = getFuncConfig({\n        funcs: meta.BasicFuncs\n      }, target[\"$$key\"]);\n      if (func) {\n        // deep merge func <- zip\n        delete target[\"$$key\"];\n        target = _mergeDeep(clone(func), target, path);\n        resolved = true;\n      } else {\n        throw new Error(`decompressConfig: basic function not found by key ${target[\"$$key\"]} at ${path.join(\".\")}`);\n      }\n    }\n\n    if (!resolved) {\n      if (isObject(target)) {\n        // loop through object to find refs ($$key)\n        for (let k in target) {\n          if (Object.prototype.hasOwnProperty.call(target, k)) {\n            target[k] = _resolveAndMergeDeep(target[k], [...path, k], meta);\n          }\n        }\n      } else if (Array.isArray(target)) {\n        // also loop through array to find refs ($$key)\n        for (const k of target) {\n          target[k] = _resolveAndMergeDeep(target[k], [...path, k], meta);\n        }\n      }\n    }\n\n    return target;\n  };\n\n  for (const rootKey of configKeys) {\n    if (rootKey === \"ctx\") {\n      // simple deep merge\n      unzipConfig[rootKey] = merge({}, baseConfig.ctx || {}, ctx || {});\n    } else if (rootKey === \"funcs\") {\n      // use $$key to pick funcs from BasicFuncs\n      unzipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n      _resolveAndMergeDeep(unzipConfig[rootKey], [rootKey], {\n        BasicFuncs\n      });\n    } else if (rootKey === \"fields\") {\n      // just copy\n      unzipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n    } else {\n      // deep merge base <- zip\n      unzipConfig[rootKey] = clone(baseConfig[rootKey] || {});\n      _mergeDeep(unzipConfig[rootKey], zipConfig[rootKey] || {}, [rootKey]);\n    }\n  }\n\n  return unzipConfig;\n};\n\n/////////////\n\nexport const compileConfig = (config) => {\n  if (config.__compliled) {\n    return config;\n  }\n\n  config = {...config};\n\n  const opts = {\n    ctx: config.ctx,\n  };\n\n  const logs = [];\n  _compileConfigParts(config, config, opts, compileMeta, logs);\n  //console.log(logs.join(\"\\n\"));\n\n  Object.defineProperty(config, \"__compliled\", {\n    enumerable: false,\n    writable: false,\n    value: true\n  });\n\n  return config;\n};\n\nfunction _compileConfigParts(config, subconfig, opts, meta, logs, path = []) {\n  if (!subconfig) return;\n  const isRoot = !path.length;\n  for (const k in meta) {\n    const submeta = meta[k];\n    let newPath = k === \"x\" ? path : [...path, k];\n    if (isRoot) {\n      //logs.push(`Cloned ${newPath.join(\".\")}`);\n      config[k] = clone(config[k]);\n    }\n    if (submeta.type === \"r\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      if (submeta.isArr) {\n        for (const ind in val) {\n          const newVal = renderReactElement(val[ind], opts, [...newPath, ind]);\n          if (newVal !== val[ind]) {\n            logs.push(`Compiled ${newPath.join(\".\")}[${ind}]`);\n            val[ind] = newVal;\n          }\n        }\n      } else {\n        const newVal = renderReactElement(val, opts, newPath, undefined);\n        if (newVal !== val) {\n          logs.push(`Compiled R ${newPath.join(\".\")}`);\n          targetObj[k] = newVal;\n        }\n      }\n    } else if (submeta.type === \"rf\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      const newVal = compileJsonLogicReact(val, opts, newPath, submeta.ignore);\n      if (newVal !== val) {\n        logs.push(`Compiled JL-RF ${newPath.join(\".\")}`);\n        targetObj[k] = newVal;\n      }\n    } else if (submeta.type === \"f\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      let newVal = compileJsonLogic(val, opts, newPath, submeta.args, submeta.ignore);\n      if (submeta.invokeWith && newVal && typeof newVal === \"function\") {\n        newVal = newVal.call(null, ...submeta.invokeWith);\n      }\n      if (newVal !== val) {\n        logs.push(`Compiled JL-F ${newPath.join(\".\")}`);\n        targetObj[k] = newVal;\n      }\n    } else if (k === \"x\") {\n      for (const field in subconfig) {\n        newPath = [...path, field];\n        const def = subconfig[field];\n        _compileConfigParts(config, def, opts, submeta, logs, newPath);\n        if (def.subfields) {\n          // tip: need to pass `meta`, not `submeta`\n          _compileConfigParts(config, def.subfields, opts, meta, logs, newPath);\n        }\n      }\n    } else {\n      const def = subconfig[k];\n      _compileConfigParts(config, def, opts, submeta, logs, newPath);\n    }\n  }\n}\n\nfunction compileJsonLogicReact(jl, opts, path, ignore = undefined) {\n  if (isJsonLogic(jl)) {\n    return function(props, ctx) {\n      ctx = ctx || opts?.ctx; // can use context compile-time if not passed at runtime\n      const data = {\n        props, ctx,\n      };\n      let re = applyJsonLogicWithPath(jl, data, path);\n      if (typeof re === \"string\") {\n        re = {\n          type: re,\n          props\n        };\n      }\n      \n      const ret = renderReactElement(re, {ctx}, path);\n      return ret;\n    };\n  } else if (typeof jl === \"string\") {\n    return function(props, ctx) {\n      ctx = ctx || opts?.ctx; // can use context compile-time if not passed at runtime\n      const fn = jl.split(\".\").reduce((o, k) => o?.[k], ctx);\n      if (fn) {\n        return callContextFn(this, fn, [props, ctx], path);\n      } else {\n        const re = {\n          type: jl,\n          props\n        };\n        const ret = renderReactElement(re, {ctx}, path);\n        return ret;\n      }\n    };\n  }\n  return jl;\n}\n\nfunction compileJsonLogic(jl, opts, path, argNames, ignore = undefined) {\n  if (isJsonLogic(jl) && ignore !== \"jl\") {\n    return function(...args) {\n      const ctx = this || opts?.ctx; // can use context compile-time if not passed at runtime\n      const data = (argNames || []).reduce((acc, k, i) => ({...acc, [k]: args[i]}), {\n        args, ctx\n      });\n      const ret = applyJsonLogicWithPath(jl, data, path);\n      return ret;\n    }.bind(opts?.ctx);\n  } else if (typeof jl === \"string\" && ignore !== \"string\") {\n    return function(...args) {\n      const ctx = this || opts?.ctx; // can use context compile-time if not passed at runtime\n      const fn = jl.split(\".\").reduce((o, k) => o?.[k], ctx);\n      if (fn) {\n        return callContextFn(this, fn, args, path);\n      } else {\n        throw new Error(`${path.join(\".\")} :: Function ${jl} is not found in ctx`);\n      }\n    }.bind(opts?.ctx);\n  }\n  return jl;\n}\n\n\n\nfunction getReactComponentFromCtx(name, ctx) {\n  return ctx?.components?.[name] || ctx.W[name] || ctx.O[name];\n}\n\nfunction renderReactElement(jsx, opts, path, key = undefined) {\n  if (isJSX(jsx)) {\n    let { type, props } = jsx;\n    if (typeof type !== \"string\") {\n      throw new Error(`renderReactElement for ${path.join(\".\")}: type should be string`);\n    }\n    const Cmp = getReactComponentFromCtx(type, opts.ctx) || type.toLowerCase();\n    let children;\n    if (key !== undefined) {\n      props = { ...props, key };\n    }\n    if (props?.children) {\n      children = renderReactElement(props.children, opts, path);\n      props = { ...props, children };\n    }\n    const res = opts.ctx.RCE(Cmp, props);\n    return res;\n  } else if (jsx instanceof Array) {\n    return jsx.map((el, i) => renderReactElement(el, opts, path, \"\"+i));\n  }\n  return jsx;\n}\n","import merge from \"lodash/merge\";\nimport uuid from \"../utils/uuid\";\nimport mergeWith from \"lodash/mergeWith\";\nimport {settings as defaultSettings} from \"../config/default\";\nimport moment from \"moment\";\nimport {mergeArraysSmart} from \"./stuff\";\nimport {getWidgetForFieldOp} from \"./ruleUtils\";\nimport clone from \"clone\";\n\nimport { compileConfig } from \"./configSerialize\";\nexport * from \"./configSerialize\";\n\n/////////////\n\nexport const extendConfig = (config, configId, canCompile = true) => {\n  //operators, defaultOperator - merge\n  //widgetProps (including valueLabel, valuePlaceholder, hideOperator, operatorInlineLabel) - concrete by widget\n\n  if (config.__configId) {\n    return config;\n  }\n\n  if (canCompile && config.settings.useConfigCompress) {\n    config = compileConfig(config);\n  }\n  \n  config = {...config};\n  config.settings = merge({}, defaultSettings, config.settings);\n  config._fieldsCntByType = {};\n  config._funcsCntByType = {};\n\n  config.types = clone(config.types);\n  _extendTypesConfig(config.types, config);\n\n  config.fields = clone(config.fields);\n  config.__fieldNames = {};\n  _extendFieldsConfig(config.fields, config);\n\n  config.funcs = clone(config.funcs);\n  _extendFuncArgsConfig(config.funcs, config);\n\n  moment.locale(config.settings.locale.moment);\n\n  Object.defineProperty(config, \"__configId\", {\n    enumerable: false,\n    writable: false,\n    value: configId || uuid()\n  });\n\n  return config;\n};\n\nfunction _extendTypesConfig(typesConfig, config) {\n  for (let type in typesConfig) {\n    let typeConfig = typesConfig[type];\n    _extendTypeConfig(type, typeConfig, config);\n  }\n}\n\nfunction _extendTypeConfig(type, typeConfig, config) {\n  let operators = null, defaultOperator = null;\n  typeConfig.mainWidget = typeConfig.mainWidget || Object.keys(typeConfig.widgets).filter(w => w != \"field\" && w != \"func\")[0];\n  for (let widget in typeConfig.widgets) {\n    let typeWidgetConfig = typeConfig.widgets[widget];\n    if (typeWidgetConfig.operators) {\n      let typeWidgetOperators = typeWidgetConfig.operators;\n      if (typeConfig.excludeOperators) {\n        typeWidgetOperators = typeWidgetOperators.filter(op => !typeConfig.excludeOperators.includes(op));\n      }\n      operators = mergeArraysSmart(operators, typeWidgetOperators);\n    }\n    if (typeWidgetConfig.defaultOperator)\n      defaultOperator = typeWidgetConfig.defaultOperator;\n    if (widget == typeConfig.mainWidget) {\n      typeWidgetConfig = merge({}, {widgetProps: typeConfig.mainWidgetProps || {}}, typeWidgetConfig);\n    }\n    typeConfig.widgets[widget] = typeWidgetConfig;\n  }\n  if (!typeConfig.valueSources)\n    typeConfig.valueSources = Object.keys(config.settings.valueSourcesInfo);\n  for (let valueSrc of typeConfig.valueSources) {\n    if (valueSrc != \"value\" && !typeConfig.widgets[valueSrc]) {\n      typeConfig.widgets[valueSrc] = {\n      };\n    }\n  }\n  if (!typeConfig.operators && operators)\n    typeConfig.operators = Array.from(new Set(operators)); //unique\n  if (!typeConfig.defaultOperator && defaultOperator)\n    typeConfig.defaultOperator = defaultOperator;\n}\n\nfunction _extendFieldsConfig(subconfig, config, path = []) {\n  for (let field in subconfig) {\n    _extendFieldConfig(subconfig[field], config, [...path, field]);\n    if (subconfig[field].subfields) {\n      _extendFieldsConfig(subconfig[field].subfields, config, [...path, field]);\n    }\n  }\n}\n\nfunction _extendFuncArgsConfig(subconfig, config) {\n  if (!subconfig) return;\n  for (let funcKey in subconfig) {\n    const funcDef = subconfig[funcKey];\n    if (funcDef.returnType) {\n      if (!config._funcsCntByType[funcDef.returnType])\n        config._funcsCntByType[funcDef.returnType] = 0;\n      config._funcsCntByType[funcDef.returnType]++;\n    }\n    for (let argKey in funcDef.args) {\n      _extendFieldConfig(funcDef.args[argKey], config, null, true);\n    }\n\n    // isOptional can be only in the end\n    if (funcDef.args) {\n      const argKeys = Object.keys(funcDef.args);\n      let tmpIsOptional = true;\n      for (const argKey of argKeys.reverse()) {\n        const argDef = funcDef.args[argKey];\n        if (!tmpIsOptional && argDef.isOptional) {\n          delete argDef.isOptional;\n        }\n        if (!argDef.isOptional)\n          tmpIsOptional = false;\n      }\n    }\n\n    if (funcDef.subfields) {\n      _extendFuncArgsConfig(funcDef.subfields, config);\n    }\n  }\n}\n\nfunction _extendFieldConfig(fieldConfig, config, path = null, isFuncArg = false) {\n  let operators = null, defaultOperator = null;\n  const typeConfig = config.types[fieldConfig.type];\n  const excludeOperatorsForField = fieldConfig.excludeOperators || [];\n  if (fieldConfig.type != \"!struct\" && fieldConfig.type != \"!group\") {\n    const keysToPutInFieldSettings = [\"listValues\", \"treeValues\", \"allowCustomValues\", \"validateValue\"];\n    if (!fieldConfig.fieldSettings)\n      fieldConfig.fieldSettings = {};\n    for (const k of keysToPutInFieldSettings) {\n      if (fieldConfig[k]) {\n        fieldConfig.fieldSettings[k] = fieldConfig[k];\n        delete fieldConfig[k];\n      }\n    }\n\n    // normalize listValues\n    if (fieldConfig.fieldSettings.listValues) {\n      if (config.settings.normalizeListValues) {\n        fieldConfig.fieldSettings.listValues = config.settings.normalizeListValues.call(\n          config.ctx,\n          fieldConfig.fieldSettings.listValues, fieldConfig.type, fieldConfig.fieldSettings\n        );\n      }\n    }\n    // same for treeValues\n    if (fieldConfig.fieldSettings.treeValues) {\n      if (config.settings.normalizeListValues) {\n        fieldConfig.fieldSettings.treeValues = config.settings.normalizeListValues.call(\n          config.ctx,\n          fieldConfig.fieldSettings.treeValues, fieldConfig.type, fieldConfig.fieldSettings\n        );\n      }\n    }\n\n    if (!typeConfig) {\n      //console.warn(`No type config for ${fieldConfig.type}`);\n      fieldConfig.disabled = true;\n      return;\n    }\n    if (!isFuncArg) {\n      if (!config._fieldsCntByType[fieldConfig.type])\n        config._fieldsCntByType[fieldConfig.type] = 0;\n      config._fieldsCntByType[fieldConfig.type]++;\n    }\n\n    if (!fieldConfig.widgets)\n      fieldConfig.widgets = {};\n    if (isFuncArg)\n      fieldConfig._isFuncArg = true;\n    fieldConfig.mainWidget = fieldConfig.mainWidget || typeConfig.mainWidget;\n    fieldConfig.valueSources = fieldConfig.valueSources || typeConfig.valueSources;\n    const excludeOperatorsForType = typeConfig.excludeOperators || [];\n    for (let widget in typeConfig.widgets) {\n      let fieldWidgetConfig = fieldConfig.widgets[widget] || {};\n      const typeWidgetConfig = typeConfig.widgets[widget] || {};\n      if (!isFuncArg) {\n        //todo: why I've excluded isFuncArg ?\n        const excludeOperators = [...excludeOperatorsForField, ...excludeOperatorsForType];\n        const shouldIncludeOperators = fieldConfig.preferWidgets\n          && (widget == \"field\" || fieldConfig.preferWidgets.includes(widget))\n          || excludeOperators.length > 0;\n        if (fieldWidgetConfig.operators) {\n          const addOperators = fieldWidgetConfig.operators.filter(o => !excludeOperators.includes(o));\n          operators = [...(operators || []), ...addOperators];\n        } else if (shouldIncludeOperators && typeWidgetConfig.operators) {\n          const addOperators = typeWidgetConfig.operators.filter(o => !excludeOperators.includes(o));\n          operators = [...(operators || []), ...addOperators];\n        }\n        if (fieldWidgetConfig.defaultOperator)\n          defaultOperator = fieldWidgetConfig.defaultOperator;\n      }\n\n      if (widget == fieldConfig.mainWidget) {\n        fieldWidgetConfig = merge({}, {widgetProps: fieldConfig.mainWidgetProps || {}}, fieldWidgetConfig);\n      }\n      fieldConfig.widgets[widget] = fieldWidgetConfig;\n    }\n    if (!isFuncArg) {\n      if (!fieldConfig.operators && operators)\n        fieldConfig.operators = Array.from(new Set(operators));\n      if (!fieldConfig.defaultOperator && defaultOperator)\n        fieldConfig.defaultOperator = defaultOperator;\n    }\n  }\n\n  const computedFieldName = computeFieldName(config, path);\n  if (computedFieldName) {\n    fieldConfig.fieldName = computedFieldName;\n  }\n\n  if (path && fieldConfig.fieldName) {\n    config.__fieldNames[fieldConfig.fieldName] = path;\n  }\n}\n\n/////////////\n\nconst mergeCustomizerNoArrays = (objValue, srcValue, _key, _object, _source, _stack) => {\n  if (Array.isArray(objValue)) {\n    return srcValue;\n  }\n};\n\nexport const getFieldRawConfig = (config, field, fieldsKey = \"fields\", subfieldsKey = \"subfields\") => {\n  if (!field)\n    return null;\n  if (field == \"!case_value\") {\n    return {\n      type: \"case_value\",\n      mainWidget: \"case_value\",\n      widgets: {\n        \"case_value\": config.widgets[\"case_value\"]\n      }\n    };\n  }\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  //field = normalizeField(config, field);\n  const parts = Array.isArray(field) ? field : field.split(fieldSeparator);\n  const targetFields = config[fieldsKey];\n  if (!targetFields)\n    return null;\n\n  let fields = targetFields;\n  let fieldConfig = null;\n  let path = [];\n  for (let i = 0 ; i < parts.length ; i++) {\n    const part = parts[i];\n    path.push(part);\n    const pathKey = path.join(fieldSeparator);\n    fieldConfig = fields[pathKey];\n    if (i < parts.length-1) {\n      if (fieldConfig && fieldConfig[subfieldsKey]) {\n        fields = fieldConfig[subfieldsKey];\n        path = [];\n      } else {\n        fieldConfig = null;\n      }\n    }\n  }\n\n  return fieldConfig;\n};\n\nconst computeFieldName = (config, path) => {\n  if (!path)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  let l = [...path], r = [], f, fConfig;\n  while ((f = l.pop()) !== undefined && l.length > 0) {\n    r.unshift(f);\n    fConfig = getFieldRawConfig(config, l);\n    if (fConfig.fieldName) {\n      return [fConfig.fieldName, ...r].join(fieldSeparator);\n    }\n  }\n  return null;\n};\n\nexport const normalizeField = (config, field) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  const fieldStr = Array.isArray(field) ? field.join(fieldSeparator) : field;\n  if (config.__fieldNames[fieldStr]) {\n    return config.__fieldNames[fieldStr].join(fieldSeparator);\n  }\n  return fieldStr;\n};\n\nexport const getFuncConfig = (config, func) => {\n  if (!func)\n    return null;\n  const funcConfig = getFieldRawConfig(config, func, \"funcs\", \"subfields\");\n  if (!funcConfig)\n    return null; //throw new Error(\"Can't find func \" + func + \", please check your config\");\n  return funcConfig;\n};\n\nexport const getFuncArgConfig = (config, funcKey, argKey) => {\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig)\n    return null; //throw new Error(`Can't find func ${funcKey}, please check your config`);\n  const argConfig = funcConfig.args && funcConfig.args[argKey] || null;\n  if (!argConfig)\n    return null; //throw new Error(`Can't find arg ${argKey} for func ${funcKey}, please check your config`);\n\n  //merge, but don't merge operators (rewrite instead)\n  const typeConfig = config.types[argConfig.type] || {};\n  let ret = mergeWith({}, typeConfig, argConfig || {}, mergeCustomizerNoArrays);\n\n  return ret;\n};\n\nexport const getFieldConfig = (config, field) => {\n  if (!field)\n    return null;\n  if (typeof field == \"object\" && !field.func && !!field.type)\n    return field;\n  if (typeof field == \"object\" && field.func && field.arg)\n    return getFuncArgConfig(config, field.func, field.arg);\n  const fieldConfig = getFieldRawConfig(config, field);\n  if (!fieldConfig)\n    return null; //throw new Error(\"Can't find field \" + field + \", please check your config\");\n\n  //merge, but don't merge operators (rewrite instead)\n  const typeConfig = config.types[fieldConfig.type] || {};\n  let ret = mergeWith({}, typeConfig, fieldConfig || {}, mergeCustomizerNoArrays);\n\n  return ret;\n};\n\nexport const getOperatorConfig = (config, operator, field = null) => {\n  if (!operator)\n    return null;\n  const opConfig = config.operators[operator];\n  if (field) {\n    const fieldConfig = getFieldConfig(config, field);\n    const widget = getWidgetForFieldOp(config, field, operator);\n    const widgetConfig = config.widgets[widget] || {};\n    const fieldWidgetConfig = (fieldConfig && fieldConfig.widgets ? fieldConfig.widgets[widget] : {}) || {};\n    const widgetOpProps = (widgetConfig.opProps || {})[operator];\n    const fieldWidgetOpProps = (fieldWidgetConfig.opProps || {})[operator];\n    const mergedOpConfig = merge({}, opConfig, widgetOpProps, fieldWidgetOpProps);\n    return mergedOpConfig;\n  } else {\n    return opConfig;\n  }\n};\n\nexport const getFieldWidgetConfig = (config, field, operator, widget = null, valueSrc = null) => {\n  if (!field)\n    return null;\n  if (!(operator || widget) && valueSrc != \"const\" && field != \"!case_value\")\n    return null;\n  const fieldConfig = getFieldConfig(config, field);\n  if (!widget)\n    widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n  const widgetConfig = config.widgets[widget] || {};\n  const fieldWidgetConfig = (fieldConfig && fieldConfig.widgets ? fieldConfig.widgets[widget] : {}) || {};\n  const fieldWidgetProps = (fieldWidgetConfig.widgetProps || {});\n  const valueFieldSettings = (valueSrc == \"value\" || !valueSrc) && fieldConfig && fieldConfig.fieldSettings || {}; // useful to take 'validateValue'\n  const mergedConfig = merge({}, widgetConfig, fieldWidgetProps, valueFieldSettings);\n  return mergedConfig;\n};\n","\nimport {getFieldConfig, getFuncConfig} from \"../utils/configUtils\";\nimport {filterValueSourcesForField} from \"../utils/ruleUtils\";\nimport Immutable from \"immutable\";\n\n// helpers\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\n/**\n * @param {*} value\n * @param {string} valueSrc - 'value' | 'field' | 'func'\n * @param {object} config\n * @return {* | undefined} - undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport const completeValue = (value, valueSrc, config) => {\n  if (valueSrc == \"func\")\n    return completeFuncValue(value, config);\n  else\n    return value;\n};\n\n/**\n * @param {Immutable.Map} value\n * @param {object} config\n * @return {Immutable.Map | undefined} - undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport const completeFuncValue = (value, config) => {\n  const _checkFuncValue = (value) => {\n    if (!value)\n      return undefined;\n    const funcKey = value.get(\"func\");\n    const funcConfig = funcKey && getFuncConfig(config, funcKey);\n    if (!funcConfig)\n      return undefined;\n    let complValue = value;\n    let tmpHasOptional = false;\n    for (const argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      const {valueSources, isOptional, defaultValue} = argConfig;\n      const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n      const args = complValue.get(\"args\");\n      const argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n      const argVal = args ? args.get(argKey) : undefined;\n      const argValue = argVal ? argVal.get(\"value\") : undefined;\n      const argValueSrc = (argVal ? argVal.get(\"valueSrc\") : undefined) || argDefaultValueSrc;\n      if (argValue !== undefined) {\n        const completeArgValue = completeValue(argValue, argValueSrc, config);\n        if (completeArgValue === undefined) {\n          return undefined;\n        } else if (completeArgValue !== argValue) {\n          complValue = complValue.setIn([\"args\", argKey, \"value\"], completeArgValue);\n        }\n        if (tmpHasOptional) {\n          // has gap\n          return undefined;\n        }\n      } else if (defaultValue !== undefined && !isObject(defaultValue)) {\n        complValue = complValue.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n        complValue = complValue.setIn([\"args\", argKey, \"valueSrc\"], \"value\");\n      } else if (isOptional) {\n        // optional\n        tmpHasOptional = true;\n      } else {\n        // missing value\n        return undefined;\n      }\n    }\n    return complValue;\n  };\n\n  return _checkFuncValue(value);\n};\n\n\n/**\n * @param {Immutable.Map} value \n * @return {array} - [usedFields, badFields]\n */\nconst getUsedFieldsInFuncValue = (value, config) => {\n  let usedFields = [];\n  let badFields = [];\n\n  const _traverse = (value) => {\n    const args = value && value.get(\"args\");\n    if (!args) return;\n    for (const arg of args.values()) {\n      if (arg.get(\"valueSrc\") == \"field\") {\n        const rightField = arg.get(\"value\");\n        if (rightField) {\n          const rightFieldDefinition = config ? getFieldConfig(config, rightField) : undefined;\n          if (config && !rightFieldDefinition)\n            badFields.push(rightField);\n          else\n            usedFields.push(rightField);\n        }\n      } else if (arg.get(\"valueSrc\") == \"func\") {\n        _traverse(arg.get(\"value\"));\n      }\n    }\n  };\n\n  _traverse(value);\n\n  return [usedFields, badFields];\n};\n\n\n/**\n * Used @ FuncWidget\n * @param {Immutable.Map} value \n * @param {string} funcKey \n * @param {object} config \n */\nexport const setFunc = (value, funcKey, config) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  value = value || new Immutable.Map();\n  if (Array.isArray(funcKey)) {\n    // fix for cascader\n    funcKey = funcKey.join(fieldSeparator);\n  }\n  value = value.set(\"func\", funcKey);\n  value = value.set(\"args\", new Immutable.Map());\n\n  // defaults\n  const funcConfig = funcKey && getFuncConfig(config, funcKey);\n  if (funcConfig) {\n    for (const argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      const {valueSources, defaultValue} = argConfig;\n      const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n      const firstValueSrc = filteredValueSources.length ? filteredValueSources[0] : undefined;\n      const defaultValueSrc = defaultValue ? (isObject(defaultValue) && !!defaultValue.func ? \"func\" : \"value\") : undefined;\n      const argDefaultValueSrc = defaultValueSrc || firstValueSrc;\n      if (defaultValue !== undefined) {\n        value = value.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n      }\n      if (argDefaultValueSrc) {\n        value = value.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n      }\n    }\n  }\n\n  return value;\n};\n\nconst getDefaultArgValue = ({defaultValue: value}) => {\n  if (isObject(value) && !Immutable.Map.isMap(value) && value.func) {\n    return Immutable.fromJS(value, function (k, v) {\n      return Immutable.Iterable.isIndexed(v) ? v.toList() : v.toOrderedMap();\n    });\n  }\n  return value;\n};\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {*} argVal \n* @param {object} argConfig \n*/\nexport const setArgValue = (value, argKey, argVal, argConfig, config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey, \"value\"], argVal);\n\n    // set default arg value sorce\n    const {valueSources} = argConfig;\n    const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n    const argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n    if (argDefaultValueSrc) {\n      value = value.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n    }\n  }\n  return value;\n};\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {string} argValSrc \n* @param {object} argConfig \n*/\nexport const setArgValueSrc = (value, argKey, argValSrc, _argConfig, _config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey], new Immutable.Map({valueSrc: argValSrc}));\n  }\n  return value;\n};\n","import {defaultValue} from \"../utils/stuff\";\nimport {getFieldConfig, getOperatorConfig} from \"../utils/configUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {formatFieldName} from \"../utils/ruleUtils\";\nimport {completeValue} from \"../utils/funcUtils\";\nimport {Map} from \"immutable\";\n\n/*\n Build tree to http://querybuilder.js.org/ like format\n\n Example:\n {\n    \"condition\": \"AND\",\n    \"rules\": [\n        {\n            \"id\": \"price\",\n            \"field\": \"price\",\n            \"type\": \"double\",\n            \"input\": \"text\",\n            \"operator\": \"less\",\n            \"value\": \"10.25\"\n        },\n        {\n            \"condition\": \"OR\",\n            \"rules\": [\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"2\"\n                },\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"1\"\n                }\n            ]\n        }\n    ]\n }\n */\n\n\nexport const queryBuilderFormat = (item, config) => {\n  //meta is mutable\n  let meta = {\n    usedFields: []\n  };\n  const res = formatItem(item, config, meta);\n  if (!res)\n    return undefined;\n  return {\n    ...res, \n    ...meta\n  };\n};\n\n\nconst formatItem = (item, config, meta) => {\n  if (!item) return undefined;\n\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") && children && children.size) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  const id = item.get(\"id\");\n\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const not = properties.get(\"not\");\n\n  const resultQuery = {\n    id,\n    rules: list.toList(),\n    condition: conjunction.toUpperCase(),\n    not,\n  };\n  return resultQuery;\n};\n\n\nconst formatRule = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const id = item.get(\"id\");\n\n  const operator = properties.get(\"operator\");\n  const options = properties.get(\"operatorOptions\");\n  let field = properties.get(\"field\");\n  let value = properties.get(\"value\");\n  let valueSrc = properties.get(\"valueSrc\");\n  let valueType = properties.get(\"valueType\");\n  const hasUndefinedValues = value.filter(v => v === undefined).size > 0;\n\n  if (field == null || operator == null || hasUndefinedValues)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const fieldType = fieldDefinition.type || \"undefined\";\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  const typeConfig = config.types[fieldDefinition.type] || {};\n  const fieldName = formatFieldName(field, config, meta);\n\n  if (value.size < cardinality)\n    return undefined;\n\n  if (meta.usedFields.indexOf(field) == -1)\n    meta.usedFields.push(field);\n  value = value.toArray();\n  valueSrc = valueSrc.toArray();\n  valueType = valueType.toArray();\n  let values = [];\n  for (let i = 0 ; i < value.length ; i++) {\n    const val = {\n      type: valueType[i],\n      value: value[i],\n    };\n    values.push(val);\n    if (valueSrc[i] == \"field\") {\n      const secondField = value[i];\n      if (meta.usedFields.indexOf(secondField) == -1)\n        meta.usedFields.push(secondField);\n    }\n  }\n  let operatorOptions = options ? options.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length)\n    operatorOptions = null;\n      \n  let ruleQuery = {\n    id,\n    fieldName,\n    type: fieldType,\n    input: typeConfig.mainWidget,\n    operator,\n  };\n  if (operatorOptions)\n    ruleQuery.operatorOptions = operatorOptions;\n  ruleQuery.values = values;\n  return ruleQuery;\n};\n","import {defaultValue} from \"../utils/stuff\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig\n} from \"../utils/configUtils\";\nimport {getWidgetForFieldOp, formatFieldName} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {completeValue} from \"../utils/funcUtils\";\nimport {List, Map} from \"immutable\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\n\n// http://jsonlogic.com/\n\n\nexport const jsonLogicFormat = (item, config) => {\n  //meta is mutable\n  let meta = {\n    usedFields: [],\n    errors: []\n  };\n  \n  const logic = formatItem(item, config, meta, true);\n  \n  // build empty data\n  const {errors, usedFields} = meta;\n  const {fieldSeparator} = config.settings;\n  let data = {};\n  for (let ff of usedFields) {\n    const def = getFieldConfig(config, ff) || {};\n    const parts = ff.split(fieldSeparator);\n    let tmp = data;\n    for (let i = 0 ; i < parts.length ; i++) {\n      const p = parts[i];\n      const pdef = getFieldConfig(config, parts.slice(0, i+1)) || {};\n      if (i != parts.length - 1) {\n        if (pdef.type == \"!group\" && pdef.mode != \"struct\") {\n          if (!tmp[p])\n            tmp[p] = [{}];\n          tmp = tmp[p][0];\n        } else {\n          if (!tmp[p])\n            tmp[p] = {};\n          tmp = tmp[p];\n        }\n      } else {\n        if (!tmp[p])\n          tmp[p] = null; // can use def.type for sample values\n      }\n    }\n  }\n    \n  return {\n    errors,\n    logic,\n    data,\n  };\n};\n\n\nconst formatItem = (item, config, meta, isRoot, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const isLocked = properties.get(\"isLocked\");\n  const {lockedOp} = config.settings.jsonLogic;\n  let ret;\n  if (type === \"group\" || type === \"rule_group\") {\n    ret = formatGroup(item, config, meta, isRoot, parentField);\n  } else if (type === \"rule\") {\n    ret = formatRule(item, config, meta, parentField);\n  }\n  if (isLocked && ret && lockedOp) {\n    ret = { [lockedOp] : ret };\n  }\n  return ret;\n};\n\n\nconst formatGroup = (item, config, meta, isRoot, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n  const field = properties.get(\"field\");\n  \n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n  const conj = conjunctionDefinition.jsonLogicConj || conjunction.toLowerCase();\n  const not = properties.get(\"not\");\n  if (conj != \"and\" && conj != \"or\") {\n    meta.errors.push(`Conjunction ${conj} is not supported`);\n    return undefined;\n  }\n\n  const isRuleGroup = (type === \"rule_group\" && !isRoot);\n  const groupField = isRuleGroup && mode != \"struct\" ? field : parentField;\n  const groupOperator = properties.get(\"operator\");\n  const groupOperatorDefinition = groupOperator && getOperatorConfig(config, groupOperator, field) || null;\n  const formattedValue = formatItemValue(config, properties, meta, groupOperator, parentField);\n  const isGroup0 = isRuleGroup && (!groupOperator || groupOperatorDefinition.cardinality == 0);\n\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, false, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  \n  if (isRuleGroup && mode != \"struct\" && !isGroup0) {\n    // \"count\" rule can have no \"having\" children, but should have number value\n    if (formattedValue == undefined)\n      return undefined;\n  } else {\n    if (!list.size)\n      return undefined;\n  }\n\n  let resultQuery = {};\n  if (list.size == 1 && !isRoot)\n    resultQuery = list.first();\n  else\n    resultQuery[conj] = list.toList().toJS();\n  \n  // revert\n  if (not) {\n    resultQuery = { \"!\": resultQuery };\n  }\n\n  // rule_group (issue #246)\n  if (isRuleGroup && mode != \"struct\") {\n    const formattedField = formatField(meta, config, field, parentField);\n    if (isGroup0) {\n      // config.settings.groupOperators\n      const op = groupOperator || \"some\";\n      resultQuery = {\n        [op]: [\n          formattedField,\n          resultQuery\n        ]\n      };\n    } else {\n      // there is rule for count\n      const filter = !list.size \n        ? formattedField\n        : {\n          \"filter\": [\n            formattedField,\n            resultQuery\n          ]\n        };\n      const count = {\n        \"reduce\": [\n          filter,\n          { \"+\": [1, { var: \"accumulator\" }] },\n          0\n        ]\n      };\n      resultQuery = formatLogic(config, properties, count, formattedValue, groupOperator);\n    }\n  }\n  \n  return resultQuery;\n};\n\n\nconst formatRule = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n\n  let operator = properties.get(\"operator\");\n  let operatorOptions = properties.get(\"operatorOptions\");\n  operatorOptions = operatorOptions ? operatorOptions.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length)\n    operatorOptions = null;\n\n  if (field == null || operator == null)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  let operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDefinition.reversedOp;\n  let revOperatorDefinition = getOperatorConfig(config, reversedOp, field) || {};\n\n  // check op\n  let isRev = false;\n  if (!operatorDefinition.jsonLogic && !revOperatorDefinition.jsonLogic) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  if (!operatorDefinition.jsonLogic && revOperatorDefinition.jsonLogic) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [operatorDefinition, revOperatorDefinition] = [revOperatorDefinition, operatorDefinition];\n  }\n\n  const formattedValue = formatItemValue(config, properties, meta, operator, parentField);\n  if (formattedValue === undefined)\n    return undefined;\n\n  const formattedField = formatField(meta, config, field, parentField);\n\n  return formatLogic(config, properties, formattedField, formattedValue, operator, operatorOptions, fieldDefinition, isRev);\n};\n\n\nconst formatItemValue = (config, properties, meta, operator, parentField) => {\n  const field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  if (iValue == undefined)\n    return undefined;\n  \n  let valueSrcs = [];\n  let valueTypes = [];\n  let oldUsedFields = meta.usedFields;\n  const fvalue = iValue.map((currentValue, ind) => {\n    const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n    const valueType = iValueType ? iValueType.get(ind) : null;\n    const cValue = completeValue(currentValue, valueSrc, config);\n    const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDef = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n    const fv = formatValue(\n      meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDefinition, operator, operatorDefinition, parentField, asyncListValues\n    );\n    if (fv !== undefined) {\n      valueSrcs.push(valueSrc);\n      valueTypes.push(valueType);\n    }\n    return fv;\n  });\n  const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n  if (fvalue.size < cardinality || hasUndefinedValues) {\n    meta.usedFields = oldUsedFields; // restore\n    return undefined;\n  }\n  return cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField = null, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue, parentField);\n  } else if (typeof fieldWidgetDef.jsonLogic === \"function\") {\n    const fn = fieldWidgetDef.jsonLogic;\n    const args = [\n      currentValue,\n      {\n        ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n        asyncListValues\n      },\n      //useful options: valueFormat for date/time\n      omit(fieldWidgetDef, [\"formatValue\", \"mongoFormatValue\", \"sqlFormatValue\", \"jsonLogic\", \"elasticSearchFormatValue\", \"spelFormatValue\"]),\n    ];\n    if (operator) {\n      args.push(operator);\n      args.push(operatorDef);\n    }\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    ret = currentValue;\n  }\n  return ret;\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentField = null) => {\n  const funcKey = currentValue.get(\"func\");\n  const args = currentValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig.jsonLogic) {\n    meta.errors.push(`Func ${funcKey} is not supported`);\n    return undefined;\n  }\n\n  let formattedArgs = {};\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldDef, argConfig, null, null, parentField\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    if (formattedArgVal !== undefined) { // skip optional in the end\n      formattedArgs[argKey] = formattedArgVal;\n    }\n  }\n  const formattedArgsArr = Object.values(formattedArgs);\n\n  let ret;\n  if (typeof funcConfig.jsonLogic === \"function\") {\n    const fn = funcConfig.jsonLogic;\n    const args = [\n      formattedArgs,\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const funcName = funcConfig.jsonLogic || funcKey;\n    const isMethod = !!funcConfig.jsonLogicIsMethod;\n    if (isMethod) {\n      const [obj, ...params] = formattedArgsArr;\n      if (params.length) {\n        ret = { \"method\": [ obj, funcName, params ] };\n      } else {\n        ret = { \"method\": [ obj, funcName ] };\n      }\n    } else {\n      ret = { [funcName]: formattedArgsArr };\n    }\n  }\n  return ret;\n};\n\n\nconst formatField = (meta, config, field, parentField = null) => {\n  const {fieldSeparator, jsonLogic} = config.settings;\n\n  let ret;\n  if (field) {\n    if (Array.isArray(field))\n      field = field.join(fieldSeparator);\n    const fieldDef = getFieldConfig(config, field) || {};\n    const fieldName = formatFieldName(field, config, meta, parentField);\n\n    let varName = fieldDef.jsonLogicVar || (fieldDef.type == \"!group\" ? jsonLogic.groupVarKey : \"var\");\n    ret = { [varName] : fieldName };\n    if (meta.usedFields.indexOf(field) == -1)\n      meta.usedFields.push(field);\n  }\n  return ret;\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, formattedField, formattedValue) => {\n  let formatteOp = operator;\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  const isReverseArgs = defaultValue(operatorDefinition._jsonLogicIsRevArgs, false);\n  if (typeof operatorDefinition.jsonLogic == \"string\")\n    formatteOp = operatorDefinition.jsonLogic;\n  const rangeOps = [\"<\", \"<=\", \">\", \">=\"];\n  const eqOps = [\"==\", \"!=\"];\n  const fn = (field, op, val, opDef, opOpts) => {\n    if (cardinality == 0 && eqOps.includes(formatteOp))\n      return { [formatteOp]: [formattedField, null] };\n    else if (cardinality == 0)\n      return { [formatteOp]: formattedField };\n    else if (cardinality == 1 && isReverseArgs)\n      return { [formatteOp]: [formattedValue, formattedField] };\n    else if (cardinality == 1)\n      return { [formatteOp]: [formattedField, formattedValue] };\n    else if (cardinality == 2 && rangeOps.includes(formatteOp))\n      return { [formatteOp]: [formattedValue[0], formattedField, formattedValue[1]] };\n    else\n      return { [formatteOp]: [formattedField, ...formattedValue] };\n  };\n  return fn;\n};\n\nconst formatLogic = (config, properties, formattedField, formattedValue, operator, operatorOptions = null, fieldDefinition = null, isRev = false) => {\n  const field = properties.get(\"field\");\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  let fn = typeof operatorDefinition.jsonLogic == \"function\" \n    ? operatorDefinition.jsonLogic \n    : buildFnToFormatOp(operator, operatorDefinition, formattedField, formattedValue);\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    omit(operatorDefinition, [\"formatOp\", \"mongoFormatOp\", \"sqlFormatOp\", \"jsonLogic\", \"spelFormatOp\"]),\n    operatorOptions,\n    fieldDefinition,\n  ];\n  let ruleQuery = fn.call(config.ctx, ...args);\n\n  if (isRev) {\n    ruleQuery = { \"!\": ruleQuery };\n  }\n\n  return ruleQuery;\n};\n","import {defaultValue} from \"../utils/stuff\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig\n} from \"../utils/configUtils\";\nimport {getFieldPath, getFieldPathLabels, getWidgetForFieldOp, formatFieldName} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {completeValue} from \"../utils/funcUtils\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\nimport {List, Map} from \"immutable\";\n\n\n// helpers\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\nexport const mongodbFormat = (tree, config) => {\n  return _mongodbFormat(tree, config, false);\n};\n\nexport const _mongodbFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const res = formatItem([], tree, config, meta);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to MongoDb:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (parents, item, config, meta, _not = false, _canWrapExpr = true, _fieldName = undefined, _value = undefined) => {\n  if (!item) return undefined;\n\n  const type = item.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(parents, item, config, meta, _not, _canWrapExpr, _fieldName, _value);\n  } else if (type === \"rule\") {\n    return formatRule(parents, item, config, meta, _not, _canWrapExpr, _fieldName, _value);\n  }\n  return undefined;\n};\n\n\nconst formatGroup = (parents, item, config, meta, _not = false, _canWrapExpr = true, _fieldName = undefined, _value = undefined) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\") || new List();\n  const {canShortMongoQuery} = config.settings;\n\n  const hasParentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\").length > 0;\n  const parentPath = parents\n    .filter(it => it.get(\"type\") == \"rule_group\")\n    .map(it => it.get(\"properties\").get(\"field\"))\n    .slice(-1).pop();\n  const realParentPath = hasParentRuleGroup && parentPath;\n\n  const groupField = type === \"rule_group\" ? properties.get(\"field\") : null;\n  const groupFieldName = formatFieldName(groupField, config, meta, realParentPath);\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const mode = groupFieldDef.mode; //properties.get(\"mode\");\n  const canHaveEmptyChildren = groupField && mode == \"array\";\n\n  const not = _not ? !(properties.get(\"not\")) : (properties.get(\"not\"));\n  const list = children\n    .map((currentChild) => formatItem(\n      [...parents, item], currentChild, config, meta, not, mode != \"array\", mode == \"array\" ? (f => `$$el.${f}`) : undefined)\n    )\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  let conjunctionDefinition = config.conjunctions[conjunction];\n  const reversedConj = conjunctionDefinition.reversedConj;\n  if (not && reversedConj) {\n    conjunction = reversedConj;\n    conjunctionDefinition = config.conjunctions[conjunction];\n  }\n  const mongoConj = conjunctionDefinition.mongoConj;\n\n  let resultQuery;\n  if (list.size == 1) {\n    resultQuery = list.first();\n  } else if (list.size > 1) {\n    const rules = list.toList().toJS();\n    const canShort = canShortMongoQuery && (mongoConj == \"$and\");\n    if (canShort) {\n      resultQuery = rules.reduce((acc, rule) => {\n        if (!acc) return undefined;\n        for (let k in rule) {\n          if (k[0] == \"$\") {\n            acc = undefined;\n            break;\n          }\n          if (acc[k] == undefined) {\n            acc[k] = rule[k];\n          } else {\n            // https://github.com/ukrbublik/react-awesome-query-builder/issues/182\n            let prev = acc[k], next = rule[k];\n            if (!isObject(prev)) {\n              prev = {\"$eq\": prev};\n            }\n            if (!isObject(next)) {\n              next = {\"$eq\": next};\n            }\n            const prevOp = Object.keys(prev)[0], nextOp = Object.keys(next)[0];\n            if (prevOp == nextOp) {\n              acc = undefined;\n              break;\n            }\n            acc[k] = Object.assign({}, prev, next);\n          }\n        }\n        return acc;\n      }, {});\n    }\n    if (!resultQuery) // can't be shorten\n      resultQuery = { [mongoConj] : rules };\n  }\n\n  if (groupField) {\n    if (mode == \"array\") {\n      const totalQuery = {\n        \"$size\": {\n          \"$ifNull\": [\n            \"$\" + groupFieldName,\n            []\n          ]\n        }\n      };\n      const filterQuery = resultQuery ? {\n        \"$size\": {\n          \"$ifNull\": [\n            {\n              \"$filter\": {\n                input: \"$\" + groupFieldName,\n                as: \"el\",\n                cond: resultQuery\n              }\n            },\n            []\n          ]\n        }\n      } : totalQuery;\n      resultQuery = formatItem(\n        parents, item.set(\"type\", \"rule\"), config, meta, false, false, (_f => filterQuery), totalQuery\n      );\n      resultQuery = { \"$expr\": resultQuery };\n    } else {\n      resultQuery = { [groupFieldName]: {\"$elemMatch\": resultQuery} };\n    }\n  }\n  return resultQuery;\n};\n\n\nconst formatRule = (parents, item, config, meta, _not = false, _canWrapExpr = true, _fieldName = undefined, _value = undefined) => {\n  const properties = item.get(\"properties\") || new Map();\n\n  const hasParentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\").length > 0;\n  const parentPath = parents\n    .filter(it => it.get(\"type\") == \"rule_group\")\n    .map(it => it.get(\"properties\").get(\"field\"))\n    .slice(-1).pop();\n  const realParentPath = hasParentRuleGroup && parentPath;\n\n  let operator = properties.get(\"operator\");\n  const operatorOptions = properties.get(\"operatorOptions\");\n  const field = properties.get(\"field\");\n  const iValue = properties.get(\"value\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n\n  if (field == null || operator == null || iValue === undefined)\n    return undefined;\n\n  const fieldDef = getFieldConfig(config, field) || {};\n  let operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDefinition.reversedOp;\n  let revOperatorDefinition = getOperatorConfig(config, reversedOp, field) || {};\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n\n  let not = _not;\n  if (not && reversedOp) {\n    [operator, reversedOp] = [reversedOp, operator];\n    [operatorDefinition, revOperatorDefinition] = [revOperatorDefinition, operatorDefinition];\n    not = false;\n  }\n\n  const fieldName = formatFieldName(field, config, meta, realParentPath);\n\n  //format value\n  let valueSrcs = [];\n  let valueTypes = [];\n  let useExpr = false;\n  const fvalue = iValue.map((currentValue, ind) => {\n    const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n    const valueType = iValueType ? iValueType.get(ind) : null;\n    const cValue = completeValue(currentValue, valueSrc, config);\n    const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDef = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n    const [fv, fvUseExpr] = formatValue(\n      meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, realParentPath,  operator, operatorDefinition, asyncListValues\n    );\n    if (fv !== undefined) {\n      useExpr = useExpr || fvUseExpr;\n      valueSrcs.push(valueSrc);\n      valueTypes.push(valueType);\n    }\n    return fv;\n  });\n  if (_fieldName)\n    useExpr = true;\n  const wrapExpr = useExpr && _canWrapExpr;\n  const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n  if (fvalue.size < cardinality || hasUndefinedValues)\n    return undefined;\n  const formattedValue = cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n\n  //build rule\n  const fn = operatorDefinition.mongoFormatOp;\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  const args = [\n    _fieldName ? _fieldName(fieldName) : fieldName,\n    operator,\n    _value !== undefined && formattedValue == null ? _value : formattedValue,\n    useExpr,\n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n    omit(operatorDefinition, [\"formatOp\", \"mongoFormatOp\", \"sqlFormatOp\", \"jsonLogic\", \"spelFormatOp\"]),\n    operatorOptions,\n    fieldDef,\n  ];\n  let ruleQuery = fn.call(config.ctx, ...args);\n  if (wrapExpr) {\n    ruleQuery = { \"$expr\": ruleQuery };\n  }\n  if (not) {\n    ruleQuery = { \"$not\": ruleQuery };\n  }\n  return ruleQuery;\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, parentPath, operator, operatorDef, asyncListValues) => {\n  if (currentValue === undefined)\n    return [undefined, false];\n\n  let ret;\n  let useExpr = false;\n\n  if (valueSrc == \"field\") {\n    [ret, useExpr] = formatRightField(meta, config, currentValue, parentPath);\n  } else if (valueSrc == \"func\") {\n    [ret, useExpr] = formatFunc(meta, config, currentValue, parentPath);\n  } else {\n    if (typeof fieldWidgetDef.mongoFormatValue === \"function\") {\n      const fn = fieldWidgetDef.mongoFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, [\"formatValue\", \"mongoFormatValue\", \"sqlFormatValue\", \"jsonLogic\", \"elasticSearchFormatValue\", \"spelFormatValue\"]),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = currentValue;\n    }\n  }\n\n  return [ret, useExpr];\n};\n\n\nconst formatRightField = (meta, config, rightField, parentPath) => {\n  const {fieldSeparator} = config.settings;\n  let ret;\n  const useExpr = true;\n\n  if (rightField) {\n    const rightFieldDefinition = getFieldConfig(config, rightField) || {};\n    const fieldParts = Array.isArray(rightField) ? rightField : rightField.split(fieldSeparator);\n    const _fieldKeys = getFieldPath(rightField, config);\n    const fieldPartsLabels = getFieldPathLabels(rightField, config);\n    const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparator) : null;\n    const formatFieldFn = config.settings.formatField;\n    const rightFieldName = formatFieldName(rightField, config, meta, parentPath);\n    const formattedField = formatFieldFn(rightFieldName, fieldParts, fieldFullLabel, rightFieldDefinition, config, false);\n    ret = \"$\" + formattedField;\n  }\n\n  return [ret, useExpr];\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentPath) => {\n  const useExpr = true;\n  let ret;\n\n  const funcKey = currentValue.get(\"func\");\n  const args = currentValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  const funcName = funcConfig.mongoFunc || funcKey;\n  const mongoArgsAsObject = funcConfig.mongoArgsAsObject;\n\n  let formattedArgs = {};\n  let argsCnt = 0;\n  let lastArg = undefined;\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const widget = getWidgetForFieldOp(config, fieldDef, null, argValueSrc);\n    const fieldWidgetDef = omit(getFieldWidgetConfig(config, fieldDef, null, widget, argValueSrc), [\"factory\"]);\n    const [formattedArgVal, _argUseExpr] = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, parentPath, null, null, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return [undefined, false];\n    }\n    argsCnt++;\n    if (formattedArgVal !== undefined) { // skip optional in the end\n      formattedArgs[argKey] = formattedArgVal;\n      lastArg = formattedArgVal;\n    }\n  }\n\n  if (typeof funcConfig.mongoFormatFunc === \"function\") {\n    const fn = funcConfig.mongoFormatFunc;\n    const args = [\n      formattedArgs,\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else if (funcConfig.mongoFormatFunc === null) {\n    meta.errors.push(`Functon ${funcName} is not supported`);\n    return [undefined, false];\n  } else {\n    if (mongoArgsAsObject)\n      ret = { [funcName]: formattedArgs };\n    else if (argsCnt == 1 && lastArg !== undefined)\n      ret = { [funcName]: lastArg };\n    else\n      ret = { [funcName]: Object.values(formattedArgs) };\n  }\n\n  return [ret, useExpr];\n};\n\n\n","import SqlStringOrig from \"sqlstring\";\n\nexport const SqlString = SqlStringOrig;\n\nSqlString.trim = (val) => {\n  if (val.charAt(0) == \"'\")\n    return val.substring(1, val.length-1);\n  else\n    return val;\n};\n\nSqlString.escapeLike = (val, any_start = true, any_end = true) => {\n  // normal escape\n  let res = SqlString.escape(val);\n  // unwrap ''\n  res = SqlString.trim(res);\n  // escape % and _\n  res = res.replace(/[%_]/g, \"\\\\$&\");\n  // wrap with % for LIKE\n  res = (any_start ? \"%\" : \"\") + res + (any_end ? \"%\" : \"\");\n  // wrap ''\n  res = \"'\" + res + \"'\";\n  return res;\n};\n\nexport const sqlEmptyValue = (fieldDef) => {\n  let v = \"''\";\n  const type = fieldDef?.type;\n  if (type == \"date\") {\n    //todo: support other SQL dialects?  0001-01-01 for oracle, 1970-01-01 for timestamp\n    v = \"'0000-00-00'\";\n  } else if (type == \"datetime\") {\n    v = \"'0000-00-00 00:00'\";\n  } else if (type == \"time\") {\n    v = \"'00:00'\";\n  } else if (type == \"number\") {\n    v = \"0\";\n  }\n  return v;\n};\n\nexport const mongoEmptyValue = (fieldDef) => {\n  let v = \"\";\n  const type = fieldDef?.type;\n  if (type == \"number\") {\n    v = 0;\n  }\n  return v;\n};\n\n\nconst spelEscapeString = (val) => {\n  // Strings are delimited by single quotes. To put a single quote itself in a string, use two single quote characters. \n  return \"'\" + val.replace(/'/g, \"''\") + \"'\";\n};\n\nconst spelInlineList = (vals, toArray = false) => {\n  // find java type of values\n  let javaType;\n  let jt;\n  const numberJavaTypes = [\"int\", \"float\"];\n  vals.map(v => {\n    if (v !== undefined && v !== null) {\n      if (typeof v === \"string\") {\n        jt = \"String\";\n      } else if (typeof v === \"number\") {\n        jt = Number.isInteger(v) ? \"int\" : \"float\";\n      } else throw new Error(`spelEscape: Can't use value ${v} in array`);\n\n      if (!javaType) {\n        javaType = jt;\n      } else if (javaType != jt) {\n        if (numberJavaTypes.includes(javaType) && numberJavaTypes.includes(jt)) {\n          // found int and float in collecton - use float\n          javaType = \"float\";\n        } else throw new Error(`spelEscape: Can't use different types in array: found ${javaType} and ${jt}`);\n      }\n    }\n  });\n  if (!javaType) {\n    javaType = \"String\"; //default if empty array\n  }\n\n  // for floats we should add 'f' to all items\n  let escapedVals;\n  if (javaType == \"float\") {\n    escapedVals = vals.map(v => spelEscape(v, true));\n  } else {\n    escapedVals = vals.map(v => spelEscape(v));\n  }\n\n  // build inline list or array\n  let res;\n  if (toArray) {\n    res = `new ${javaType}[]{${escapedVals.join(\", \")}}`;\n  } else {\n    res = `{${escapedVals.join(\", \")}}`;\n  }\n  \n  return res;\n};\n\nexport const spelFixList = (val) => {\n  // `{1,2}.contains(1)` NOT works\n  // `{1,2}.?[true].contains(1)` works\n  return `${val}.?[true]`;\n};\n\nexport const spelEscape = (val, numberToFloat = false, arrayToArray = false) => {\n  // https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions-ref-literal\n  if (val === undefined || val === null) {\n    return \"null\";\n  }\n  switch (typeof val) {\n  case \"boolean\":\n    return (val) ? \"true\" : \"false\";\n  case \"number\":\n    if (!Number.isFinite(val) || isNaN(val))\n      return undefined;\n    return val + (!Number.isInteger(val) || numberToFloat ? \"f\" : \"\");\n  case \"object\":\n    if (Array.isArray(val)) {\n      return spelInlineList(val, arrayToArray);\n    } else {\n      // see `spelFormatValue` for Date, LocalTime\n      throw new Error(\"spelEscape: Object is not supported\");\n    }\n  default: return spelEscapeString(val);\n  }\n};\n\nexport const spelFormatConcat = (parts) => {\n  if (parts && Array.isArray(parts) && parts.length) {\n    return parts\n      .map(part => {\n        if (part.type == \"const\") {\n          return spelEscape(part.value);\n        } else if (part.type == \"property\") {\n          return \"\"+part.value;\n        } else if (part.type == \"variable\") {\n          return \"#\"+part.value;\n        } return undefined;\n      })\n      .filter(r => r != undefined)\n      .join(\" + \");\n  } else {\n    return \"null\";\n  }\n};\n\n// `val` is {value, valueType, valueSrc}\n// If `valueType` == \"case_value\", `value` is array of such items (to be considered as concatenation)\nexport const spelImportConcat = (val) => {\n  if (val == undefined)\n    return [undefined, []];\n  let errors = [];\n  const parts = val.valueType == \"case_value\" ? val.value : [val];\n  const res = parts.map(child => {\n    if (child.valueSrc == \"value\") {\n      if (child.value === null) {\n        return undefined;\n      } else {\n        return {\n          type: \"const\", \n          value: child.value\n        };\n      }\n    } else if (child.valueSrc == \"field\") {\n      return {\n        type: (child.isVariable ? \"variable\" : \"property\"), \n        value: child.value\n      };\n    } else {\n      errors.push(`Unsupported valueSrc ${child.valueSrc} in concatenation`);\n    }\n  }).filter(v => v != undefined);\n  return [res, errors];\n};\n\nexport const stringifyForDisplay = (v) => (v == null ? \"NULL\" : v.toString());\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig\n} from \"../utils/configUtils\";\nimport {\n  getFieldPath, getFieldPathLabels, getWidgetForFieldOp, formatFieldName\n} from \"../utils/ruleUtils\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\nimport {defaultValue} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {completeValue} from \"../utils/funcUtils\";\nimport {List, Map} from \"immutable\";\nimport {SqlString} from \"../utils/export\";\n\nexport const sqlFormat = (tree, config) => {\n  return _sqlFormat(tree, config, false);\n};\n\nexport const _sqlFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const res = formatItem(tree, config, meta);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to SQL:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (item, config, meta) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\") || new List();\n\n  const isRuleGroup = (type === \"rule_group\");\n  const groupField = isRuleGroup ? properties.get(\"field\") : null;\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const mode = groupFieldDef.mode;\n  if (mode == \"array\") {\n    meta.errors.push(`Aggregation is not supported for ${groupField}`);\n  }\n\n  const not = properties.get(\"not\");\n  const canHaveEmptyChildren = false; //isRuleGroup && mode == \"array\";\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n\n  return conjunctionDefinition.sqlFormatConj(list, conjunction, not);\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition) => {\n  const sqlOp = operatorDefinition.sqlOp || operator;\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  let fn;\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sqlOp}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, value, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sqlOp} ${value}`;\n    };\n  } else if (cardinality == 2) {\n    // between\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values.first();\n      const valTo = values.get(1);\n      return `${field} ${sqlOp} ${valFrom} AND ${valTo}`;\n    };\n  }\n  return fn;\n};\n\nconst formatRule = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  let operator = properties.get(\"operator\");\n  const operatorOptions = properties.get(\"operatorOptions\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  if (field == null || operator == null)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  let opDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = opDef.reversedOp;\n  let revOpDef = getOperatorConfig(config, reversedOp, field) || {};\n  const cardinality = defaultValue(opDef.cardinality, 1);\n\n  // check op\n  let isRev = false;\n  const canFormatOp = opDef.sqlOp || opDef.sqlFormatOp;\n  const canFormatRevOp = revOpDef.sqlOp || revOpDef.sqlFormatOp;\n  if (!canFormatOp && !canFormatRevOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  if (!canFormatOp && canFormatRevOp) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [opDef, revOpDef] = [revOpDef, opDef];\n  }\n\n  //format value\n  let valueSrcs = [];\n  let valueTypes = [];\n  const fvalue = iValue.map((currentValue, ind) => {\n    const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n    const valueType = iValueType ? iValueType.get(ind) : null;\n    const cValue = completeValue(currentValue, valueSrc, config);\n    const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDefinition = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n    let fv = formatValue(\n      meta, config, cValue, valueSrc, valueType, fieldWidgetDefinition, fieldDefinition, operator, opDef, asyncListValues\n    );\n    if (fv !== undefined) {\n      valueSrcs.push(valueSrc);\n      valueTypes.push(valueType);\n    }\n    return fv;\n  });\n  const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n  if (hasUndefinedValues || fvalue.size < cardinality)\n    return undefined;\n  const formattedValue = (cardinality == 1 ? fvalue.first() : fvalue);\n\n  //find fn to format expr\n  const fn = opDef.sqlFormatOp || buildFnToFormatOp(operator, opDef);\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n      \n  //format field\n  const formattedField = formatField(meta, config, field);\n      \n  //format expr\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n    omit(opDef, [\"formatOp\", \"mongoFormatOp\", \"sqlFormatOp\", \"jsonLogic\", \"spelFormatOp\"]),\n    operatorOptions,\n    fieldDefinition,\n  ];\n\n  let ret;\n  ret = fn.call(config.ctx, ...args);\n  if (isRev) {\n    ret = config.settings.sqlFormatReverse(ret);\n  }\n  if (ret === undefined) {\n    meta.errors.push(`Operator ${operator} is not supported for value source ${valueSrcs.join(\", \")}`);\n    return undefined;\n  }\n  return ret;\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue);\n  } else {\n    if (typeof fieldWidgetDef.sqlFormatValue === \"function\") {\n      const fn = fieldWidgetDef.sqlFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, [\"formatValue\", \"mongoFormatValue\", \"sqlFormatValue\", \"jsonLogic\", \"elasticSearchFormatValue\", \"spelFormatValue\"]),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, currentValue) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      if (Array.isArray(currentValue)) {\n        ret = currentValue.map(v => SqlString.escape(v));\n      } else {\n        ret = SqlString.escape(currentValue);\n      }\n    }\n  }\n  return ret;\n};\n\nconst formatField = (meta, config, field) => {\n  if (!field) return;\n  const {fieldSeparator} = config.settings;\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const fieldParts = Array.isArray(field) ? field : field.split(fieldSeparator);\n  const _fieldKeys = getFieldPath(field, config);\n  const fieldPartsLabels = getFieldPathLabels(field, config);\n  const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparator) : null;\n  const formatFieldFn = config.settings.formatField;\n  const fieldName = formatFieldName(field, config, meta, null, {useTableName: true});\n  const formattedField = formatFieldFn(fieldName, fieldParts, fieldFullLabel, fieldDefinition, config);\n  return formattedField;\n};\n\n\nconst formatFunc = (meta, config, currentValue) => {\n  const funcKey = currentValue.get(\"func\");\n  const args = currentValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  const funcName = funcConfig.sqlFunc || funcKey;\n\n  let formattedArgs = {};\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldDef, argConfig, null, null, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    if (formattedArgVal !== undefined) { // skip optional in the end\n      formattedArgs[argKey] = formattedArgVal;\n    }\n  }\n\n  let ret;\n  if (typeof funcConfig.sqlFormatFunc === \"function\") {\n    const fn = funcConfig.sqlFormatFunc;\n    const args = [\n      formattedArgs\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const argsStr = Object.entries(formattedArgs)\n      .map(([k, v]) => v)\n      .join(\", \");\n    ret = `${funcName}(${argsStr})`;\n  }\n  return ret;\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig\n} from \"../utils/configUtils\";\nimport {\n  getFieldPath, getWidgetForFieldOp, formatFieldName, getFieldPartsConfigs\n} from \"../utils/ruleUtils\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\nimport {defaultValue, logger} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {completeValue} from \"../utils/funcUtils\";\nimport {List, Map} from \"immutable\";\nimport {spelEscape} from \"../utils/export\";\n\nexport const spelFormat = (tree, config) => {\n  return _spelFormat(tree, config, false);\n};\n\nexport const _spelFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const res = formatItem(tree, config, meta, null);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to SpEL:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (item, config, meta, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(item, config, meta, parentField);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta, parentField);\n  } else if (type == \"switch_group\") {\n    return formatSwitch(item, config, meta, parentField);\n  } else if (type == \"case_group\") {\n    return formatCase(item, config, meta, parentField);\n  }\n\n  return undefined;\n};\n\nconst formatCase = (item, config, meta, parentField = null) => {\n  const type = item.get(\"type\");\n  if (type != \"case_group\") {\n    meta.errors.push(`Unexpected child of type ${type} inside switch`);\n    return undefined;\n  }\n  const properties = item.get(\"properties\") || new Map();\n  \n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, null, parentField, \"!case_value\"\n  );\n\n  const cond = formatGroup(item, config, meta, parentField);\n  return [cond, formattedValue];\n};\n\nconst formatSwitch = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  if (!children) return undefined;\n  const cases = children\n    .map((currentChild) => formatCase(currentChild, config, meta, null))\n    .filter((currentChild) => typeof currentChild !== \"undefined\")\n    .toArray();\n  \n  if (!cases.length) return undefined;\n\n  if (cases.length == 1 && !cases[0][0]) {\n    // only 1 case without condition\n    return cases[0][1];\n  }\n\n  let filteredCases = [];\n  for (let i = 0 ; i < cases.length ; i++) {\n    if (i != (cases.length - 1) && !cases[i][0]) {\n      meta.errors.push(`No condition for case ${i}`);\n    } else {\n      filteredCases.push(cases[i]);\n      if (i == (cases.length - 1) && cases[i][0]) {\n        // no default - add null as default\n        filteredCases.push([undefined, null]);\n      }\n    }\n  }\n\n  let left = \"\", right = \"\";\n  for (let i = 0 ; i < filteredCases.length ; i++) {\n    let [cond, value] = filteredCases[i];\n    if (value == undefined)\n      value = \"null\";\n    if (cond == undefined)\n      cond = \"true\";\n    if (i != (filteredCases.length - 1)) {\n      left += `(${cond} ? ${value} : `;\n      right += \")\";\n    } else {\n      left += `${value}`;\n    }\n  }\n  return left + right;\n};\n\nconst formatGroup = (item, config, meta, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n  const field = properties.get(\"field\");\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n  const not = properties.get(\"not\");\n\n  const isRuleGroup = type === \"rule_group\";\n  const isRuleGroupArray = isRuleGroup && mode != \"struct\";\n  const groupField = isRuleGroupArray ? field : parentField;\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const isSpelArray = groupFieldDef.isSpelArray;\n  \n  // check op for reverse\n  let groupOperator = properties.get(\"operator\");\n  if (!groupOperator && (!mode || mode == \"some\")) {\n    groupOperator = \"some\";\n  }\n  const realGroupOperator = checkOp(config, groupOperator, field);\n  const isGroupOpRev = realGroupOperator != groupOperator;\n  const realGroupOperatorDefinition = groupOperator && getOperatorConfig(config, realGroupOperator, field) || null;\n  const isGroup0 = isRuleGroup && (!realGroupOperator || realGroupOperatorDefinition.cardinality == 0);\n  \n  // build value for aggregation op\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, realGroupOperator, parentField, null\n  );\n  \n  // build filter in aggregation\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n\n  if (isRuleGroupArray && !isGroup0) {\n    // \"count\" rule can have no \"having\" children, but should have number value\n    if (formattedValue == undefined)\n      return undefined;\n  } else {\n    if (!list.size)\n      return undefined;\n  }\n\n  const omitBrackets = isRuleGroup;\n  const filter = list.size ? conjunctionDefinition.spelFormatConj(list, conjunction, not, omitBrackets) : null;\n\n  // build result\n  let ret;\n  if (isRuleGroupArray) {\n    const formattedField = formatField(meta, config, field, parentField);\n    const getSize = isSpelArray ? \".length\" : \".size()\";\n    const fullSize = `${formattedField}${getSize}`;\n    // https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions-collection-selection\n    const filteredSize = filter ? `${formattedField}.?[${filter}]${getSize}` : fullSize;\n    const groupValue = isGroup0 ? fullSize : formattedValue;\n    // format expression\n    ret = formatExpression(\n      meta, config, properties, filteredSize, groupValue, realGroupOperator, valueSrc, valueType, isGroupOpRev\n    );\n  } else {\n    ret = filter;\n  }\n  \n  return ret;\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition) => {\n  const spelOp = operatorDefinition.spelOp;\n  if (!spelOp) return undefined;\n  const objectIsFirstArg = spelOp[0] == \"$\";\n  const isMethod = spelOp[0] == \".\" || objectIsFirstArg;\n  const isFunction = spelOp.substring(spelOp.length - 2) == \"()\";\n  const sop = isMethod ? spelOp.slice(1) : (isFunction ? spelOp.substring(0, spelOp.length - 2) : spelOp);\n  let fn;\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (isMethod)\n        return `${field}.${sop}()`;\n      else\n        return `${field} ${sop}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (objectIsFirstArg)\n        return `${values}.${sop}(${field})`;\n      else if (isFunction)\n        return `${sop}(${field}, ${values})`;\n      else if (isMethod)\n        return `${field}.${sop}(${values})`;\n      else\n        return `${field} ${sop} ${values}`;\n    };\n  }\n  return fn;\n};\n\nconst formatExpression = (meta, config, properties, formattedField, formattedValue, operator, valueSrc, valueType, isRev = false) => {\n  const field = properties.get(\"field\");\n  const opDef = getOperatorConfig(config, operator, field) || {};\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operatorOptions = properties.get(\"operatorOptions\");\n\n  //find fn to format expr\n  const fn = opDef.spelFormatOp || buildFnToFormatOp(operator, opDef);\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n\n  //format expr\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    valueSrc,\n    valueType,\n    omit(opDef, [\"formatOp\", \"mongoFormatOp\", \"sqlFormatOp\", \"jsonLogic\", \"spelFormatOp\"]),\n    operatorOptions,\n    fieldDef,\n  ];\n  let ret;\n  ret = fn.call(config.ctx, ...args);\n\n  //rev\n  if (isRev) {\n    ret = config.settings.spelFormatReverse(ret);\n  }\n\n  if (ret === undefined) {\n    meta.errors.push(`Operator ${operator} is not supported for value source ${valueSrc}`);\n  }\n\n  return ret;\n};\n\nconst checkOp = (config, operator, field) => {\n  if (!operator) return undefined;\n  let opDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = opDef.reversedOp;\n  let revOpDef = getOperatorConfig(config, reversedOp, field) || {};\n\n  let isRev = false;\n  const canFormatOp = opDef.spelOp || opDef.spelFormatOp;\n  const canFormatRevOp = revOpDef.spelOp || revOpDef.spelFormatOp;\n  if (!canFormatOp && !canFormatRevOp) {\n    return undefined;\n  }\n  if (!canFormatOp && canFormatRevOp) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [opDef, revOpDef] = [revOpDef, opDef];\n  }\n  return operator;\n};\n\nconst formatRule = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  let operator = properties.get(\"operator\");\n  if (field == null || operator == null)\n    return undefined;\n\n  // check op for reverse\n  const realOp = checkOp(config, operator, field);\n  if (!realOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  const isRev = realOp != operator;\n\n  //format value\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, realOp, parentField, null\n  );\n  if (formattedValue === undefined)\n    return undefined;\n      \n  //format field\n  const formattedField = formatField(meta, config, field, parentField);\n  \n  // format expression\n  let res = formatExpression(\n    meta, config, properties, formattedField, formattedValue, realOp, valueSrc, valueType, isRev\n  );\n  return res;\n};\n\nconst formatItemValue = (config, properties, meta, operator, parentField, expectedValueType = null) => {\n  let field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  if (expectedValueType == \"!case_value\" || iValueType && iValueType.get(0) == \"case_value\") {\n    field = \"!case_value\";\n  }\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  \n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  \n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n      const fv = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDefinition, parentField, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (!( fvalue.size < cardinality || hasUndefinedValues )) {\n      formattedValue = cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n    }\n  }\n  \n  return [\n    formattedValue, \n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n  ];\n};\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField = null, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue, parentField);\n  } else {\n    if (typeof fieldWidgetDef.spelFormatValue === \"function\") {\n      const fn = fieldWidgetDef.spelFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, [\"formatValue\", \"mongoFormatValue\", \"sqlFormatValue\", \"jsonLogic\", \"elasticSearchFormatValue\", \"spelFormatValue\"]),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, currentValue) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = spelEscape(currentValue);\n    }\n  }\n  return ret;\n};\n\nconst formatField = (meta, config, field, parentField = null) => {\n  if (!field) return;\n  const {fieldSeparator} = config.settings;\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const fieldParts = Array.isArray(field) ? field : field.split(fieldSeparator);\n  const _fieldKeys = getFieldPath(field, config, parentField);\n  const fieldPartsConfigs = getFieldPartsConfigs(field, config, parentField);\n  const formatFieldFn = config.settings.formatSpelField;\n  const fieldName = formatFieldName(field, config, meta, parentField);\n  const fieldPartsMeta = fieldPartsConfigs.map(([key, cnf, parentCnf]) => {\n    let parent;\n    if (parentCnf) {\n      if (parentCnf.type == \"!struct\" || parentCnf.type == \"!group\" && parentCnf.mode == \"struct\")\n        parent = cnf.isSpelMap ? \"map\" : \"class\";\n      else if (parentCnf.type == \"!group\")\n        parent = cnf.isSpelItemMap ? \"[map]\" : \"[class]\";\n      else\n        parent = \"class\";\n    }\n    const isSpelVariable = cnf?.isSpelVariable;\n    return {\n      key,\n      parent,\n      isSpelVariable\n    };\n  });\n  const formattedField = formatFieldFn.call(config.ctx, fieldName, parentField, fieldParts, fieldPartsMeta, fieldDefinition, config);\n  return formattedField;\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentField = null) => {\n  const funcKey = currentValue.get(\"func\");\n  const args = currentValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  const funcName = funcConfig.spelFunc || funcKey;\n\n  let formattedArgs = {};\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldDef, argConfig, null, null, parentField, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    if (formattedArgVal !== undefined) { // skip optional in the end\n      formattedArgs[argKey] = formattedArgVal;\n    }\n  }\n\n  let ret;\n  if (typeof funcConfig.spelFormatFunc === \"function\") {\n    const fn = funcConfig.spelFormatFunc;\n    const args = [\n      formattedArgs\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const args = Object.entries(formattedArgs).map(([k, v]) => v);\n    if (funcName[0] == \".\" && args.length) {\n      const [obj, ...params] = args;\n      ret = `${obj}${funcName}(${params.join(\", \")})`;\n    } else {\n      ret = `${funcName}(${args.join(\", \")})`;\n    }\n  }\n  return ret;\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig\n} from \"../utils/configUtils\";\nimport {\n  getFieldPath, getFieldPathLabels, getWidgetForFieldOp, formatFieldName\n} from \"../utils/ruleUtils\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\nimport {defaultValue} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {completeValue} from \"../utils/funcUtils\";\nimport {List, Map} from \"immutable\";\n\n\nexport const queryString = (item, config, isForDisplay = false) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const res = formatItem(item, config, meta, isForDisplay, null);\n\n  if (meta.errors.length)\n    console.warn(\"Errors while exporting to string:\", meta.errors);\n  return res;\n};\n\n\nconst formatItem = (item, config, meta, isForDisplay = false, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") ) {\n    return formatGroup(item, config, meta, isForDisplay, parentField);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta, isForDisplay, parentField);\n  }\n\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta, isForDisplay = false, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n\n  const isRuleGroup = (type === \"rule_group\");\n  // TIP: don't cut group for mode == 'struct' and don't do aggr format (maybe later)\n  const groupField = isRuleGroup && mode == \"array\" ? properties.get(\"field\") : null;\n  const canHaveEmptyChildren = isRuleGroup && mode == \"array\";\n  const not = properties.get(\"not\");\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, isForDisplay, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n\n  const conjStr = list.size ? conjunctionDefinition.formatConj(list, conjunction, not, isForDisplay) : null;\n  \n  let ret;\n  if (groupField) {\n    const aggrArgs = formatRule(item, config, meta, isForDisplay, parentField, true);\n    if (aggrArgs) {\n      const isRev = aggrArgs.pop();\n      const args = [\n        conjStr,\n        ...aggrArgs\n      ];\n      ret = config.settings.formatAggr(...args);\n      if (isRev) {\n        ret = config.settings.formatReverse(ret, null, null, null, null, isForDisplay);\n      }\n    }\n  } else {\n    ret = conjStr;\n  }\n\n  return ret;\n};\n\n\nconst formatItemValue = (config, properties, meta, _operator, isForDisplay, parentField) => {\n  const field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operator = _operator || properties.get(\"operator\");\n  const operatorDef = getOperatorConfig(config, operator, field) || {};\n  const cardinality = defaultValue(operatorDef.cardinality, 1);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n\n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n      let fv = formatValue(\n        config, meta, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, isForDisplay, parentField, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (!( hasUndefinedValues || fvalue.size < cardinality )) {\n      formattedValue = (cardinality == 1 ? fvalue.first() : fvalue);\n    }\n  }\n\n  return [\n    formattedValue, \n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n  ];\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition) => {\n  const fop = operatorDefinition.labelForFormat || operator;\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  let fn;\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} ${fop}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} ${fop} ${values}`;\n    };\n  } else if (cardinality == 2) {\n    // between\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const valFrom = values.first();\n      const valTo = values.get(1);\n      return `${field} ${fop} ${valFrom} AND ${valTo}`;\n    };\n  }\n  return fn;\n};\n\nconst formatRule = (item, config, meta, isForDisplay = false, parentField = null, returnArgs = false) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  let operator = properties.get(\"operator\");\n  let operatorOptions = properties.get(\"operatorOptions\");\n  if (field == null || operator == null)\n    return undefined;\n  \n  const fieldDef = getFieldConfig(config, field) || {};\n  let operatorDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDef.reversedOp;\n  let revOperatorDef = getOperatorConfig(config, reversedOp, field) || {};\n  \n  //check op\n  let isRev = false;\n  let fn = operatorDef.formatOp;\n  if (!fn && reversedOp) {\n    fn = revOperatorDef.formatOp;\n    if (fn) {\n      isRev = true;\n      [operator, reversedOp] = [reversedOp, operator];\n      [operatorDef, revOperatorDef] = [revOperatorDef, operatorDef];\n    }\n  }\n\n  //find fn to format expr\n  if (!fn)\n    fn = buildFnToFormatOp(operator, operatorDef);\n  if (!fn)\n    return undefined;\n\n  //format field\n  const formattedField = formatField(config, meta, field, isForDisplay, parentField);\n\n  //format value\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, operator, isForDisplay, parentField\n  );\n  if (formattedValue === undefined)\n    return undefined;\n\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    valueSrc,\n    valueType,\n    omit(operatorDef, [\"formatOp\", \"mongoFormatOp\", \"sqlFormatOp\", \"jsonLogic\", \"spelFormatOp\"]),\n    operatorOptions,\n    isForDisplay,\n    fieldDef,\n    isRev,\n  ];\n\n  if (returnArgs) {\n    return args;\n  } else {\n    //format expr\n    let ret = fn.call(config.ctx, ...args);\n\n    //rev\n    if (isRev) {\n      ret = config.settings.formatReverse(ret, operator, reversedOp, operatorDef, revOperatorDef, isForDisplay);\n    }\n\n    return ret;\n  }\n};\n\n\nconst formatValue = (config, meta, value, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, opDef, isForDisplay, parentField = null, asyncListValues) => {\n  if (value === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(config, meta, value, isForDisplay, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(config, meta, value, isForDisplay, parentField);\n  } else {\n    if (typeof fieldWidgetDef.formatValue === \"function\") {\n      const fn = fieldWidgetDef.formatValue;\n      const args = [\n        value,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, [\"formatValue\", \"mongoFormatValue\", \"sqlFormatValue\", \"jsonLogic\", \"elasticSearchFormatValue\", \"spelFormatValue\"]),\n        isForDisplay\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(opDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, value) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = value;\n    }\n  }\n  return ret;\n};\n\n\nconst formatField = (config, meta, field, isForDisplay, parentField = null, cutParentField = true) => {\n  const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n  let ret = null;\n  if (field) {\n    const fieldDefinition = getFieldConfig(config, field) || {};\n    const fieldParts = Array.isArray(field) ? field : field.split(fieldSeparator);\n    const _fieldKeys = getFieldPath(field, config);\n    const fieldPartsLabels = getFieldPathLabels(field, config, cutParentField ? parentField : null);\n    const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparatorDisplay) : null;\n    const fieldLabel2 = fieldDefinition.label2 || fieldFullLabel;\n    const formatFieldFn = config.settings.formatField;\n    const fieldName = formatFieldName(field, config, meta, cutParentField ? parentField : null, {useTableName: true});\n    ret = formatFieldFn(fieldName, fieldParts, fieldLabel2, fieldDefinition, config, isForDisplay);\n  }\n  return ret;\n};\n\n\nconst formatFunc = (config, meta, funcValue, isForDisplay, parentField = null) => {\n  const funcKey = funcValue.get(\"func\");\n  const args = funcValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  const funcName = isForDisplay && funcConfig.label || funcKey;\n\n  let formattedArgs = {};\n  let formattedArgsWithNames = {};\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue.call(config.ctx,\n      config, meta, argValue, argValueSrc, argConfig.type, fieldDef, argConfig, null, null, isForDisplay, parentField, argAsyncListValues\n    );\n    const argName = isForDisplay && argConfig.label || argKey;\n    if (formattedArgVal !== undefined) { // skip optional in the end\n      formattedArgs[argKey] = formattedArgVal;\n      formattedArgsWithNames[argName] = formattedArgVal;\n    }\n  }\n\n  let ret = null;\n  if (typeof funcConfig.formatFunc === \"function\") {\n    const fn = funcConfig.formatFunc;\n    const args = [\n      formattedArgs,\n      isForDisplay\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const argsStr = Object.entries(formattedArgsWithNames)\n      .map(([k, v]) => (isForDisplay ? `${k}: ${v}` : `${v}`))\n      .join(\", \");\n    ret = `${funcName}(${argsStr})`;\n  }\n  return ret;\n};\n","import {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\n\n\n/**\n * Converts a string representation of top_left and bottom_right cords to\n * a ES geo_point required for query\n *\n * @param {string} geoPointString - comma separated string of lat/lon coods\n * @returns {{top_left: {lon: number, lat: number}, bottom_right: {lon: number, lat: number}}} - ES geoPoint formatted object\n * @private\n */\nfunction buildEsGeoPoint(geoPointString) {\n  if (geoPointString == null) {\n    return null;\n  }\n\n  const coordsNumberArray = geoPointString.split(\",\").map(Number);\n  return {\n    top_left: {\n      lat: coordsNumberArray[0],\n      lon: coordsNumberArray[1]\n    },\n    bottom_right: {\n      lat: coordsNumberArray[2],\n      lon: coordsNumberArray[3]\n    }\n  };\n}\n\n/**\n * Converts a dateTime string from the query builder to a ES range formatted object\n *\n * @param {string} dateTime - dateTime formatted string\n * @param {string} operator - query builder operator type, see constants.js and query builder docs\n * @returns {{lt: string}|{lte: string}|{gte: string}|{gte: string, lte: string}|undefined} - ES range query parameter\n *\n * @private\n */\nfunction buildEsRangeParameters(value, operator) {\n  // -- if value is greater than 1 then we assume this is a between operator : BUG this is wrong, a selectable list can have multiple values\n  if (value.length > 1) {\n    return {\n      gte: \"\".concat(value[0]),\n      lte: \"\".concat(value[1])\n    };\n  } // -- if value is only one we assume this is a date time query for a specific day\n\n  const dateTime = value[0]; //TODO: Rethink about this part, what if someone adds a new type of opperator\n\n  //todo: move this logic into config\n  switch (operator) {\n  case \"on_date\": //todo: not used\n  case \"not_on_date\":\n  case \"equal\":\n  case \"select_equals\":\n  case \"not_equal\":\n    return {\n      gte: \"\".concat(dateTime, \"||/d\"),\n      lte: \"\".concat(dateTime, \"||+1d\")\n    };\n\n  case \"less_or_equal\":\n    return {\n      lte: \"\".concat(dateTime)\n    };\n\n  case \"greater_or_equal\":\n    return {\n      gte: \"\".concat(dateTime)\n    };\n\n  case \"less\":\n    return {\n      lt: \"\".concat(dateTime)\n    };\n\n  case \"greater\":\n    return {\n      gt: \"\".concat(dateTime)\n    };\n\n  default:\n    return undefined;\n  }\n}\n\n/**\n * Builds the DSL parameters for a Wildcard query\n *\n * @param {string} value - The match value\n * @returns {{value: string}} - The value = value parameter surrounded with * on each end\n * @private\n */\nfunction buildEsWildcardParameters(value) {\n  return {\n    value: \"*\" + value + \"*\"\n  };\n}\n\n/**\n * Takes the match type string from awesome query builder like 'greater_or_equal' and\n * returns the ES occurrence required for bool queries\n *\n * @param {string} combinator - query group type or rule condition\n * @param {bool} not\n * @returns {string} - ES occurrence type. See constants.js\n * @private\n */\nfunction determineOccurrence(combinator, not) {\n  //todo: move into config, like mongoConj\n  switch (combinator) {\n  case \"AND\":\n    return not ? \"must_not\" : \"must\";\n    // -- AND\n\n  case \"OR\":\n    return not ? \"should_not\" : \"should\";\n    // -- OR\n\n  case \"NOT\":\n    return not ? \"must\" : \"must_not\";\n    // -- NOT AND\n\n  default:\n    return undefined;\n  }\n}\n\n/**\n * Determines what field to query off of given the operator type\n *\n * @param {string} fieldDataType - The type of data\n * @param {string} fullFieldName - A '.' separated string containing the property lineage (including self)\n * @param {string} queryType - The query type\n * @returns {string|*} - will be either the fullFieldName or fullFieldName.keyword\n * @private\n */\n//todo: not used\n// function determineQueryField(fieldDataType, fullFieldName, queryType) {\n//   if (fieldDataType === \"boolean\") {\n//     return fullFieldName;\n//   }\n\n//   switch (queryType) {\n//   case \"term\":\n//   case \"wildcard\":\n//     return \"\".concat(fullFieldName, \".keyword\");\n\n//   case \"geo_bounding_box\":\n//   case \"range\":\n//   case \"match\":\n//     return fullFieldName;\n\n//   default:\n//     console.error(\"Can't determine query field for query type \".concat(queryType));\n//     return null;\n//   }\n// }\n\nfunction buildRegexpParameters(value) {\n  return {\n    value: value\n  };\n}\n\nfunction determineField(fieldName, config) {\n  //todo: ElasticSearchTextField - not used\n  //return config.fields[fieldName].ElasticSearchTextField || fieldName;\n  return fieldName;\n}\n\nfunction buildParameters(queryType, value, operator, fieldName, config, syntax) {\n  const textField = determineField(fieldName, config);\n  switch (queryType) {\n  case \"filter\":\n    //todo: elasticSearchScript - not used\n    return {\n      script: config.operators[operator].elasticSearchScript(fieldName, value)\n    };\n\n  case \"exists\":\n    return { field: fieldName };\n\n  case \"match\":\n    return { [textField]: value[0] };\n\n  case \"term\":\n    return syntax === ES_7_SYNTAX\n      ? { [fieldName]: {\n        value: value[0]\n      }} : { [fieldName]: value[0] };\n\n  //todo: not used\n  // need to add geo type into RAQB or remove this code\n  case \"geo_bounding_box\":\n    return { [fieldName]: buildEsGeoPoint(value[0]) };\n\n  case \"range\":\n    return { [fieldName]: buildEsRangeParameters(value, operator) };\n\n  case \"wildcard\":\n    return { [fieldName]: buildEsWildcardParameters(value[0]) };\n\n  case \"regexp\":\n    return { [fieldName]: buildRegexpParameters(value[0]) };\n\n  default:\n    return undefined;\n  }\n}\n/**\n * Handles the building of the group portion of the DSL\n *\n * @param {string} fieldName - The name of the field you are building a rule for\n * @param {string} fieldDataType - The type of data this field holds\n * @param {string} value - The value of this rule\n * @param {string} operator - The condition on how the value is matched\n * @param {string} syntax - The version of ElasticSearch syntax to generate\n * @returns {object} - The ES rule\n * @private\n */\nfunction buildEsRule(fieldName, value, operator, config, valueSrc, syntax) {\n  if (!fieldName || !operator || value == undefined)\n    return undefined; // rule is not fully entered\n  let op = operator;\n  let opConfig = config.operators[op];\n  if (!opConfig)\n    return undefined; // unknown operator\n  let { elasticSearchQueryType } = opConfig;\n\n  // not\n  let not = false;\n  if (!elasticSearchQueryType && opConfig.reversedOp) {\n    not = true;\n    op = opConfig.reversedOp;\n    opConfig = config.operators[op];\n    ({ elasticSearchQueryType } = opConfig);\n  }\n  \n  // handle if value 0 has multiple values like a select in a array\n  const widget = getWidgetForFieldOp(config, fieldName, op, valueSrc);\n  const widgetConfig = config.widgets[widget];\n  if (!widgetConfig)\n    return undefined; // unknown widget\n  const { elasticSearchFormatValue } = widgetConfig;\n\n  /** In most cases the queryType will be static however in some casese (like between) the query type will change\n   * based on the data type. i.e. a between time will be different than between number, date, letters etc... */\n  let queryType;\n  if (typeof elasticSearchQueryType === \"function\") {\n    queryType = elasticSearchQueryType(widget);\n  } else {\n    queryType = elasticSearchQueryType;\n  }\n\n  if (!queryType) {\n    // Not supported\n    return undefined;\n  }\n\n  /** If a widget has a rule on how to format that data then use that otherwise use default way of determineing search parameters\n   * */\n  let parameters;\n  if (typeof elasticSearchFormatValue === \"function\") {\n    parameters = elasticSearchFormatValue(queryType, value, op, fieldName, config);\n  } else {\n    parameters = buildParameters(queryType, value, op, fieldName, config, syntax);\n  }\n\n  if (not) {\n    return {\n      bool: {\n        must_not: {\n          [queryType]: {...parameters}\n        }\n      }\n    };\n  } else {\n    return {\n      [queryType]: {...parameters}\n    };\n  }\n}\n\n/**\n * Handles the building of the group portion of the DSL\n *\n * @param {object} children - The contents of the group\n * @param {string} conjunction - The way the contents of the group are joined together i.e. AND OR\n * @param {bool} not\n * @param {Function} recursiveFxn - The recursive fxn to build the contents of the groups children\n * @private\n * @returns {object} - The ES group\n */\nfunction buildEsGroup(children, conjunction, not, recursiveFxn, config, syntax) {\n  if (!children || !children.size)\n    return undefined;\n  const childrenArray = children.valueSeq().toArray();\n  const occurrence = determineOccurrence(conjunction, not);\n  const result = childrenArray.map((c) => recursiveFxn(c, config, syntax)).filter(v => v !== undefined);\n  if (!result.length)\n    return undefined;\n  const resultFlat = result.flat(Infinity);\n  return {\n    bool: {\n      [occurrence]: resultFlat\n    }\n  };\n}\n\nexport const ES_7_SYNTAX = \"ES_7_SYNTAX\";\nexport const ES_6_SYNTAX = \"ES_6_SYNTAX\";\n\nexport function elasticSearchFormat(tree, config, syntax = ES_6_SYNTAX) {\n  // -- format the es dsl here\n  if (!tree) return undefined;\n  const type = tree.get(\"type\");\n  const properties = tree.get(\"properties\") || new Map();\n\n  if (type === \"rule\" && properties.get(\"field\")) {\n    // -- field is null when a new blank rule is added\n    const operator = properties.get(\"operator\");\n    const field = properties.get(\"field\");\n    const value = properties.get(\"value\").toJS();\n    const _valueType = properties.get(\"valueType\")?.get(0);\n    const valueSrc = properties.get(\"valueSrc\")?.get(0);\n\n    if (valueSrc === \"func\") {\n      // -- elastic search doesn't support functions (that is post processing)\n      return;\n    }\n\n    if (value && Array.isArray(value[0])) {\n      //TODO : Handle case where the value has multiple values such as in the case of a list\n      return value[0].map((val) =>\n        buildEsRule(field, [val], operator, config, valueSrc, syntax)\n      );\n    } else {\n      return buildEsRule(field, value, operator, config, valueSrc, syntax);\n    }\n  }\n\n  if (type === \"group\" || type === \"rule_group\") {\n    const not = properties.get(\"not\");\n    let conjunction = properties.get(\"conjunction\");\n    if (!conjunction)\n      conjunction = defaultConjunction(config);\n    const children = tree.get(\"children1\");\n    return buildEsGroup(children, conjunction, not, elasticSearchFormat, config, syntax);\n  }\n}\n","import Immutable, { fromJS, Map } from \"immutable\";\nimport {validateTree} from \"../utils/validation\";\nimport {extendConfig} from \"../utils/configUtils\";\nimport {getTreeBadFields, getLightTree} from \"../utils/treeUtils\";\nimport {isJsonLogic} from \"../utils/stuff\";\n\nexport const getTree = (immutableTree, light = true, children1AsArray = true) => {\n  if (!immutableTree) return undefined;\n  let tree = immutableTree;\n  tree = tree.toJS();\n  if (light)\n    tree = getLightTree(tree, children1AsArray);\n  return tree;\n};\n\nexport const loadTree = (serTree) => {\n  if (isImmutableTree(serTree)) {\n    return serTree;\n  } else if (isTree(serTree)) {\n    return jsTreeToImmutable(serTree);\n  } else if (typeof serTree == \"string\" && serTree.startsWith('[\"~#iM\"')) {\n    //tip: old versions of RAQB were saving tree with `transit.toJSON()`\n    // https://github.com/ukrbublik/react-awesome-query-builder/issues/69\n    throw \"You are trying to load query in obsolete serialization format (Immutable string) which is not supported in versions starting from 2.1.17\";\n  } else if (typeof serTree == \"string\") {\n    return jsTreeToImmutable(JSON.parse(serTree));\n  } else throw \"Can't load tree!\";\n};\n\nexport const checkTree = (tree, config) => {\n  if (!tree) return undefined;\n  const extendedConfig = extendConfig(config, undefined, true);\n  return validateTree(tree, null, extendedConfig, extendedConfig);\n};\n\nexport const isValidTree = (tree) => {\n  return getTreeBadFields(tree).length == 0;\n};\n\nexport const isImmutableTree = (tree) => {\n  return Map.isMap(tree);\n};\n\nexport const isTree = (tree) => {\n  return typeof tree == \"object\" && (tree.type == \"group\" || tree.type == \"switch_group\");\n};\n\nexport {isJsonLogic};\n\nfunction jsTreeToImmutable(tree) {\n  return fromJS(tree, function (key, value) {\n    let outValue;\n    if (key == \"properties\") {\n      outValue = value.toOrderedMap();\n\n      // `value` should be undefined instead of null\n      // JSON doesn't support undefined and replaces undefined -> null\n      // So fix: null -> undefined\n      for (let i = 0 ; i < 2 ; i++) {\n        if (outValue.get(\"value\")?.get(i) === null) {\n          outValue = outValue.setIn([\"value\", i], undefined);\n        }\n      }\n    } else if (key == \"value\" && Immutable.Iterable.isIndexed(value)) {\n      outValue = value.map(v => {\n        const vJs = v?.toJS?.();\n        if (vJs?.func) {\n          return v.toOrderedMap();\n        } else if(v?.toJS) {\n          // for values of multiselect use Array instead of List\n          return vJs;\n        } else {\n          return v;\n        }\n      }).toList();\n    } else if (key == \"asyncListValues\") {\n      // keep in JS format\n      outValue = value.toJS();\n    } else if (key == \"children1\" && Immutable.Iterable.isIndexed(value)) {\n      outValue = new Immutable.OrderedMap(value.map(child => [child.get(\"id\"), child]));\n    } else {\n      outValue = Immutable.Iterable.isIndexed(value) ? value.toList() : value.toOrderedMap();\n    }\n    return outValue;\n  });\n}\n\n","import uuid from \"../utils/uuid\";\nimport {defaultValue, isJsonLogic, shallowEqual, logger} from \"../utils/stuff\";\nimport {getFieldConfig, extendConfig, normalizeField} from \"../utils/configUtils\";\nimport {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {loadTree} from \"./tree\";\nimport {defaultConjunction, defaultGroupConjunction} from \"../utils/defaultUtils\";\n\nimport moment from \"moment\";\n\n// http://jsonlogic.com/\n\n// helpers\nconst arrayUniq = (arr) => Array.from(new Set(arr));\nconst arrayToObject = (arr) => arr.reduce((acc, [f, fc]) => ({ ...acc, [f]: fc }), {});\n\nexport const loadFromJsonLogic = (logicTree, config) => {\n  return _loadFromJsonLogic(logicTree, config, false);\n};\n\nexport const _loadFromJsonLogic = (logicTree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n  const extendedConfig = extendConfig(config, undefined, false);\n  const conv = buildConv(extendedConfig);\n  let jsTree = logicTree ? convertFromLogic(logicTree, conv, extendedConfig, \"rule\", meta) : undefined;\n  if (jsTree && jsTree.type != \"group\") {\n    jsTree = wrapInDefaultConj(jsTree, extendedConfig);\n  }\n  const immTree = jsTree ? loadTree(jsTree) : undefined;\n\n  if (returnErrors) {\n    return [immTree, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while importing from JsonLogic:\", meta.errors);\n    return immTree;\n  }\n};\n\n\nconst buildConv = (config) => {\n  let operators = {};\n  for (let opKey in config.operators) {\n    const opConfig = config.operators[opKey];\n    if (typeof opConfig.jsonLogic == \"string\") {\n      // example: \"</2\", \"#in/1\"\n      const opk = (opConfig._jsonLogicIsRevArgs ? \"#\" : \"\") + opConfig.jsonLogic + \"/\" + defaultValue(opConfig.cardinality, 1);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    } else if(typeof opConfig.jsonLogic2 == \"string\") {\n      // example: all-in/1\"\n      const opk = opConfig.jsonLogic2 + \"/\" + defaultValue(opConfig.cardinality, 1);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    }\n  }\n\n  let conjunctions = {};\n  for (let conjKey in config.conjunctions) {\n    const conjunctionDefinition = config.conjunctions[conjKey];\n    const ck = conjunctionDefinition.jsonLogicConj || conjKey.toLowerCase();\n    conjunctions[ck] = conjKey;\n  }\n\n  let funcs = {};\n  for (let funcKey in config.funcs) {\n    const funcConfig = config.funcs[funcKey];\n    let fk;\n    if (funcConfig.jsonLogicIsMethod) {\n      fk = \"#\" + funcConfig.jsonLogic;\n    } else if (typeof funcConfig.jsonLogic == \"string\") {\n      fk = funcConfig.jsonLogic;\n    }\n    if (fk) {\n      if (!funcs[fk])\n        funcs[fk] = [];\n      funcs[fk].push(funcKey);\n    }\n  }\n\n  const {groupVarKey, altVarKey} = config.settings.jsonLogic;\n\n  return {\n    operators,\n    conjunctions,\n    funcs,\n    varKeys: [\"var\", groupVarKey, altVarKey],\n  };\n};\n\n\nconst convertFromLogic = (logic, conv, config, expectedType, meta, not = false, fieldConfig, widget, parentField = null, _isLockedLogic = false) => {\n  let op, vals;\n  if (isJsonLogic(logic)) {\n    op = Object.keys(logic)[0];\n    vals = logic[op];\n    if (!Array.isArray(vals))\n      vals = [ vals ];\n  }\n  \n  let ret;\n  let beforeErrorsCnt = meta.errors.length;\n\n  const {lockedOp} = config.settings.jsonLogic;\n  const isEmptyOp = op == \"!\" && (vals.length == 1 && vals[0] && isJsonLogic(vals[0]) && conv.varKeys.includes(Object.keys(vals[0])[0]));\n  const isRev = op == \"!\" && !isEmptyOp;\n  const isLocked = lockedOp && op == lockedOp;\n  if (isLocked) {\n    ret = convertFromLogic(vals[0], conv, config, expectedType, meta, not, fieldConfig, widget, parentField, true);\n  } else if (isRev) {\n    // reverse with not\n    ret = convertFromLogic(vals[0], conv, config, expectedType, meta, !not, fieldConfig, widget, parentField);\n  } else if(expectedType == \"val\") {\n    // not is not used here\n    ret = convertField(op, vals, conv, config, not, meta, parentField) \n      || convertFunc(op, vals, conv, config, not, fieldConfig, meta, parentField) \n      || convertVal(logic, fieldConfig, widget, config, meta);\n  } else if(expectedType == \"rule\") {\n    ret = convertConj(op, vals, conv, config, not, meta, parentField, false) \n    || convertOp(op, vals, conv, config, not, meta, parentField);\n  }\n\n  let afterErrorsCnt = meta.errors.length;\n  if (op != \"!\" && ret === undefined && afterErrorsCnt == beforeErrorsCnt) {\n    meta.errors.push(`Can't parse logic ${JSON.stringify(logic)}`);\n  }\n\n  if (isLocked) {\n    ret.properties.isLocked = true;\n  }\n\n  return ret;\n};\n\n\nconst convertVal = (val, fieldConfig, widget, config, meta) => {\n  if (val === undefined) return undefined;\n  const widgetConfig = config.widgets[widget || fieldConfig.mainWidget];\n\n  if (!widgetConfig) {\n    meta.errors.push(`No widget for type ${fieldConfig.type}`);\n    return undefined;\n  }\n\n  if (isJsonLogic(val)) {\n    meta.errors.push(`Unexpected logic in value: ${JSON.stringify(val)}`);\n    return undefined;\n  }\n\n  // number of seconds -> time string\n  if (fieldConfig && fieldConfig.type == \"time\" && typeof val == \"number\") {\n    const [h, m, s] = [Math.floor(val / 60 / 60) % 24, Math.floor(val / 60) % 60, val % 60];\n    const valueFormat = widgetConfig.valueFormat;\n    if (valueFormat) {\n      const dateVal = new Date(val);\n      dateVal.setMilliseconds(0);\n      dateVal.setHours(h);\n      dateVal.setMinutes(m);\n      dateVal.setSeconds(s);\n      val = moment(dateVal).format(valueFormat);\n    } else {\n      val = `${h}:${m}:${s}`;\n    }\n  }\n\n  // \"2020-01-08T22:00:00.000Z\" -> Date object\n  if (fieldConfig && [\"date\", \"datetime\"].includes(fieldConfig.type) && val && !(val instanceof Date)) {\n    try {\n      const dateVal = new Date(val);\n      if (dateVal instanceof Date && dateVal.toISOString() === val) {\n        val = dateVal;\n      }\n    } catch(e) {\n      meta.errors.push(`Can't convert value ${val} as Date`);\n      val = undefined;\n    }\n  }\n\n  // Date object -> formatted string\n  if (val instanceof Date && fieldConfig) {\n    const valueFormat = widgetConfig.valueFormat;\n    if (valueFormat) {\n      val = moment(val).format(valueFormat);\n    }\n  }\n\n  let asyncListValues;\n  if (val && fieldConfig.fieldSettings && fieldConfig.fieldSettings.asyncFetch) {\n    const vals = Array.isArray(val) ? val : [val];\n    asyncListValues = vals;\n  }\n\n  return {\n    valueSrc: \"value\",\n    value: val,\n    valueType: widgetConfig.type,\n    asyncListValues\n  };\n};\n\n\nconst convertField = (op, vals, conv, config, not, meta, parentField = null) => {\n  const {fieldSeparator} = config.settings;\n  if (conv.varKeys.includes(op) && typeof vals[0] == \"string\") {\n    let field = vals[0];\n    if (parentField)\n      field = [parentField, field].join(fieldSeparator);\n    field = normalizeField(config, field);\n    const fieldConfig = getFieldConfig(config, field);\n    if (!fieldConfig) {\n      meta.errors.push(`No config for field ${field}`);\n      return undefined;\n    }\n\n    return {\n      valueSrc: \"field\",\n      value: field,\n      valueType: fieldConfig.type,\n    };\n  }\n\n  return undefined;\n};\n\n\nconst convertFunc = (op, vals, conv, config, not, fieldConfig, meta, parentField = null) => {\n  if (!op) return undefined;\n  let func, argsArr, funcKey;\n  const jsonLogicIsMethod = (op == \"method\");\n  if (jsonLogicIsMethod) {\n    let obj, opts;\n    [obj, func, ...opts] = vals;\n    argsArr = [obj, ...opts];\n  } else {\n    func = op;\n    argsArr = vals;\n  }\n\n  const fk = (jsonLogicIsMethod ? \"#\" : \"\") + func;\n  const funcKeys = (conv.funcs[fk] || []).filter(k => \n    (fieldConfig ? config.funcs[k].returnType == fieldConfig.type : true)\n  );\n  if (funcKeys.length) {\n    funcKey = funcKeys[0];\n  } else {\n    const v = {[op]: vals};\n    for (const [f, fc] of Object.entries(config.funcs || {})) {\n      if (fc.jsonLogicImport && fc.returnType == fieldConfig.type) {\n        let parsed;\n        try {\n          parsed = fc.jsonLogicImport(v);\n        } catch(_e) {\n          // given expression `v` can't be parsed into function\n        }\n        if (parsed) {\n          funcKey = f;\n          argsArr = parsed;\n        }\n      }\n    }\n  }\n  if (!funcKey)\n    return undefined;\n\n  if (funcKey) {\n    const funcConfig = config.funcs[funcKey];\n    const argKeys = Object.keys(funcConfig.args || {});\n    let args = argsArr.reduce((acc, val, ind) => {\n      const argKey = argKeys[ind];\n      const argConfig = funcConfig.args[argKey];\n      let argVal = convertFromLogic(val, conv, config, \"val\", meta, false, argConfig, null, parentField);\n      if (argVal === undefined) {\n        argVal = argConfig.defaultValue;\n        if (argVal === undefined) {\n          meta.errors.push(`No value for arg ${argKey} of func ${funcKey}`);\n          return undefined;\n        }\n      }\n      return {...acc, [argKey]: argVal};\n    }, {});\n\n    return {\n      valueSrc: \"func\",\n      value: {\n        func: funcKey,\n        args: args\n      },\n      valueType: funcConfig.returnType,\n    };\n  }\n\n  return undefined;\n};\n\n\nconst convertConj = (op, vals, conv, config, not, meta, parentField = null, isRuleGroup = false) => {\n  const conjKey = conv.conjunctions[op];\n  const {fieldSeparator} = config.settings;\n  const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n  const isParentGroup = parentFieldConfig?.type == \"!group\";\n  if (conjKey) {\n    let type = \"group\";\n    const children = vals\n      .map(v => convertFromLogic(v, conv, config, \"rule\", meta, false, null, null, parentField))\n      .filter(r => r !== undefined)\n      .reduce((acc, r) => ({...acc, [r.id] : r}), {});\n    const complexFields = Object.values(children)\n      .map(v => v?.properties?.field)\n      .filter(f => f && f.includes(fieldSeparator));\n    const complexFieldsGroupAncestors = Object.fromEntries(\n      arrayUniq(complexFields).map(f => {\n        const parts = f.split(fieldSeparator);\n        const ancs = Object.fromEntries(\n          parts.slice(0, -1)\n            .map((f, i, parts) => [...parts.slice(0, i), f])\n            .map(fp => [fp.join(fieldSeparator), getFieldConfig(config, fp)])\n            .filter(([_f, fc]) => fc.type == \"!group\")\n        );\n        return [f, Object.keys(ancs)];\n      })\n    );\n    const childrenInRuleGroup = Object.values(children)\n      .map(v => v?.properties?.field)\n      .map(f => complexFieldsGroupAncestors[f])\n      .filter(ancs => ancs && ancs.length);\n    const usedRuleGroups = arrayUniq(Object.values(complexFieldsGroupAncestors).flat());\n    const usedTopRuleGroups = topLevelFieldsFilter(usedRuleGroups);\n    \n    let properties = {\n      conjunction: conjKey,\n      not: not\n    };\n    const id = uuid();\n\n    let children1 = {};\n    let groupToId = {};\n    Object.entries(children).map(([k, v]) => {\n      if (v.type == \"group\" || v.type == \"rule_group\") {\n        // put as-is\n        children1[k] = v;\n      } else {\n        const field = v?.properties?.field;\n        const groupAncestors = complexFieldsGroupAncestors[field] || [];\n        const groupField = groupAncestors[groupAncestors.length - 1];\n        if (!groupField) {\n          // not in rule_group (can be simple field or in struct) - put as-is\n          children1[k] = v;\n        } else {\n          // wrap field in rule_group (with creating hierarchy if need)\n          let ch = children1;\n          let parentFieldParts = parentField ? parentField.split(fieldSeparator) : [];\n          const isInParent = shallowEqual(parentFieldParts, groupField.split(fieldSeparator).slice(0, parentFieldParts.length));\n          if (!isInParent)\n            parentFieldParts = []; // should not be\n          const traverseGroupFields = groupField\n            .split(fieldSeparator)\n            .slice(parentFieldParts.length)\n            .map((f, i, parts) => [...parentFieldParts, ...parts.slice(0, i), f].join(fieldSeparator))\n            .map(f => normalizeField(config, f))\n            .map((f) => ({f, fc: getFieldConfig(config, f) || {}}))\n            .filter(({fc}) => (fc.type != \"!struct\"));\n          traverseGroupFields.map(({f: gf, fc: gfc}, i) => {\n            let groupId = groupToId[gf];\n            if (!groupId) {\n              groupId = uuid();\n              groupToId[gf] = groupId;\n              ch[groupId] = {\n                type: \"rule_group\",\n                id: groupId,\n                children1: {},\n                properties: {\n                  conjunction: conjKey,\n                  not: false,\n                  field: gf,\n                  mode: gfc.mode,\n                }\n              };\n            }\n            ch = ch[groupId].children1;\n          });\n          ch[k] = v;\n        }\n      }\n    });\n\n    // tip: for isRuleGroup=true correct type and properties will be set out of this func\n\n    return {\n      type: type,\n      id: id,\n      children1: children1,\n      properties: properties\n    };\n  }\n\n  return undefined;\n};\n\n\nconst topLevelFieldsFilter = (fields) => {\n  let arr = [...fields].sort((a, b) => (a.length - b.length));\n  for (let i = 0 ; i < arr.length ; i++) {\n    for (let j = i + 1 ; j < arr.length ; j++) {\n      if (arr[j].indexOf(arr[i]) == 0) {\n        // arr[j] is inside arr[i] (eg. \"a.b\" inside \"a\")\n        arr.splice(j, 1);\n        j--;\n      }\n    }\n  }\n  return arr;\n};\n\nconst wrapInDefaultConjRuleGroup = (rule, parentField, parentFieldConfig, config, conj) => {\n  if (!rule) return undefined;\n  return {\n    type: \"rule_group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: conj || defaultGroupConjunction(config, parentFieldConfig),\n      not: false,\n      field: parentField,\n    }\n  };\n};\n\nconst wrapInDefaultConj = (rule, config, not = false) => {\n  return {\n    type: \"group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: defaultConjunction(config),\n      not: not\n    }\n  };\n};\n\nconst parseRule = (op, arity, vals, parentField, conv, config, meta) => {\n  let errors = [];\n  let res = _parseRule(op, arity, vals, parentField, conv, config, errors, false) \n         || _parseRule(op, arity, vals, parentField, conv, config, errors, true) ;\n\n  if (!res) {\n    meta.errors.push(errors.join(\"; \") || `Unknown op ${op}/${arity}`);\n    return undefined;\n  }\n  \n  return res;\n};\n\nconst _parseRule = (op, arity, vals, parentField, conv, config, errors, isRevArgs) => {\n  // config.settings.groupOperators are used for group count (cardinality = 0 is exception)\n  // but don't confuse with \"all-in\" or \"some-in\" for multiselect\n  const isAllOrSomeInForMultiselect = (op == \"all\" || op == \"some\") && isJsonLogic(vals[1]) && Object.keys(vals[1])[0] == \"in\";\n  const isGroup0 = !isAllOrSomeInForMultiselect && config.settings.groupOperators.includes(op);\n  const eqOps = [\"==\", \"!=\"];\n  let cardinality = isGroup0 ? 0 : arity - 1;\n  if (isGroup0)\n    cardinality = 0;\n  else if (eqOps.includes(op) && cardinality == 1 && vals[1] === null) {\n    arity = 1;\n    cardinality = 0;\n    vals = [vals[0]];\n  }\n\n  const opk = op + \"/\" + cardinality;\n  const {fieldSeparator} = config.settings;\n  let opKeys = conv.operators[(isRevArgs ? \"#\" : \"\") + opk];\n  if (!opKeys)\n    return;\n  \n  let jlField, args = [];\n  const rangeOps = [\"<\", \"<=\", \">\", \">=\"];\n  if (rangeOps.includes(op) && arity == 3) {\n    jlField = vals[1];\n    args = [ vals[0], vals[2] ];\n  } else if (isRevArgs) {\n    jlField = vals[1];\n    args = [ vals[0] ];\n  } else {\n    [jlField, ...args] = vals;\n  }\n\n  if (!isJsonLogic(jlField)) {\n    errors.push(`Incorrect operands for ${op}: ${JSON.stringify(vals)}`);\n    return;\n  }\n  let k = Object.keys(jlField)[0];\n  let v = Object.values(jlField)[0];\n  \n  let field, having, isGroup;\n  if (conv.varKeys.includes(k) && typeof v == \"string\") {\n    field = v;\n  }\n  if (isGroup0) {\n    isGroup = true;\n    having = args[0];\n    args = [];\n  }\n  // reduce/filter for group ext\n  if (k == \"reduce\" && Array.isArray(v) && v.length == 3) {\n    let [filter, acc, init] = v;\n    if (isJsonLogic(filter) && init == 0 && isJsonLogic(acc) && Array.isArray(acc[\"+\"]) && acc[\"+\"][0] == 1 && isJsonLogic(acc[\"+\"][1]) && acc[\"+\"][1][\"var\"] == \"accumulator\") {\n      k = Object.keys(filter)[0];\n      v = Object.values(filter)[0];\n      if (k == \"filter\") {\n        let [group, filter] = v;\n        if (isJsonLogic(group)) {\n          k = Object.keys(group)[0];\n          v = Object.values(group)[0];\n          if (conv.varKeys.includes(k) && typeof v == \"string\") {\n            field = v;\n            having = filter;\n            isGroup = true;\n          }\n        }\n      } else if (conv.varKeys.includes(k) && typeof v == \"string\") {\n        field = v;\n        isGroup = true;\n      }\n    }\n  }\n  \n  if (!field) {\n    errors.push(`Unknown field ${JSON.stringify(jlField)}`);\n    return;\n  }\n  if (parentField)\n    field = [parentField, field].join(fieldSeparator);\n  field = normalizeField(config, field);\n\n  const fieldConfig = getFieldConfig(config, field);\n  if (!fieldConfig) {\n    errors.push(`No config for field ${field}`);\n    return;\n  }\n\n  let opKey = opKeys[0];\n  if (opKeys.length > 1 && fieldConfig && fieldConfig.operators) {\n    // eg. for \"equal\" and \"select_equals\"\n    opKeys = opKeys\n      .filter(k => fieldConfig.operators.includes(k));\n    if (opKeys.length == 0) {\n      errors.push(`No corresponding ops for field ${field}`);\n      return;\n    }\n    opKey = opKeys[0];\n  }\n  \n  return {\n    field, fieldConfig, opKey, args, having\n  };\n};\n\nconst convertOp = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (!op) return undefined;\n\n  const arity = vals.length;\n  if ((op == \"all\" || op == \"some\") && isJsonLogic(vals[1])) {\n    // special case for \"all-in\" and \"some-in\"\n    const op2 = Object.keys(vals[1])[0];\n    if (op2 == \"in\") {\n      vals = [\n        vals[0],\n        vals[1][op2][1]\n      ];\n      op = op + \"-\" + op2; // \"all-in\" and \"some-in\"\n    }\n  }\n\n  const parseRes = parseRule(op, arity, vals, parentField, conv, config, meta);\n  if (!parseRes) return undefined;\n  let {field, fieldConfig, opKey, args, having} = parseRes;\n  let opConfig = config.operators[opKey];\n\n  // Group component in array mode can show NOT checkbox, so do nothing in this case\n  // Otherwise try to revert\n  const showNot = fieldConfig.showNot !== undefined ? fieldConfig.showNot : config.settings.showNot; \n  let canRev = true;\n  // if (fieldConfig.type == \"!group\" && fieldConfig.mode == \"array\" && showNot)\n  //   canRev = false;\n\n  let conj;\n  let havingVals;\n  let havingNot = false;\n  if (fieldConfig.type == \"!group\" && having) {\n    conj = Object.keys(having)[0];\n    havingVals = having[conj];\n    if (!Array.isArray(havingVals))\n      havingVals = [ havingVals ];\n\n    // Preprocess \"!\": Try to reverse op in single rule in having\n    // Eg. use `not_equal` instead of `not` `equal`\n    const isEmptyOp = conj == \"!\" && (havingVals.length == 1 && havingVals[0] && isJsonLogic(havingVals[0]) && conv.varKeys.includes(Object.keys(havingVals[0])[0]));\n    if (conj == \"!\" && !isEmptyOp) {\n      havingNot = true;\n      having = having[\"!\"];\n      conj = Object.keys(having)[0];\n      havingVals = having[conj];\n      if (!Array.isArray(havingVals))\n        havingVals = [ havingVals ];\n    }\n  }\n\n  // Use reversed op\n  if (not && canRev && opConfig.reversedOp) {\n    not = false;\n    opKey = opConfig.reversedOp;\n    opConfig = config.operators[opKey];\n  }\n\n  const widget = getWidgetForFieldOp(config, field, opKey);\n\n  const convertedArgs = args\n    .map(v => convertFromLogic(v, conv, config, \"val\", meta, false, fieldConfig, widget, parentField));\n  if (convertedArgs.filter(v => v === undefined).length) {\n    //meta.errors.push(`Undefined arg for field ${field} and op ${opKey}`);\n    return undefined;\n  }\n\n  let res;\n\n  if (fieldConfig.type == \"!group\" && having) {\n    if (conv.conjunctions[conj] !== undefined) {\n      // group\n      res = convertConj(conj, havingVals, conv, config, havingNot, meta, field, true);\n      havingNot = false;\n    } else {\n      // need to be wrapped in `rule_group`\n      const rule = convertOp(conj, havingVals, conv, config, havingNot, meta, field);\n      havingNot = false;\n      res = wrapInDefaultConjRuleGroup(rule, field, fieldConfig, config, conv.conjunctions[\"and\"]);\n    }\n    if (!res)\n      return undefined;\n    \n    res.type = \"rule_group\";\n    Object.assign(res.properties, {\n      field: field,\n      mode: fieldConfig.mode,\n      operator: opKey,\n    });\n    if (fieldConfig.mode == \"array\") {\n      Object.assign(res.properties, {\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n      });\n    }\n    if (not) {\n      res = wrapInDefaultConj(res, config, not);\n    }\n  } else if (fieldConfig.type == \"!group\" && !having) {\n    res = {\n      type: \"rule_group\",\n      id: uuid(),\n      children1: {},\n      properties: {\n        conjunction: defaultGroupConjunction(config, fieldConfig),\n        not: not,\n        mode: fieldConfig.mode,\n        field: field,\n        operator: opKey,\n      }\n    };\n    if (fieldConfig.mode == \"array\") {\n      Object.assign(res.properties, {\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n      });\n    }\n  } else {\n    const asyncListValuesArr = convertedArgs.map(v => v.asyncListValues).filter(v => v != undefined);\n    const asyncListValues = asyncListValuesArr.length ? asyncListValuesArr[0] : undefined;\n    res = {\n      type: \"rule\",\n      id: uuid(),\n      properties: {\n        field: field,\n        operator: opKey,\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n        ...(asyncListValues ? {asyncListValues} : {}),\n      }\n    };\n    if (not) {\n      //meta.errors.push(`No rev op for ${opKey}`);\n      res = wrapInDefaultConj(res, config, not);\n    }\n  }\n\n  return res;\n};\n\n","import { SpelExpressionEvaluator } from \"spel2js\";\nimport uuid from \"../utils/uuid\";\nimport {getFieldConfig, extendConfig, normalizeField} from \"../utils/configUtils\";\nimport {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {loadTree} from \"./tree\";\nimport {defaultConjunction, defaultGroupConjunction} from \"../utils/defaultUtils\";\nimport {logger} from \"../utils/stuff\";\nimport moment from \"moment\";\n\nexport const loadFromSpel = (logicTree, config) => {\n  return _loadFromSpel(logicTree, config, true);\n};\n\nexport const _loadFromSpel = (spelStr, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n  const extendedConfig = extendConfig(config, undefined, false);\n  const conv = buildConv(extendedConfig);\n  \n  let compiledExpression;\n  let convertedObj;\n  let jsTree = undefined;\n  try {\n    const compileRes = SpelExpressionEvaluator.compile(spelStr);\n    compiledExpression = compileRes._compiledExpression;\n  } catch (e) {\n    meta.errors.push(e);\n  }\n  \n  if (compiledExpression) {\n    logger.debug(\"compiledExpression:\", compiledExpression);\n    convertedObj = convertCompiled(compiledExpression, meta);\n    logger.debug(\"convertedObj:\", convertedObj, meta);\n\n    jsTree = convertToTree(convertedObj, conv, extendedConfig, meta);\n    if (jsTree && jsTree.type != \"group\" && jsTree.type != \"switch_group\") {\n      jsTree = wrapInDefaultConj(jsTree, extendedConfig, convertedObj[\"not\"]);\n    }\n    logger.debug(\"jsTree:\", jsTree);\n  }\n\n  const immTree = jsTree ? loadTree(jsTree) : undefined;\n\n  if (returnErrors) {\n    return [immTree, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while importing from SpEL:\", meta.errors);\n    return immTree;\n  }\n};\n\nconst convertCompiled = (expr, meta, parentExpr = null) => {\n  const type = expr.getType();\n  let children = expr.getChildren().map(child => convertCompiled(child, meta, expr));\n\n  // flatize OR/AND\n  if (type == \"op-or\" || type == \"op-and\") {\n    children = children.reduce((acc, child) => {\n      const canFlatize = child.type == type && !child.not;\n      const flat = canFlatize ? child.children : [child];\n      return [...acc, ...flat];\n    }, []);\n  }\n\n  // unwrap NOT\n  if (type == \"op-not\") {\n    if (children.length != 1) {\n      meta.errors.push(`Operator NOT should have 1 child, but got ${children.length}}`);\n    }\n    return {\n      ...children[0],\n      not: !(children[0].not || false)\n    };\n  }\n\n  if (type == \"compound\") {\n    // remove `.?[true]`\n    children = children.filter(child => {\n      const isListFix = child.type == \"selection\" && child.children.length == 1 && child.children[0].type == \"boolean\" && child.children[0].val == true;\n      return !isListFix;\n    });\n    // aggregation\n    // eg. `results.?[product == 'abc'].length`\n    const selection = children.find(child => \n      child.type == \"selection\"\n    );\n    if (selection && selection.children.length != 1) {\n      meta.errors.push(`Selection should have 1 child, but got ${selection.children.length}`);\n    }\n    const filter = selection ? selection.children[0] : null;\n    const lastChild = children[children.length - 1];\n    const isSize = lastChild.type == \"method\" && lastChild.val.methodName == \"size\" \n      || lastChild.type == \"!func\" && lastChild.methodName == \"size\" ;\n    const isLength = lastChild.type == \"property\" && lastChild.val == \"length\";\n    const sourceParts = children.filter(child => \n      child !== selection && child !== lastChild\n    );\n    const source = {\n      type: \"compound\",\n      children: sourceParts\n    };\n    if (isSize || isLength) {\n      return {\n        type: \"!aggr\",\n        filter,\n        source\n      };\n    }\n    // remove `#this`, `#root`\n    children = children.filter(child => {\n      const isThis = child.type == \"variable\" && child.val == \"this\";\n      const isRoot = child.type == \"variable\" && child.val == \"root\";\n      return !(isThis || isRoot);\n    });\n    // indexer\n    children = children.map(child => {\n      if (child.type == \"indexer\" && child.children.length == 1) {\n        return {\n          type: \"indexer\", \n          val: child.children[0].val,\n          itype: child.children[0].type\n        };\n      } else {\n        return child;\n      }\n    });\n    // method\n    if (lastChild.type == \"method\") {\n      const obj = children.filter(child => \n        child !== lastChild\n      );\n      return {\n        type: \"!func\",\n        obj,\n        methodName: lastChild.val.methodName,\n        args: lastChild.val.args\n      };\n    }\n    // !func\n    if (lastChild.type == \"!func\") {\n      const obj = children.filter(child => \n        child !== lastChild\n      );\n      return {\n        ...lastChild,\n        obj,\n      };\n    }\n  }\n\n  // getRaw || getValue\n  let val;\n  try {\n    if (expr.getRaw) { // use my fork\n      val = expr.getRaw();\n    } else if (expr.getValue.length == 0) { // getValue not requires context arg -> can use\n      val = expr.getValue();\n    }\n  } catch(e) {\n    logger.error(\"[spel2js] Error in getValue()\", e);\n  }\n\n  // ternary\n  if (type == \"ternary\") {\n    val = flatizeTernary(children);\n  }\n\n  // convert method/function args\n  if (typeof val === \"object\" && val !== null) {\n    if (val.methodName || val.functionName) {\n      val.args = val.args.map(child => convertCompiled(child, meta, expr));\n    }\n  }\n  // convert list\n  if (type == \"list\") {\n    val = val.map(item => convertCompiled(item, meta, expr));\n\n    // fix whole expression wrapped in `{}`\n    if (!parentExpr && val.length == 1) {\n      return val[0];\n    }\n  }\n  // convert constructor\n  if (type == \"constructorref\") {\n    const qid = children.find(child => child.type == \"qualifiedidentifier\");\n    const cls = qid?.val;\n    if (!cls) {\n      meta.errors.push(`Can't find qualifiedidentifier in constructorref children: ${JSON.stringify(children)}`);\n      return undefined;\n    }\n    const args = children.filter(child => child.type != \"qualifiedidentifier\");\n    return {\n      type: \"!new\",\n      cls,\n      args\n    };\n  }\n  // convert type\n  if (type == \"typeref\") {\n    const qid = children.find(child => child.type == \"qualifiedidentifier\");\n    const cls = qid?.val;\n    if (!cls) {\n      meta.errors.push(`Can't find qualifiedidentifier in typeref children: ${JSON.stringify(children)}`);\n      return undefined;\n    }\n    const _args = children.filter(child => child.type != \"qualifiedidentifier\");\n    return {\n      type: \"!type\",\n      cls\n    };\n  }\n  // convert function/method\n  if (type == \"function\" || type == \"method\") {\n    // `foo()` is method, `#foo()` is function\n    // let's use common property `methodName` and just add `isVar` for function\n    const {functionName, methodName, args} = val;\n    return {\n      type: \"!func\",\n      methodName: functionName || methodName,\n      isVar: type == \"function\",\n      args\n    };\n  }\n\n  return {\n    type,\n    children,\n    val,\n  };\n};\n\nconst flatizeTernary = (children) => {\n  let flat = [];\n  function _processTernaryChildren(tern) {\n    let [cond, if_val, else_val] = tern;\n    flat.push([cond, if_val]);\n    if (else_val?.type == \"ternary\") {\n      _processTernaryChildren(else_val.children);\n    } else {\n      flat.push([undefined, else_val]);\n    }\n  }\n  _processTernaryChildren(children);\n  return flat;\n};\n\nconst buildConv = (config) => {\n  let operators = {};\n  for (let opKey in config.operators) {\n    const opConfig = config.operators[opKey];\n    if (opConfig.spelOps) {\n      // examples: \"==\", \"eq\", \".contains\", \"matches\" (can be used for starts_with, ends_with)\n      opConfig.spelOps.forEach(spelOp => {\n        const opk = spelOp; // + \"/\" + defaultValue(opConfig.cardinality, 1);\n        if (!operators[opk])\n          operators[opk] = [];\n        operators[opk].push(opKey);\n      });\n    } else if (opConfig.spelOp) {\n      const opk = opConfig.spelOp; // + \"/\" + defaultValue(opConfig.cardinality, 1);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    } else {\n      logger.log(`[spel] No spelOp for operator ${opKey}`);\n    }\n  }\n\n  let conjunctions = {};\n  for (let conjKey in config.conjunctions) {\n    const conjunctionDefinition = config.conjunctions[conjKey];\n    const ck = conjunctionDefinition.spelConj || conjKey.toLowerCase();\n    conjunctions[ck] = conjKey;\n  }\n\n  let funcs = {};\n  for (let funcKey in config.funcs) {\n    const funcConfig = config.funcs[funcKey];\n    let fk;\n    if (typeof funcConfig.spelFunc == \"string\") {\n      fk = funcConfig.spelFunc;\n    }\n    if (fk) {\n      if (!funcs[fk])\n        funcs[fk] = [];\n      funcs[fk].push(funcKey);\n    }\n  }\n\n  return {\n    operators,\n    conjunctions,\n    funcs,\n  };\n};\n\nconst convertPath = (parts, meta) => {\n  let isError = false;\n  const res = parts.map(c => {\n    if (c.type == \"variable\" || c.type == \"property\" || c.type == \"indexer\" && c.itype == \"string\") {\n      return c.val;\n    } else {\n      isError = true;\n      meta.errors.push(`Unexpected item in compound: ${JSON.stringify(c)}`);\n    }\n  });\n  return !isError ? res : undefined;\n};\n\nconst convertArg = (spel, conv, config, meta, parentSpel) => {\n  if (spel == undefined)\n    return undefined;\n  const {fieldSeparator} = config.settings;\n  const literalTypes = {\n    number: \"number\",\n    string: \"text\",\n    boolean: \"boolean\",\n    null: \"null\" // should not be\n  };\n  \n  const groupFieldParts = parentSpel?._groupField ? [parentSpel?._groupField] : [];\n  if (spel.type == \"compound\") {\n    // complex field\n    const parts = convertPath(spel.children, meta);\n    if (!parts) {\n      return undefined;\n    }\n    const fullParts = [...groupFieldParts, ...parts];\n    const isVariable = spel.children?.[0]?.type == \"variable\";\n    return {\n      valueSrc: \"field\",\n      //valueType: todo\n      isVariable,\n      value: fullParts.join(fieldSeparator),\n    };\n  } else if (spel.type == \"variable\" || spel.type == \"property\") {\n    // normal field\n    const fullParts = [...groupFieldParts, spel.val];\n    const isVariable = spel.type == \"variable\";\n    return {\n      valueSrc: \"field\",\n      //valueType: todo\n      isVariable,\n      value: fullParts.join(fieldSeparator),\n    };\n  } else if (literalTypes[spel.type]) {\n    let value = spel.val;\n    let valueType = literalTypes[spel.type];\n    if (parentSpel?.isUnary) {\n      value = -value;\n    }\n    return {\n      valueSrc: \"value\",\n      valueType,\n      value,\n    };\n  } else if (spel.type == \"list\") {\n    const values = spel.val.map(v => convertArg(v, conv, config, meta, spel));\n    const _itemType = values.length ? values[0]?.valueType : null;\n    const value = values.map(v => v?.value);\n    const valueType = \"multiselect\";\n    return {\n      valueSrc: \"value\",\n      valueType,\n      value,\n    };\n  } else if (spel.type == \"!func\") {\n    const {obj, methodName, args, isVar} = spel;\n    \n    // todo: get from conv\n    const funcToOpMap = {\n      [\".contains\"]: \"like\",\n      [\".startsWith\"]: \"starts_with\",\n      [\".endsWith\"]: \"ends_with\",\n      [\"$contains\"]: \"select_any_in\",\n      [\".equals\"]: \"multiselect_equals\",\n      //[\".containsAll\"]: \"multiselect_contains\",\n      [\"CollectionUtils.containsAny()\"]: \"multiselect_contains\"\n    };\n\n    const convertedArgs = args.map(v => convertArg(v, conv, config, meta, {\n      ...spel,\n      _groupField: parentSpel?._groupField\n    }));\n    \n    //todo: make dynamic: use funcToOpMap and check obj type in basic config\n    if (methodName == \"contains\" && obj && obj[0].type == \"list\") {\n      const convertedObj = obj.map(v => convertArg(v, conv, config, meta, spel));\n      // {'yellow', 'green'}.?[true].contains(color)\n      if (!( convertedArgs.length == 1 && convertedArgs[0].valueSrc == \"field\" )) {\n        meta.errors.push(`Expected arg to method ${methodName} to be field but got: ${JSON.stringify(convertedArgs)}`);\n        return undefined;\n      }\n      const field = convertedArgs[0].value;\n      if (!( convertedObj.length == 1 && convertedObj[0].valueType == \"multiselect\" )) {\n        meta.errors.push(`Expected object of method ${methodName} to be inline list but got: ${JSON.stringify(convertedObj)}`);\n        return undefined;\n      }\n      const opKey = funcToOpMap[\"$\"+methodName];\n      const list = convertedObj[0];\n      return buildRule(config, meta, field, opKey, [list], spel);\n    } else if (obj && obj[0].type == \"property\" && funcToOpMap[obj[0].val + \".\" + methodName + \"()\"]) {\n      // CollectionUtils.containsAny(multicolor, {'yellow', 'green'})\n      const opKey = funcToOpMap[obj[0].val + \".\" + methodName + \"()\"];\n      const field = convertedArgs[0].value;\n      const args = convertedArgs.slice(1);\n      return buildRule(config, meta, field, opKey, args, spel);\n    } else if (funcToOpMap[\".\"+methodName]) {\n      // user.login.startsWith('gg')\n      const opKey = funcToOpMap[\".\"+methodName];\n      const parts = convertPath(obj, meta);\n      if (parts && convertedArgs.length == 1) {\n        const fullParts = [...groupFieldParts, ...parts];\n        const field = fullParts.join(fieldSeparator);\n        return buildRule(config, meta, field, opKey, convertedArgs, spel);\n      }\n    } else if (methodName == \"parse\" && obj && obj[0].type == \"!new\" && obj[0].cls.at(-1) == \"SimpleDateFormat\") {\n      // new java.text.SimpleDateFormat('yyyy-MM-dd').parse('2022-01-15')\n      const args = obj[0].args.map(v => convertArg(v, conv, config, meta, {\n        ...spel,\n        _groupField: parentSpel?._groupField\n      }));\n      if (!( args.length == 1 && args[0].valueType == \"text\" )) {\n        meta.errors.push(`Expected args of ${obj[0].cls.join(\".\")}.${methodName} to be 1 string but got: ${JSON.stringify(args)}`);\n        return undefined;\n      }\n      if (!( convertedArgs.length == 1 && convertedArgs[0].valueType == \"text\" )) {\n        meta.errors.push(`Expected args of ${obj[0].cls.join(\".\")} to be 1 string but got: ${JSON.stringify(convertedArgs)}`);\n        return undefined;\n      }\n      const dateFormat = args[0].value;\n      const dateString = convertedArgs[0].value;\n      const valueType = dateFormat.includes(\" \") ? \"datetime\" : \"date\";\n      const field = null; // todo\n      const widget = valueType;\n      const fieldConfig = getFieldConfig(config, field);\n      const widgetConfig = config.widgets[widget || fieldConfig?.mainWidget];\n      const valueFormat = widgetConfig.valueFormat;\n      const dateVal = moment(dateString, moment.ISO_8601);\n      const value = dateVal.isValid() ? dateVal.format(valueFormat) : undefined;\n      return {\n        valueSrc: \"value\",\n        valueType,\n        value,\n      };\n    } else if (methodName == \"parse\" && obj && obj[0].type == \"!type\" && obj[0].cls.at(-1) == \"LocalTime\") {\n      // time == T(java.time.LocalTime).parse('02:03:00')\n      if (!( convertedArgs.length == 1 && convertedArgs[0].valueType == \"text\" )) {\n        meta.errors.push(`Expected args of ${obj[0].cls.join(\".\")} to be 1 string but got: ${JSON.stringify(convertedArgs)}`);\n        return undefined;\n      }\n      const timeString = convertedArgs[0].value;\n      const valueType = \"time\";\n      const field = null; // todo\n      const widget = valueType;\n      const fieldConfig = getFieldConfig(config, field);\n      const widgetConfig = config.widgets[widget || fieldConfig?.mainWidget];\n      const valueFormat = widgetConfig.valueFormat;\n      const dateVal = moment(timeString, \"HH:mm:ss\");\n      const value = dateVal.isValid() ? dateVal.format(valueFormat) : undefined;\n      return {\n        valueSrc: \"value\",\n        valueType,\n        value,\n      };\n    } else {\n      // todo: conv.funcs\n      meta.errors.push(`Unsupported method ${methodName}`);\n    }\n  } else if (spel.type == \"op-plus\" && parentSpel?.type == \"ternary\") {\n    return buildCaseValueConcat(spel, conv, config, meta);\n  } else {\n    meta.errors.push(`Can't convert arg of type ${spel.type}`);\n  }\n  return undefined;\n};\n\nconst buildRule = (config, meta, field, opKey, convertedArgs, spel) => {\n  if (convertedArgs.filter(v => v === undefined).length) {\n    return undefined;\n  }\n  const fieldConfig = getFieldConfig(config, field);\n  if (!fieldConfig) {\n    meta.errors.push(`No config for field ${field}`);\n    return undefined;\n  }\n\n  let canRev = true;\n  let needWrapReverse = false;\n  if (spel?.not && canRev) {\n    const opConfig = config.operators[opKey];\n    if (opConfig.reversedOp) {\n      opKey = opConfig.reversedOp;\n      spel.not = false;\n    } else {\n      needWrapReverse = true;\n    }\n  }\n\n  const widget = getWidgetForFieldOp(config, field, opKey);\n  const widgetConfig = config.widgets[widget || fieldConfig.mainWidget];\n  const asyncListValuesArr = convertedArgs.map(v => v.asyncListValues).filter(v => v != undefined);\n  const asyncListValues = asyncListValuesArr.length ? asyncListValuesArr[0] : undefined;\n\n  let res = {\n    type: \"rule\",\n    id: uuid(),\n    properties: {\n      field: field,\n      operator: opKey,\n      value: convertedArgs.map(v => v.value),\n      valueSrc: convertedArgs.map(v => v.valueSrc),\n      valueType: convertedArgs.map(v => {\n        if (v.valueSrc == \"value\") {\n          return widgetConfig?.type || fieldConfig?.type || v.valueType;\n        }\n        return v.valueType;\n      }),\n      ...(asyncListValues ? {asyncListValues} : {}),\n    }\n  };\n\n  if (needWrapReverse) {\n    res = wrapInDefaultConj(res, config, spel?.not);\n    if (spel?.not) {\n      spel.not = false;\n    }\n  }\n\n  return res;\n};\n\nconst buildRuleGroup = ({groupFilter, groupFieldValue}, opKey, convertedArgs, config, meta) => {\n  if (groupFieldValue.valueSrc != \"field\")\n    throw `Bad groupFieldValue: ${JSON.stringify(groupFieldValue)}`;\n  const groupField = groupFieldValue.value;\n  let groupOpRule = buildRule(config, meta, groupField, opKey, convertedArgs);\n  if (!groupOpRule)\n    return undefined;\n  const fieldConfig = getFieldConfig(config, groupField);\n  const mode = fieldConfig?.mode;\n  let res = {\n    ...(groupFilter || {}),\n    type: \"rule_group\",\n    properties: {\n      ...groupOpRule.properties,\n      ...(groupFilter?.properties || {}),\n      mode\n    }\n  };\n  if (!res.id)\n    res.id = uuid();\n  return res;\n};\n\n\nconst compareArgs = (left, right,  spel, conv, config, meta, parentSpel = null) => {\n  if (left.type == right.type) {\n    if (left.type == \"!aggr\") {\n      const [leftSource, rightSource] = [left.source, right.source].map(v => convertArg(v, conv, config, meta, {\n        ...spel,\n        _groupField: parentSpel?._groupField\n      }));\n      //todo: check same filter\n      return leftSource.value == rightSource.value;\n    } else {\n      const [leftVal, rightVal] = [left, right].map(v => convertArg(v, conv, config, meta, {\n        ...spel,\n        _groupField: parentSpel?._groupField\n      }));\n      return leftVal.value == rightVal.value;\n    }\n  }\n  return false;\n};\n\nconst convertToTree = (spel, conv, config, meta, parentSpel = null) => {\n  if (!spel) return undefined;\n  let res;\n  if (spel.type.indexOf(\"op-\") == 0) {\n    let op = spel.type.slice(\"op-\".length);\n\n    // unary\n    const isUnary = (op == \"minus\" || op == \"plus\") && spel.children.length == 1;\n    if (isUnary) {\n      spel.isUnary = true;\n      return convertToTree(spel.children[0], conv, config, meta, spel);\n    }\n\n    // between\n    let isBetweenNormal = (op == \"and\" && spel.children.length == 2 && spel.children[0].type == \"op-ge\" && spel.children[1].type == \"op-le\");\n    let isBetweenRev = (op == \"or\" && spel.children.length == 2 && spel.children[0].type == \"op-lt\" && spel.children[1].type == \"op-gt\");\n    let isBetween = isBetweenNormal || isBetweenRev;\n    if (isBetween) {\n      const [left, from] = spel.children[0].children;\n      const [right, to] = spel.children[1].children;\n      const isNumbers = from.type == \"number\" && to.type == \"number\";\n      const isSameSource = compareArgs(left, right,  spel, conv, config, meta, parentSpel);\n      if (isNumbers && isSameSource) {\n        const _fromValue = from.val;\n        const _toValue = to.val;\n        const oneSpel = {\n          type: \"op-between\",\n          children: [\n            left,\n            from,\n            to\n          ]\n        };\n        return convertToTree(oneSpel, conv, config, meta, parentSpel);\n      }\n    }\n\n    // find op\n    let opKeys = conv.operators[op];\n    // todo: make dynamic, use basic config\n    if (op == \"eq\" && spel.children[1].type == \"null\") {\n      opKeys = [\"is_null\"];\n    } else if (op == \"ne\" && spel.children[1].type == \"null\") {\n      opKeys = [\"is_not_null\"];\n    } else if (op == \"le\" && spel.children[1].type == \"string\" && spel.children[1].val == \"\") {\n      opKeys = [\"is_empty\"];\n    } else if (op == \"gt\" && spel.children[1].type == \"string\" && spel.children[1].val == \"\") {\n      opKeys = [\"is_not_empty\"];\n    } else if (op == \"between\") {\n      opKeys = [\"between\"];\n    }\n\n    // convert children\n    const convertChildren = () => spel.children.map(child => \n      convertToTree(child, conv, config, meta, {\n        ...spel,\n        _groupField: parentSpel?._groupField\n      })\n    );\n    \n    if (op == \"and\" || op == \"or\") {\n      const children1 = {};\n      const vals = convertChildren();\n      vals.forEach(v => {\n        if (v) {\n          const id = uuid();\n          v.id = id;\n          if (v.type != undefined) {\n            children1[id] = v;\n          } else {\n            meta.errors.push(`Bad item in AND/OR: ${JSON.stringify(v)}`);\n          }\n        }\n      });\n      res = {\n        type: \"group\",\n        id: uuid(),\n        children1,\n        properties: {\n          conjunction: conv.conjunctions[op],\n          not: spel.not\n        }\n      };\n    } else if (opKeys) {\n      const vals = convertChildren();\n      const fieldObj = vals[0];\n      let convertedArgs = vals.slice(1);\n      const groupField = fieldObj?.groupFieldValue?.value;\n      const opArg = convertedArgs?.[0];\n\n      \n      let opKey = opKeys[0];\n      if (opKeys.length > 1) {\n        logger.warn(`[spel] Spel operator ${op} can be mapped to ${opKeys}`);\n\n        //todo: it's naive\n        const field = fieldObj?.value;\n        const widgets = opKeys.map(op => ({op, widget: getWidgetForFieldOp(config, field, op)}));\n        \n        if (op == \"eq\" || op == \"ne\") {\n          const ws = widgets.find(({ op, widget }) => (widget && widget != \"field\"));\n          if (ws) {\n            opKey = ws.op;\n          }\n        }\n      }\n\n      // some/all/none\n      if (fieldObj?.groupFieldValue) {\n        if (opArg && opArg.groupFieldValue && opArg.groupFieldValue.valueSrc == \"field\" && opArg.groupFieldValue.value == groupField) {\n          // group.?[...].size() == group.size()\n          opKey = \"all\";\n          convertedArgs = [];\n        } else if (opKey == \"equal\" && opArg.valueSrc == \"value\" && opArg.valueType == \"number\" && opArg.value == 0) {\n          opKey = \"none\";\n          convertedArgs = [];\n        } else if (opKey == \"greater\" && opArg.valueSrc == \"value\" && opArg.valueType == \"number\" && opArg.value == 0) {\n          opKey = \"some\";\n          convertedArgs = [];\n        }\n      }\n\n      let canRev = true;\n      let needWrapReverse = false;\n      if (spel.not && canRev) {\n        const opConfig = config.operators[opKey];\n        if (opConfig.reversedOp) {\n          opKey = opConfig.reversedOp;\n          spel.not = false;\n        } else {\n          needWrapReverse = true;\n        }\n      }\n      \n      if (!fieldObj) {\n        // LHS can't be parsed\n      } else if (fieldObj.groupFieldValue) {\n        // 1. group\n        if (fieldObj.groupFieldValue.valueSrc != \"field\") {\n          meta.errors.push(`Expected group field ${JSON.stringify(fieldObj)}`);\n        }\n\n        res = buildRuleGroup(fieldObj, opKey, convertedArgs, config, meta);\n      } else {\n        // 2. not group\n        if (fieldObj.valueSrc != \"field\") {\n          meta.errors.push(`Expected field ${JSON.stringify(fieldObj)}`);\n        }\n        const field = fieldObj.value;\n        res = buildRule(config, meta, field, opKey, convertedArgs);\n      }\n\n      if (needWrapReverse) {\n        if (res.type !== \"group\") {\n          res = wrapInDefaultConj(res, config, spel.not);\n        } else {\n          res.properties.not = !res.properties.not;\n        }\n      }\n    } else {\n      if (!parentSpel) {\n        // try to parse whole `\"str\" + prop + #var` as ternary\n        res = buildSimpleSwitch(spel, conv, config, meta);\n      }\n      if (!res) {\n        meta.errors.push(`Can't convert op ${op}`);\n      }\n    }\n  } else if (spel.type == \"!aggr\") {\n    const groupFieldValue = convertToTree(spel.source, conv, config, meta, {\n      ...spel, \n      _groupField: parentSpel?._groupField\n    });\n    let groupFilter = convertToTree(spel.filter, conv, config, meta, {\n      ...spel, \n      _groupField: groupFieldValue?.value\n    });\n    if (groupFilter?.type == \"rule\") {\n      groupFilter = wrapInDefaultConj(groupFilter, config, spel.filter.not);\n    }\n    res = {\n      groupFilter,\n      groupFieldValue\n    };\n    if (!parentSpel) {\n      // !aggr can't be in root, it should be compared with something\n      res = undefined;\n      meta.errors.push(\"Unexpected !aggr in root\");\n    }\n  } else if (spel.type == \"ternary\") {\n    const children1 = {};\n    spel.val.forEach(v => {\n      const [cond, val] = v;\n      const caseI = buildCase(cond, val, conv, config, meta, spel);\n      if (caseI) {\n        children1[caseI.id] = caseI;\n      }\n    });\n    res = {\n      type: \"switch_group\",\n      id: uuid(),\n      children1,\n      properties: {}\n    };\n  } else {\n    res = convertArg(spel, conv, config, meta, parentSpel);\n    if (res && !res.type && !parentSpel) {\n      // try to parse whole `\"1\"` as ternary\n      const sw = buildSimpleSwitch(spel, conv, config, meta);\n      if (sw) {\n        res = sw;\n      } else {\n        res = undefined;\n        meta.errors.push(`Can't convert rule of type ${spel.type}, it looks like var/literal`);\n      }\n    } else {\n      // res is a rule\n    }\n  }\n  return res;\n};\n\nconst buildSimpleSwitch = (val, conv, config, meta) => {\n  let children1 = {};\n  const cond = null;\n  const caseI = buildCase(cond, val, conv, config, meta);\n  if (caseI) {\n    children1[caseI.id] = caseI;\n  }\n  let res = {\n    type: \"switch_group\",\n    id: uuid(),\n    children1,\n    properties: {}\n  };\n  return res;\n};\n\nconst buildCase = (cond, val, conv, config, meta, spel = null) => {\n  const valProperties = buildCaseValProperties(config, meta, conv, val, spel);\n\n  let caseI;\n  if (cond) {\n    caseI = convertToTree(cond, conv, config, meta, spel);\n    if (caseI && caseI.type) {\n      if (caseI.type != \"group\") {\n        caseI = wrapInDefaultConj(caseI, config);\n      }\n      caseI.type = \"case_group\";\n    } else {\n      meta.errors.push(`Unexpected case: ${JSON.stringify(caseI)}`);\n      caseI = undefined;\n    }\n  } else {\n    caseI = {\n      id: uuid(),\n      type: \"case_group\",\n      properties: {}\n    };\n  }\n\n  if (caseI) {\n    caseI.properties = {\n      ...caseI.properties,\n      ...valProperties\n    };\n  }\n\n  return caseI;\n};\n\nconst buildCaseValueConcat = (spel, conv, config, meta) => {\n  let flat = [];\n  function _processConcatChildren(children) {\n    children.map(child => {\n      if (child.type == \"op-plus\") {\n        _processConcatChildren(child.children);\n      } else {\n        const convertedChild = convertArg(child, conv, config, meta, spel);\n        if (convertedChild) {\n          flat.push(convertedChild);\n        } else {\n          meta.errors.push(`Can't convert ${child.type} in concatenation`);\n        }\n      }\n    });\n  }\n  _processConcatChildren(spel.children);\n  return {\n    valueSrc: \"value\",\n    valueType: \"case_value\",\n    value: flat,\n  };\n};\n\nconst buildCaseValProperties = (config, meta, conv, val, spel = null) => {\n  let valProperties = {};\n  let convVal;\n  if (val?.type == \"op-plus\") {\n    convVal = buildCaseValueConcat(val, conv, config, meta);\n  } else {\n    convVal = convertArg(val, conv, config, meta, spel);\n  }\n  const widgetDef = config.widgets[\"case_value\"];\n  const importCaseValue = widgetDef?.spelImportValue;\n  if (importCaseValue) {\n    const [normVal, normErrors] = importCaseValue(convVal);\n    normErrors.map(e => meta.errors.push(e));\n    if (normVal) {\n      valProperties = {\n        value: [normVal],\n        valueSrc: [\"value\"],\n        valueType: [\"case_value\"]\n      };\n    }\n  } else {\n    meta.errors.push(\"No fucntion to import case value\");\n  }\n  return valProperties;\n};\n\nconst wrapInDefaultConjRuleGroup = (rule, parentField, parentFieldConfig, config, conj) => {\n  if (!rule) return undefined;\n  return {\n    type: \"rule_group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: conj || defaultGroupConjunction(config, parentFieldConfig),\n      not: false,\n      field: parentField,\n    }\n  };\n};\n\nconst wrapInDefaultConj = (rule, config, not = false) => {\n  return {\n    type: \"group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: defaultConjunction(config),\n      not: not || false\n    }\n  };\n};\n","import {sleep} from \"./stuff\";\nimport {listValuesToArray, getListValue, makeCustomListValue} from \"./listValues\";\n\nexport const simulateAsyncFetch = (all, cPageSize = 0, delay = 1000) => async (search, offset, meta) => {\n  const pageSize = meta?.pageSize != undefined ? meta.pageSize : cPageSize;\n  const filtered = listValuesToArray(all)\n    .filter(({title, value}) => search == null ? true : (\n      title.toUpperCase().indexOf(search.toUpperCase()) != -1\n      || `${value}`.toUpperCase().indexOf(search.toUpperCase()) != -1\n    ));\n  const pages = pageSize ? Math.ceil(filtered.length / pageSize) : 0;\n  const currentOffset = offset || 0;\n  const currentPage = pageSize ? Math.ceil(currentOffset / pageSize) : null;\n  const values = pageSize ? filtered.slice(currentOffset, currentOffset + pageSize) : filtered;\n  const newOffset = pageSize ? currentOffset + values.length : null;\n  const hasMore = pageSize ? (newOffset < filtered.length) : false;\n  if (delay) {\n    console.debug(\"simulateAsyncFetch\", {\n      search, offset, values, hasMore, filtered\n    });\n    await sleep(delay);\n  }\n  return {\n    values,\n    hasMore\n  };\n};\n\nexport const mergeListValues = (values, newValues, toStart = false, hideNewValues = false) => {\n  if (!newValues)\n    return values;\n  const old = values || [];\n  const newFiltered = newValues\n    .filter(v => old.find(av => \"\"+av.value == \"\"+v.value) == undefined)\n    .map(v => (hideNewValues ? {...v, isHidden: true} : v));\n  const merged = toStart ? [...newFiltered, ...old] : [...old, ...newFiltered];\n  return merged;\n};\n\nexport const optionToListValue = (val, listValues, allowCustomValues) => {\n  const v = val == null || val == \"\" ? undefined : (val?.value ?? val);\n  const item = getListValue(v, listValues);\n  const customItem = allowCustomValues && !item ? makeCustomListValue(v) : undefined;\n  const listValue = item || customItem;\n  const lvs = listValue ? [listValue] : undefined; //not allow []\n  return [v, lvs];\n};\n\nexport const optionsToListValues = (vals, listValues, allowCustomValues) => {\n  const newSelectedListValues = vals.map((val, _i) => {\n    const v = val == null || val == \"\" ? undefined : (val?.value ?? val);\n    const item = getListValue(v, listValues);\n    const customItem = allowCustomValues && !item ? makeCustomListValue(v) : undefined;\n    const listValue = item || customItem;\n    return listValue;\n  }).filter(o => o != undefined);\n  let newSelectedValues = newSelectedListValues\n    .map(o => (o?.value ?? o));\n  if (!newSelectedValues.length)\n    newSelectedValues = undefined; //not allow []\n  return [newSelectedValues, newSelectedListValues];\n};\n\nexport const listValueToOption = (lv) => {\n  if (lv == null) return null;\n  const {title, value, disabled, groupTitle, renderTitle, children, label, isCustom, isHidden} = lv;\n  let option = {\n    value,\n    title: title || label || children, // fix issue #930 for AntD\n  };\n  if (disabled)\n    option.disabled = disabled;\n  if (groupTitle)\n    option.groupTitle = groupTitle;\n  if (renderTitle)\n    option.renderTitle = renderTitle;\n  if (isCustom)\n    option.isCustom = isCustom;\n  if (isHidden)\n    option.isHidden = isHidden;\n  return option;\n};\n\nexport { getListValue };\n","//import { customJsonLogicOperations } from \"../utils/jsonLogic\";\n\n// Tip: search for `customJsonLogicOperations` in codebase to see custom JL funcs we use in `jsonLogicCustomOps`\n\nconst NOW = {\n  label: \"Now\",\n  returnType: \"datetime\",\n  jsonLogic: \"now\",\n  jsonLogicCustomOps: {\n    now: {},\n  },\n  spelFunc: \"new java.util.Date()\",\n  sqlFormatFunc: () => \"NOW()\",\n  mongoFormatFunc: () => new Date(),\n  formatFunc: () => \"NOW\",\n};\n\nconst RELATIVE_DATETIME = {\n  label: \"Relative\",\n  returnType: \"datetime\",\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\"\", \"\", \"\"],\n  jsonLogic: ({date, op, val, dim}) => ({\n    \"date_add\": [\n      date,\n      val * (op == \"minus\" ? -1 : +1),\n      dim\n    ]\n  }),\n  jsonLogicImport: (v) => {\n    const date = v[\"date_add\"][0];\n    const val = Math.abs(v[\"date_add\"][1]);\n    const op = v[\"date_add\"][1] >= 0 ? \"plus\" : \"minus\";\n    const dim = v[\"date_add\"][2];\n    return [date, op, val, dim];\n  },\n  jsonLogicCustomOps: {\n    date_add: {},\n  },\n  // MySQL\n  //todo: other SQL dialects?\n  sqlFormatFunc: ({date, op, val, dim}) => `DATE_ADD(${date}, INTERVAL ${parseInt(val) * (op == \"minus\" ? -1 : +1)} ${dim.replace(/^'|'$/g, \"\")})`,\n  mongoFormatFunc: null, //todo: support?\n  //todo: spel\n  formatFunc: ({date, op, val, dim}) => (!val ? date : `${date} ${op == \"minus\" ? \"-\" : \"+\"} ${val} ${dim}`),\n  args: {\n    date: {\n      label: \"Date\",\n      type: \"datetime\",\n      defaultValue: {func: \"NOW\", args: []},\n      valueSources: [\"func\", \"field\"],\n    },\n    op: {\n      label: \"Op\",\n      type: \"select\",\n      defaultValue: \"plus\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: {\n          plus: \"+\",\n          minus: \"-\",\n        },\n      }\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      fieldSettings: {\n        min: 0,\n      },\n      defaultValue: 0,\n      valueSources: [\"value\"],\n    },\n    dim: {\n      label: \"Dimension\",\n      type: \"select\",\n      defaultValue: \"day\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: {\n          day: \"day\",\n          week: \"week\",\n          month: \"month\",\n          year: \"year\",\n        },\n      }\n    },\n  }\n};\n\nconst LOWER = {\n  label: \"Lowercase\",\n  mongoFunc: \"$toLower\",\n  jsonLogic: \"toLowerCase\",\n  spelFunc: \".toLowerCase\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toLowerCase: {}\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\"],\n    },\n  }\n};\n\nconst UPPER = {\n  label: \"Uppercase\",\n  mongoFunc: \"$toUpper\",\n  jsonLogic: \"toUpperCase\",\n  spelFunc: \".toUpperCase\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toUpperCase: {},\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\"],\n    },\n  }\n};\n\nconst LINEAR_REGRESSION = {\n  label: \"Linear regression\",\n  returnType: \"number\",\n  formatFunc: ({coef, bias, val}, _) => `(${coef} * ${val} + ${bias})`,\n  sqlFormatFunc: ({coef, bias, val}) => `(${coef} * ${val} + ${bias})`,\n  spelFormatFunc: ({coef, bias, val}) => `(${coef} * ${val} + ${bias})`,\n  mongoFormatFunc: ({coef, bias, val}) => ({\"$sum\": [{\"$multiply\": [coef, val]}, bias]}),\n  jsonLogic: ({coef, bias, val}) => ({ \"+\": [ {\"*\": [coef, val]}, bias ] }),\n  jsonLogicImport: (v) => {\n    const coef = v[\"+\"][0][\"*\"][0];\n    const val = v[\"+\"][0][\"*\"][1];\n    const bias = v[\"+\"][1];\n    return [coef, val, bias];\n  },\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\" * \", \" + \"],\n  args: {\n    coef: {\n      label: \"Coef\",\n      type: \"number\",\n      defaultValue: 1,\n      valueSources: [\"value\"],\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      valueSources: [\"value\", \"field\"],\n    },\n    bias: {\n      label: \"Bias\",\n      type: \"number\",\n      defaultValue: 0,\n      valueSources: [\"value\"],\n    }\n  }\n};\n\nexport {\n  LOWER,\n  UPPER,\n  NOW,\n  RELATIVE_DATETIME,\n  LINEAR_REGRESSION,\n};\n","import moment from \"moment\";\nimport {\n  SqlString, sqlEmptyValue, mongoEmptyValue, spelEscape, spelFixList,\n  stringifyForDisplay\n} from \"../utils/export\";\nimport {escapeRegExp} from \"../utils/stuff\";\nimport {getTitleInListValues} from \"../utils/listValues\";\n\n// helpers for mongo format\nexport const mongoFormatOp1 = (mop, mc, not,  field, _op, value, useExpr, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n  const $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\"+field : field;\n  const mv = mc(value, fieldDef);\n  if (mv === undefined)\n    return undefined;\n  if (not) {\n    if (!useExpr && (!mop || mop == \"$eq\"))\n      return { [field]: { \"$ne\": mv } }; // short form\n    return !useExpr\n      ? { [field]: { \"$not\": { [mop]: mv } } } \n      : { \"$not\": { [mop]: [$field, mv] } };\n  } else {\n    if (!useExpr && (!mop || mop == \"$eq\"))\n      return { [field]: mv }; // short form\n    return !useExpr\n      ? { [field]: { [mop]: mv } } \n      : { [mop]: [$field, mv] };\n  }\n};\n\nexport const mongoFormatOp2 = (mops, not,  field, _op, values, useExpr, valueSrcs, valueTypes, opDef, operatorOptions, fieldDef) => {\n  const $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\"+field : field;\n  if (not) {\n    return !useExpr\n      ? { [field]: { \"$not\": { [mops[0]]: values[0], [mops[1]]: values[1] } } } \n      : {\"$not\":\n                {\"$and\": [\n                  { [mops[0]]: [ $field, values[0] ] },\n                  { [mops[1]]: [ $field, values[1] ] },\n                ]}\n      };\n  } else {\n    return !useExpr\n      ? { [field]: { [mops[0]]: values[0], [mops[1]]: values[1] } } \n      : {\"$and\": [\n        { [mops[0]]: [ $field, values[0] ] },\n        { [mops[1]]: [ $field, values[1] ] },\n      ]};\n  }\n};\n\nconst ctx = {\n  utils: {\n    SqlString,\n    moment,\n    mongoFormatOp1,\n    mongoFormatOp2,\n    mongoEmptyValue,\n    escapeRegExp,\n    sqlEmptyValue,\n    stringifyForDisplay,\n    getTitleInListValues,\n    spelEscape,\n    spelFixList,\n  },\n};\n\nexport default ctx;\n","import {settings as defaultSettings} from \"./default\";\nimport ctx from \"./ctx\";\n\n\n\n//----------------------------  conjunctions\n\nconst conjunctions = {\n  AND: {\n    label: \"And\",\n    mongoConj: \"$and\",\n    jsonLogicConj: \"and\",\n    sqlConj: \"AND\",\n    spelConj: \"and\",\n    spelConjs: [\"and\", \"&&\"],\n    reversedConj: \"OR\",\n    formatConj: (children, conj, not, isForDisplay) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + (isForDisplay ? \"AND\" : \"&&\") + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    sqlFormatConj: (children, conj, not) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + \"AND\" + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    spelFormatConj: (children, conj, not, omitBrackets) => {\n      if (not) omitBrackets = false;\n      return children.size > 1\n        ? (not ? \"!\" : \"\") + (omitBrackets ? \"\" : \"(\") + children.join(\" \" + \"&&\" + \" \") + (omitBrackets ? \"\" : \")\")\n        : (not ? \"!(\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n  },\n  OR: {\n    label: \"Or\",\n    mongoConj: \"$or\",\n    jsonLogicConj: \"or\",\n    sqlConj: \"OR\",\n    spelConj: \"or\",\n    spelConjs: [\"or\", \"||\"],\n    reversedConj: \"AND\",\n    formatConj: (children, conj, not, isForDisplay) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + (isForDisplay ? \"OR\" : \"||\") + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    sqlFormatConj: (children, conj, not) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + \"OR\" + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    spelFormatConj: (children, conj, not, omitBrackets) => {\n      if (not) omitBrackets = false;\n      return children.size > 1\n        ? (not ? \"!\" : \"\") + (omitBrackets ? \"\" : \"(\") + children.join(\" \" + \"||\" + \" \") + (omitBrackets ? \"\" : \")\")\n        : (not ? \"!(\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n  },\n};\n\n//----------------------------  operators\n\n\n\nconst operators = {\n  equal: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    reversedOp: \"not_equal\",\n    formatOp: (field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) => {\n      const opStr = isForDisplay ? \"=\" : opDef.label;\n      if (valueTypes == \"boolean\" && isForDisplay)\n        return value == \"No\" ? `NOT ${field}` : `${field}`;\n      else\n        return `${field} ${opStr} ${value}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\",\n  },\n  not_equal: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    reversedOp: \"equal\",\n    formatOp: (field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) => {\n      if (valueTypes == \"boolean\" && isForDisplay)\n        return value == \"No\" ? `${field}` : `NOT ${field}`;\n      else\n        return `${field} ${opDef.label} ${value}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    jsonLogic: \"!=\",\n  },\n  less: {\n    label: \"<\",\n    labelForFormat: \"<\",\n    sqlOp: \"<\",\n    spelOp: \"<\",\n    spelOps: [\"<\", \"lt\"],\n    reversedOp: \"greater_or_equal\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$lt\", v => v, false, ...args); },\n    jsonLogic: \"<\",\n    elasticSearchQueryType: \"range\",\n  },\n  less_or_equal: {\n    label: \"<=\",\n    labelForFormat: \"<=\",\n    sqlOp: \"<=\",\n    spelOp: \"<=\",\n    spelOps: [\"<=\", \"le\"],\n    reversedOp: \"greater\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$lte\", v => v, false, ...args); },\n    jsonLogic: \"<=\",\n    elasticSearchQueryType: \"range\",\n  },\n  greater: {\n    label: \">\",\n    labelForFormat: \">\",\n    sqlOp: \">\",\n    spelOp: \">\",\n    spelOps: [\">\", \"gt\"],\n    reversedOp: \"less_or_equal\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gt\", v => v, false, ...args); },\n    jsonLogic: \">\",\n    elasticSearchQueryType: \"range\",\n  },\n  greater_or_equal: {\n    label: \">=\",\n    labelForFormat: \">=\",\n    sqlOp: \">=\",\n    spelOp: \">=\",\n    spelOps: [\">=\", \"ge\"],\n    reversedOp: \"less\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gte\", v => v, false, ...args); },\n    jsonLogic: \">=\",\n    elasticSearchQueryType: \"range\",\n  },\n  like: {\n    label: \"Contains\",\n    labelForFormat: \"Contains\",\n    reversedOp: \"not_like\",\n    sqlOp: \"LIKE\",\n    spelOp: \".contains\",\n    spelOps: [\"matches\", \".contains\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) : undefined), false, ...args); },\n    //jsonLogic: (field, op, val) => ({ \"in\": [val, field] }),\n    jsonLogic: \"in\",\n    _jsonLogicIsRevArgs: true,\n    valueSources: [\"value\"],\n    elasticSearchQueryType: \"regexp\",\n  },\n  not_like: {\n    isNotOp: true,\n    label: \"Not contains\",\n    reversedOp: \"like\",\n    labelForFormat: \"Not Contains\",\n    sqlOp: \"NOT LIKE\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) : undefined), true, ...args); },\n    valueSources: [\"value\"],\n  },\n  starts_with: {\n    label: \"Starts with\",\n    labelForFormat: \"Starts with\",\n    sqlOp: \"LIKE\",\n    spelOp: \".startsWith\",\n    spelOps: [\"matches\", \".startsWith\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? \"^\" + this.utils.escapeRegExp(v) : undefined), false, ...args); },\n    jsonLogic: undefined, // not supported\n    valueSources: [\"value\"],\n  },\n  ends_with: {\n    label: \"Ends with\",\n    labelForFormat: \"Ends with\",\n    sqlOp: \"LIKE\",\n    spelOp: \".endsWith\",\n    spelOps: [\"matches\", \".endsWith\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) + \"$\" : undefined), false, ...args); },\n    jsonLogic: undefined, // not supported\n    valueSources: [\"value\"],\n  },\n  between: {\n    label: \"Between\",\n    labelForFormat: \"BETWEEN\",\n    sqlOp: \"BETWEEN\",\n    cardinality: 2,\n    formatOp: (field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) => {\n      let valFrom = values.first();\n      let valTo = values.get(1);\n      if (isForDisplay)\n        return `${field} BETWEEN ${valFrom} AND ${valTo}`;\n      else\n        return `${field} >= ${valFrom} && ${field} <= ${valTo}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values[0];\n      const valTo = values[1];\n      return `${field} >= ${valFrom} && ${field} <= ${valTo}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp2([\"$gte\", \"$lte\"], false, ...args); },\n    valueLabels: [\n      \"Value from\",\n      \"Value to\"\n    ],\n    textSeparators: [\n      null,\n      \"and\"\n    ],\n    reversedOp: \"not_between\",\n    jsonLogic: \"<=\",\n    validateValues: (values) => {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1] ? null : \"Invalid range\";\n      }\n      return null;\n    },\n    elasticSearchQueryType: function elasticSearchQueryType(type) {\n      return type === \"time\" ? \"filter\" : \"range\";\n    },\n  },\n  not_between: {\n    isNotOp: true,\n    label: \"Not between\",\n    labelForFormat: \"NOT BETWEEN\",\n    sqlOp: \"NOT BETWEEN\",\n    cardinality: 2,\n    formatOp: (field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) => {\n      let valFrom = values.first();\n      let valTo = values.get(1);\n      if (isForDisplay)\n        return `${field} NOT BETWEEN ${valFrom} AND ${valTo}`;\n      else\n        return `(${field} < ${valFrom} || ${field} > ${valTo})`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values[0];\n      const valTo = values[1];\n      return `(${field} < ${valFrom} || ${field} > ${valTo})`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp2([\"$gte\", \"$lte\"], true, ...args); },\n    valueLabels: [\n      \"Value from\",\n      \"Value to\"\n    ],\n    textSeparators: [\n      null,\n      \"and\"\n    ],\n    reversedOp: \"between\",\n    validateValues: (values) => {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1] ? null : \"Invalid range\";\n      }\n      return null;\n    },\n  },\n  is_empty: {\n    label: \"Is empty\",\n    labelForFormat: \"IS EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_not_empty\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS EMPTY` : `!${field}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      const empty = this.utils.sqlEmptyValue(fieldDef);\n      return `COALESCE(${field}, ${empty}) = ${empty}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      //tip: is empty or null\n      return `${field} <= ''`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", (v, fieldDef) => [this.utils.mongoEmptyValue(fieldDef), null], false, ...args); },\n    jsonLogic: \"!\",\n  },\n  is_not_empty: {\n    isNotOp: true,\n    label: \"Is not empty\",\n    labelForFormat: \"IS NOT EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_empty\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NOT EMPTY` : `!!${field}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      const empty = this.utils.sqlEmptyValue(fieldDef);\n      return `COALESCE(${field}, ${empty}) <> ${empty}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      //tip: is not empty and not null\n      return `${field} > ''`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$nin\", (v, fieldDef) => [this.utils.mongoEmptyValue(fieldDef), null], false, ...args); },\n    jsonLogic: \"!!\",\n    elasticSearchQueryType: \"exists\",\n  },\n  is_null: {\n    label: \"Is null\",\n    labelForFormat: \"IS NULL\",\n    sqlOp: \"IS NULL\",\n    cardinality: 0,\n    reversedOp: \"is_not_null\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NULL` : `!${field}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      return `${field} == null`;\n    },\n    // check if value is null OR not exists\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => null, false, ...args); },\n    jsonLogic: \"==\",\n  },\n  is_not_null: {\n    label: \"Is not null\",\n    labelForFormat: \"IS NOT NULL\",\n    sqlOp: \"IS NOT NULL\",\n    cardinality: 0,\n    reversedOp: \"is_null\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NOT NULL` : `!!${field}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      return `${field} != null`;\n    },\n    // check if value exists and is not null\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => null, false, ...args); },\n    jsonLogic: \"!=\",\n    elasticSearchQueryType: \"exists\",\n  },\n  select_equals: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\", // enum/set\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const opStr = isForDisplay ? \"=\" : \"==\";\n      return `${field} ${opStr} ${value}`;\n    },\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    reversedOp: \"select_not_equals\",\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\",\n  },\n  select_not_equals: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\", // enum/set\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} != ${value}`;\n    },\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    reversedOp: \"select_equals\",\n    jsonLogic: \"!=\",\n  },\n  select_any_in: {\n    label: \"Any in\",\n    labelForFormat: \"IN\",\n    sqlOp: \"IN\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} IN (${values.join(\", \")})`;\n      else\n        return `${field} IN (${values})`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\") {\n        return `${field} IN (${values.join(\", \")})`;\n      } else return undefined; // not supported\n    },\n    spelOp: \"$contains\", // tip: $ means first arg is object\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", v => v, false, ...args); },\n    reversedOp: \"select_not_any_in\",\n    jsonLogic: \"in\",\n    elasticSearchQueryType: \"term\",\n  },\n  select_not_any_in: {\n    isNotOp: true,\n    label: \"Not in\",\n    labelForFormat: \"NOT IN\",\n    sqlOp: \"NOT IN\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} NOT IN (${values.join(\", \")})`;\n      else\n        return `${field} NOT IN (${values})`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\") {\n        return `${field} NOT IN (${values.join(\", \")})`;\n      } else return undefined; // not supported\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$nin\", v => v, false, ...args); },\n    reversedOp: \"select_any_in\",\n  },\n  // it's not \"contains all\", but \"contains any\" operator\n  multiselect_contains: {\n    label: \"Contains\",\n    labelForFormat: \"CONTAINS\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} CONTAINS [${values.join(\", \")}]`;\n      else\n        return `${field} CONTAINS ${values}`;\n    },\n    reversedOp: \"multiselect_not_contains\",\n    jsonLogic2: \"some-in\",\n    jsonLogic: (field, op, vals) => ({\n      \"some\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]\n    }),\n    //spelOp: \".containsAll\",\n    spelOp: \"CollectionUtils.containsAny()\",\n    elasticSearchQueryType: \"term\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", v => v, false, ...args); },\n  },\n  multiselect_not_contains: {\n    isNotOp: true,\n    label: \"Not contains\",\n    labelForFormat: \"NOT CONTAINS\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} NOT CONTAINS [${values.join(\", \")}]`;\n      else\n        return `${field} NOT CONTAINS ${values}`;\n    },\n    reversedOp: \"multiselect_contains\"\n  },\n  multiselect_equals: {\n    label: \"Equals\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const opStr = isForDisplay ? \"=\" : \"==\";\n      if (valueSrc == \"value\")\n        return `${field} ${opStr} [${values.join(\", \")}]`;\n      else\n        return `${field} ${opStr} ${values}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\")\n      // set\n        return `${field} = '${values.map(v => this.utils.SqlString.trim(v)).join(\",\")}'`;\n      else\n        return undefined; //not supported\n    },\n    spelOp: \".equals\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    reversedOp: \"multiselect_not_equals\",\n    jsonLogic2: \"all-in\",\n    jsonLogic: (field, op, vals) => ({\n      // it's not \"equals\", but \"includes\" operator - just for example\n      \"all\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]\n    }),\n    elasticSearchQueryType: \"term\",\n  },\n  multiselect_not_equals: {\n    isNotOp: true,\n    label: \"Not equals\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} != [${values.join(\", \")}]`;\n      else\n        return `${field} != ${values}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\")\n      // set\n        return `${field} != '${values.map(v => this.utils.SqlString.trim(v)).join(\",\")}'`;\n      else\n        return undefined; //not supported\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    reversedOp: \"multiselect_equals\",\n  },\n  proximity: {\n    label: \"Proximity search\",\n    cardinality: 2,\n    valueLabels: [\n      { label: \"Word 1\", placeholder: \"Enter first word\" },\n      { label: \"Word 2\", placeholder: \"Enter second word\" },\n    ],\n    textSeparators: [\n      //'Word 1',\n      //'Word 2'\n    ],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const val1 = values.first();\n      const val2 = values.get(1);\n      const prox = operatorOptions.get(\"proximity\");\n      return `${field} ${val1} NEAR/${prox} ${val2}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      const val1 = values.first();\n      const val2 = values.get(1);\n      const aVal1 = this.utils.SqlString.trim(val1);\n      const aVal2 = this.utils.SqlString.trim(val2);\n      const prox = operatorOptions.get(\"proximity\");\n      return `CONTAINS(${field}, 'NEAR((${aVal1}, ${aVal2}), ${prox})')`;\n    },\n    mongoFormatOp: undefined, // not supported\n    jsonLogic: undefined, // not supported\n    options: {\n      optionLabel: \"Near\", // label on top of \"near\" selectbox (for config.settings.showLabels==true)\n      optionTextBefore: \"Near\", // label before \"near\" selectbox (for config.settings.showLabels==false)\n      optionPlaceholder: \"Select words between\", // placeholder for \"near\" selectbox\n      minProximity: 2,\n      maxProximity: 10,\n      defaults: {\n        proximity: 2\n      },\n    },\n  },\n  some: {\n    label: \"Some\",\n    labelForFormat: \"SOME\",\n    cardinality: 0,\n    jsonLogic: \"some\",\n    spelFormatOp: (filteredSize) => `${filteredSize} > 0`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gt\", v => 0, false, ...args); },\n  },\n  all: {\n    label: \"All\",\n    labelForFormat: \"ALL\",\n    cardinality: 0,\n    jsonLogic: \"all\",\n    spelFormatOp: (filteredSize, op, fullSize) => `${filteredSize} == ${fullSize}`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n  },\n  none: {\n    label: \"None\",\n    labelForFormat: \"NONE\",\n    cardinality: 0,\n    jsonLogic: \"none\",\n    spelFormatOp: (filteredSize) => `${filteredSize} == 0`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => 0, false, ...args); },\n  }\n};\n\n\n//----------------------------  widgets\n\nconst widgets = {\n  text: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"String\",\n    valuePlaceholder: \"Enter string\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      if (opDef.spelOp == \"matches\" && op != \"regex\") {\n        let regex;\n        if (op == \"starts_with\") {\n          regex = `(?s)^${this.utils.escapeRegExp(val)}.*`;\n        } else if (op == \"ends_with\") {\n          regex = `(?s).*${this.utils.escapeRegExp(val)}$`;\n        } else { // op == 'like'\n          regex = `(?s).*${this.utils.escapeRegExp(val)}.*`; //tip: can use (?sui) for case-insensitive\n        }\n        return this.utils.spelEscape(regex);\n      } else {\n        return this.utils.spelEscape(val);\n      }\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return this.utils.SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\");\n      } else {\n        return this.utils.SqlString.escape(val);\n      }\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  textarea: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Text\",\n    valuePlaceholder: \"Enter text\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return this.utils.SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\");\n      } else {\n        return this.utils.SqlString.escape(val);\n      }\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n    fullWidth: true,\n  },\n  number: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number\",\n    valueLabels: [\n      { label: \"Number from\", placeholder: \"Enter number from\" },\n      { label: \"Number to\", placeholder: \"Enter number to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef) {\n      const isFloat = wgtDef.step && !Number.isInteger(wgtDef.step);\n      return this.utils.spelEscape(val, isFloat);\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  slider: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number or move slider\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  select: {\n    type: \"select\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Value\",\n    valuePlaceholder: \"Select value\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      let valLabel = this.utils.getTitleInListValues(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, val);\n      return isForDisplay ? this.utils.stringifyForDisplay(valLabel) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  multiselect: {\n    type: \"multiselect\",\n    jsType: \"array\",\n    valueSrc: \"value\",\n    valueLabel: \"Values\",\n    valuePlaceholder: \"Select values\",\n    formatValue: function (vals, fieldDef, wgtDef, isForDisplay) {\n      let valsLabels = vals.map(v => this.utils.getTitleInListValues(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, v));\n      return isForDisplay ? valsLabels.map(this.utils.stringifyForDisplay) : vals.map(JSON.stringify);\n    },\n    sqlFormatValue: function (vals, fieldDef, wgtDef, op, opDef) {\n      return vals.map(v => this.utils.SqlString.escape(v));\n    },\n    spelFormatValue: function (vals, fieldDef, wgtDef, op, opDef) {\n      const isCallable = opDef.spelOp && opDef.spelOp[0] == \"$\";\n      let res = this.utils.spelEscape(vals); // inline list\n      if (isCallable) {\n        // `{1,2}.contains(1)` NOT works\n        // `{1,2}.?[true].contains(1)` works\n        res = this.utils.spelFixList(res);\n      }\n      return res;\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  date: {\n    type: \"date\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD\",\n    valueLabel: \"Date\",\n    valuePlaceholder: \"Enter date\",\n    valueLabels: [\n      { label: \"Date from\", placeholder: \"Enter date from\" },\n      { label: \"Date to\", placeholder: \"Enter date to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.format(\"YYYY-MM-DD\"));\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return `new java.text.SimpleDateFormat('yyyy-MM-dd').parse('${dateVal.format(\"YYYY-MM-DD\")}')`;\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      return this.utils.moment(val, wgtDef.valueFormat).toDate();\n    },\n    toJS: function (val, fieldSettings) {\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  time: {\n    type: \"time\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    timeFormat: \"HH:mm\",\n    valueFormat: \"HH:mm:ss\",\n    use12Hours: false,\n    valueLabel: \"Time\",\n    valuePlaceholder: \"Enter time\",\n    valueLabels: [\n      { label: \"Time from\", placeholder: \"Enter time from\" },\n      { label: \"Time to\", placeholder: \"Enter time to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.format(\"HH:mm:ss\"));\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return `T(java.time.LocalTime).parse('${dateVal.format(\"HH:mm:ss\")}')`;\n      //return `new java.text.SimpleDateFormat('HH:mm:ss').parse('${dateVal.format(\"HH:mm:ss\")}')`;\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    toJS: function (val, fieldSettings) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\") : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    elasticSearchFormatValue: function elasticSearchFormatValue(queryType, value, operator, fieldName) {\n      return {\n        script: {\n          script: {\n            source: \"doc[\".concat(fieldName, \"][0].getHour() >== params.min && doc[\").concat(fieldName, \"][0].getHour() <== params.max\"),\n            params: {\n              min: value[0],\n              max: value[1]\n            }\n          }\n        }\n      };\n    },\n  },\n  datetime: {\n    type: \"datetime\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    timeFormat: \"HH:mm\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD HH:mm:ss\",\n    use12Hours: false,\n    valueLabel: \"Datetime\",\n    valuePlaceholder: \"Enter datetime\",\n    valueLabels: [\n      { label: \"Datetime from\", placeholder: \"Enter datetime from\" },\n      { label: \"Datetime to\", placeholder: \"Enter datetime to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat + \" \" + wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.toDate());\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return `new java.text.SimpleDateFormat('yyyy-MM-dd HH:mm:ss').parse('${dateVal.format(\"YYYY-MM-DD HH:mm:ss\")}')`;\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      return this.utils.moment(val, wgtDef.valueFormat).toDate();\n    },\n    toJS: function (val, fieldSettings) {\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  boolean: {\n    type: \"boolean\",\n    jsType: \"boolean\",\n    valueSrc: \"value\",\n    labelYes: \"Yes\",\n    labelNo: \"No\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      return isForDisplay ? (val ? \"Yes\" : \"No\") : JSON.stringify(!!val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.spelEscape(val);\n    },\n    defaultValue: false,\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  field: {\n    valueSrc: \"field\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay, op, opDef, rightFieldDef) => {\n      return isForDisplay ? (rightFieldDef.label || val) : val;\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef, rightFieldDef) => {\n      return val;\n    },\n    spelFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return val;\n    },\n    valueLabel: \"Field to compare\",\n    valuePlaceholder: \"Select field to compare\",\n  },\n  func: {\n    valueSrc: \"func\",\n    valueLabel: \"Function\",\n    valuePlaceholder: \"Select function\",\n  },\n  case_value: {\n    valueSrc: \"value\",\n    type: \"case_value\",\n    spelFormatValue: function (val) {\n      return this.utils.spelEscape(val === \"\" ? null : val);\n    },\n    spelImportValue: (val) => {\n      return [val.value, []];\n    }\n  }\n};\n\n//----------------------------  types\n\nconst types = {\n  text: {\n    defaultOperator: \"equal\",\n    mainWidget: \"text\",\n    widgets: {\n      text: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"like\",\n          \"not_like\",\n          \"starts_with\",\n          \"ends_with\",\n          \"proximity\",\n          \"is_empty\",\n          \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {},\n        opProps: {},\n      },\n      textarea: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"like\",\n          \"not_like\",\n          \"starts_with\",\n          \"ends_with\",\n          \"is_empty\",\n          \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {},\n        opProps: {},\n      },\n      field: {\n        operators: [\n          //unary ops (like `is_empty`) will be excluded anyway, see getWidgetsForFieldOp()\n          \"equal\",\n          \"not_equal\",\n          \"proximity\", //can exclude if you want\n        ],\n      }\n    },\n  },\n  number: {\n    defaultOperator: \"equal\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n      slider: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\"\n        ],\n      },\n    },\n  },\n  date: {\n    defaultOperator: \"equal\",\n    widgets: {\n      date: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\"\n        ]\n      }\n    },\n  },\n  time: {\n    defaultOperator: \"equal\",\n    widgets: {\n      time: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ]\n      }\n    },\n  },\n  datetime: {\n    defaultOperator: \"equal\",\n    widgets: {\n      datetime: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      }\n    },\n  },\n  select: {\n    mainWidget: \"select\",\n    defaultOperator: \"select_equals\",\n    widgets: {\n      select: {\n        operators: [\n          \"select_equals\",\n          \"select_not_equals\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n      multiselect: {\n        operators: [\n          \"select_any_in\",\n          \"select_not_any_in\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n    },\n  },\n  multiselect: {\n    defaultOperator: \"multiselect_equals\",\n    widgets: {\n      multiselect: {\n        operators: [\n          \"multiselect_contains\",\n          \"multiselect_not_contains\",\n          \"multiselect_equals\",\n          \"multiselect_not_equals\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ]\n      }\n    },\n  },\n  boolean: {\n    defaultOperator: \"equal\",\n    widgets: {\n      boolean: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {\n          //you can enable this if you don't use fields as value sources\n          // hideOperator: true,\n          // operatorInlineLabel: \"is\",\n        }\n      },\n      field: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n        ],\n      }\n    },\n  },\n  \"!group\": {\n    defaultOperator: \"some\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        widgetProps: {\n          min: 0\n        },\n        operators: [\n          // w/o operand\n          \"some\",\n          \"all\",\n          \"none\",\n\n          // w/ operand - count\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n        ],\n        opProps: {\n          equal: {\n            label: \"Count ==\"\n          },\n          not_equal: {\n            label: \"Count !=\"\n          },\n          less: {\n            label: \"Count <\"\n          },\n          less_or_equal: {\n            label: \"Count <=\"\n          },\n          greater: {\n            label: \"Count >\"\n          },\n          greater_or_equal: {\n            label: \"Count >=\"\n          },\n          between: {\n            label: \"Count between\"\n          },\n          not_between: {\n            label: \"Count not between\"\n          }\n        }\n      }\n    }\n  },\n  \"case_value\": {\n    mainWidget: \"case_value\",\n    widgets: {\n      case_value: {}\n    }\n  },\n};\n\n//----------------------------  settings\n\nconst settings = {\n  ...defaultSettings,\n\n  convertableWidgets: {\n    \"number\": [\"slider\", \"rangeslider\"],\n    \"slider\": [\"number\", \"rangeslider\"],\n    \"rangeslider\": [\"number\", \"slider\"],\n    \"text\": [\"textarea\"],\n    \"textarea\": [\"text\"]\n  },\n\n  formatSpelField: function (field, parentField, parts, partsExt, fieldDefinition, config) {\n    let fieldName = partsExt.map(({key, parent}, ind) => {\n      if (ind == 0) {\n        if (parent == \"[map]\")\n          return `#this[${this.utils.spelEscape(key)}]`;\n        else if (parent == \"[class]\")\n          return key;\n        else\n          return key;\n      } else {\n        if (parent == \"map\" || parent == \"[map]\")\n          return `[${this.utils.spelEscape(key)}]`;\n        else if (parent == \"class\" || parent == \"[class]\")\n          return `.${key}`;\n        else\n          return `.${key}`;\n      }\n    }).join(\"\");\n    if (fieldDefinition.isSpelVariable) {\n      fieldName = \"#\" + fieldName;\n    }\n    return fieldName;\n  },\n  sqlFormatReverse: (q) => {\n    if (q == undefined) return undefined;\n    return \"NOT(\" + q + \")\";\n  },\n  spelFormatReverse: (q) => {\n    if (q == undefined) return undefined;\n    return \"!(\" + q + \")\";\n  },\n  formatReverse: (q, operator, reversedOp, operatorDefinition, revOperatorDefinition, isForDisplay) => {\n    if (q == undefined) return undefined;\n    if (isForDisplay)\n      return \"NOT (\" + q + \")\";\n    else\n      return \"!(\" + q + \")\";\n  },\n  formatAggr: (whereStr, aggrField, operator, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay, aggrFieldDef) => {\n    const {labelForFormat, cardinality} = opDef;\n    if (cardinality == 0) {\n      const cond = whereStr ? ` HAVE ${whereStr}` : \"\";\n      return `${labelForFormat} OF ${aggrField}${cond}`;\n    } else if (cardinality == undefined || cardinality == 1) {\n      const cond = whereStr ? ` WHERE ${whereStr}` : \"\";\n      return `COUNT OF ${aggrField}${cond} ${labelForFormat} ${value}`;\n    } else if (cardinality == 2) {\n      const cond = whereStr ? ` WHERE ${whereStr}` : \"\";\n      let valFrom = value.first();\n      let valTo = value.get(1);\n      return `COUNT OF ${aggrField}${cond} ${labelForFormat} ${valFrom} AND ${valTo}`;\n    }\n  },\n  jsonLogic: {\n    groupVarKey: \"var\",\n    altVarKey: \"var\",\n    lockedOp: \"locked\"\n  },\n  \n  canCompareFieldWithField: (leftField, leftFieldConfig, rightField, rightFieldConfig) => {\n    //for type == 'select'/'multiselect' you can check listValues\n    return true;\n  },\n\n  // enable compare fields\n  valueSourcesInfo: {\n    value: {\n      label: \"Value\"\n    },\n    field: {\n      label: \"Field\",\n      widget: \"field\",\n    },\n    func: {\n      label: \"Function\",\n      widget: \"func\",\n    }\n  },\n\n};\n\n//----------------------------\n\nconst _addMixins = (config, mixins, doAdd = true) => {\n  const mixinFuncs = {\n    rangeslider: mixinWidgetRangeslider,\n    treeselect: mixinWidgetTreeselect,\n    treemultiselect: mixinWidgetTreemultiselect,\n    rangeable__date: mixinRangeableWidget(\"date\", \"date\"),\n  };\n  for (const mixName of mixins) {\n    const mixinFunc = mixinFuncs[mixName];\n    if (mixinFunc) {\n      config = mixinFunc(config, doAdd);\n    } else {\n      throw new Error(`Can't ${doAdd ? \"add\": \"remove\"} mixin ${mixName}`);\n    }\n  }\n  return config;\n};\n\nconst addMixins = (config, mixins) => {\n  return _addMixins(config, mixins, true);\n};\nconst removeMixins = (config, mixins) => {\n  return _addMixins(config, mixins, false);\n};\n\nconst mixinRangeableWidget = (type, widget) => (config, addMixin = true) => {\n  let { types } = config;\n\n  types = {\n    ...types,\n    [type]: {\n      ...types[type],\n      widgets: {\n        ...types[type].widgets,\n      }\n    }\n  };\n\n  if (addMixin) {\n    types[type].widgets[widget] = {\n      opProps: {\n        between: {\n          isSpecialRange: true,\n          textSeparators: [null, null],\n        },\n        not_between: {\n          isSpecialRange: true,\n          textSeparators: [null, null],\n        }\n      },\n      ...types[type].widgets[widget],\n    };\n  } else {\n    delete types[type].widgets[widget];\n  }\n\n  return {\n    ...config,\n    types,\n  };\n};\n\nconst mixinWidgetRangeslider = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.rangeslider = {\n      type: \"number\",\n      jsType: \"number\",\n      valueSrc: \"value\",\n      valueLabel: \"Range\",\n      valuePlaceholder: \"Select range\",\n      valueLabels: [\n        { label: \"Number from\", placeholder: \"Enter number from\" },\n        { label: \"Number to\", placeholder: \"Enter number to\" },\n      ],\n      formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n        return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n      },\n      sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n        return this.utils.SqlString.escape(val);\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      singleWidget: \"slider\",\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.rangeslider,\n    };\n  } else {\n    delete widgets.rangeslider;\n  }\n\n  types = {\n    ...types,\n    number: {\n      ...types.number,\n      widgets: {\n        ...types.number.widgets,\n      }\n    }\n  };\n\n  if (addMixin) {\n    types.number.widgets.rangeslider = {\n      opProps: {\n        between: {\n          isSpecialRange: true,\n        },\n        not_between: {\n          isSpecialRange: true,\n        }\n      },\n      operators: [\n        \"between\",\n        \"not_between\",\n        // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\",\n        \"is_not_null\",\n      ],\n      ...types.number.widgets.rangeslider,\n    };\n  } else {\n    delete types.number.widgets.rangeslider;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nconst mixinWidgetTreeselect = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.treeselect = {\n      type: \"treeselect\",\n      jsType: \"string\",\n      valueSrc: \"value\",\n      valueLabel: \"Value\",\n      valuePlaceholder: \"Select value\",\n      formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n        const treeData = fieldDef.fieldSettings.treeValues || fieldDef.fieldSettings.listValues || fieldDef.asyncListValues;\n        let valLabel = this.utils.getTitleInListValues(treeData, val);\n        return isForDisplay ? this.utils.stringifyForDisplay(valLabel) : JSON.stringify(val);\n      },\n      sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n        return this.utils.SqlString.escape(val);\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.treeselect,\n    };\n  } else {\n    delete widgets.treeselect;\n  }\n\n  types = {\n    ...types,\n  };\n\n  if (addMixin) {\n    types.treeselect = {\n      mainWidget: \"treeselect\",\n      defaultOperator: \"select_equals\",\n      widgets: {\n        treeselect: {\n          operators: [\n            \"select_equals\",\n            \"select_not_equals\"\n          ],\n        },\n        treemultiselect: {\n          operators: [\n            \"select_any_in\",\n            \"select_not_any_in\"\n          ],\n        },\n      },\n      ...types.treeselect,\n    };\n  } else {\n    delete types.treeselect;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nconst mixinWidgetTreemultiselect = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.treemultiselect = {\n      type: \"treemultiselect\",\n      jsType: \"array\",\n      valueSrc: \"value\",\n      valueLabel: \"Values\",\n      valuePlaceholder: \"Select values\",\n      formatValue: function (vals, fieldDef, wgtDef, isForDisplay) {\n        const treeData = fieldDef.fieldSettings.treeValues || fieldDef.fieldSettings.listValues || fieldDef.asyncListValues;\n        let valsLabels = vals.map(v => this.utils.getTitleInListValues(treeData, v));\n        return isForDisplay ? valsLabels.map(this.utils.stringifyForDisplay) : vals.map(JSON.stringify);\n      },\n      sqlFormatValue: function (vals, fieldDef, wgtDef, op, opDef) {\n        return vals.map(v => this.utils.SqlString.escape(v));\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.treemultiselect,\n    };\n  } else {\n    delete widgets.treemultiselect;\n  }\n\n  types = {\n    ...types,\n  };\n\n  if (addMixin) {\n    types.treemultiselect = {\n      defaultOperator: \"multiselect_equals\",\n      widgets: {\n        treemultiselect: {\n          operators: [\n            \"multiselect_equals\",\n            \"multiselect_not_equals\",\n          ],\n        }\n      },\n      ...types.treemultiselect,\n    };\n  } else {\n    delete types.treemultiselect;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nexport const ConfigMixins = {\n  addMixins,\n  removeMixins,\n};\n\n//----------------------------\n\nlet config = {\n  conjunctions,\n  operators,\n  widgets,\n  types,\n  settings,\n  ctx,\n};\n// Mixin advanced widgets just to allow using it on server-side eg. for export routines\nconfig = addMixins(config, [\n  \"rangeslider\",\n  \"treeselect\",\n  \"treemultiselect\",\n]);\n\nexport default config;\n","export const ADD_GROUP = \"ADD_GROUP\";\nexport const ADD_CASE_GROUP = \"ADD_CASE_GROUP\";\nexport const REMOVE_GROUP = \"REMOVE_GROUP\";\nexport const SET_CONJUNCTION = \"SET_CONJUNCTION\";\nexport const SET_NOT = \"SET_NOT\";\nexport const ADD_RULE = \"ADD_RULE\";\nexport const REMOVE_RULE = \"REMOVE_RULE\";\nexport const SET_FIELD = \"SET_FIELD\";\nexport const SET_OPERATOR = \"SET_OPERATOR\";\nexport const SET_VALUE = \"SET_VALUE\";\nexport const SET_VALUE_SRC = \"SET_VALUE_SRC\";\nexport const SET_OPERATOR_OPTION = \"SET_OPERATOR_OPTION\";\nexport const SET_LOCK = \"SET_LOCK\";\n\nexport const SET_TREE = \"SET_TREE\";\n\nexport const MOVE_ITEM = \"MOVE_ITEM\";\n\nexport const PLACEMENT_AFTER = \"after\";\nexport const PLACEMENT_BEFORE = \"before\";\nexport const PLACEMENT_APPEND = \"append\";\nexport const PLACEMENT_PREPEND = \"prepend\";\n\nexport const SET_DRAG_PROGRESS = \"SET_DRAG_PROGRESS\";\nexport const SET_DRAG_START = \"SET_DRAG_START\";\nexport const SET_DRAG_END = \"SET_DRAG_END\";\n","import Immutable from \"immutable\";\nimport {\n  expandTreePath, expandTreeSubpath, getItemByPath, fixPathsInTree, \n  getTotalRulesCountInTree, fixEmptyGroupsInTree, isEmptyTree, hasChildren, removeIsLockedInTree\n} from \"../utils/treeUtils\";\nimport {\n  defaultRuleProperties, defaultGroupProperties, defaultOperator, \n  defaultOperatorOptions, defaultRoot, defaultItemProperties\n} from \"../utils/defaultUtils\";\nimport * as constants from \"./constants\";\nimport uuid from \"../utils/uuid\";\nimport {\n  getFuncConfig, getFieldConfig, getFieldWidgetConfig, getOperatorConfig\n} from \"../utils/configUtils\";\nimport {\n  getOperatorsForField, getFirstOperator, getWidgetForFieldOp,\n  getNewValueForFieldOp\n} from \"../utils/ruleUtils\";\nimport {deepEqual, defaultValue, applyToJS} from \"../utils/stuff\";\nimport {validateValue} from \"../utils/validation\";\nimport omit from \"lodash/omit\";\nimport mapValues from \"lodash/mapValues\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nconst addNewGroup = (state, path, type, groupUuid, properties, config, children = null, meta = {}) => {\n  const {shouldCreateEmptyGroup} = config.settings;\n  const groupPath = path.push(groupUuid);\n  const canAddNewRule = !shouldCreateEmptyGroup;\n  const isDefaultCase = !!meta?.isDefaultCase;\n\n  const origState = state;\n  state = addItem(state, path, type, groupUuid, defaultGroupProperties(config).merge(properties || {}), config, children);\n  if (state !== origState) {\n    if (!children && !isDefaultCase) {\n      state = state.setIn(expandTreePath(groupPath, \"children1\"), new Immutable.OrderedMap());\n\n      // Add one empty rule into new group\n      if (canAddNewRule) {\n        state = addItem(state, groupPath, \"rule\", uuid(), defaultRuleProperties(config), config);\n      }\n    }\n\n    state = fixPathsInTree(state);\n  }\n  \n  return state;\n};\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nconst removeGroup = (state, path, config) => {\n  state = removeItem(state, path);\n\n  const {canLeaveEmptyGroup} = config.settings;\n  const parentPath = path.slice(0, -1);\n  const isEmptyParentGroup = !hasChildren(state, parentPath);\n  if (isEmptyParentGroup && !canLeaveEmptyGroup) {\n    // check ancestors for emptiness (and delete 'em if empty)\n    state = fixEmptyGroupsInTree(state);\n    \n    if (isEmptyTree(state) && !canLeaveEmptyGroup) {\n      // if whole query is empty, add one empty rule to root\n      state = addItem(state, new Immutable.List(), \"rule\", uuid(), defaultRuleProperties(config), config);\n    }\n  }\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nconst removeRule = (state, path, config) => {\n  state = removeItem(state, path);\n\n  const {canLeaveEmptyGroup} = config.settings;\n  const parentPath = path.pop();\n  const parent = state.getIn(expandTreePath(parentPath));\n\n  const parentField = parent.getIn([\"properties\", \"field\"]);\n  const parentOperator = parent.getIn([\"properties\", \"operator\"]);\n  const parentValue = parent.getIn([\"properties\", \"value\", 0]);\n  const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n  const parentOperatorConfig = parentOperator ? getOperatorConfig(config, parentOperator, parentField) : null;\n  const hasGroupCountRule = parentField && parentOperator && parentOperatorConfig.cardinality != 0; // && parentValue != undefined;\n  \n  const isParentRuleGroup = parent.get(\"type\") == \"rule_group\";\n  const isEmptyParentGroup = !hasChildren(state, parentPath);\n  const canLeaveEmpty = isParentRuleGroup \n    ? hasGroupCountRule && parentFieldConfig.initialEmptyWhere\n    : canLeaveEmptyGroup;\n  \n  if (isEmptyParentGroup && !canLeaveEmpty) {\n    if (isParentRuleGroup) {\n      // deleted last rule from rule_group, so delete whole rule_group\n      state = state.deleteIn(expandTreePath(parentPath));\n    }\n\n    // check ancestors for emptiness (and delete 'em if empty)\n    state = fixEmptyGroupsInTree(state);\n\n    if (isEmptyTree(state) && !canLeaveEmptyGroup) {\n      // if whole query is empty, add one empty rule to root\n      state = addItem(state, new Immutable.List(), \"rule\", uuid(), defaultRuleProperties(config), config);\n    }\n  }\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {bool} not\n */\nconst setNot = (state, path, not) =>\n  state.setIn(expandTreePath(path, \"properties\", \"not\"), not);\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {bool} lock\n */\nconst setLock = (state, path, lock) =>\n  removeIsLockedInTree(state.setIn(expandTreePath(path, \"properties\", \"isLocked\"), lock));\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} conjunction\n */\nconst setConjunction = (state, path, conjunction) =>\n  state.setIn(expandTreePath(path, \"properties\", \"conjunction\"), conjunction);\n\n// convert children deeply from JS to Immutable\nconst _addChildren1 = (config, item, children) => {\n  if (children && Array.isArray(children)) {\n    item.children1 = new Immutable.OrderedMap(\n      children.reduce((map, it) => {\n        const id1 = uuid();\n        const it1 = {\n          ...it,\n          properties: defaultItemProperties(config, it).merge(it.properties || {}),\n          id: id1\n        };\n        _addChildren1(config, it1, it1.children1);\n        //todo: guarantee order\n        return {\n          ...map,\n          [id1]: new Immutable.Map(it1)\n        };\n      }, {})\n    );\n  }\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} type\n * @param {string} id\n * @param {Immutable.OrderedMap} properties\n * @param {object} config\n */\nconst addItem = (state, path, type, id, properties, config, children = null) => {\n  if (type == \"switch_group\")\n    throw new Error(\"Can't add switch_group programmatically\");\n  const { maxNumberOfCases, maxNumberOfRules, maxNesting } = config.settings;\n  const rootType = state.get(\"type\");\n  const isTernary = rootType == \"switch_group\";\n  const targetItem = state.getIn(expandTreePath(path));\n  const caseGroup = isTernary ? state.getIn(expandTreePath(path.take(2))) : null;\n  const childrenPath = expandTreePath(path, \"children1\");\n  const targetChildren = state.getIn(childrenPath);\n  const hasChildren = !!targetChildren && targetChildren.size;\n  const targetChildrenSize = hasChildren ? targetChildren.size : null;\n  let currentNumber, maxNumber;\n  if (type == \"case_group\") {\n    currentNumber = targetChildrenSize;\n    maxNumber = maxNumberOfCases;\n  } else if (type == \"group\") {\n    currentNumber = path.size;\n    maxNumber = maxNesting;\n  } else if (targetItem?.get(\"type\") == \"rule_group\") {\n    // don't restrict\n  } else {\n    currentNumber = isTernary ? getTotalRulesCountInTree(caseGroup) : getTotalRulesCountInTree(state);\n    maxNumber = maxNumberOfRules;\n  }\n  const canAdd = maxNumber && currentNumber ? (currentNumber < maxNumber) : true;\n  \n  const item = {type, id, properties};\n  _addChildren1(config, item, children);\n\n  const isLastDefaultCase = type == \"case_group\" && hasChildren && targetChildren.last().get(\"children1\") == null;\n\n  if (canAdd) {\n    const newChildren = new Immutable.OrderedMap({\n      [id]: new Immutable.Map(item)\n    });\n    if (!hasChildren) {\n      state = state.setIn(childrenPath, newChildren);\n    } else if (isLastDefaultCase) {\n      const last = targetChildren.last();\n      const newChildrenWithLast = new Immutable.OrderedMap({\n        [id]: new Immutable.Map(item),\n        [last.get(\"id\")]: last\n      });\n      state = state.deleteIn(expandTreePath(childrenPath, \"children1\", last.get(\"id\")));\n      state = state.mergeIn(childrenPath, newChildrenWithLast);\n    } else {\n      state = state.mergeIn(childrenPath, newChildren);\n    }\n    state = fixPathsInTree(state);\n  }\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n */\nconst removeItem = (state, path) => {\n  state = state.deleteIn(expandTreePath(path));\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} fromPath\n * @param {Immutable.List} toPath\n * @param {string} placement, see constants PLACEMENT_*: PLACEMENT_AFTER, PLACEMENT_BEFORE, PLACEMENT_APPEND, PLACEMENT_PREPEND\n * @param {object} config\n */\nconst moveItem = (state, fromPath, toPath, placement, config) => {\n  const from = getItemByPath(state, fromPath);\n  const sourcePath = fromPath.pop();\n  const source = fromPath.size > 1 ? getItemByPath(state, sourcePath) : null;\n  const sourceChildren = source ? source.get(\"children1\") : null;\n\n  const to = getItemByPath(state, toPath);\n  const targetPath = (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND) ? toPath : toPath.pop();\n  const target = (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND) \n    ? to\n    : toPath.size > 1 ? getItemByPath(state, targetPath) : null;\n  const targetChildren = target ? target.get(\"children1\") : null;\n\n  if (!source || !target || !from)\n    return state;\n\n  const isSameParent = (source.get(\"id\") == target.get(\"id\"));\n  const isSourceInsideTarget = targetPath.size < sourcePath.size \n        && deepEqual(targetPath.toArray(), sourcePath.toArray().slice(0, targetPath.size));\n  const isTargetInsideSource = targetPath.size > sourcePath.size \n        && deepEqual(sourcePath.toArray(), targetPath.toArray().slice(0, sourcePath.size));\n  let sourceSubpathFromTarget = null;\n  let targetSubpathFromSource = null;\n  if (isSourceInsideTarget) {\n    sourceSubpathFromTarget = Immutable.List(sourcePath.toArray().slice(targetPath.size));\n  } else if (isTargetInsideSource) {\n    targetSubpathFromSource = Immutable.List(targetPath.toArray().slice(sourcePath.size));\n  }\n\n  let newTargetChildren = targetChildren, newSourceChildren = sourceChildren;\n  if (!isTargetInsideSource)\n    newSourceChildren = newSourceChildren.delete(from.get(\"id\"));\n  if (isSameParent) {\n    newTargetChildren = newSourceChildren;\n  } else if (isSourceInsideTarget) {\n    newTargetChildren = newTargetChildren.updateIn(expandTreeSubpath(sourceSubpathFromTarget, \"children1\"), (_oldChildren) => newSourceChildren);\n  }\n\n  if (placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER) {\n    newTargetChildren = Immutable.OrderedMap().withMutations(r => {\n      for (let [itemId, item] of newTargetChildren.entries()) {\n        if (itemId == to.get(\"id\") && placement == constants.PLACEMENT_BEFORE) {\n          r.set(from.get(\"id\"), from);\n        }\n                \n        r.set(itemId, item);\n\n        if (itemId == to.get(\"id\") && placement == constants.PLACEMENT_AFTER) {\n          r.set(from.get(\"id\"), from);\n        }\n      }\n    });\n  } else if (placement == constants.PLACEMENT_APPEND) {\n    newTargetChildren = newTargetChildren.merge({[from.get(\"id\")]: from});\n  } else if (placement == constants.PLACEMENT_PREPEND) {\n    newTargetChildren = Immutable.OrderedMap({[from.get(\"id\")]: from}).merge(newTargetChildren);\n  }\n\n  if (isTargetInsideSource) {\n    newSourceChildren = newSourceChildren.updateIn(expandTreeSubpath(targetSubpathFromSource, \"children1\"), (_oldChildren) => newTargetChildren);\n    newSourceChildren = newSourceChildren.delete(from.get(\"id\"));\n  }\n\n  if (!isSameParent && !isSourceInsideTarget)\n    state = state.updateIn(expandTreePath(sourcePath, \"children1\"), (_oldChildren) => newSourceChildren);\n  if (!isTargetInsideSource)\n    state = state.updateIn(expandTreePath(targetPath, \"children1\"), (_oldChildren) => newTargetChildren);\n\n  state = fixPathsInTree(state);\n  return state;\n};\n\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} field\n */\nconst setField = (state, path, newField, config) => {\n  if (!newField)\n    return removeItem(state, path);\n\n  const {fieldSeparator, setOpOnChangeField, showErrorMessage} = config.settings;\n  if (Array.isArray(newField))\n    newField = newField.join(fieldSeparator);\n\n  const currentType = state.getIn(expandTreePath(path, \"type\"));\n  const currentProperties = state.getIn(expandTreePath(path, \"properties\"));\n  const wasRuleGroup = currentType == \"rule_group\";\n  const newFieldConfig = getFieldConfig(config, newField);\n  const isRuleGroup = newFieldConfig.type == \"!group\";\n  const isRuleGroupExt = isRuleGroup && newFieldConfig.mode == \"array\";\n  const isChangeToAnotherType = wasRuleGroup != isRuleGroup;\n  \n  const currentOperator = currentProperties.get(\"operator\");\n  const currentOperatorOptions = currentProperties.get(\"operatorOptions\");\n  const _currentField = currentProperties.get(\"field\");\n  const _currentValue = currentProperties.get(\"value\");\n  const _currentValueSrc = currentProperties.get(\"valueSrc\", new Immutable.List());\n  const _currentValueType = currentProperties.get(\"valueType\", new Immutable.List());\n\n  // If the newly selected field supports the same operator the rule currently\n  // uses, keep it selected.\n  const lastOp = newFieldConfig && newFieldConfig.operators.indexOf(currentOperator) !== -1 ? currentOperator : null;\n  let newOperator = null;\n  const availOps = getOperatorsForField(config, newField);\n  if (availOps && availOps.length == 1)\n    newOperator = availOps[0];\n  else if (availOps && availOps.length > 1) {\n    for (let strategy of setOpOnChangeField || []) {\n      if (strategy == \"keep\" && !isChangeToAnotherType)\n        newOperator = lastOp;\n      else if (strategy == \"default\")\n        newOperator = defaultOperator(config, newField, false);\n      else if (strategy == \"first\")\n        newOperator = getFirstOperator(config, newField);\n      if (newOperator) //found op for strategy\n        break;\n    }\n  }\n\n  if (!isRuleGroup && !newFieldConfig.operators) {\n    console.warn(`Type ${newFieldConfig.type} is not supported`);\n    return state;\n  }\n\n  if (wasRuleGroup && !isRuleGroup) {\n    state = state.setIn(expandTreePath(path, \"type\"), \"rule\");\n    state = state.deleteIn(expandTreePath(path, \"children1\"));\n    state = state.setIn(expandTreePath(path, \"properties\"), new Immutable.OrderedMap());\n  }\n\n  if (isRuleGroup) {\n    state = state.setIn(expandTreePath(path, \"type\"), \"rule_group\");\n    const {canReuseValue, newValue, newValueSrc, newValueType, operatorCardinality} = getNewValueForFieldOp(\n      config, config, currentProperties, newField, newOperator, \"field\", true\n    );\n    let groupProperties = defaultGroupProperties(config, newFieldConfig).merge({\n      field: newField,\n      mode: newFieldConfig.mode,\n    });\n    if (isRuleGroupExt) {\n      groupProperties = groupProperties.merge({\n        operator: newOperator,\n        value: newValue,\n        valueSrc: newValueSrc,\n        valueType: newValueType,\n      });\n    }\n    state = state.setIn(expandTreePath(path, \"children1\"), new Immutable.OrderedMap());\n    state = state.setIn(expandTreePath(path, \"properties\"), groupProperties);\n    if (newFieldConfig.initialEmptyWhere && operatorCardinality == 1) { // just `COUNT(grp) > 1` without `HAVING ..`\n      // no childeren\n    } else {\n      state = addItem(state, path, \"rule\", uuid(), defaultRuleProperties(config, newField), config);\n    }\n    state = fixPathsInTree(state);\n\n    return state;\n  }\n\n  return state.updateIn(expandTreePath(path, \"properties\"), (map) => map.withMutations((current) => {\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      config, config, current, newField, newOperator, \"field\", true\n    );\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError);\n    }\n    const newOperatorOptions = canReuseValue ? currentOperatorOptions : defaultOperatorOptions(config, newOperator, newField);\n\n    return current\n      .set(\"field\", newField)\n      .set(\"operator\", newOperator)\n      .set(\"operatorOptions\", newOperatorOptions)\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType)\n      .delete(\"asyncListValues\");\n  }));\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} operator\n */\nconst setOperator = (state, path, newOperator, config) => {\n  const {showErrorMessage} = config.settings;\n\n  const properties = state.getIn(expandTreePath(path, \"properties\"));\n  const children = state.getIn(expandTreePath(path, \"children1\"));\n  const currentField = properties.get(\"field\");\n  const fieldConfig = getFieldConfig(config, currentField);\n  const isRuleGroup = fieldConfig.type == \"!group\";\n  const operatorConfig = getOperatorConfig(config, newOperator, currentField);\n  const operatorCardinality = operatorConfig ? defaultValue(operatorConfig.cardinality, 1) : null;\n\n  state = state.updateIn(expandTreePath(path, \"properties\"), (map) => map.withMutations((current) => {\n    const currentField = current.get(\"field\");\n    const currentOperatorOptions = current.get(\"operatorOptions\");\n    const _currentValue = current.get(\"value\", new Immutable.List());\n    const _currentValueSrc = current.get(\"valueSrc\", new Immutable.List());\n    const _currentOperator = current.get(\"operator\");\n\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      config, config, current, currentField, newOperator, \"operator\", true\n    );\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError);\n    }\n    const newOperatorOptions = canReuseValue ? currentOperatorOptions : defaultOperatorOptions(config, newOperator, currentField);\n\n    if (!canReuseValue) {\n      current = current\n        .delete(\"asyncListValues\");\n    }\n\n    return current\n      .set(\"operator\", newOperator)\n      .set(\"operatorOptions\", newOperatorOptions)\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType);\n  }));\n\n  if (isRuleGroup) {\n    if (operatorCardinality == 0 && children.size == 0) {\n      state = addItem(state, path, \"rule\", uuid(), defaultRuleProperties(config, currentField), config);\n    }\n  }\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} value\n * @param {string} valueType\n * @param {*} asyncListValues\n * @param {boolean} __isInternal\n */\nconst setValue = (state, path, delta, value, valueType, config, asyncListValues, __isInternal) => {\n  const {fieldSeparator, showErrorMessage} = config.settings;\n  let isInternalValueChange;\n  const valueSrc = state.getIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\")) || null;\n  if (valueSrc === \"field\" && Array.isArray(value))\n    value = value.join(fieldSeparator);\n\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? defaultValue(operatorConfig.cardinality, 1) : null;\n\n  const isEndValue = false;\n  const calculatedValueType = valueType || calculateValueType(value, valueSrc, config);\n  const canFix = false;\n  const [validateError, fixedValue] = validateValue(\n    config, field, field, operator, value, calculatedValueType, valueSrc, asyncListValues, canFix, isEndValue\n  );\n  const isValid = !validateError;\n  if (fixedValue !== value) {\n    // eg, get exact value from listValues (not string)\n    value = fixedValue;\n  }\n\n  // Additional validation for range values\n  if (showErrorMessage) {\n    const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDefinition = getFieldWidgetConfig(config, field, operator, w, valueSrc);\n    const valueSrcs = Array.from({length: operatorCardinality}, (_, i) => (state.getIn(expandTreePath(path, \"properties\", \"valueSrc\", i + \"\")) || null));\n        \n    if (operatorConfig && operatorConfig.validateValues && valueSrcs.filter(vs => vs == \"value\" || vs == null).length == operatorCardinality) {\n      const values = Array.from({length: operatorCardinality}, (_, i) => (i == delta ? value : state.getIn(expandTreePath(path, \"properties\", \"value\", i + \"\")) || null));\n      const jsValues = fieldWidgetDefinition && fieldWidgetDefinition.toJS\n        ? values.map(v => fieldWidgetDefinition.toJS.call(config.ctx, v, fieldWidgetDefinition))\n        : values;\n      const rangeValidateError = operatorConfig.validateValues(jsValues);\n\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality), rangeValidateError);\n    }\n  }\n  \n  const lastValueArr = state.getIn(expandTreePath(path, \"properties\", \"value\"));\n  if (!lastValueArr) {\n    state = state\n      .setIn(expandTreePath(path, \"properties\", \"value\"), new Immutable.List(new Array(operatorCardinality)))\n      .setIn(expandTreePath(path, \"properties\", \"valueType\"), new Immutable.List(new Array(operatorCardinality)))\n      .setIn(expandTreePath(path, \"properties\", \"valueError\"), new Immutable.List(new Array(operatorCardinality)));\n  }\n\n  const lastValue = state.getIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"));\n  const lastError = state.getIn(expandTreePath(path, \"properties\", \"valueError\", delta));\n  const isLastEmpty = lastValue == undefined;\n  const isLastError = !!lastError;\n  if (isValid || showErrorMessage) {\n    state = state.deleteIn(expandTreePath(path, \"properties\", \"asyncListValues\"));\n    // set only good value\n    if (typeof value === \"undefined\") {\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), undefined);\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), null);\n    } else {\n      if (asyncListValues) {\n        state = state.setIn(expandTreePath(path, \"properties\", \"asyncListValues\"), asyncListValues);\n      }\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), value);\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), calculatedValueType);\n      isInternalValueChange = __isInternal && !isLastEmpty && !isLastError;\n    }\n  }\n  if (showErrorMessage) {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), validateError);\n  }\n  if (__isInternal && (isValid && isLastError || !isValid && !isLastError)) {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), validateError);\n    isInternalValueChange = false;\n  }\n  \n  return {tree: state, isInternalValueChange};\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nconst setValueSrc = (state, path, delta, srcKey, config) => {\n  const {showErrorMessage} = config.settings;\n\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n\n  state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), undefined);\n  state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), null);\n  state = state.deleteIn(expandTreePath(path, \"properties\", \"asyncListValues\"));\n\n  if (showErrorMessage) {\n    // clear value error\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), null);\n\n    // if current operator is range, clear possible range error\n    const operatorConfig = getOperatorConfig(config, operator, field);\n    const operatorCardinality = operator ? defaultValue(operatorConfig.cardinality, 1) : null;\n    if (operatorConfig.validateValues) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality), null);\n    }\n  }\n  \n  // set valueSrc\n  if (typeof srcKey === \"undefined\") {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\"), null);\n  } else {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\"), srcKey);\n  }\n\n  // maybe set default value\n  if (srcKey) {\n    const properties = state.getIn(expandTreePath(path, \"properties\"));\n    // this call should return canReuseValue = false and provide default value\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      config, config, properties, field, operator, \"valueSrc\", true\n    );\n    if (!canReuseValue && newValueSrc.get(delta) == srcKey) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), newValue.get(delta));\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), newValueType.get(delta));\n    }\n  }\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} name\n * @param {*} value\n */\nconst setOperatorOption = (state, path, name, value) => {\n  return state.setIn(expandTreePath(path, \"properties\", \"operatorOptions\", name), value);\n};\n\n/**\n * @param {Immutable.Map} state\n */\nconst checkEmptyGroups = (state, config) => {\n  const {canLeaveEmptyGroup} = config.settings;\n  if (!canLeaveEmptyGroup) {\n    state = fixEmptyGroupsInTree(state);\n  }\n  return state;\n};\n\n\n/**\n * \n */\nconst calculateValueType = (value, valueSrc, config) => {\n  let calculatedValueType = null;\n  if (value) {\n    if (valueSrc === \"field\") {\n      const fieldConfig = getFieldConfig(config, value);\n      if (fieldConfig) {\n        calculatedValueType = fieldConfig.type;\n      }\n    } else if (valueSrc === \"func\") {\n      const funcKey = value.get(\"func\");\n      if (funcKey) {\n        const funcConfig = getFuncConfig(config, funcKey);\n        if (funcConfig) {\n          calculatedValueType = funcConfig.returnType;\n        }\n      }\n    }\n  }\n  return calculatedValueType;\n};\n\nconst getField = (state, path) => {\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  return field;\n};\n\nconst emptyDrag = {\n  dragging: {\n    id: null,\n    x: null,\n    y: null,\n    w: null,\n    h: null\n  },\n  mousePos: {},\n  dragStart: {\n    id: null,\n  },\n};\n\nconst getActionMeta = (action, state) => {\n  if (!action || !action.type)\n    return null;\n  const actionKeysToOmit = [\n    \"config\", \"asyncListValues\", \"__isInternal\"\n  ];\n  const actionTypesToIgnore = [\n    constants.SET_TREE,\n    constants.SET_DRAG_START,\n    constants.SET_DRAG_PROGRESS,\n    constants.SET_DRAG_END,\n  ];\n  let meta = mapValues(omit(action, actionKeysToOmit), applyToJS);\n  let affectedField = action.path && getField(state.tree, action.path) || action.field;\n  if (affectedField)\n    meta.affectedField = affectedField;\n  if (actionTypesToIgnore.includes(action.type) || action.type.indexOf(\"@@redux\") == 0)\n    meta = null;\n  return meta;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {object} action\n */\nexport default (config, tree, getMemoizedTree, setLastTree) => {\n  const emptyTree = defaultRoot(config);\n  const initTree = tree || emptyTree;\n  const emptyState = {\n    tree: initTree, \n    ...emptyDrag\n  };\n    \n  return (state = emptyState, action) => {\n    const unset = {__isInternalValueChange: undefined, __lastAction: undefined};\n    let set = {};\n    let actionMeta = getActionMeta(action, state);\n\n    switch (action?.type) {\n    case constants.SET_TREE: {\n      const validatedTree = getMemoizedTree(action.config, action.tree);\n      set.tree = validatedTree;\n      break;\n    }\n\n    case constants.ADD_CASE_GROUP: {\n      set.tree = addNewGroup(state.tree, action.path, \"case_group\", action.id, action.properties, action.config,  action.children, action.meta);\n      break;\n    }\n\n    case constants.ADD_GROUP: {\n      set.tree = addNewGroup(state.tree, action.path, \"group\", action.id, action.properties, action.config,  action.children, action.meta);\n      break;\n    }\n\n    case constants.REMOVE_GROUP: {\n      set.tree = removeGroup(state.tree, action.path, action.config);\n      break;\n    }\n\n    case constants.ADD_RULE: {\n      set.tree = addItem(state.tree, action.path, action.ruleType, action.id, action.properties, action.config, action.children);\n      break;\n    }\n\n    case constants.REMOVE_RULE: {\n      set.tree = removeRule(state.tree, action.path, action.config);\n      break;\n    }\n\n    case constants.SET_CONJUNCTION: {\n      set.tree = setConjunction(state.tree, action.path, action.conjunction);\n      break;\n    }\n\n    case constants.SET_NOT: {\n      set.tree = setNot(state.tree, action.path, action.not);\n      break;\n    }\n\n    case constants.SET_FIELD: {\n      set.tree = setField(state.tree, action.path, action.field, action.config);\n      break;\n    }\n\n    case constants.SET_LOCK: {\n      set.tree = setLock(state.tree, action.path, action.lock);\n      break;\n    }\n\n    case constants.SET_OPERATOR: {\n      set.tree = setOperator(state.tree, action.path, action.operator, action.config);\n      break;\n    }\n\n    case constants.SET_VALUE: {\n      const {tree, isInternalValueChange} = setValue(\n        state.tree, action.path, action.delta, action.value, action.valueType, action.config, action.asyncListValues, action.__isInternal\n      );\n      set.__isInternalValueChange = isInternalValueChange;\n      set.tree = tree;\n      break;\n    }\n\n    case constants.SET_VALUE_SRC: {\n      set.tree = setValueSrc(state.tree, action.path, action.delta, action.srcKey, action.config);\n      break;\n    }\n\n    case constants.SET_OPERATOR_OPTION: {\n      set.tree = setOperatorOption(state.tree, action.path, action.name, action.value);\n      break;\n    }\n\n    case constants.MOVE_ITEM: {\n      set.tree = moveItem(state.tree, action.fromPath, action.toPath, action.placement, action.config);\n      break;\n    }\n\n    case constants.SET_DRAG_START: {\n      set.dragStart = action.dragStart;\n      set.dragging = action.dragging;\n      set.mousePos = action.mousePos;\n      break;\n    }\n\n    case constants.SET_DRAG_PROGRESS: {\n      set.mousePos = action.mousePos;\n      set.dragging = action.dragging;\n      break;\n    }\n\n    case constants.SET_DRAG_END: {\n      set.tree = checkEmptyGroups(state.tree, config);\n      set = { ...set, ...emptyDrag };\n      break;\n    }\n\n    default: {\n      break;\n    }\n    }\n\n    if (actionMeta) {\n      set.__lastAction = actionMeta;\n    }\n\n    if (setLastTree && set.tree && state.tree) {\n      setLastTree(state.tree);\n    }\n    \n    return {...state, ...unset, ...set};\n  };\n\n};\n","import Immutable from \"immutable\";\nimport {toImmutableList} from \"../utils/stuff\";\nimport * as constants from \"../stores/constants\";\nimport { defaultRuleProperties, defaultGroupProperties } from \"../utils/defaultUtils\";\nimport uuid from \"../utils/uuid\";\n\n\n/**\n * @param {object} config\n * @param {Immutable.Map} tree\n */\nexport const setTree = (config, tree) => ({\n  type: constants.SET_TREE,\n  tree: tree,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addRule = (config, path, properties, ruleType = \"rule\", children = null) => ({\n  type: constants.ADD_RULE,\n  ruleType: ruleType,\n  children: children,\n  path: toImmutableList(path),\n  id: uuid(),\n  properties: defaultRuleProperties(config).merge(properties || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nexport const removeRule = (config, path) => ({\n  type: constants.REMOVE_RULE,\n  path: toImmutableList(path),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addDefaultCaseGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_CASE_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(properties || {}),\n  config: config,\n  meta: {\n    isDefaultCase: true\n  }\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addCaseGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_CASE_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(properties || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(properties || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nexport const removeGroup = (config, path) => ({\n  type: constants.REMOVE_GROUP,\n  path: toImmutableList(path),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Array} fromPath\n * @param {Array} toPath\n * @param {String} placement, see constants PLACEMENT_*\n */\nexport const moveItem = (config, fromPath, toPath, placement) => ({\n  type: constants.MOVE_ITEM,\n  fromPath: toImmutableList(fromPath),\n  toPath: toImmutableList(toPath),\n  placement: placement,\n  config: config,\n});\n","import * as constants from \"../stores/constants\";\nimport {toImmutableList} from \"../utils/stuff\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} conjunction\n */\nexport const setConjunction = (config, path, conjunction) => ({\n  type: constants.SET_CONJUNCTION,\n  path: toImmutableList(path),\n  conjunction: conjunction\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {bool} not\n */\nexport const setNot = (config, path, not) => ({\n  type: constants.SET_NOT,\n  path: toImmutableList(path),\n  not: not\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {bool} lock\n */\nexport const setLock = (config, path, lock) => ({\n  type: constants.SET_LOCK,\n  path: toImmutableList(path),\n  lock: lock\n});","import * as constants from \"../stores/constants\";\nimport {toImmutableList} from \"../utils/stuff\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} field\n */\nexport const setField = (config, path, field) => ({\n  type: constants.SET_FIELD,\n  path: toImmutableList(path),\n  field: field,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} operator\n */\nexport const setOperator = (config, path, operator) => ({\n  type: constants.SET_OPERATOR,\n  path: toImmutableList(path),\n  operator: operator,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} value\n * @param {string} valueType\n * @param {*} asyncListValues\n * @param {boolean} __isInternal\n */\nexport const setValue = (config, path, delta, value, valueType, asyncListValues, __isInternal) => ({\n  type: constants.SET_VALUE,\n  path: toImmutableList(path),\n  delta: delta,\n  value: value,\n  valueType: valueType,\n  asyncListValues: asyncListValues,\n  config: config,\n  __isInternal: __isInternal\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nexport const setValueSrc = (config, path, delta, srcKey) => ({\n  type: constants.SET_VALUE_SRC,\n  path: toImmutableList(path),\n  delta: delta,\n  srcKey: srcKey,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} name\n * @param {*} value\n */\nexport const setOperatorOption = (config, path, name, value) => ({\n  type: constants.SET_OPERATOR_OPTION,\n  path: toImmutableList(path),\n  name: name,\n  value: value,\n  config: config\n});\n","import * as Export from \"./export\";\nimport * as Import from \"./import\";\nimport * as BasicUtils from \"./utils\";\nimport * as BasicFuncs from \"./config/funcs\";\nimport CoreConfig, { ConfigMixins } from \"./config\";\nimport TreeStore from \"./stores/tree\";\nimport * as TreeActions from \"./actions\";\n\nconst Utils = {...BasicUtils, ...Export, ...Import, ConfigMixins};\n\nexport {Utils, Export, Import, BasicFuncs, CoreConfig, TreeStore, TreeActions};\n","import { TreeStore } from \"@react-awesome-query-builder/core\";\nexport default TreeStore;\n","import React from \"react\";\n\nexport default React.createContext(); ","export const ADD_GROUP = \"ADD_GROUP\";\nexport const ADD_CASE_GROUP = \"ADD_CASE_GROUP\";\nexport const REMOVE_GROUP = \"REMOVE_GROUP\";\nexport const SET_CONJUNCTION = \"SET_CONJUNCTION\";\nexport const SET_NOT = \"SET_NOT\";\nexport const ADD_RULE = \"ADD_RULE\";\nexport const REMOVE_RULE = \"REMOVE_RULE\";\nexport const SET_FIELD = \"SET_FIELD\";\nexport const SET_OPERATOR = \"SET_OPERATOR\";\nexport const SET_VALUE = \"SET_VALUE\";\nexport const SET_VALUE_SRC = \"SET_VALUE_SRC\";\nexport const SET_OPERATOR_OPTION = \"SET_OPERATOR_OPTION\";\nexport const SET_LOCK = \"SET_LOCK\";\n\nexport const SET_TREE = \"SET_TREE\";\n\nexport const MOVE_ITEM = \"MOVE_ITEM\";\n\nexport const PLACEMENT_AFTER = \"after\";\nexport const PLACEMENT_BEFORE = \"before\";\nexport const PLACEMENT_APPEND = \"append\";\nexport const PLACEMENT_PREPEND = \"prepend\";\n\nexport const SET_DRAG_PROGRESS = \"SET_DRAG_PROGRESS\";\nexport const SET_DRAG_START = \"SET_DRAG_START\";\nexport const SET_DRAG_END = \"SET_DRAG_END\";\n","import * as constants from \"../stores/constants\";\n\n\n/**\n * @param {Object} mousePos\n * @param {Object} dragging\n */\nexport const setDragProgress = (mousePos, dragging) => ({\n  type: constants.SET_DRAG_PROGRESS,\n  mousePos: mousePos,\n  dragging: dragging,\n});\n\n/**\n * @param {Object} dragStart\n * @param {Object} dragging\n * @param {Object} mousePos\n */\nexport const setDragStart = (dragStart, dragging, mousePos) => ({\n  type: constants.SET_DRAG_START,\n  dragStart: dragStart,\n  dragging: dragging,\n  mousePos: mousePos,\n});\n\n/**\n *\n */\nexport const setDragEnd = () => ({\n  type: constants.SET_DRAG_END,\n});\n","import { TreeActions } from \"@react-awesome-query-builder/core\";\nimport * as drag from \"./drag\";\nconst { tree, group, rule } = TreeActions;\nexport {\n  tree,\n  group,\n  rule,\n  drag\n};\n","import pick from \"lodash/pick\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { extendConfig, configKeys } = Utils.ConfigUtils;\n\nconst pickConfig = (props) => {\n  return pick(props, configKeys);\n};\n\nexport const createConfigMemo = () => {\n  const configStore = new Map();\n  const maxSize = 2; // current and prev\n  let configId = 0;\n\n  const extendAndStore = (config) => {\n    const extendedConfig = extendConfig(config, ++configId);\n    if ((configStore.size + 1) > maxSize) {\n      configStore.delete(configStore.keys()[0]);\n    }\n    configStore.set(config, extendedConfig);\n    return extendedConfig;\n  };\n\n  const findBasic = (findConfig) => {\n    for (const basicConfig of configStore.keys()) {\n      const extConfig = configStore.get(basicConfig);\n      const found = configKeys.map(k => extConfig[k] === findConfig[k]).filter(v => !v).length === 0;\n      if (found) {\n        return basicConfig;\n      }\n    }\n    return findConfig;\n  };\n\n  const findExtended = (findConfig) => {\n    // strict find:\n    // return configStore.get(findConfig) || configStore.values().find(ec => ec === findConfig);\n\n    for (const savedConfig of configStore.keys()) {\n      const found = configKeys.map(k => savedConfig[k] === findConfig[k]).filter(v => !v).length === 0;\n      if (found) {\n        return configStore.get(savedConfig);\n      }\n    }\n\n    for (const extendedConfig of configStore.values()) {\n      const found = configKeys.map(k => extendedConfig[k] === findConfig[k]).filter(v => !v).length === 0;\n      if (found) {\n        return extendedConfig;\n      }\n    }\n\n    return null;\n  };\n\n  const findOrExtend = (config) => {\n    return findExtended(config) || extendAndStore(config);\n  };\n  \n  return {\n    getExtended: (props) => findOrExtend(pickConfig(props)),\n    getBasic: findBasic\n  };\n};\n","\nexport const defaultValue = (value, _default) => {\n  return (typeof value === \"undefined\") ? _default : value;\n};\n\nexport const truncateString = (str, n, useWordBoundary) => {\n  if (!n || str.length <= n) { return str; }\n  var subString = str.substr(0, n-1);\n  return (useWordBoundary \n    ? subString.substr(0, subString.lastIndexOf(\" \")) \n    : subString) + \"...\";\n};\n\nexport const immutableEqual = function(v1, v2) {\n  if (v1 === v2) {\n    return true;\n  } else {\n    return v1.equals(v2);\n  }\n};\n\n// const deepEqual = function(v1, v2) {\n//   if (v1 === v2) {\n//     return true;\n//   } else if (Map.isMap(v1)) {\n//     return v1.equals(v2);\n//   } else {\n//     return JSON.stringify(v1) == JSON.stringify(v2);\n//   }\n// };\n\n\nexport const shallowEqual = (a, b, deep = false) => {\n  if (a === b) {\n    return true;\n  } else if (Array.isArray(a))\n    return shallowEqualArrays(a, b, deep);\n  else if (a && typeof a.equals === \"function\")\n    return a.equals(b);\n  else if (typeof a === \"object\")\n    return shallowEqualObjects(a, b, deep);\n  else\n    return a === b;\n};\n\nfunction shallowEqualArrays(arrA, arrB, deep = false) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var isEqual = deep ? shallowEqual(arrA[i], arrB[i], deep) : arrA[i] === arrB[i];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowEqualObjects(objA, objB, deep = false) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n    var isEqual = deep ? shallowEqual(objA[key], objB[key], deep) : objA[key] === objB[key];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n\nconst isImmutable = (v) => {\n  return typeof v === \"object\" && v !== null && typeof v.toJS === \"function\";\n};\n\n\n// export function toImmutableList(v) {\n//   return (isImmutable(v) ? v : new Immutable.List(v));\n// }\n\n\nconst isDev = () => (typeof process !== \"undefined\" && process.env && process.env.NODE_ENV == \"development\");\n\nexport const getLogger = (devMode = false) => {\n  const verbose = devMode != undefined ? devMode : isDev(); \n  return verbose ? console : {\n    error: () => {},\n    log: () => {},\n    warn: () => {},\n    debug: () => {},\n    info: () => {},\n  };\n};\n\n\nexport const logger = getLogger();\n\n","import {immutableEqual} from \"../utils/stuff\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { validateAndFixTree } = Utils;\n\nexport const createValidationMemo = () => {\n  let originalTree;\n  let validatedTree;\n  let configId;\n\n  return (config, tree, oldConfig = undefined, sanitizeTree = true) => {\n    if (!tree) {\n      return null;\n    }\n    if (config.__configId === configId && (immutableEqual(tree, originalTree) || immutableEqual(tree, validatedTree))) {\n      return validatedTree;\n    } else {\n      configId = config.__configId;\n      originalTree = tree;\n      if (sanitizeTree === false) {\n        validatedTree = validateAndFixTree(tree, null, config, oldConfig || config, false, false);\n      } else {\n        validatedTree = validateAndFixTree(tree, null, config, oldConfig || config);\n      }\n      return validatedTree;\n    }\n  };\n};\n","import React from \"react\";\nimport mapValues from \"lodash/mapValues\";\nimport {shallowEqual} from \"./stuff\";\n\nconst getReactContainerType = (el) => {\n  if (el._reactRootContainer) {\n    return \"root\";\n  }\n  if (Object.getOwnPropertyNames(el).filter(k => k.startsWith(\"__reactContainer\")).length > 0) {\n    return \"container\";\n  }\n  return undefined;\n};\n\nconst getReactRootNodeType = (node) => {\n  if (!node) {\n    return undefined;\n  }\n  const type = getReactContainerType(node);\n  if (type !== undefined) {\n    return type;\n  } else {\n    return getReactRootNodeType(node.parentNode);\n  }\n};\n\nexport const isUsingLegacyReactDomRender = (node) => {\n  return getReactRootNodeType(node) === \"root\";\n};\n\n\nexport const liteShouldComponentUpdate = (self, config) => (nextProps, nextState) => {\n  const prevProps = self.props;\n  const prevState = self.state;\n\n  let should = nextProps != prevProps || nextState != prevState;\n  if (should) {\n    if (prevState == nextState && prevProps != nextProps) {\n      let chs = [];\n      for (let k in nextProps) {\n        let changed = (nextProps[k] != prevProps[k]);\n        if (changed) {\n          if (config[k] == \"ignore\")\n            changed = false;\n          else if (config[k] == \"shallow_deep\")\n            changed = !shallowEqual(nextProps[k], prevProps[k], true);\n          else if (config[k] == \"shallow\")\n            changed = !shallowEqual(nextProps[k], prevProps[k]);\n          else if (typeof config[k] == \"function\")\n            changed = config[k](nextProps[k], prevProps[k], nextState);\n        }\n        if (changed)\n          chs.push(k);\n      }\n      if (!chs.length)\n        should = false;\n    }\n  }\n  return should;\n};\n\nexport const pureShouldComponentUpdate = (self) => function(nextProps, nextState) {\n  return (\n    !shallowEqual(self.props, nextProps)\n    || !shallowEqual(self.state, nextState)\n  );\n};\n\nconst canUseOldComponentWillReceiveProps = () => {\n  const v = React.version.split(\".\").map(parseInt.bind(null, 10));\n  return v[0] == 16 && v[1] < 3 || v[0] < 16;\n};\n\nexport const useOnPropsChanged = (obj) => {\n  // 1. `shouldComponentUpdate` should be called after `componentWillReceiveProps`\n  // 2. `shouldComponentUpdate` should not be used for PureComponent\n\n  // Because `useOnPropsChanged` can only be applied to `Component` not `PureComponent`, make it pure now\n  if (!obj.shouldComponentUpdate) {\n    obj.shouldComponentUpdate = pureShouldComponentUpdate(obj);\n  }\n\n  if (canUseOldComponentWillReceiveProps()) {\n    // Use old method\n    obj.componentWillReceiveProps = (nextProps) => {\n      obj.onPropsChanged(nextProps);\n    };\n  } else {\n    // Simulate `componentWillReceiveProps` with `shouldComponentUpdate`\n    const origShouldComponentUpdate = obj.shouldComponentUpdate;\n    const newShouldComponentUpdate = function(nextProps, nextState) {\n      const shouldNotify = !shallowEqual(obj.props, nextProps);\n      if (shouldNotify) {\n        obj.onPropsChanged(nextProps);\n      }\n      const shouldUpdate = origShouldComponentUpdate.call(obj, nextProps, nextState);\n      return shouldUpdate;\n    };\n    obj.shouldComponentUpdate = newShouldComponentUpdate.bind(obj);\n  }\n};\n\nexport const bindActionCreators = (actionCreators, config, dispatch) =>\n  mapValues(actionCreators, (actionCreator) =>\n    (...args) => dispatch(actionCreator(config, ...args))\n  );\n","import React, { Component } from \"react\";\nimport merge from \"lodash/merge\";\nimport {connect} from \"react-redux\";\nimport context from \"../stores/context\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../actions\";\nimport {immutableEqual} from \"../utils/stuff\";\nimport {useOnPropsChanged, liteShouldComponentUpdate, bindActionCreators} from \"../utils/reactUtils\";\n\n\nclass Query extends Component {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    onChange: PropTypes.func,\n    renderBuilder: PropTypes.func,\n    tree: PropTypes.any, //instanceOf(Immutable.Map)\n    //dispatch: PropTypes.func.isRequired,\n    //__isInternalValueChange\n    //__lastAction\n    //getMemoizedTree: PropTypes.func.isRequired,\n    //getBasicConfig: PropTypes.func.isRequired,\n    //sanitizeTree\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this._updateActions(props);\n\n    // For preventive validation (tree and config consistency)\n    // When config has changed from QueryContainer, \n    //  but new dispatched validated tree value is not in redux store yet (tree prop is old)\n    this.validatedTree = props.getMemoizedTree(props.config, props.tree, undefined, props.sanitizeTree);\n    this.oldValidatedTree = this.validatedTree;\n\n    //props.onChange && props.onChange(this.validatedTree, props.config);\n  }\n\n  _updateActions (props) {\n    const {config, dispatch} = props;\n    this.actions = bindActionCreators({...actions.tree, ...actions.group, ...actions.rule}, config, dispatch);\n  }\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    tree: (nextValue) => {\n      if (nextValue === this.oldValidatedTree && this.oldValidatedTree === this.validatedTree) {\n        // Got value dispatched from QueryContainer\n        // Ignore, because we've just rendered it\n        return false;\n      }\n      return true;\n    }\n  });\n\n  onPropsChanged(nextProps) {\n    const {onChange} = nextProps;\n    const oldConfig = this.props.config;\n    const newTree = nextProps.tree;\n    const oldTree = this.props.tree;\n    const newConfig = nextProps.config;\n\n    this.oldValidatedTree = this.validatedTree;\n    this.validatedTree = newTree;\n    if (oldConfig !== newConfig) {\n      this._updateActions(nextProps);\n      this.validatedTree = nextProps.getMemoizedTree(newConfig, newTree, oldConfig);\n    }\n\n    const validatedTreeChanged = !immutableEqual(this.validatedTree, this.oldValidatedTree);\n    if (validatedTreeChanged) {\n      const newBasicConfig = nextProps.getBasicConfig(newConfig);\n      onChange && onChange(this.validatedTree, newBasicConfig, nextProps.__lastAction);\n    }\n  }\n\n  render() {\n    const {config, renderBuilder, dispatch, __isInternalValueChange} = this.props;\n    const builderProps = {\n      tree: this.validatedTree,\n      actions: this.actions,\n      config: config,\n      dispatch: dispatch,\n      __isInternalValueChange\n    };\n\n    return renderBuilder(builderProps);\n  }\n}\n\n\nconst ConnectedQuery = connect(\n  (state) => {\n    return {\n      tree: state.tree,\n      __isInternalValueChange: state.__isInternalValueChange,\n      __lastAction: state.__lastAction,\n    };\n  },\n  null,\n  null,\n  {\n    context\n  }\n)(Query);\nConnectedQuery.displayName = \"ConnectedQuery\";\n\n\nexport default ConnectedQuery;\n","import React, { Component, PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport treeStoreReducer from \"../stores/tree\";\nimport context from \"../stores/context\";\nimport {createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport * as actions from \"../actions\";\nimport {createConfigMemo} from \"../utils/configUtils\";\nimport {immutableEqual} from \"../utils/stuff\";\nimport {createValidationMemo} from \"../utils/validation\";\nimport {liteShouldComponentUpdate, useOnPropsChanged} from \"../utils/reactUtils\";\nimport ConnectedQuery from \"./Query\";\nconst {defaultRoot} = Utils.DefaultUtils;\n\n\nexport default class QueryContainer extends Component {\n  static propTypes = {\n    //config\n    conjunctions: PropTypes.object.isRequired,\n    fields: PropTypes.object.isRequired,\n    types: PropTypes.object.isRequired,\n    operators: PropTypes.object.isRequired,\n    widgets: PropTypes.object.isRequired,\n    settings: PropTypes.object.isRequired,\n    ctx: PropTypes.object.isRequired,\n\n    onChange: PropTypes.func,\n    renderBuilder: PropTypes.func,\n    value: PropTypes.any, //instanceOf(Immutable.Map)\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    useOnPropsChanged(this);\n\n    const { getExtended, getBasic } = createConfigMemo();\n    this.getMemoizedConfig = getExtended;\n    this.getBasicConfig = getBasic;\n    this.getMemoizedTree = createValidationMemo();\n    \n    const config = this.getMemoizedConfig(props);\n    const tree = props.value;\n    const validatedTree = this.getMemoizedTree(config, tree);\n\n    const reducer = treeStoreReducer(config, validatedTree, this.getMemoizedTree, this.setLastTree);\n    const store = createStore(reducer);\n\n    this.config = config;\n    this.state = {\n      store\n    };\n    this.QueryWrapper = (pr) => config.settings.renderProvider(pr, config.ctx);\n  }\n\n  setLastTree = (lastTree) => {\n    if (this.prevTree) {\n      this.prevprevTree = this.prevTree;\n    }\n    this.prevTree = lastTree;\n  };\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    value: (nextValue, prevValue, state) => { return false; }\n  });\n\n  onPropsChanged(nextProps) {\n    // compare configs\n    const prevProps = this.props;\n    const oldConfig = this.config;\n    const nextConfig = this.getMemoizedConfig(nextProps);\n    const isConfigChanged = oldConfig !== nextConfig;\n\n    // compare trees\n    const storeValue = this.state.store.getState().tree;\n    const isTreeChanged = !immutableEqual(nextProps.value, this.props.value) && !immutableEqual(nextProps.value, storeValue);\n    const currentTree = isTreeChanged ? nextProps.value || defaultRoot(nextProps) : storeValue;\n    const isTreeTrulyChanged = isTreeChanged && !immutableEqual(nextProps.value, this.prevTree) && !immutableEqual(nextProps.value, this.prevprevTree);\n    this.sanitizeTree = isTreeTrulyChanged || isConfigChanged;\n\n    if (isConfigChanged) {\n      if (prevProps.settings.renderProvider !== nextProps.settings.renderProvider) {\n        this.QueryWrapper = (props) => nextConfig.settings.renderProvider(props, nextConfig.ctx);\n      }\n      this.config = nextConfig;\n    }\n    \n    if (isTreeChanged || isConfigChanged) {\n      const validatedTree = this.getMemoizedTree(nextConfig, currentTree, oldConfig, this.sanitizeTree);\n      //return Promise.resolve().then(() => {\n      this.state.store.dispatch(\n        actions.tree.setTree(nextConfig, validatedTree)\n      );\n      //});\n    }\n  }\n\n  render() {\n    // `get_children` is deprecated!\n    const {renderBuilder, get_children, onChange} = this.props;\n    const {store} = this.state;\n    const config = this.config;\n    const QueryWrapper = this.QueryWrapper;\n\n    return (\n      <QueryWrapper config={config}>\n        <Provider store={store} context={context}>\n          <ConnectedQuery\n            config={config}\n            getMemoizedTree={this.getMemoizedTree}\n            getBasicConfig={this.getBasicConfig}\n            sanitizeTree={this.sanitizeTree}\n            onChange={onChange}\n            renderBuilder={renderBuilder || get_children}\n          />\n        </Provider>\n      </QueryWrapper>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport context from \"../../stores/context\";\nimport {pureShouldComponentUpdate} from \"../../utils/reactUtils\";\nimport {connect} from \"react-redux\";\nimport classNames from \"classnames\";\nconst {getFieldConfig} = Utils.ConfigUtils;\n\n\nconst createRuleContainer = (Rule) => \n  class RuleContainer extends Component {\n    static propTypes = {\n      id: PropTypes.string.isRequired,\n      groupId: PropTypes.string,\n      config: PropTypes.object.isRequired,\n      path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n      operator: PropTypes.string,\n      field: PropTypes.string,\n      actions: PropTypes.object.isRequired, //{removeRule: Funciton, setField, setOperator, setOperatorOption, setValue, setValueSrc, ...}\n      onDragStart: PropTypes.func,\n      value: PropTypes.any, //depends on widget\n      valueSrc: PropTypes.any,\n      asyncListValues: PropTypes.array,\n      valueError: PropTypes.any,\n      operatorOptions: PropTypes.object,\n      reordableNodesCnt: PropTypes.number,\n      parentField: PropTypes.string, //from RuleGroup\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n      //connected:\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isDraggingTempo: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      \n      this.dummyFn.isDummyFn = true;\n    }\n\n    dummyFn = () => {};\n\n    removeSelf = () => {\n      this.props.actions.removeRule(this.props.path);\n    };\n\n    setLock = (lock = null) => {\n      this.props.actions.setLock(this.props.path, lock);\n    };\n\n    setField = (field) => {\n      this.props.actions.setField(this.props.path, field);\n    };\n\n    setOperator = (operator) => {\n      this.props.actions.setOperator(this.props.path, operator);\n    };\n\n    setOperatorOption = (name, value) => {\n      this.props.actions.setOperatorOption(this.props.path, name, value);\n    };\n\n    setValue = (delta, value, type, asyncListValues, __isInternal) => {\n      this.props.actions.setValue(this.props.path, delta, value, type, asyncListValues, __isInternal);\n    };\n\n    setValueSrc = (delta, srcKey) => {\n      this.props.actions.setValueSrc(this.props.path, delta, srcKey);\n    };\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          const draggingId = (nextProps.dragging.id || prevProps.dragging.id);\n          const isDraggingMe = draggingId == nextProps.id;\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (k == \"dragging\" && !isDraggingMe) {\n              changed = false; //dragging another item -> ignore\n            }\n            if (changed) {\n              chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    render() {\n      const isDraggingMe = this.props.dragging.id == this.props.id;\n      const fieldConfig = getFieldConfig(this.props.config, this.props.field);\n      const {showErrorMessage} = this.props.config.settings;\n      const _isGroup = fieldConfig && fieldConfig.type == \"!struct\";\n      const isInDraggingTempo = !isDraggingMe && this.props.isDraggingTempo;\n\n      const valueError = this.props.valueError;\n      const oneValueError = valueError && valueError.toArray().filter(e => !!e).shift() || null;\n      const hasError = oneValueError != null && showErrorMessage;\n\n      return (\n        <div\n          className={classNames(\"group-or-rule-container\", \"rule-container\", hasError ? \"rule-with-error\" : null)}\n          data-id={this.props.id}\n        >\n          {[\n            isDraggingMe ? <Rule\n              key={\"dragging\"}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={true}\n              isDraggingTempo={true}\n              dragging={this.props.dragging}\n              setField={this.dummyFn}\n              setOperator={this.dummyFn}\n              setOperatorOption={this.dummyFn}\n              setLock={this.dummyFn}\n              removeSelf={this.dummyFn}\n              setValue={this.dummyFn}\n              setValueSrc={this.dummyFn}\n              selectedField={this.props.field || null}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              value={this.props.value || null}\n              valueSrc={this.props.valueSrc || null}\n              valueError={this.props.valueError || null}\n              operatorOptions={this.props.operatorOptions}\n              config={this.props.config}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              asyncListValues={this.props.asyncListValues}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            /> : null\n            ,\n            <Rule\n              key={this.props.id}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={isDraggingMe}\n              isDraggingTempo={isInDraggingTempo}\n              onDragStart={this.props.onDragStart}\n              setLock={isInDraggingTempo ? this.dummyFn : this.setLock}\n              removeSelf={isInDraggingTempo ? this.dummyFn : this.removeSelf}\n              setField={isInDraggingTempo ? this.dummyFn : this.setField}\n              setOperator={isInDraggingTempo ? this.dummyFn : this.setOperator}\n              setOperatorOption={isInDraggingTempo ? this.dummyFn : this.setOperatorOption}\n              setValue={isInDraggingTempo ? this.dummyFn : this.setValue}\n              setValueSrc={isInDraggingTempo ? this.dummyFn : this.setValueSrc}\n              selectedField={this.props.field || null}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              value={this.props.value || null}\n              valueSrc={this.props.valueSrc || null}\n              valueError={this.props.valueError || null}\n              operatorOptions={this.props.operatorOptions}\n              config={this.props.config}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              asyncListValues={this.props.asyncListValues}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            />\n          ]}\n        </div>\n      );\n    }\n\n  };\n\n\nexport default (Rule) => {\n  const ConnectedRuleContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n      };\n    },\n    null,\n    null,\n    {\n      context\n    }\n  )(createRuleContainer(Rule));\n  ConnectedRuleContainer.displayName = \"ConnectedRuleContainer\";\n\n  return ConnectedRuleContainer;\n};\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport {connect} from \"react-redux\";\nimport {logger} from \"../../utils/stuff\";\nimport context from \"../../stores/context\";\nimport * as constants from \"../../stores/constants\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../../actions\";\nimport {pureShouldComponentUpdate, useOnPropsChanged, isUsingLegacyReactDomRender} from \"../../utils/reactUtils\";\nconst {clone} = Utils;\nconst {getFlatTree} = Utils.TreeUtils;\n\nlet _isReorderingTree = false;\n\nconst createSortableContainer = (Builder, CanMoveFn = null) => \n  class SortableContainer extends Component {\n    static propTypes = {\n      tree: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n      actions: PropTypes.object.isRequired, // {moveItem: Function, ..}\n      //... see Builder\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      useOnPropsChanged(this);\n\n      this.onPropsChanged(props);\n    }\n\n    onPropsChanged(nextProps) {\n      this.tree = getFlatTree(nextProps.tree);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (changed) {\n              //don't render <Builder> on dragging - appropriate redux-connected components will do it\n              if(k != \"dragging\" && k != \"mousePos\")\n                chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    componentDidUpdate(_prevProps, _prevState) {\n      let dragging = this.props.dragging;\n      let startDragging = this.props.dragStart;\n      _isReorderingTree = false;\n      if (startDragging && startDragging.id) {\n        dragging.itemInfo = this.tree.items[dragging.id];\n        if (dragging.itemInfo) {\n          if (dragging.itemInfo.index != startDragging.itemInfo.index || dragging.itemInfo.parent != startDragging.itemInfo.parent) {\n            const treeEl = startDragging.treeEl;\n            const treeElContainer = startDragging.treeElContainer;\n            const plhEl = this._getPlaceholderNodeEl(treeEl, true);\n            if (plhEl) {\n              const plX = plhEl.getBoundingClientRect().left + window.scrollX;\n              const plY = plhEl.getBoundingClientRect().top + window.scrollY;\n              const oldPlX = startDragging.plX;\n              const oldPlY = startDragging.plY;\n              const scrollTop = treeElContainer.scrollTop;\n              startDragging.plX = plX;\n              startDragging.plY = plY;\n              startDragging.itemInfo = clone(dragging.itemInfo);\n              startDragging.y = plhEl.offsetTop;\n              startDragging.x = plhEl.offsetLeft;\n              startDragging.clientY += (plY - oldPlY);\n              startDragging.clientX += (plX - oldPlX);\n              if (treeElContainer != document.body)\n                startDragging.scrollTop = scrollTop;\n\n              this.onDrag(this.props.mousePos, false);\n            }\n          }\n        }\n      }\n    }\n\n    _getNodeElById (treeEl, indexId, ignoreCache = false) {\n      if (indexId == null)\n        return null;\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[indexId];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      el = treeEl.querySelector('.group-or-rule-container[data-id=\"'+indexId+'\"]');\n      this._cacheEls[indexId] = el;\n      return el;\n    }\n\n    _getDraggableNodeEl (treeEl, ignoreCache = false) {\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[\"draggable\"];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      const els = treeEl.getElementsByClassName(\"qb-draggable\");\n      el = els.length ? els[0] : null;\n      this._cacheEls[\"draggable\"] = el;\n      return el;\n    }\n\n    _getPlaceholderNodeEl (treeEl, ignoreCache = false) {\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[\"placeholder\"];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      const els = treeEl.getElementsByClassName(\"qb-placeholder\");\n      el = els.length ? els[0] : null;\n      this._cacheEls[\"placeholder\"] = el;\n      return el;\n    }\n\n    _isScrollable(node) {\n      const overflowY = window.getComputedStyle(node)[\"overflow-y\"];\n      return (overflowY === \"scroll\" || overflowY === \"auto\") && (node.scrollHeight > node.offsetHeight);\n    }\n\n    _getScrollParent(node) {\n      if (node == null)\n        return null;\n    \n      if (node === document.body || this._isScrollable(node)) {\n        return node;\n      } else {\n        return this._getScrollParent(node.parentNode);\n      }\n    }\n\n    _getEventTarget = (e, dragStart) => {\n      return e && e.__mocked_window || document.body || window;\n    };\n\n    onDragStart = (id, dom, e) => {\n      let treeEl = dom.closest(\".query-builder\");\n      if (this._isUsingLegacyReactDomRender === undefined) {\n        this._isUsingLegacyReactDomRender = isUsingLegacyReactDomRender(treeEl);\n      }\n      document.body.classList.add(\"qb-dragging\");\n      treeEl.classList.add(\"qb-dragging\");\n      let treeElContainer = treeEl.closest(\".query-builder-container\") || treeEl;\n      treeElContainer = this._getScrollParent(treeElContainer) || document.body;\n      const scrollTop = treeElContainer.scrollTop;\n      \n      const _dragEl = this._getDraggableNodeEl(treeEl);\n      const _plhEl = this._getPlaceholderNodeEl(treeEl);\n\n      const tmpAllGroups = treeEl.querySelectorAll(\".group--children\");\n      const anyGroup = tmpAllGroups.length ? tmpAllGroups[0] : null;\n      let groupPadding;\n      if (anyGroup) {\n        groupPadding = window.getComputedStyle(anyGroup, null).getPropertyValue(\"padding-left\");\n        groupPadding = parseInt(groupPadding);\n      }\n\n      const dragging = {\n        id: id,\n        x: dom.offsetLeft,\n        y: dom.offsetTop,\n        w: dom.offsetWidth,\n        h: dom.offsetHeight,\n        itemInfo: this.tree.items[id],\n        paddingLeft: groupPadding,\n      };\n      const dragStart = {\n        id: id,\n        x: dom.offsetLeft,\n        y: dom.offsetTop,\n        scrollTop: scrollTop,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        itemInfo: clone(this.tree.items[id]),\n        treeEl: treeEl,\n        treeElContainer: treeElContainer,\n      };\n      const mousePos = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      };\n\n      const target = this._getEventTarget(e, dragStart);\n      this.eventTarget = target;\n      target.addEventListener(\"mousemove\", this.onDrag);\n      target.addEventListener(\"mouseup\", this.onDragEnd);\n\n      this.props.setDragStart(dragStart, dragging, mousePos);\n    };\n\n\n    onDrag = (e, doHandleDrag = true) => {\n      let dragging = Object.assign({}, this.props.dragging);\n      let startDragging = this.props.dragStart;\n      const paddingLeft = dragging.paddingLeft; //this.props.paddingLeft;\n      const treeElContainer = startDragging.treeElContainer;\n      const scrollTop = treeElContainer.scrollTop;\n      dragging.itemInfo = this.tree.items[dragging.id];\n      if (!dragging.itemInfo) {\n        return;\n      }\n\n      let mousePos = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      };\n      const startMousePos = {\n        clientX: startDragging.clientX,\n        clientY: startDragging.clientY,\n      };\n\n      if (e.__mock_dom) {\n        const treeEl = startDragging.treeEl;\n        const dragEl = this._getDraggableNodeEl(treeEl);\n        const plhEl = this._getPlaceholderNodeEl(treeEl);\n        e.__mock_dom({treeEl, dragEl, plhEl});\n      }\n\n      //first init plX/plY\n      if (!startDragging.plX) {\n        const treeEl = startDragging.treeEl;\n        const plhEl = this._getPlaceholderNodeEl(treeEl);\n        if (plhEl) {\n          startDragging.plX = plhEl.getBoundingClientRect().left + window.scrollX;\n          startDragging.plY = plhEl.getBoundingClientRect().top + window.scrollY;\n        }\n      }\n\n      const startX = startDragging.x;\n      const startY = startDragging.y;\n      const startClientX = startDragging.clientX;\n      const startClientY = startDragging.clientY;\n      const startScrollTop = startDragging.scrollTop;\n      const pos = {\n        x: startX + (e.clientX - startClientX),\n        y: startY + (e.clientY - startClientY) + (scrollTop - startScrollTop)\n      };\n      dragging.x = pos.x;\n      dragging.y = pos.y;\n      dragging.paddingLeft = paddingLeft;\n      dragging.mousePos = mousePos;\n      dragging.startMousePos = startMousePos;\n\n\n      this.props.setDragProgress(mousePos, dragging);\n\n      const moved = doHandleDrag ? this.handleDrag(dragging, e, CanMoveFn) : false;\n\n      if (!moved) {\n        if (e.preventDefault)\n          e.preventDefault();\n      }\n    };\n\n    onDragEnd = () => {\n      let treeEl = this.props.dragStart.treeEl;\n\n      this.props.setDragEnd();\n\n      treeEl.classList.remove(\"qb-dragging\");\n      document.body.classList.remove(\"qb-dragging\");\n      this._cacheEls = {};\n\n      const target = this.eventTarget || this._getEventTarget();\n      target.removeEventListener(\"mousemove\", this.onDrag);\n      target.removeEventListener(\"mouseup\", this.onDragEnd);\n    };\n    \n\n    handleDrag (dragInfo, e, canMoveFn) {\n      const canMoveBeforeAfterGroup = true;\n      const itemInfo = dragInfo.itemInfo;\n      const paddingLeft = dragInfo.paddingLeft;\n\n      let moveInfo = null;\n      const treeEl = this.props.dragStart.treeEl;\n      const dragId = dragInfo.id;\n      const dragEl = this._getDraggableNodeEl(treeEl);\n      const plhEl = this._getPlaceholderNodeEl(treeEl);\n      let dragRect, plhRect, hovRect, treeRect;\n      if (dragEl && plhEl) {\n        dragRect = dragEl.getBoundingClientRect();\n        plhRect = plhEl.getBoundingClientRect();\n        if (!plhRect.width) {\n          return;\n        }\n        let dragDirs = {hrz: 0, vrt: 0};\n        if (dragRect.top < plhRect.top)\n          dragDirs.vrt = -1; //up\n        else if (dragRect.bottom > plhRect.bottom)\n          dragDirs.vrt = +1; //down\n        if (dragRect.left > plhRect.left)\n          dragDirs.hrz = +1; //right\n        else if (dragRect.left < plhRect.left)\n          dragDirs.hrz = -1; //left\n\n        treeRect = treeEl.getBoundingClientRect();\n        const trgCoord = {\n          x: treeRect.left + (treeRect.right - treeRect.left) / 2,\n          y: dragDirs.vrt >= 0 ? dragRect.bottom : dragRect.top,\n        };\n        let hovCNodeEl;\n        if (e.__mocked_hov_container) {\n          hovCNodeEl = e.__mocked_hov_container;\n        } else {\n          const hovNodeEl = document.elementFromPoint(trgCoord.x, trgCoord.y-1);\n          hovCNodeEl = hovNodeEl ? hovNodeEl.closest(\".group-or-rule-container\") : null;\n          if (!hovCNodeEl && hovNodeEl && hovNodeEl.classList.contains(\"query-builder-container\")) {\n            // fix 2022-01-24 - get root .group-or-rule-container\n            const rootGroupContainer = hovNodeEl?.firstChild?.firstChild;\n            if (rootGroupContainer && rootGroupContainer.classList.contains(\"group-or-rule-container\")) {\n              hovCNodeEl = rootGroupContainer;\n            }\n          }\n        }\n        if (!hovCNodeEl) {\n          logger.log(\"out of tree bounds!\");\n        } else {\n          const isGroup = hovCNodeEl.classList.contains(\"group-container\");\n          const hovNodeId = hovCNodeEl.getAttribute(\"data-id\");\n          const hovEl = hovCNodeEl;\n          let doAppend = false;\n          let doPrepend = false;\n          if (hovEl) {\n            hovRect = hovEl.getBoundingClientRect();\n            const hovHeight = hovRect.bottom - hovRect.top;\n            const hovII = this.tree.items[hovNodeId];\n            if (!hovII) {\n              throw new Error(\"There is an issue with rendering. If you use Next.js, please check getServerSideProps() method.\");\n            }\n            let trgRect = null,\n              trgEl = null,\n              trgII = null,\n              altII = null; //for canMoveBeforeAfterGroup\n\n            if (dragDirs.vrt == 0) {\n              trgII = itemInfo;\n              trgEl = plhEl;\n              if (trgEl)\n                trgRect = trgEl.getBoundingClientRect();\n            } else {\n              if (isGroup) {\n                if (dragDirs.vrt > 0) { //down\n                  //take group header (for prepend only)\n                  const hovInnerEl = hovCNodeEl.getElementsByClassName(\"group--header\");\n                  const hovEl2 = hovInnerEl.length ? hovInnerEl[0] : null;\n                  if (hovEl2) {\n                    const hovRect2 = hovEl2.getBoundingClientRect();\n                    const hovHeight2 = hovRect2.bottom - hovRect2.top;\n                    const isOverHover = ((dragRect.bottom - hovRect2.top) > hovHeight2*3/4);\n                    if (isOverHover && hovII.top > dragInfo.itemInfo.top) {\n                      trgII = hovII;\n                      trgRect = hovRect2;\n                      trgEl = hovEl2;\n                      doPrepend = true;\n                    }\n                  }\n                } else if (dragDirs.vrt < 0) { //up\n                  if (hovII.lev >= itemInfo.lev) {\n                    //take whole group\n                    const isClimbToHover = ((hovRect.bottom - dragRect.top) >= 2);\n                    if (isClimbToHover && hovII.top < dragInfo.itemInfo.top) {\n                      trgII = hovII;\n                      trgRect = hovRect;\n                      trgEl = hovEl;\n                      doAppend = true;\n                    }\n                  }\n                }\n                if (!doPrepend && !doAppend || canMoveBeforeAfterGroup) {\n                  //take whole group and check if we can move before/after group\n                  const isOverHover = (dragDirs.vrt < 0 //up\n                    ? ((hovRect.bottom - dragRect.top) > (hovHeight-5))\n                    : ((dragRect.bottom - hovRect.top) > (hovHeight-5)));\n                  if (isOverHover) {\n                    if (!doPrepend && !doAppend) {\n                      trgII = hovII;\n                      trgRect = hovRect;\n                      trgEl = hovEl;\n                    }\n                    if (canMoveBeforeAfterGroup) {\n                      altII = hovII;\n                    }\n                  }\n                }\n              } else {\n                //check if we can move before/after group\n                const isOverHover = (dragDirs.vrt < 0 //up\n                  ? ((hovRect.bottom - dragRect.top) > hovHeight/2)\n                  : ((dragRect.bottom - hovRect.top) > hovHeight/2));\n                if (isOverHover) {\n                  trgII = hovII;\n                  trgRect = hovRect;\n                  trgEl = hovEl;\n                }\n              }\n            }\n\n            const isSamePos = (trgII && trgII.id == dragId);\n            if (trgRect) {\n              const dragLeftOffset = dragRect.left - treeRect.left;\n              const trgLeftOffset = trgRect.left - treeRect.left;\n              const _trgLev = trgLeftOffset / paddingLeft;\n              const dragLev = Math.max(0, Math.round(dragLeftOffset / paddingLeft));\n\n              //find all possible moves\n              let availMoves = [];\n              let altMoves = []; //alternatively can move after/before group, if can't move into it\n              if (isSamePos) {\n                //do nothing\n              } else {\n                if (isGroup) {\n                  if (doAppend) {\n                    availMoves.push([constants.PLACEMENT_APPEND, trgII, trgII.lev+1]);\n                  } else if (doPrepend) {\n                    availMoves.push([constants.PLACEMENT_PREPEND, trgII, trgII.lev+1]);\n                  }\n                  //alt\n                  if (canMoveBeforeAfterGroup && altII) {\n                    // fix 2022-01-24: do prepend/append instead of before/after for root\n                    const isToRoot = altII.lev == 0;\n                    // fix 2022-01-25: fix prepend/append instead of before/after for case_group\n                    const isToCase = altII.type == \"case_group\" && itemInfo.type != \"case_group\";\n                    let prevCaseId = altII.prev && this.tree.items[altII.prev].caseId;\n                    let nextCaseId = altII.next && this.tree.items[altII.next].caseId;\n                    if (itemInfo.caseId == prevCaseId)\n                      prevCaseId = null;\n                    if (itemInfo.caseId == nextCaseId)\n                      nextCaseId = null;\n                    const prevCase = prevCaseId && this.tree.items[prevCaseId];\n                    const nextCase = nextCaseId && this.tree.items[nextCaseId];\n\n                    if (dragDirs.vrt > 0) { //down\n                      if (isToRoot) {\n                        altMoves.push([constants.PLACEMENT_APPEND, altII, altII.lev+1]);\n                      } else if (isToCase && nextCase) {\n                        altMoves.push([constants.PLACEMENT_PREPEND, nextCase, nextCase.lev+1]);\n                      } else {\n                        altMoves.push([constants.PLACEMENT_AFTER, altII, altII.lev]);\n                      }\n                    } else if (dragDirs.vrt < 0) { //up\n                      if (isToRoot) {\n                        altMoves.push([constants.PLACEMENT_PREPEND, altII, altII.lev+1]);\n                      } else if (isToCase && prevCase) {\n                        altMoves.push([constants.PLACEMENT_APPEND, prevCase, prevCase.lev+1]);\n                      } else {\n                        altMoves.push([constants.PLACEMENT_BEFORE, altII, altII.lev]);\n                      }\n                    }\n                  }\n                }\n                if (!doAppend && !doPrepend) {\n                  if (dragDirs.vrt < 0) { //up\n                    availMoves.push([constants.PLACEMENT_BEFORE, trgII, trgII.lev]);\n                  } else if (dragDirs.vrt > 0) { //down\n                    availMoves.push([constants.PLACEMENT_AFTER, trgII, trgII.lev]);\n                  }\n                }\n              }\n              \n              //add case\n              const addCaseII = am => {\n                const toII = am[1];\n                const fromCaseII = itemInfo.caseId ? this.tree.items[itemInfo.caseId] : null;\n                const toCaseII = toII.caseId ? this.tree.items[toII.caseId] : null;\n                return [...am, fromCaseII, toCaseII];\n              };\n              availMoves = availMoves.map(addCaseII);\n              altMoves = altMoves.map(addCaseII);\n\n              //sanitize\n              availMoves = availMoves.filter(am => {\n                const placement = am[0];\n                const trg = am[1];\n                if ((placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER) && trg.parent == null)\n                  return false;\n                if (trg.collapsed && (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND))\n                  return false;\n\n                let isInside = (trg.id == itemInfo.id);\n                if (!isInside) {\n                  let tmp = trg;\n                  while (tmp.parent) {\n                    tmp = this.tree.items[tmp.parent];\n                    if (tmp.id == itemInfo.id) {\n                      isInside = true;\n                      break;\n                    }\n                  }\n                }\n                return !isInside;\n              }).map(am => {\n                const placement = am[0],\n                  toII = am[1],\n                  _lev = am[2],\n                  _fromCaseII = am[3],\n                  _toCaseII = am[4];\n                let toParentII = null;\n                if (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND)\n                  toParentII = toII;\n                else\n                  toParentII = this.tree.items[toII.parent];\n                if (toParentII && toParentII.parent == null)\n                  toParentII = null;\n                am[5] = toParentII;\n                return am;\n              });\n\n              let bestMode = null;\n              let filteredMoves = availMoves.filter(am => this.canMove(itemInfo, am[1], am[0], am[3], am[4], am[5], canMoveFn));\n              if (canMoveBeforeAfterGroup && filteredMoves.length == 0 && altMoves.length > 0) {\n                filteredMoves = altMoves.filter(am => this.canMove(itemInfo, am[1], am[0], am[3], am[4], am[5], canMoveFn));\n              }\n              const levs = filteredMoves.map(am => am[2]);\n              const curLev = itemInfo.lev;\n              const allLevs = levs.concat(curLev);\n              let closestDragLev = null;\n              if (allLevs.indexOf(dragLev) != -1)\n                closestDragLev = dragLev;\n              else if (dragLev > Math.max(...allLevs))\n                closestDragLev = Math.max(...allLevs);\n              else if (dragLev < Math.min(...allLevs))\n                closestDragLev = Math.min(...allLevs);\n              bestMode = filteredMoves.find(am => am[2] == closestDragLev);\n              if (!isSamePos && !bestMode && filteredMoves.length)\n                bestMode = filteredMoves[0];\n              moveInfo = bestMode;\n            }\n          }\n        }\n      }\n\n      if (moveInfo) {\n        this.move(itemInfo, moveInfo[1], moveInfo[0], moveInfo[3]);\n\n        // logger.log(\"DRAG-N-DROP\", JSON.stringify({\n        //   dragRect,\n        //   plhRect,\n        //   treeRect,\n        //   hovRect,\n        //   startMousePos: dragInfo.startMousePos,\n        //   mousePos: dragInfo.mousePos,\n        // }));\n        return true;\n      }\n\n      return false;\n    }\n\n    canMove (fromII, toII, placement, fromCaseII, toCaseII, toParentII, canMoveFn) {\n      if (!fromII || !toII)\n        return false;\n      if (fromII.id === toII.id)\n        return false;\n\n      const { canRegroup, canRegroupCases, maxNesting, maxNumberOfRules, canLeaveEmptyCase } = this.props.config.settings;\n      const newLev = toParentII ? toParentII.lev + 1 : toII.lev;\n      const isBeforeAfter = placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER;\n      const isPend = placement == constants.PLACEMENT_PREPEND || placement == constants.PLACEMENT_APPEND;\n      const isLev1 = isBeforeAfter && toII.lev == 1 || isPend && toII.lev == 0;\n      const isParentChange = fromII.parent != toII.parent;\n      const isStructChange = isPend || isParentChange;\n      // can't move `case_group` anywhere but before/after anoter `case_group`\n      const isForbiddenStructChange = fromII.type == \"case_group\" && !isLev1\n        // can't restruct `rule_group`\n        || fromII.parentType == \"rule_group\" || toII.type == \"rule_group\" || toII.parentType == \"rule_group\" \n        // only `case_group` can be placed under `switch_group`\n        || fromII.type != \"case_group\" && toII.type == \"case_group\" && isBeforeAfter\n        || fromII.type != \"case_group\" && toII.type == \"switch_group\"\n        // can't move rule/group to another case\n        || !canRegroupCases && fromII.caseId != toII.caseId;\n      const isLockedChange = toII.isLocked || fromII.isLocked || toParentII && toParentII.isLocked;\n\n      if (maxNesting && newLev > maxNesting)\n        return false;\n      \n      if (isStructChange && (!canRegroup || isForbiddenStructChange || isLockedChange))\n        return false;\n      \n      if (fromII.type != \"case_group\" && fromII.caseId != toII.caseId) {\n        const isLastFromCase = fromCaseII ? fromCaseII._height == 2 : false;\n        const newRulesInTargetCase = toCaseII ? toCaseII.leafsCount + 1 : 0;\n        if (maxNumberOfRules && newRulesInTargetCase > maxNumberOfRules)\n          return false;\n        if (isLastFromCase && !canLeaveEmptyCase)\n          return false;\n      }\n\n      if (fromII.type == \"case_group\" && (\n        fromII.isDefaultCase || toII.isDefaultCase\n        || toII.type == \"switch_group\" && placement == constants.PLACEMENT_APPEND\n      )) {\n        // leave default case alone\n        return false;\n      }\n\n      let res = true;\n      if (canMoveFn) {\n        res = canMoveFn(fromII.node.toJS(), toII.node.toJS(), placement, toParentII ? toParentII.node.toJS() : null);\n      }\n      return res;\n    }\n\n    move (fromII, toII, placement, toParentII) {\n      if (!this._isUsingLegacyReactDomRender) {\n        _isReorderingTree = true;\n      }\n      //logger.log(\"move\", fromII, toII, placement, toParentII);\n      this.props.actions.moveItem(fromII.path, toII.path, placement);\n    }\n\n    render() {\n      return <Builder\n        {...this.props}\n        onDragStart={this.onDragStart}\n      />;\n    }\n  };\n\n\nexport default (Builder, CanMoveFn = null) => {\n  const ConnectedSortableContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n        dragStart: state.dragStart,\n        mousePos: state.mousePos,\n      };\n    }, {\n      setDragStart: actions.drag.setDragStart,\n      setDragProgress: actions.drag.setDragProgress,\n      setDragEnd: actions.drag.setDragEnd,\n    },\n    null,\n    {\n      context\n    }\n  )(createSortableContainer(Builder, CanMoveFn));\n  ConnectedSortableContainer.displayName = \"ConnectedSortableContainer\";\n\n  return ConnectedSortableContainer;\n};\n\nexport { _isReorderingTree };\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { _isReorderingTree } from \"./SortableContainer\";\nimport classNames from \"classnames\";\n\n\nexport default (className) => (GroupOrRule) =>\n  class Draggable extends PureComponent {\n    static propTypes = {\n      isDraggingTempo: PropTypes.bool,\n      isDraggingMe: PropTypes.bool,\n      onDragStart: PropTypes.func,\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.wrapper = React.createRef();\n    }\n\n    handleDraggerMouseDown = (e) => {\n      var nodeId = this.props.id;\n      var dom = this.wrapper.current;\n        \n      if (this.props.onDragStart) {\n        this.props.onDragStart(nodeId, dom, e);\n      }\n    };\n\n    render () {\n      const {\n        isDraggingTempo,\n        isDraggingMe,\n        dragging,\n        ...otherProps\n      } = this.props;\n      const {\n        isTrueLocked,\n      } = otherProps;\n\n      let styles = {};\n      if (isDraggingMe && isDraggingTempo) {\n        if (_isReorderingTree) {\n          // don't apply old styles for dragging tempo during reorder\n        } else {\n          styles = {\n            top: dragging.y,\n            left: dragging.x,\n            width: dragging.w\n          };\n        }\n      }\n\n      const cn = classNames(className, \"group-or-rule\",\n        isDraggingMe && isDraggingTempo ? \"qb-draggable\" : null,\n        isDraggingMe && !isDraggingTempo ? \"qb-placeholder\" : null,\n        isTrueLocked ? \"locked\" : null\n      );\n\n      return (\n        <div\n          className={cn}\n          style={styles}\n          ref={this.wrapper}\n          data-id={this.props.id}\n        >\n          <GroupOrRule\n            handleDraggerMouseDown={this.handleDraggerMouseDown}\n            isDraggingMe={isDraggingMe}\n            isDraggingTempo={isDraggingTempo}\n            {...otherProps}\n          />\n        </div>\n      );\n    }\n\n  };\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport keys from \"lodash/keys\";\nimport pickBy from \"lodash/pickBy\";\nimport mapValues from \"lodash/mapValues\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nconst {getFieldConfig, getOperatorConfig} = Utils.ConfigUtils;\n\n\nexport default class Operator extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    selectedField: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    readonly: PropTypes.bool,\n    //actions\n    setOperator: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"config\", \"selectedField\", \"selectedOperator\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({config, selectedField, selectedOperator}) {\n    const fieldConfig = getFieldConfig(config, selectedField);\n    const operators = fieldConfig?.operators;\n    const operatorOptions \n      = mapValues(\n        pickBy(\n          config.operators, \n          (item, key) => operators?.indexOf(key) !== -1\n        ), \n        (_opts, op) => getOperatorConfig(config, op, selectedField)\n      );\n      \n    const items = this.buildOptions(config, operatorOptions, operators);\n\n    const isOpSelected = !!selectedOperator;\n    const currOp = isOpSelected ? operatorOptions[selectedOperator] : null;\n    const selectedOpts = currOp || {};\n    const placeholder = this.props.config.settings.operatorPlaceholder;\n    const selectedKey = selectedOperator;\n    const selectedKeys = isOpSelected ? [selectedKey] : null;\n    const selectedPath = selectedKeys;\n    const selectedLabel = selectedOpts.label;\n    \n    return {\n      placeholder, items,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, fieldConfig\n    };\n  }\n\n  buildOptions(config, fields, ops) {\n    if (!fields || !ops)\n      return null;\n\n    return keys(fields).sort((a, b) => (ops.indexOf(a) - ops.indexOf(b))).map(fieldKey => {\n      const field = fields[fieldKey];\n      const label = field.label;\n      return {\n        key: fieldKey,\n        path: fieldKey,\n        label,\n      };\n    });\n  }\n\n  render() {\n    const {config, customProps, setOperator, readonly, id, groupId} = this.props;\n    const {renderOperator} = config.settings;\n    const renderProps = {\n      id,\n      groupId,\n      config, \n      customProps, \n      readonly,\n      setField: setOperator,\n      ...this.meta\n    };\n    if (!renderProps.items)\n      return null;\n    return renderOperator(renderProps, config.ctx);\n  }\n\n\n}\n","import React from \"react\";\n\nconst Col = ({children, ...props}) => (<div {...props}>{children}</div>);\n\nconst dummyFn = () => {};\n\nconst DragIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"gray\" width=\"18px\" height=\"18px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"/>\n  </svg>\n);\n\nconst WithConfirmFn = (Cmp) => (\n  props => {\n    const {useConfirm} = props.config.settings;\n    const confirmFn = useConfirm ? useConfirm.call(props.config.ctx, props.config.ctx) : null;\n    return <Cmp {...props} confirmFn={confirmFn} />;\n  }\n);\n\nexport {\n  Col, dummyFn, DragIcon, WithConfirmFn\n};\n","import React, { PureComponent } from \"react\";\nimport Operator from \"./Operator\";\nimport {Col} from \"../utils\";\n\n\nexport default class OperatorWrapper extends PureComponent {\n  render() {\n    const {\n      config, selectedField, selectedOperator, setOperator, \n      selectedFieldPartsLabels, showOperator, showOperatorLabel, selectedFieldWidgetConfig, readonly, id, groupId\n    } = this.props;\n    const operator = showOperator\n            && <Col key={\"operators-for-\"+(selectedFieldPartsLabels || []).join(\"_\")} className=\"rule--operator\">\n              { config.settings.showLabels\n                    && <label className=\"rule--label\">{config.settings.operatorLabel}</label>\n              }\n              <Operator\n                key=\"operator\"\n                config={config}\n                selectedField={selectedField}\n                selectedOperator={selectedOperator}\n                setOperator={setOperator}\n                readonly={readonly}\n                id={id}\n                groupId={groupId}\n              />\n            </Col>;\n    const hiddenOperator = showOperatorLabel\n            && <Col key={\"operators-for-\"+(selectedFieldPartsLabels || []).join(\"_\")} className=\"rule--operator\">\n              <div className=\"rule--operator-wrapper\">\n                {config.settings.showLabels\n                  ? <label className=\"rule--label\">&nbsp;</label>\n                  : null}\n                <div className=\"rule--operator-text-wrapper\">\n                  <span className=\"rule--operator-text\">{selectedFieldWidgetConfig.operatorInlineLabel}</span>\n                </div>\n              </div>\n            </Col>;\n    return [\n      operator,\n      hiddenOperator\n    ];\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst {getFieldPath, getFieldPathLabels} = Utils.RuleUtils;\nconst {getFieldConfig} = Utils.ConfigUtils;\n\n\nexport default class Field extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    selectedField: PropTypes.string,\n    parentField: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    //actions\n    setField: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"selectedField\", \"config\", \"parentField\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({selectedField, config, parentField}) {\n    const selectedKey = selectedField;\n    const {maxLabelsLength, fieldSeparatorDisplay, fieldPlaceholder, fieldSeparator} = config.settings;\n    const isFieldSelected = !!selectedField;\n    const placeholder = !isFieldSelected ? truncateString(fieldPlaceholder, maxLabelsLength) : null;\n    const currField = isFieldSelected ? getFieldConfig(config, selectedKey) : null;\n    const selectedOpts = currField || {};\n\n    const selectedKeys = getFieldPath(selectedKey, config);\n    const selectedPath = getFieldPath(selectedKey, config, true);\n    const selectedLabel = this.getFieldLabel(currField, selectedKey, config);\n    const partsLabels = getFieldPathLabels(selectedKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel || parentField)\n      selectedFullLabel = null;\n    const selectedAltLabel = selectedOpts.label2;\n\n    const parentFieldPath = typeof parentField == \"string\" ? parentField.split(fieldSeparator) : parentField;\n    const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n    const sourceFields = parentField ? parentFieldConfig && parentFieldConfig.subfields : config.fields;\n    const items = this.buildOptions(parentFieldPath, config, sourceFields, parentFieldPath);\n\n    return {\n      placeholder, items, parentField,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n    };\n  }\n\n  getFieldLabel(fieldOpts, fieldKey, config) {\n    if (!fieldKey) return null;\n    let fieldSeparator = config.settings.fieldSeparator;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let fieldParts = Array.isArray(fieldKey) ? fieldKey : fieldKey.split(fieldSeparator);\n    let label = fieldOpts && fieldOpts.label || last(fieldParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  buildOptions(parentFieldPath, config, fields, path = null, optGroupLabel = null) {\n    if (!fields)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    return keys(fields).map(fieldKey => {\n      const field = fields[fieldKey];\n      const label = this.getFieldLabel(field, fieldKey, config);\n      const partsLabels = getFieldPathLabels(prefix+fieldKey, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label || parentFieldPath)\n        fullLabel = null;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n      const subpath = (path ? path : []).concat(fieldKey);\n      const disabled = field.disabled;\n            \n      if (field.hideForSelect)\n        return undefined;\n\n      if (field.type == \"!struct\") {\n        return {\n          disabled,\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          items: this.buildOptions(parentFieldPath, config, field.subfields, subpath, label)\n        };\n      } else {\n        return {\n          disabled,\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          grouplabel: optGroupLabel\n        };\n      }\n    }).filter(o => !!o);\n  }\n\n  render() {\n    const {config, customProps, setField, readonly, id, groupId} = this.props;\n    const {renderField} = config.settings;\n    const renderProps = {\n      id,\n      groupId,\n      config, \n      customProps, \n      readonly,\n      setField,\n      ...this.meta\n    };\n    return renderField(renderProps, config.ctx);\n  }\n\n}\n","import React, { PureComponent } from \"react\";\nimport Field from \"./Field\";\nimport {Col} from \"../utils\";\n\n\nexport default class FieldWrapper extends PureComponent {\n  render() {\n    const {config, selectedField, setField, parentField, classname, readonly, id, groupId} = this.props;\n    return (\n      <Col className={classname}>\n        { config.settings.showLabels\n                    && <label className=\"rule--label\">{config.settings.fieldLabel}</label>\n        }\n        <Field\n          config={config}\n          selectedField={selectedField}\n          parentField={parentField}\n          setField={setField}\n          customProps={config.settings.customFieldSelectProps}\n          readonly={readonly}\n          id={id}\n          groupId={groupId}\n        />\n      </Col>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { getTitleInListValues } = Utils.ListUtils;\n\nexport default ({\n  delta, isFuncArg, valueSrc,\n  value: immValue, valueError: immValueError, asyncListValues,\n  isSpecialRange, fieldDefinition,\n  widget, widgetDefinition, widgetValueLabel, valueLabels, textSeparators, setValueHandler,\n  config, field, operator, readonly, parentField, parentFuncs, id, groupId\n}) => {\n  const {factory: widgetFactory, ...fieldWidgetProps} = widgetDefinition;\n  const isConst = isFuncArg && fieldDefinition.valueSources && fieldDefinition.valueSources.length == 1 && fieldDefinition.valueSources[0] == \"const\";\n  const defaultValue = fieldDefinition.defaultValue;\n\n  if (!widgetFactory) {\n    return \"?\";\n  }\n    \n  let value = isSpecialRange \n    ? [immValue.get(0), immValue.get(1)] \n    : (immValue ? immValue.get(delta) : undefined);\n  const valueError = immValueError && (isSpecialRange \n    ? [immValueError.get(0), immValueError.get(1)]\n    : immValueError.get(delta)\n  ) || null;\n  if (isSpecialRange && value[0] === undefined && value[1] === undefined)\n    value = undefined;\n  const {fieldSettings} = fieldDefinition || {};\n  const widgetProps = Object.assign({}, fieldWidgetProps, fieldSettings, {\n    config: config,\n    field: field,\n    parentField: parentField,\n    parentFuncs: parentFuncs,\n    fieldDefinition: fieldDefinition,\n    operator: operator,\n    delta: delta,\n    isSpecialRange: isSpecialRange,\n    isFuncArg: isFuncArg,\n    value: value,\n    valueError: valueError,\n    label: widgetValueLabel.label,\n    placeholder: widgetValueLabel.placeholder,\n    placeholders: valueLabels ? valueLabels.placeholder : null,\n    textSeparators: textSeparators,\n    setValue: setValueHandler,\n    readonly: readonly,\n    asyncListValues: asyncListValues,\n    id, groupId\n  });\n    \n  if (widget == \"field\") {\n    //\n  }\n\n  if (isConst && defaultValue) {\n    const listValues = fieldSettings.treeValues || fieldSettings.listValues;\n    if (typeof defaultValue == \"boolean\") {\n      return defaultValue ? (widgetProps.labelYes || \"YES\") : (widgetProps.labelNo || \"NO\");\n    } else if (listValues) {\n      if (Array.isArray(defaultValue))\n        return defaultValue.map(v => getTitleInListValues(listValues, v) || v).join(\", \");\n      else\n        return (getTitleInListValues(listValues, defaultValue) || defaultValue);  \n    }\n    return \"\"+defaultValue;\n  }\n    \n  return widgetFactory(widgetProps, config.ctx);\n};\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport range from \"lodash/range\";\nimport {defaultValue} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport pick from \"lodash/pick\";\nimport WidgetFactory from \"./WidgetFactory\";\nimport {Col} from \"../utils\";\nconst {getFieldConfig, getOperatorConfig, getFieldWidgetConfig} = Utils.ConfigUtils;\nconst {getValueSourcesForFieldOp, getWidgetsForFieldOp, getWidgetForFieldOp, getValueLabel} = Utils.RuleUtils;\nconst { createListFromArray } = Utils.DefaultUtils;\n\nconst funcArgDummyOpDef = {cardinality: 1};\n\nexport default class Widget extends Component {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    value: PropTypes.any, //instanceOf(Immutable.List)\n    valueSrc: PropTypes.any, //instanceOf(Immutable.List)\n    valueError: PropTypes.any,\n    field: PropTypes.string,\n    operator: PropTypes.string,\n    readonly: PropTypes.bool,\n    asyncListValues: PropTypes.array,\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    //actions\n    setValue: PropTypes.func,\n    setValueSrc: PropTypes.func,\n    // for isFuncArg\n    isFuncArg: PropTypes.bool,\n    fieldFunc: PropTypes.string,\n    fieldArg: PropTypes.string,\n    leftField: PropTypes.string,\n    // for RuleGroupExt\n    isForRuleGruop: PropTypes.bool,\n    parentField: PropTypes.string,\n    // for func in func\n    parentFuncs: PropTypes.array,\n    // for case_value\n    isCaseValue: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\n      \"config\", \"field\", \"fieldFunc\", \"fieldArg\", \"leftField\", \"operator\", \"valueSrc\", \"isFuncArg\", \"asyncListValues\"\n    ];\n    const needUpdateMeta = !this.meta \n          || keysForMeta\n            .map(k => (\n              nextProps[k] !== prevProps[k] \n                  //tip: for isFuncArg we need to wrap value in Imm list\n                  || k == \"isFuncArg\" && nextProps[\"isFuncArg\"] && nextProps[\"value\"] !== prevProps[\"value\"])\n            )\n            .filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  _setValue = (isSpecialRange, delta, widgetType, value, asyncListValues, __isInternal) => {\n    if (isSpecialRange && Array.isArray(value)) {\n      const oldRange = [this.props.value.get(0), this.props.value.get(1)];\n      if (oldRange[0] != value[0])\n        this.props.setValue(0, value[0], widgetType, asyncListValues, __isInternal);\n      if (oldRange[1] != value[1])\n        this.props.setValue(1, value[1], widgetType, asyncListValues, __isInternal);\n    } else {\n      this.props.setValue(delta, value, widgetType, asyncListValues, __isInternal);\n    }\n  };\n\n  _onChangeValueSrc = (delta, srcKey) => {\n    this.props.setValueSrc(delta, srcKey);\n  };\n\n  getMeta({\n    config, field: simpleField, fieldFunc, fieldArg, operator, valueSrc: valueSrcs, value: values, \n    isForRuleGruop, isCaseValue, isFuncArg, leftField, asyncListValues\n  }) {\n    const field = isFuncArg ? {func: fieldFunc, arg: fieldArg} : simpleField;\n    let iValueSrcs = valueSrcs;\n    let iValues = values;\n    if (isFuncArg || isForRuleGruop || isCaseValue) {\n      iValueSrcs = createListFromArray([valueSrcs]);\n      iValues = createListFromArray([values]);\n    }\n\n    const fieldDefinition = getFieldConfig(config, field);\n    const defaultWidget = getWidgetForFieldOp(config, field, operator);\n    const _widgets = getWidgetsForFieldOp(config, field, operator);\n    const operatorDefinition = isFuncArg ? funcArgDummyOpDef : getOperatorConfig(config, operator, field);\n    if ((fieldDefinition == null || operatorDefinition == null) && !isCaseValue) {\n      return null;\n    }\n    const isSpecialRange = operatorDefinition?.isSpecialRange;\n    const isSpecialRangeForSrcField = isSpecialRange && (iValueSrcs.get(0) == \"field\" || iValueSrcs.get(1) == \"field\");\n    const isTrueSpecialRange = isSpecialRange && !isSpecialRangeForSrcField;\n    const cardinality = isTrueSpecialRange ? 1 : defaultValue(operatorDefinition?.cardinality, 1);\n    if (cardinality === 0) {\n      return null;\n    }\n\n    const valueSources = getValueSourcesForFieldOp(config, field, operator, fieldDefinition, isFuncArg ? leftField : null);\n\n    const widgets = range(0, cardinality).map(delta => {\n      const valueSrc = iValueSrcs.get(delta) || null;\n      let widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      let widgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc);\n      if (isSpecialRangeForSrcField) {\n        widget = widgetDefinition.singleWidget;\n        widgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc);\n      }\n      const widgetType = widgetDefinition?.type;\n      const valueLabel = getValueLabel(config, field, operator, delta, valueSrc, isTrueSpecialRange);\n      const widgetValueLabel = getValueLabel(config, field, operator, delta, null, isTrueSpecialRange);\n      const sepText = operatorDefinition?.textSeparators ? operatorDefinition?.textSeparators[delta] : null;\n      const setValueSrcHandler = this._onChangeValueSrc.bind(this, delta);\n\n      let valueLabels = null;\n      let textSeparators = null;\n      if (isSpecialRange) {\n        valueLabels = [\n          getValueLabel(config, field, operator, 0),\n          getValueLabel(config, field, operator, 1)\n        ];\n        valueLabels = {\n          placeholder: [ valueLabels[0].placeholder, valueLabels[1].placeholder ],\n          label: [ valueLabels[0].label, valueLabels[1].label ],\n        };\n        textSeparators = operatorDefinition?.textSeparators;\n      }\n\n      const setValueHandler = this._setValue.bind(this, isSpecialRange, delta, widgetType);\n\n      return {\n        valueSrc,\n        valueLabel,\n        widget,\n        sepText,\n        setValueSrcHandler,\n        widgetDefinition,\n        widgetValueLabel,\n        valueLabels,\n        textSeparators,\n        setValueHandler\n      };\n    });\n      \n    return {\n      defaultWidget,\n      fieldDefinition,\n      operatorDefinition,\n      isSpecialRange: isTrueSpecialRange,\n      cardinality,\n      valueSources,\n      widgets,\n      iValues, //correct for isFuncArg\n      aField: field, //correct for isFuncArg\n      asyncListValues,\n    };\n  }\n\n  renderWidget = (delta, meta, props) => {\n    const {config, isFuncArg, leftField, operator, value: values, valueError, readonly, parentField, parentFuncs, id, groupId} = props;\n    const {settings} = config;\n    const { widgets, iValues, aField } = meta;\n    const value = isFuncArg ? iValues : values;\n    const field = isFuncArg ? leftField : aField;\n    const {valueSrc, valueLabel} = widgets[delta];\n \n    const widgetLabel = settings.showLabels\n      ? <label className=\"rule--label\">{valueLabel.label}</label>\n      : null;\n\n    return (\n      <div key={\"widget-\"+field+\"-\"+delta} className=\"widget--widget\">\n        {valueSrc == \"func\" ? null : widgetLabel}\n        <WidgetFactory\n          id={id}\n          groupId={groupId}\n          valueSrc={valueSrc}\n          delta={delta}\n          value={value}\n          valueError={valueError}\n          isFuncArg={isFuncArg}\n          {...pick(meta, [\"isSpecialRange\", \"fieldDefinition\", \"asyncListValues\"])}\n          {...pick(widgets[delta], [\"widget\", \"widgetDefinition\", \"widgetValueLabel\", \"valueLabels\", \"textSeparators\", \"setValueHandler\"])}\n          config={config}\n          field={field}\n          parentField={parentField}\n          parentFuncs={parentFuncs}\n          operator={operator}\n          readonly={readonly}\n        />\n      </div>\n    );\n  };\n\n  renderValueSources = (delta, meta, props) => {\n    const {config, isFuncArg, leftField, operator, readonly} = props;\n    const {settings} = config;\n    const { valueSources, widgets, aField } = meta;\n    const field = isFuncArg ? leftField : aField;\n    const {valueSrc, setValueSrcHandler} = widgets[delta];\n    const {valueSourcesInfo, renderValueSources} = settings;\n    const valueSourcesOptions = valueSources.map(srcKey => [srcKey, {\n      label: valueSourcesInfo[srcKey].label\n    }]);\n    const ValueSources = (pr) => renderValueSources(pr, config.ctx);\n\n    const sourceLabel = settings.showLabels\n      ? <label className=\"rule--label\">&nbsp;</label>\n      : null;\n\n    return valueSources.length > 1 && !readonly\n      && <div key={\"valuesrc-\"+field+\"-\"+delta} className=\"widget--valuesrc\">\n        {sourceLabel}\n        <ValueSources\n          key={\"valuesrc-\"+delta}\n          delta={delta}\n          valueSources={valueSourcesOptions}\n          valueSrc={valueSrc}\n          config={config}\n          field={field}\n          operator={operator}\n          setValueSrc={setValueSrcHandler}\n          readonly={readonly}\n          title={settings.valueSourcesPopupTitle}\n        />\n      </div>;\n  };\n\n  renderSep = (delta, meta, props) => {\n    const {config} = props;\n    const {widgets} = meta;\n    const {settings} = config;\n    const {sepText} = widgets[delta];\n\n    const sepLabel = settings.showLabels\n      ? <label className=\"rule--label\">&nbsp;</label>\n      : null;\n\n    return sepText\n      && <div key={\"widget-separators-\"+delta} className=\"widget--sep\" >\n        {sepLabel}\n        <span>{sepText}</span>\n      </div>;\n  };\n\n  renderWidgetDelta = (delta) => {\n    const sep = this.renderSep(delta, this.meta, this.props);\n    const sources = this.renderValueSources(delta, this.meta, this.props);\n    const widgetCmp = this.renderWidget(delta, this.meta, this.props);\n\n    return [\n      sep,\n      sources,\n      widgetCmp,\n    ];\n  };\n\n  render() {\n    if (!this.meta) return null;\n    const { defaultWidget, cardinality } = this.meta;\n    if (!defaultWidget) return null;\n    const name = defaultWidget;\n\n    return (\n      <Col\n        className={`rule--widget rule--widget--${name.toUpperCase()}`}\n        key={\"widget-col-\"+name}\n      >\n        {range(0, cardinality).map(this.renderWidgetDelta)}\n      </Col>\n    );\n  }\n\n}\n","import React, { PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nconst {getOperatorConfig} = Utils.ConfigUtils;\n\nexport default class OperatorOptions extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    operatorOptions: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    selectedField: PropTypes.string.isRequired,\n    selectedOperator: PropTypes.string.isRequired,\n    readonly: PropTypes.bool,\n    //actions\n    setOperatorOption: PropTypes.func.isRequired,\n  };\n\n  render() {\n    if (!this.props.selectedOperator)\n      return null;\n    const operatorDefinitions = getOperatorConfig(this.props.config, this.props.selectedOperator, this.props.selectedField);\n    if (typeof operatorDefinitions.options === \"undefined\") {\n      return null;\n    }\n\n    const { factory: optionsFactory, ...basicOptionsProps } = operatorDefinitions.options;\n    const optionsProps = Object.assign({}, basicOptionsProps, {\n      config: this.props.config,\n      field: this.props.selectedField,\n      operator: this.props.selectedOperator,\n      options: this.props.operatorOptions,\n      setOption: this.props.setOperatorOption,\n      readonly: this.props.readonly,\n    });\n    const optionsCmp = optionsFactory(optionsProps, this.props.config.ctx);\n    const name = this.props.selectedOperator;\n\n    return (\n      <div className={`rule--operator rule--operator--${name.toUpperCase()}`}>\n        {optionsCmp}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport RuleContainer from \"../containers/RuleContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport OperatorWrapper from \"../rule/OperatorWrapper\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport Widget from \"../rule/Widget\";\nimport OperatorOptions from \"../rule/OperatorOptions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, DragIcon, dummyFn, WithConfirmFn} from \"../utils\";\nimport classNames from \"classnames\";\nconst {getFieldConfig, getOperatorConfig, getFieldWidgetConfig} = Utils.ConfigUtils;\nconst {getFieldPathLabels} = Utils.RuleUtils;\n\n\nclass Rule extends Component {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    selectedField: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    operatorOptions: PropTypes.object,\n    config: PropTypes.object.isRequired,\n    value: PropTypes.any, //depends on widget\n    valueSrc: PropTypes.any,\n    asyncListValues: PropTypes.array,\n    isDraggingMe: PropTypes.bool,\n    isDraggingTempo: PropTypes.bool,\n    parentField: PropTypes.string, //from RuleGroup\n    valueError: PropTypes.any,\n    isLocked: PropTypes.bool,\n    isTrueLocked: PropTypes.bool,\n    //path: PropTypes.instanceOf(Immutable.List),\n    //actions\n    handleDraggerMouseDown: PropTypes.func,\n    setField: PropTypes.func,\n    setOperator: PropTypes.func,\n    setOperatorOption: PropTypes.func,\n    setLock: PropTypes.func,\n    removeSelf: PropTypes.func,\n    setValue: PropTypes.func,\n    setValueSrc: PropTypes.func,\n    reordableNodesCnt: PropTypes.number,\n    totalRulesCnt: PropTypes.number,\n    parentReordableNodesCnt: PropTypes.number,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.removeSelf = this.removeSelf.bind(this);\n    this.setLock = this.setLock.bind(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"selectedField\", \"selectedOperator\", \"config\", \"reordableNodesCnt\", \"isLocked\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({selectedField, selectedOperator, config, reordableNodesCnt, isLocked}) {\n    const selectedFieldPartsLabels = getFieldPathLabels(selectedField, config);\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    const isSelectedGroup = selectedFieldConfig && selectedFieldConfig.type == \"!struct\";\n    const isFieldAndOpSelected = selectedField && selectedOperator && !isSelectedGroup;\n    const selectedOperatorConfig = getOperatorConfig(config, selectedOperator, selectedField);\n    const selectedOperatorHasOptions = selectedOperatorConfig && selectedOperatorConfig.options != null;\n    const selectedFieldWidgetConfig = getFieldWidgetConfig(config, selectedField, selectedOperator) || {};\n    const hideOperator = selectedFieldWidgetConfig.hideOperator;\n\n    const showDragIcon = config.settings.canReorder && reordableNodesCnt > 1 && !isLocked;\n    const showOperator = selectedField && !hideOperator;\n    const showOperatorLabel = selectedField && hideOperator && selectedFieldWidgetConfig.operatorInlineLabel;\n    const showWidget = isFieldAndOpSelected;\n    const showOperatorOptions = isFieldAndOpSelected && selectedOperatorHasOptions;\n\n    return {\n      selectedFieldPartsLabels, selectedFieldWidgetConfig,\n      showDragIcon, showOperator, showOperatorLabel, showWidget, showOperatorOptions\n    };\n  }\n\n  setLock(lock) {\n    this.props.setLock(lock);\n  }\n\n  removeSelf() {\n    const {confirmFn, config} = this.props;\n    const {renderConfirm, removeRuleConfirmOptions: confirmOptions} = config.settings;\n    const doRemove = () => {\n      this.props.removeSelf();\n    };\n    if (confirmOptions && !this.isEmptyCurrentRule()) {\n      renderConfirm.call(config.ctx, {...confirmOptions,\n        onOk: doRemove,\n        onCancel: null,\n        confirmFn: confirmFn\n      }, config.ctx);\n    } else {\n      doRemove();\n    }\n  }\n\n  isEmptyCurrentRule() {\n    return !(\n      this.props.selectedField !== null\n            && this.props.selectedOperator !== null\n            && this.props.value.filter((val) => val !== undefined).size > 0\n    );\n  }\n\n  renderField() {\n    const {config, isLocked} = this.props;\n    const { immutableFieldsMode } = config.settings;\n\n    return <FieldWrapper\n      key=\"field\"\n      classname={\"rule--field\"}\n      config={config}\n      selectedField={this.props.selectedField}\n      setField={!immutableFieldsMode ? this.props.setField : dummyFn}\n      parentField={this.props.parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  renderOperator () {\n    const {config, isLocked} = this.props;\n    const {\n      selectedFieldPartsLabels, selectedFieldWidgetConfig, showOperator, showOperatorLabel\n    } = this.meta;\n    const { immutableOpsMode } = config.settings;\n\n    return <OperatorWrapper\n      key=\"operator\"\n      config={config}\n      selectedField={this.props.selectedField}\n      selectedOperator={this.props.selectedOperator}\n      setOperator={!immutableOpsMode ? this.props.setOperator : dummyFn}\n      selectedFieldPartsLabels={selectedFieldPartsLabels}\n      showOperator={showOperator}\n      showOperatorLabel={showOperatorLabel}\n      selectedFieldWidgetConfig={selectedFieldWidgetConfig}\n      readonly={immutableOpsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  renderWidget() {\n    const {config, valueError, isLocked} = this.props;\n    const { showWidget } = this.meta;\n    const { immutableValuesMode } = config.settings;\n    if (!showWidget) return null;\n\n    const widget = <Widget\n      key=\"values\"\n      field={this.props.selectedField}\n      parentField={this.props.parentField}\n      operator={this.props.selectedOperator}\n      value={this.props.value}\n      valueSrc={this.props.valueSrc}\n      asyncListValues={this.props.asyncListValues}\n      valueError={valueError}\n      config={config}\n      setValue={!immutableValuesMode ? this.props.setValue : dummyFn}\n      setValueSrc={!immutableValuesMode ? this.props.setValueSrc : dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n\n    return (\n      <Col key={\"widget-for-\"+this.props.selectedOperator} className=\"rule--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderOperatorOptions() {\n    const {config} = this.props;\n    const { showOperatorOptions } = this.meta;\n    const { immutableOpsMode, immutableValuesMode } = config.settings;\n    if (!showOperatorOptions) return null;\n\n    const opOpts = <OperatorOptions\n      key=\"operatorOptions\"\n      selectedField={this.props.selectedField}\n      selectedOperator={this.props.selectedOperator}\n      operatorOptions={this.props.operatorOptions}\n      setOperatorOption={!immutableOpsMode ? this.props.setOperatorOption : dummyFn}\n      config={config}\n      readonly={immutableValuesMode}\n    />;\n\n    return (\n      <Col key={\"op-options-for-\"+this.props.selectedOperator} className=\"rule--operator-options\">\n        {opOpts}\n      </Col>\n    );\n  }\n\n  renderBeforeWidget() {\n    const {config} = this.props;\n    const { renderBeforeWidget } = config.settings;\n    return renderBeforeWidget \n        && <Col key={\"before-widget-for-\" +this.props.selectedOperator} className=\"rule--before-widget\">\n          {typeof renderBeforeWidget === \"function\" ? renderBeforeWidget(this.props, config.ctx) : renderBeforeWidget}\n        </Col>;\n  }\n\n  renderAfterWidget() {\n    const {config} = this.props;\n    const { renderAfterWidget } = config.settings;\n    return renderAfterWidget \n        && <Col key={\"after-widget-for-\" +this.props.selectedOperator} className=\"rule--after-widget\">\n          {typeof renderAfterWidget === \"function\" ? renderAfterWidget(this.props, config.ctx) : renderAfterWidget}\n        </Col>;\n  }\n\n  renderError() {\n    const {config, valueError} = this.props;\n    const { renderRuleError, showErrorMessage } = config.settings;\n    const oneValueError = valueError && valueError.toArray().filter(e => !!e).shift() || null;\n    return showErrorMessage && oneValueError \n        && <div className=\"rule--error\">\n          {renderRuleError ? renderRuleError({error: oneValueError}, config.ctx) : oneValueError}\n        </div>;\n  }\n\n  renderDrag() {\n    const { showDragIcon } = this.meta;\n\n    return showDragIcon\n        && <span\n          key=\"rule-drag-icon\"\n          className={\"qb-drag-handler rule--drag-handler\"}\n          onMouseDown={this.props.handleDraggerMouseDown}\n        ><DragIcon /> </span>;\n  }\n\n  renderDel() {\n    const {config, isLocked} = this.props;\n    const {\n      deleteLabel, \n      immutableGroupsMode, \n      renderButton,\n      canDeleteLocked\n    } = config.settings;\n    const Btn = (pr) => renderButton(pr, config.ctx);\n\n    return !immutableGroupsMode && (!isLocked || isLocked && canDeleteLocked) && (\n      <Btn \n        type=\"delRule\" onClick={this.removeSelf} label={deleteLabel} config={config}\n      />\n    );\n  }\n\n  renderLock() {\n    const {config, isLocked, isTrueLocked, id} = this.props;\n    const {\n      lockLabel, lockedLabel, showLock,\n      renderSwitch\n    } = config.settings;\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n      \n    return showLock && !(isLocked && !isTrueLocked) && (\n      <Switch \n        type=\"lock\" id={id} value={isLocked} setValue={this.setLock} label={lockLabel} checkedLabel={lockedLabel} hideLabel={true} config={config}\n      />\n    );\n  }\n\n  render () {\n    const { showOperatorOptions, selectedFieldWidgetConfig } = this.meta;\n    const { valueSrc, value, config } = this.props;\n    const canShrinkValue = valueSrc.first() == \"value\" && !showOperatorOptions && value.size == 1 && selectedFieldWidgetConfig.fullWidth;\n    const { renderButtonGroup } = config.settings;\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n\n    const parts = [\n      this.renderField(),\n      this.renderOperator(),\n      this.renderBeforeWidget(),\n      this.renderWidget(),\n      this.renderAfterWidget(),\n      this.renderOperatorOptions(),\n    ];\n    const body = <div key=\"rule-body\" className={classNames(\"rule--body\", canShrinkValue && \"can--shrink--value\")}>{parts}</div>;\n\n    const error = this.renderError();\n    const drag = this.renderDrag();\n    const lock = this.renderLock();\n    const del = this.renderDel();\n      \n    return (\n      <>\n        {drag}\n        <div className=\"rule--body--wrapper\">\n          {body}{error}\n        </div>\n        <div className=\"rule--header\">\n          <BtnGrp config={config}>\n            {lock}\n            {del}\n          </BtnGrp>\n        </div>\n      </>\n    );\n  }\n\n}\n\n\nexport default RuleContainer(Draggable(\"rule\")(WithConfirmFn(Rule)));\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport mapValues from \"lodash/mapValues\";\nimport context from \"../../stores/context\";\nimport {pureShouldComponentUpdate, useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {connect} from \"react-redux\";\nconst {defaultGroupConjunction} = Utils.DefaultUtils;\n\n\nconst createGroupContainer = (Group) => \n  class GroupContainer extends Component {\n    static propTypes = {\n      //tree: PropTypes.instanceOf(Immutable.Map).isRequired,\n      config: PropTypes.object.isRequired,\n      actions: PropTypes.object.isRequired, //{setConjunction: Funciton, removeGroup, addGroup, addRule, ...}\n      path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n      id: PropTypes.string.isRequired,\n      groupId: PropTypes.string,\n      not: PropTypes.bool,\n      conjunction: PropTypes.string,\n      children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n      onDragStart: PropTypes.func,\n      reordableNodesCnt: PropTypes.number,\n      field: PropTypes.string, // for RuleGroup\n      parentField: PropTypes.string, //from RuleGroup\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n      //connected:\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isDraggingTempo: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      useOnPropsChanged(this);\n\n      this.selectedConjunction = this._selectedConjunction(props);\n      this.conjunctionOptions = this._getConjunctionOptions(props);\n      this.dummyFn.isDummyFn = true;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          const draggingId = (nextProps.dragging.id || prevProps.dragging.id);\n          const isDraggingMe = draggingId == nextProps.id;\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (k == \"dragging\" && !isDraggingMe) {\n              changed = false; //dragging another item -> ignore\n            }\n            if (changed) {\n              chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    onPropsChanged(nextProps) {\n      const {config, id, conjunction} = nextProps;\n      const oldConfig = this.props.config;\n      const oldConjunction = this.props.conjunction;\n      if (oldConfig != config || oldConjunction != conjunction) {\n        this.selectedConjunction = this._selectedConjunction(nextProps);\n        this.conjunctionOptions = this._getConjunctionOptions(nextProps);\n      }\n    }\n\n    _getConjunctionOptions (props) {\n      return mapValues(props.config.conjunctions, (item, index) => ({\n        id: `conjunction-${props.id}-${index}`,\n        name: `conjunction[${props.id}]`,\n        key: index,\n        label: item.label,\n        checked: index === this._selectedConjunction(props),\n      }));\n    }\n\n    _selectedConjunction = (props) => {\n      props = props || this.props;\n      return props.conjunction || defaultGroupConjunction(props.config, props.field);\n    };\n\n    setConjunction = (conj = null) => {\n      this.props.actions.setConjunction(this.props.path, conj);\n    };\n\n    setNot = (not = null) => {\n      this.props.actions.setNot(this.props.path, not);\n    };\n\n    setLock = (lock = null) => {\n      this.props.actions.setLock(this.props.path, lock);\n    };\n\n    dummyFn = () => {};\n\n    removeSelf = () => {\n      this.props.actions.removeGroup(this.props.path);\n    };\n\n    addGroup = () => {\n      this.props.actions.addGroup(this.props.path);\n    };\n\n    addCaseGroup = () => {\n      this.props.actions.addCaseGroup(this.props.path);\n    };\n\n    addDefaultCaseGroup = () => {\n      this.props.actions.addDefaultCaseGroup(this.props.path);\n    };\n\n    addRule = () => {\n      this.props.actions.addRule(this.props.path);\n    };\n\n    // for RuleGroup\n    setField = (field) => {\n      this.props.actions.setField(this.props.path, field);\n    };\n\n    // for RuleGroupExt\n    setOperator = (operator) => {\n      this.props.actions.setOperator(this.props.path, operator);\n    };\n\n    setValue = (delta, value, type) => {\n      this.props.actions.setValue(this.props.path, delta, value, type);\n    };\n\n    render() {\n      const isDraggingMe = this.props.dragging.id == this.props.id;\n      const currentNesting = this.props.path.size;\n      const maxNesting = this.props.config.settings.maxNesting;\n      const isInDraggingTempo = !isDraggingMe && this.props.isDraggingTempo;\n\n      // Don't allow nesting further than the maximum configured depth and don't\n      // allow removal of the root group.\n      const allowFurtherNesting = typeof maxNesting === \"undefined\" || currentNesting < maxNesting;\n      const isRoot = currentNesting == 1;\n      return (\n        <div\n          className={\"group-or-rule-container group-container\"}\n          data-id={this.props.id}\n        >\n          {[\n            isDraggingMe ? <Group\n              key={\"dragging\"}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={true}\n              isDraggingTempo={true}\n              dragging={this.props.dragging}\n              isRoot={isRoot}\n              allowFurtherNesting={allowFurtherNesting}\n              conjunctionOptions={this.conjunctionOptions}\n              not={this.props.not}\n              selectedConjunction={this.selectedConjunction}\n              setConjunction={this.dummyFn}\n              setNot={this.dummyFn}\n              setLock={this.dummyFn}\n              removeSelf={this.dummyFn}\n              addGroup={this.dummyFn}\n              addCaseGroup={this.dummyFn}\n              addDefaultCaseGroup={this.dummyFn}\n              addRule={this.dummyFn}\n              setField={this.dummyFn}\n              setOperator={this.dummyFn}\n              setValue={this.dummyFn}\n              value={this.props.value || null}\n              config={this.props.config}\n              children1={this.props.children1}\n              actions={this.props.actions}\n              //tree={this.props.tree}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              selectedField={this.props.field || null}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            /> : null\n            ,\n            <Group\n              key={this.props.id}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={isDraggingMe}\n              isDraggingTempo={isInDraggingTempo}\n              onDragStart={this.props.onDragStart}\n              isRoot={isRoot}\n              allowFurtherNesting={allowFurtherNesting}\n              conjunctionOptions={this.conjunctionOptions}\n              not={this.props.not}\n              selectedConjunction={this.selectedConjunction}\n              setConjunction={isInDraggingTempo ? this.dummyFn : this.setConjunction}\n              setNot={isInDraggingTempo ? this.dummyFn : this.setNot}\n              setLock={isInDraggingTempo ? this.dummyFn : this.setLock}\n              removeSelf={isInDraggingTempo ? this.dummyFn : this.removeSelf}\n              addGroup={isInDraggingTempo ? this.dummyFn : this.addGroup}\n              addCaseGroup={isInDraggingTempo ? this.dummyFn : this.addCaseGroup}\n              addDefaultCaseGroup={isInDraggingTempo ? this.dummyFn : this.addDefaultCaseGroup}\n              addRule={isInDraggingTempo ? this.dummyFn : this.addRule}\n              setField={isInDraggingTempo ? this.dummyFn : this.setField}\n              setOperator={isInDraggingTempo ? this.dummyFn : this.setOperator}\n              setValue={isInDraggingTempo ? this.dummyFn : this.setValue}\n              value={this.props.value || null}\n              config={this.props.config}\n              children1={this.props.children1}\n              actions={this.props.actions}\n              //tree={this.props.tree}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              selectedField={this.props.field || null}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            />\n          ]}\n        </div>\n      );\n    }\n\n  };\n\n\nexport default (Group) => {\n  const ConnectedGroupContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n      };\n    },\n    null,\n    null,\n    {\n      context\n    }\n  )(createGroupContainer(Group));\n  ConnectedGroupContainer.displayName = \"ConnectedGroupContainer\";\n\n  return ConnectedGroupContainer;\n};\n","import React, { PureComponent } from \"react\";\n\nconst groupActionsPositionList = {\n  topLeft: \"group--actions--tl\",\n  topCenter: \"group--actions--tc\",\n  topRight: \"group--actions--tr\",\n  bottomLeft: \"group--actions--bl\",\n  bottomCenter: \"group--actions--bc\",\n  bottomRight: \"group--actions--br\"\n};\nconst defaultPosition = \"topRight\";\n\n\nexport class GroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, addGroup, removeSelf, setLock, isLocked, isTrueLocked, id,\n      canAddGroup, canAddRule, canDeleteGroup\n    } = this.props;\n    const {\n      immutableGroupsMode, addRuleLabel, addGroupLabel, delGroupLabel, groupActionsPosition, \n      renderButton, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n    const position = groupActionsPositionList[groupActionsPosition || defaultPosition];\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn\n      type=\"addRule\" onClick={addRule} label={addRuleLabel} readonly={isLocked} config={config}\n    />;\n    const addGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type=\"addGroup\" onClick={addGroup} label={addGroupLabel} readonly={isLocked} config={config}\n    />;\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn\n      type=\"delGroup\" onClick={removeSelf} label={delGroupLabel} config={config}\n    />;\n\n    return (\n      <div className={`group--actions ${position}`}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {addGroupBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport startsWith from \"lodash/startsWith\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport classNames from \"classnames\";\nimport { Item } from \"./Item\";\nimport {GroupActions} from \"./GroupActions\";\nimport {WithConfirmFn, DragIcon, dummyFn} from \"../utils\";\n\nconst defaultPosition = \"topRight\";\n\n\nexport class BasicGroup extends Component {\n  static propTypes = {\n    //tree: PropTypes.instanceOf(Immutable.Map).isRequired,\n    reordableNodesCnt: PropTypes.number,\n    conjunctionOptions: PropTypes.object.isRequired,\n    allowFurtherNesting: PropTypes.bool.isRequired,\n    isRoot: PropTypes.bool.isRequired,\n    not: PropTypes.bool,\n    selectedConjunction: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    path: PropTypes.any, //instanceOf(Immutable.List)\n    children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n    isDraggingMe: PropTypes.bool,\n    isDraggingTempo: PropTypes.bool,\n    isLocked: PropTypes.bool,\n    isTrueLocked: PropTypes.bool,\n    //actions\n    handleDraggerMouseDown: PropTypes.func,\n    onDragStart: PropTypes.func,\n    addRule: PropTypes.func.isRequired,\n    addGroup: PropTypes.func.isRequired,\n    removeSelf: PropTypes.func.isRequired,\n    setConjunction: PropTypes.func.isRequired,\n    setNot: PropTypes.func.isRequired,\n    setLock: PropTypes.func.isRequired,\n    actions: PropTypes.object.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.removeSelf = this.removeSelf.bind(this);\n    this.setLock = this.setLock.bind(this);\n    this.renderItem = this.renderItem.bind(this);\n  }\n\n  isGroupTopPosition() {\n    return startsWith(this.props.config.settings.groupActionsPosition || defaultPosition, \"top\");\n  }\n\n  setLock(lock) {\n    this.props.setLock(lock);\n  }\n\n  removeSelf() {\n    const {confirmFn, config} = this.props;\n    const {renderConfirm, removeGroupConfirmOptions: confirmOptions} = config.settings;\n    const doRemove = () => {\n      this.props.removeSelf();\n    };\n    if (confirmOptions && !this.isEmptyCurrentGroup()) {\n      renderConfirm.call(config.ctx, {...confirmOptions,\n        onOk: doRemove,\n        onCancel: null,\n        confirmFn: confirmFn\n      }, config.ctx);\n    } else {\n      doRemove();\n    }\n  }\n\n  isEmptyCurrentGroup() {\n    const children = this.props.children1;\n    return !children || children.size == 0\n      || children.size == 1 && this.isEmpty(children.first());\n  }\n\n  isEmpty(item) {\n    const isGroup = (item.get(\"type\") == \"group\" || item.get(\"type\") == \"rule_group\");\n    return isGroup ? this.isEmptyGroup(item) : this.isEmptyRule(item);\n  }\n\n  isEmptyGroup(group) {\n    const children = group.get(\"children1\");\n    return !children || children.size == 0\n      || children.size == 1 && this.isEmpty(children.first());\n  }\n\n  isEmptyRule(rule) {\n    const properties = rule.get(\"properties\");\n    return !(\n      properties.get(\"field\") !== null\n          && properties.get(\"operator\") !== null\n          && properties.get(\"value\").filter((val) => val !== undefined).size > 0\n    );\n  }\n\n  render() {\n    return <>\n      {this.renderHeaderWrapper()}\n      {this.renderChildrenWrapper()}\n      {this.renderFooterWrapper()}\n    </>;\n  }\n\n  showNot() {\n    const {config} = this.props;\n    return config.settings.showNot;\n  }\n\n  // show conjs for 2+ children?\n  showConjs() {\n    const {conjunctionOptions, children1, config} = this.props;\n    const conjunctionCount = Object.keys(conjunctionOptions).length;\n    return conjunctionCount > 1 || this.showNot();\n  }\n\n  isNoChildren() {\n    const {children1} = this.props;\n    return children1 ? children1.size == 0 : true;\n  }\n\n\n  isOneChild() {\n    const {children1} = this.props;\n    return children1 ? children1.size < 2 : true;\n  }\n\n  renderChildrenWrapper() {\n    const {children1} = this.props;\n\n    return children1 && (\n      <div key=\"group-children\" className={classNames(\n        \"group--children\",\n        !this.showConjs() ? \"hide--conjs\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isOneChild() ? \"one--child\" : \"\",\n        this.childrenClassName()\n      )}>{this.renderChildren()}</div>\n    );\n  }\n\n  childrenClassName = () => \"\";\n\n  renderHeaderWrapper() {\n    const isGroupTopPosition = this.isGroupTopPosition();\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\",\n        this.isOneChild() ? \"one--child\" : \"\",\n        !this.showConjs() ? \"hide--conjs\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n      )}>\n        {this.renderHeader()}\n        {isGroupTopPosition && this.renderBeforeActions()}\n        {isGroupTopPosition && this.renderActions()}\n        {isGroupTopPosition && this.renderAfterActions()}\n      </div>\n    );\n  }\n\n  renderFooterWrapper() {\n    const isGroupTopPosition = this.isGroupTopPosition();\n    return !isGroupTopPosition && (\n      <div key=\"group-footer\" className='group--footer'>\n        {this.renderBeforeActions()}\n        {this.renderActions()}\n        {this.renderAfterActions()}\n      </div>\n    );\n  }\n\n  renderBeforeActions = () => {\n    const BeforeActions = this.props.config.settings.renderBeforeActions;\n    if (BeforeActions == undefined)\n      return null;\n\n    return typeof BeforeActions === \"function\" ? BeforeActions(this.props, this.props.config.ctx) : BeforeActions;\n  };\n\n  renderAfterActions = () => {\n    const AfterActions = this.props.config.settings.renderAfterActions;\n    if (AfterActions == undefined)\n      return null;\n\n    return typeof AfterActions === \"function\" ? AfterActions(this.props, this.props.config.ctx) : AfterActions;\n  };\n\n  renderActions() {\n    const {config, addRule, addGroup, isLocked, isTrueLocked, id} = this.props;\n\n    return <GroupActions\n      config={config}\n      addRule={addRule}\n      addGroup={addGroup}\n      canAddGroup={this.canAddGroup()}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  canAddGroup() {\n    return this.props.allowFurtherNesting;\n  }\n  canAddRule() {\n    const maxNumberOfRules = this.props.config.settings.maxNumberOfRules;\n    const totalRulesCnt = this.props.totalRulesCnt;\n    if (maxNumberOfRules) {\n      return totalRulesCnt < maxNumberOfRules;\n    }\n    return true;\n  }\n  canDeleteGroup() {\n    return !this.props.isRoot;\n  }\n\n  renderChildren() {\n    const {children1} = this.props;\n    return children1 ? children1.map(this.renderItem).toList() : null;\n  }\n\n  renderItem(item) {\n    const props = this.props;\n    const {config, actions, onDragStart, isLocked} = props;\n    const isRuleGroup = item.get(\"type\") == \"group\" && item.getIn([\"properties\", \"field\"]) != null;\n    const type = isRuleGroup ? \"rule_group\" : item.get(\"type\");\n    \n    return (\n      <Item\n        {...this.extraPropsForItem(item)}\n        key={item.get(\"id\")}\n        id={item.get(\"id\")}\n        groupId={props.id}\n        //path={props.path.push(item.get('id'))}\n        path={item.get(\"path\")}\n        type={type}\n        properties={item.get(\"properties\")}\n        config={config}\n        actions={actions}\n        children1={item.get(\"children1\")}\n        //tree={props.tree}\n        reordableNodesCnt={this.reordableNodesCntForItem(item)}\n        totalRulesCnt={this.totalRulesCntForItem(item)}\n        parentReordableNodesCnt={this.reordableNodesCnt()}\n        onDragStart={onDragStart}\n        isDraggingTempo={this.props.isDraggingTempo}\n        isParentLocked={isLocked}\n      />\n    );\n  }\n\n  extraPropsForItem(_item) {\n    return {};\n  }\n\n  reordableNodesCnt() {\n    if (this.props.isLocked)\n      return 0;\n    return this.props.reordableNodesCnt;\n  }\n\n  totalRulesCntForItem(_item) {\n    return this.props.totalRulesCnt;\n  }\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    return this.reordableNodesCnt();\n  }\n\n  showDragIcon() {\n    const { config, isRoot, isLocked } = this.props;\n    const reordableNodesCnt = this.reordableNodesCnt();\n    return config.settings.canReorder && !isRoot && reordableNodesCnt > 1 && !isLocked;\n  }\n\n  renderDrag() {\n    const { handleDraggerMouseDown } = this.props;\n    const drag = this.showDragIcon()\n      && <span\n        key=\"group-drag-icon\"\n        className={\"qb-drag-handler group--drag-handler\"}\n        onMouseDown={handleDraggerMouseDown}\n      ><DragIcon /> </span>;\n    return drag;\n  }\n\n  conjunctionOptions() {\n    const { conjunctionOptions } = this.props;\n    return conjunctionOptions;\n  }\n\n  renderConjs() {\n    const {\n      config, children1, id,\n      selectedConjunction, setConjunction, not, setNot, isLocked\n    } = this.props;\n\n    const {immutableGroupsMode, renderConjs, showNot: _showNot, notLabel} = config.settings;\n    const conjunctionOptions = this.conjunctionOptions();\n    if (!this.showConjs())\n      return null;\n    if (!children1 || !children1.size)\n      return null;\n\n    const renderProps = {\n      disabled: this.isOneChild(),\n      readonly: immutableGroupsMode || isLocked,\n      selectedConjunction: selectedConjunction,\n      setConjunction: immutableGroupsMode ? dummyFn : setConjunction,\n      conjunctionOptions: conjunctionOptions,\n      config: config,\n      not: not || false,\n      id: id,\n      setNot: immutableGroupsMode ? dummyFn : setNot,\n      notLabel: notLabel,\n      showNot: this.showNot(),\n      isLocked: isLocked\n    };\n    return renderConjs(renderProps, config.ctx);\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n}\n\nexport default GroupContainer(Draggable(\"group\")(WithConfirmFn(BasicGroup)));\n","import React, { PureComponent } from \"react\";\n\nexport class RuleGroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, canAddRule, canDeleteGroup, removeSelf, \n      setLock, isLocked, isTrueLocked, id,\n    } = this.props;\n    const {\n      immutableGroupsMode, addRuleLabel, delGroupLabel,\n      renderButton, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} hideLabel={true} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn \n      type=\"addRuleGroup\" onClick={addRule} label={addRuleLabel} readonly={isLocked} config={config}\n    />;\n\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn \n      type=\"delRuleGroup\" onClick={removeSelf} label={delGroupLabel} config={config}\n    />;\n\n    return (\n      <div className={\"group--actions\"}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {RuleGroupActions} from \"./RuleGroupActions\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {WithConfirmFn} from \"../utils\";\n\n\nclass RuleGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    selectedField: PropTypes.string,\n    parentField: PropTypes.string,\n    setField: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n  }\n\n  childrenClassName = () => \"rule_group--children\";\n  \n  renderHeaderWrapper = () => null;\n  renderFooterWrapper = () => null;\n  renderConjs = () => null;\n  canAddGroup = () => false;\n  canAddRule = () => true;\n  canDeleteGroup = () => false;\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    const {children1} = this.props;\n    return children1?.size || 0;\n  }\n\n  renderChildrenWrapper() {\n    return (\n      <>\n        {this.renderDrag()}\n        {this.renderField()}\n        {this.renderActions()}\n        {super.renderChildrenWrapper()}\n      </>\n    );\n  }\n\n  renderField() {\n    const { config, selectedField, setField, parentField, id, groupId, isLocked } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    return <FieldWrapper\n      key=\"field\"\n      classname={\"group--field\"}\n      config={config}\n      selectedField={selectedField}\n      setField={setField}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderActions() {\n    const {config, addRule, isLocked, isTrueLocked, id} = this.props;\n\n    return <RuleGroupActions\n      config={config}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  extraPropsForItem(_item) {\n    return {\n      parentField: this.props.selectedField\n    };\n  }\n}\n\n\nexport default GroupContainer(Draggable(\"group rule_group\")(WithConfirmFn(RuleGroup)));\n","import React, { PureComponent } from \"react\";\n\nexport class RuleGroupExtActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, canAddRule, canDeleteGroup, removeSelf, \n      setLock, isLocked, isTrueLocked, id,\n    } = this.props;\n    const {\n      immutableGroupsMode, addSubRuleLabel, delGroupLabel,\n      renderButton, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn \n      type=\"addRuleGroupExt\" onClick={addRule} label={addSubRuleLabel} readonly={isLocked} config={config}\n    />;\n\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn \n      type=\"delRuleGroup\" onClick={removeSelf} label={delGroupLabel} config={config}\n    />;\n\n    return (\n      <div className={\"group--actions group--actions--tr\"}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {RuleGroupExtActions} from \"./RuleGroupExtActions\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport OperatorWrapper from \"../rule/OperatorWrapper\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport Widget from \"../rule/Widget\";\nimport classNames from \"classnames\";\nconst {getFieldConfig, getFieldWidgetConfig} = Utils.ConfigUtils;\n\n\nclass RuleGroupExt extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    selectedField: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    value: PropTypes.any,\n    parentField: PropTypes.string,\n    setField: PropTypes.func,\n    setOperator: PropTypes.func,\n    setValue: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n  }\n\n  childrenClassName = () => \"rule_group_ext--children\";\n  \n  renderFooterWrapper = () => null;\n  canAddGroup = () => false;\n  canAddRule = () => true;\n  canDeleteGroup = () => true;\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeader()}\n        {this.renderGroupField()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderGroupField() {\n    return (\n      <div className={\"group--field--count--rule\"}>\n        {this.renderField()}\n        {this.renderOperator()}\n        {this.renderWidget()}\n      </div>\n    );\n  }\n\n  showNot() {\n    const {config, selectedField, selectedOperator} = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField) || {};\n    return selectedFieldConfig.showNot != undefined ? selectedFieldConfig.showNot : config.settings.showNot;\n  }\n\n  conjunctionOptions() {\n    const {config, selectedField, selectedOperator} = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField) || {};\n    let conjunctionOptions = super.conjunctionOptions();\n    if (selectedFieldConfig.conjunctions) {\n      let filtered = {};\n      for (let k of selectedFieldConfig.conjunctions) {\n        filtered[k] = conjunctionOptions[k];\n      }\n      conjunctionOptions = filtered;\n    }\n    return conjunctionOptions;\n  }\n\n  renderField() {\n    const { config, selectedField, setField, parentField, id, groupId, isLocked } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    return <FieldWrapper\n      key=\"field\"\n      classname={\"rule--field\"}\n      config={config}\n      selectedField={selectedField}\n      setField={setField}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderOperator() {\n    const {config, selectedField, selectedOperator, setField, setOperator, isLocked} = this.props;\n    const { immutableFieldsMode } = config.settings;\n    const selectedFieldWidgetConfig = getFieldWidgetConfig(config, selectedField, selectedOperator) || {};\n    const hideOperator = selectedFieldWidgetConfig.hideOperator;\n    const showOperatorLabel = selectedField && hideOperator && selectedFieldWidgetConfig.operatorInlineLabel;\n    const showOperator = selectedField && !hideOperator;\n\n    return <OperatorWrapper\n      key=\"operator\"\n      classname={\"group--operator\"}\n      config={config}\n      selectedField={selectedField}\n      selectedOperator={selectedOperator}\n      setField={setField}\n      setOperator={setOperator}\n      selectedFieldPartsLabels={[\"group\"]}\n      showOperator={showOperator}\n      showOperatorLabel={showOperatorLabel}\n      selectedFieldWidgetConfig={selectedFieldWidgetConfig}\n      readonly={immutableFieldsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  renderWidget() {\n    const {config, selectedField, selectedOperator, isLocked} = this.props;\n    const { immutableValuesMode } = config.settings;\n    const isFieldAndOpSelected = selectedField && selectedOperator;\n    const showWidget = isFieldAndOpSelected;\n    if (!showWidget) return null;\n\n    const widget = <Widget\n      key=\"values\"\n      isForRuleGruop={true}\n      field={this.props.selectedField}\n      operator={this.props.selectedOperator}\n      value={this.props.value}\n      valueSrc={\"value\"}\n      valueError={null}\n      config={config}\n      setValue={!immutableValuesMode ? this.props.setValue : dummyFn}\n      setValueSrc={dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n\n    return (\n      <Col key={\"widget-for-\"+this.props.selectedOperator} className=\"rule--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderActions() {\n    const {config, addRule, isLocked, isTrueLocked, id} = this.props;\n\n    return <RuleGroupExtActions\n      config={config}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    const {children1} = this.props;\n    return children1?.size || 0;\n  }\n\n  extraPropsForItem(_item) {\n    return {\n      parentField: this.props.selectedField\n    };\n  }\n}\n\n\nexport default GroupContainer(Draggable(\"group rule_group_ext\")(WithConfirmFn(RuleGroupExt)));\n\n","import React, { PureComponent } from \"react\";\n\nconst groupActionsPositionList = {\n  topLeft: \"group--actions--tl\",\n  topCenter: \"group--actions--tc\",\n  topRight: \"group--actions--tr\",\n  bottomLeft: \"group--actions--bl\",\n  bottomCenter: \"group--actions--bc\",\n  bottomRight: \"group--actions--br\"\n};\nconst defaultPosition = \"topRight\";\n\n\nexport class SwitchGroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addCaseGroup, addDefaultCaseGroup, setLock, isLocked, isTrueLocked, id, canAddGroup, canAddDefault\n    } = this.props;\n    const {\n      immutableGroupsMode, addCaseLabel, addDefaultCaseLabel, groupActionsPosition, \n      renderButton, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock,\n    } = config.settings;\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n    const position = groupActionsPositionList[groupActionsPosition || defaultPosition];\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addCaseGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type=\"addCaseGroup\" onClick={addCaseGroup} label={addCaseLabel} readonly={isLocked} config={config}\n    />;\n\n    const addDefaultCaseGroupBtn = !immutableGroupsMode && canAddDefault && !isLocked && <Btn\n      type=\"addDefaultCaseGroup\" onClick={addDefaultCaseGroup} label={addDefaultCaseLabel} readonly={isLocked} config={config}\n    />;\n\n    return (\n      <div className={`group--actions ${position}`}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addCaseGroupBtn}\n          {addDefaultCaseGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {SwitchGroupActions} from \"./SwitchGroupActions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport classNames from \"classnames\";\nconst {getTotalReordableNodesCountInTree, getTotalRulesCountInTree} = Utils.TreeUtils;\n\n\nclass SwitchGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n  }\n\n  childrenClassName = () => \"switch_group--children\";\n  \n  renderFooterWrapper = () => null;\n  hasDefaultCase = () => {\n    return this.props.children1?.size && this.props.children1.filter(c => c.get(\"children1\") == null).size > 0;\n  };\n  canAddGroup() {\n    const { maxNumberOfCases } = this.props.config.settings;\n    const totalCasesCnt = this.props.children1?.size || 0;\n    if (maxNumberOfCases) {\n      return totalCasesCnt < maxNumberOfCases;\n    }\n    return true;\n  }\n  canAddRule() {\n    return false;\n  }\n\n  reordableNodesCnt() {\n    // result will be passed to each case's `parentReordableNodesCnt` prop\n    const totalCasesCnt = this.props.children1?.size || 0;\n    let casesToReorder = totalCasesCnt;\n    if (this.hasDefaultCase()) {\n      casesToReorder--;\n    }\n    return casesToReorder;\n  }\n\n  totalRulesCntForItem(item) {\n    return getTotalRulesCountInTree(item);\n  }\n\n  reordableNodesCntForItem(item) {\n    if (this.props.isLocked)\n      return 0;\n    const { canLeaveEmptyCase, canRegroupCases } = this.props.config.settings;\n\n    const totalCasesCnt = this.props.children1?.size || 0;\n    let casesToReorder = totalCasesCnt;\n    if (this.hasDefaultCase()) {\n      casesToReorder--;\n    }\n\n    const nodesInCase = getTotalReordableNodesCountInTree(item);\n    let cnt = nodesInCase;\n    if (cnt == 1 && canRegroupCases && canLeaveEmptyCase && casesToReorder > 1)\n      cnt = 111;\n    return cnt;\n  }\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        //this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeader()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderConjs() {\n    const { config } = this.props;\n    const { renderSwitchPrefix } = config.settings;\n    return renderSwitchPrefix || null;\n  }\n\n  showNot() {\n    return false;\n  }\n\n\n  renderActions() {\n    const {config, addCaseGroup, addDefaultCaseGroup, isLocked, isTrueLocked, id} = this.props;\n\n    return <SwitchGroupActions\n      config={config}\n      addCaseGroup={addCaseGroup}\n      addDefaultCaseGroup={addDefaultCaseGroup}\n      canAddDefault={!this.hasDefaultCase()}\n      canAddGroup={this.canAddGroup()}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n}\n\n\nexport default GroupContainer(Draggable(\"group switch_group\")(WithConfirmFn(SwitchGroup)));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {GroupActions} from \"./GroupActions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport Widget from \"../rule/Widget\";\nimport classNames from \"classnames\";\n\n\nclass CaseGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    parentReordableNodesCnt: PropTypes.number,\n    value: PropTypes.any,\n    setValue: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n  }\n\n  isDefaultCase() {\n    return this.props.children1 == undefined;\n  }\n\n  reordableNodesCnt() {\n    // `parentReordableNodesCnt` is number of cases to reorder\n    return this.props.parentReordableNodesCnt;\n  }\n\n  reordableNodesCntForItem(_item) {\n    // `reordableNodesCnt` is number of nodes is current case\n    if (this.props.isLocked)\n      return 0;\n    return this.props.reordableNodesCnt;\n  }\n\n  totalRulesCntForItem(_item) {\n    // `totalRulesCnt` is number of nodes is current case\n    return this.props.totalRulesCnt;\n  }\n\n  showDragIcon() {\n    // default impl of `showDragIcon()` uses `this.reordableNodesCnt()`\n    if (this.isDefaultCase())\n      return false;\n    return super.showDragIcon();\n  }\n\n  childrenClassName = () => \"case_group--children\";\n  \n  renderFooterWrapper = () => null;\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeaderLeft()}\n        {this.renderHeaderCenter()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderChildrenWrapper() {\n    if (this.isDefaultCase())\n      return null;\n    // body has 2 columns: condition & value\n    return (\n      <div className={\"case_group--body\"}>\n        {this.renderCondition()}\n        {this.renderValue()}\n      </div>\n    );\n  }\n\n  renderHeaderLeft() {\n    if (this.isDefaultCase()) {\n      const { defaultCaseLabel } = this.props.config.settings;\n      return defaultCaseLabel || \"\";\n    }\n    // default impl:\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderCondition() {\n    if (this.isDefaultCase())\n      return null;\n    return super.renderChildrenWrapper();\n  }\n\n  renderHeaderCenter() {\n    if (this.isDefaultCase())\n      return this.renderValue();\n    else\n      return null;\n  }\n\n  canAddGroup() {\n    if (this.isDefaultCase())\n      return false;\n    return super.canAddGroup();\n  }\n\n  canAddRule() {\n    if (this.isDefaultCase())\n      return false;\n    return super.canAddRule();\n  }\n\n  renderValue() {\n    const { config, isLocked, value, setValue, id } = this.props;\n    const { immutableValuesMode } = config.settings;\n\n    const widget = <Widget\n      key=\"values\"\n      isCaseValue={true}\n      field={\"!case_value\"}\n      operator={null}\n      value={value}\n      valueSrc={\"value\"}\n      valueError={null}\n      config={config}\n      setValue={!immutableValuesMode ? setValue : dummyFn}\n      setValueSrc={dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={id}\n      groupId={null}\n    />;\n\n    return (\n      <Col className=\"case_group--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderActions() {\n    const {config, addGroup, addRule, isLocked, isTrueLocked, id} = this.props;\n    return <GroupActions\n      config={config}\n      addGroup={addGroup}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canAddGroup={this.canAddGroup()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  isEmptyCurrentGroup() {\n    // used to confirm self-deletion\n    const { value } = this.props;\n    const oneValue = value && value.size ? value.get(0) : null;\n    const hasValue = oneValue != null && (Array.isArray(oneValue) ? oneValue.length > 0 : true);\n    return super.isEmptyCurrentGroup() && !hasValue;\n  }\n\n}\n\nexport default GroupContainer(Draggable(\"group case_group\")(WithConfirmFn(CaseGroup)));\n\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Rule from \"./Rule\";\nimport Group from \"./Group\";\nimport RuleGroup from \"./RuleGroup\";\nimport RuleGroupExt from \"./RuleGroupExt\";\nimport SwitchGroup from \"./SwitchGroup\";\nimport CaseGroup from \"./CaseGroup\";\n\nconst types = [\n  \"rule\",\n  \"group\",\n  \"rule_group\",\n  \"switch_group\",\n  \"case_group\"\n];\n\nconst getProperties = (props) => {\n  const properties = props.properties?.toObject() || {};\n  const result = {...properties};\n  if (props.isParentLocked) {\n    result.isLocked = true;\n  }\n  if (properties.isLocked) {\n    result.isTrueLocked = true;\n  }\n  return result;\n};\n\nconst typeMap = {\n  rule: (props) => (\n    <Rule\n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      config={props.config}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      parentField={props.parentField}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  group: (props) => (\n    <Group \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      //tree={props.tree}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  rule_group: (props) => (\n    <RuleGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      //tree={props.tree}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  rule_group_ext: (props) => (\n    <RuleGroupExt \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      //tree={props.tree}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  switch_group: (props) => (\n    <SwitchGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      //tree={props.tree}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  case_group: (props) => (\n    <CaseGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      //tree={props.tree}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n};\n\n\nclass Item extends PureComponent {\n  static propTypes = {\n    //tree: PropTypes.instanceOf(Immutable.Map).isRequired,\n    config: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    type: PropTypes.oneOf(types).isRequired,\n    path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n    properties: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n    actions: PropTypes.object.isRequired,\n    reordableNodesCnt: PropTypes.number,\n    onDragStart: PropTypes.func,\n    parentField: PropTypes.string, //from RuleGroup\n    isDraggingTempo: PropTypes.bool,\n    isParentLocked: PropTypes.bool,\n  };\n\n  render() {\n    const { type, ...props } = this.props;\n    const mode = props.properties?.get(\"mode\");\n    const postfix = mode == \"array\" ? \"_ext\" : \"\";    \n    const renderItem = props.config.settings.renderItem;\n    let Cmp = typeMap[type + postfix];\n    if (renderItem) {\n      return renderItem({...props, type, itemComponent: Cmp}, props.config.ctx);\n    }\n    if (!Cmp) return null;\n    return Cmp(props);\n  }\n}\n\nexport { Item };\n","import { Utils } from \"@react-awesome-query-builder/core\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Item } from \"./item/Item\";\nimport SortableContainer from \"./containers/SortableContainer\";\nimport {pureShouldComponentUpdate} from \"../utils/reactUtils\";\nconst { getTotalReordableNodesCountInTree, getTotalRulesCountInTree } = Utils.TreeUtils;\nconst { createListFromArray, emptyProperies } = Utils.DefaultUtils;\n\nclass Builder extends Component {\n  static propTypes = {\n    tree: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    config: PropTypes.object.isRequired,\n    actions: PropTypes.object.isRequired,\n    onDragStart: PropTypes.func,\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const prevProps = this.props;\n    let should = this.pureShouldComponentUpdate(nextProps, nextState);\n    if (should) {\n      let chs = [];\n      for (let k in nextProps) {\n        let changed = (nextProps[k] !== prevProps[k]);\n        if (changed && k != \"__isInternalValueChange\") {\n          chs.push(k);\n        }\n      }\n      if (!chs.length)\n        should = false;\n      //optimize render\n      if (chs.length == 1 && chs[0] == \"tree\" && nextProps.__isInternalValueChange)\n        should = false;\n    }\n    return should;\n  }\n\n  constructor(props) {\n    super(props);\n    this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n\n    this._updPath(props);\n  }\n\n  _updPath (props) {\n    const id = props.tree.get(\"id\");\n    this.path = createListFromArray([id]);\n  }\n\n  render() {\n    const tree = this.props.tree;\n    const rootType = tree.get(\"type\");\n    const isTernary = rootType == \"switch_group\";\n    const reordableNodesCnt = isTernary ? null : getTotalReordableNodesCountInTree(tree);\n    const totalRulesCnt = isTernary ? null : getTotalRulesCountInTree(tree);\n    const id = tree.get(\"id\");\n    return (\n      <Item \n        key={id}\n        id={id}\n        path={this.path}\n        type={rootType}\n        properties={tree.get(\"properties\") || emptyProperies()}\n        config={this.props.config}\n        actions={this.props.actions}\n        children1={tree.get(\"children1\") || emptyProperies()}\n        //tree={tree}\n        reordableNodesCnt={reordableNodesCnt}\n        totalRulesCnt={totalRulesCnt}\n        parentReordableNodesCnt={0}\n        onDragStart={this.props.onDragStart}\n      />\n    );\n  }\n}\n\nexport default SortableContainer(Builder);\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst {clone} = Utils;\nconst {getFieldConfig} = Utils.ConfigUtils;\nconst {getFieldPath, getFieldPathLabels, getWidgetForFieldOp} = Utils.RuleUtils;\n\n//tip: this.props.value - right value, this.props.field - left value\n\nexport default class ValueField extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.string.isRequired,\n    value: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    parentField: PropTypes.string,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForItems = [\"config\", \"field\", \"operator\", \"isFuncArg\", \"parentField\"];\n    const keysForMeta = [\"config\", \"field\", \"operator\", \"value\", \"placeholder\", \"isFuncArg\", \"parentField\"];\n    const needUpdateItems = !this.items || keysForItems.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateItems) {\n      this.items = this.getItems(nextProps);\n    }\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getItems({config, field, operator, parentField, isFuncArg, fieldDefinition}) {\n    const {canCompareFieldWithField} = config.settings;\n    const fieldSeparator = config.settings.fieldSeparator;\n    const parentFieldPath = typeof parentField == \"string\" ? parentField.split(fieldSeparator) : parentField;\n    const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n    const sourceFields = parentField ? parentFieldConfig && parentFieldConfig.subfields : config.fields;\n\n    const filteredFields = this.filterFields(config, sourceFields, field, parentField, parentFieldPath, operator, canCompareFieldWithField, isFuncArg, fieldDefinition);\n    const items = this.buildOptions(parentFieldPath, config, filteredFields, parentFieldPath);\n    return items;\n  }\n\n  getMeta({config, field, operator, value, placeholder: customPlaceholder, isFuncArg, parentField}) {\n    const {fieldPlaceholder, fieldSeparatorDisplay} = config.settings;\n    const selectedKey = value;\n    const isFieldSelected = !!value;\n\n    const leftFieldConfig = getFieldConfig(config, field);\n    const leftFieldWidgetField = leftFieldConfig.widgets.field;\n    const leftFieldWidgetFieldProps = leftFieldWidgetField && leftFieldWidgetField.widgetProps || {};\n    const placeholder = isFieldSelected ? null \n      : (isFuncArg && customPlaceholder || leftFieldWidgetFieldProps.valuePlaceholder || fieldPlaceholder);\n    const currField = isFieldSelected ? getFieldConfig(config, selectedKey) : null;\n    const selectedOpts = currField || {};\n\n    const selectedKeys = getFieldPath(selectedKey, config);\n    const selectedPath = getFieldPath(selectedKey, config, true);\n    const selectedLabel = this.getFieldLabel(currField, selectedKey, config);\n    const partsLabels = getFieldPathLabels(selectedKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel || parentField)\n      selectedFullLabel = null;\n    const selectedAltLabel = selectedOpts.label2;\n\n    return {\n      placeholder,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n    };\n  }\n\n  filterFields(config, fields, leftFieldFullkey, parentField, parentFieldPath, operator, canCompareFieldWithField, isFuncArg, fieldDefinition) {\n    fields = clone(fields);\n    const fieldSeparator = config.settings.fieldSeparator;\n    const leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n    const _relyOnWidgetType = false; //TODO: remove this, see issue #758\n    const widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n    const widgetConfig = config.widgets[widget];\n    let expectedType;\n    if (isFuncArg && fieldDefinition) {\n      expectedType = fieldDefinition.type;\n    } else if (_relyOnWidgetType && widgetConfig) {\n      expectedType = widgetConfig.type;\n    } else {\n      expectedType = leftFieldConfig.type;\n    }\n    \n    function _filter(list, path) {\n      for (let rightFieldKey in list) {\n        let subfields = list[rightFieldKey].subfields;\n        let subpath = (path ? path : []).concat(rightFieldKey);\n        let rightFieldFullkey = subpath.join(fieldSeparator);\n        let rightFieldConfig = getFieldConfig(config, rightFieldFullkey);\n        if (!rightFieldConfig) {\n          delete list[rightFieldKey];\n        } else if (rightFieldConfig.type == \"!struct\" || rightFieldConfig.type == \"!group\") {\n          if(_filter(subfields, subpath) == 0)\n            delete list[rightFieldKey];\n        } else {\n          // tip: LHS field can be used as arg in RHS function\n          let canUse = rightFieldConfig.type == expectedType && (isFuncArg ? true : rightFieldFullkey != leftFieldFullkey);\n          let fn = canCompareFieldWithField || config.settings.canCompareFieldWithField;\n          if (fn)\n            canUse = canUse && fn(leftFieldFullkey, leftFieldConfig, rightFieldFullkey, rightFieldConfig, operator);\n          if (!canUse)\n            delete list[rightFieldKey];\n        }\n      }\n      return keys(list).length;\n    }\n\n    _filter(fields, parentFieldPath || []);\n\n    return fields;\n  }\n\n  buildOptions(parentFieldPath, config, fields, path = null, optGroupLabel = null) {\n    if (!fields)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    return keys(fields).map(fieldKey => {\n      const field = fields[fieldKey];\n      const label = this.getFieldLabel(field, fieldKey, config);\n      const partsLabels = getFieldPathLabels(fieldKey, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label || parentFieldPath)\n        fullLabel = null;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n      const subpath = (path ? path : []).concat(fieldKey);\n\n      if (field.hideForCompare)\n        return undefined;\n\n      if (field.type == \"!struct\" || field.type == \"!group\") {\n        return {\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          items: this.buildOptions(parentFieldPath, config, field.subfields, subpath, label)\n        };\n      } else {\n        return {\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          grouplabel: optGroupLabel\n        };\n      }\n    }).filter(o => !!o);\n  }\n\n  getFieldLabel(fieldOpts, fieldKey, config) {\n    if (!fieldKey) return null;\n    let fieldSeparator = config.settings.fieldSeparator;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let fieldParts = Array.isArray(fieldKey) ? fieldKey : fieldKey.split(fieldSeparator);\n    let label = fieldOpts.label || last(fieldParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  render() {\n    const {config, customProps, setValue, readonly, id, groupId} = this.props;\n    const {renderField} = config.settings;\n    const renderProps = {\n      config,\n      customProps,\n      setField: setValue,\n      readonly,\n      items: this.items,\n      id,\n      groupId,\n      ...this.meta\n    };\n    return renderField(renderProps, config.ctx);\n  }\n\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst { clone } = Utils;\nconst {getFieldConfig, getFuncConfig} = Utils.ConfigUtils;\nconst {getFieldPath, getFuncPathLabels, getWidgetForFieldOp} = Utils.RuleUtils;\n\n//tip: this.props.value - right value, this.props.field - left value\n\nexport default class FuncSelect extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.string.isRequired,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    value: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n      \n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForItems = [\"config\", \"field\", \"operator\", \"isFuncArg\"];\n    const keysForMeta = [\"config\", \"field\", \"value\"];\n    const needUpdateItems = !this.items || keysForItems.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n    if (needUpdateItems) {\n      this.items = this.getItems(nextProps);\n    }\n  }\n\n  getItems({config, field, operator, parentFuncs, fieldDefinition, isFuncArg}) {\n    const {canUseFuncForField} = config.settings;\n    const filteredFuncs = this.filterFuncs(config, config.funcs, field, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition);\n    const items = this.buildOptions(config, filteredFuncs);\n    return items;\n  }\n\n  getMeta({config, field, value}) {\n    const {funcPlaceholder, fieldSeparatorDisplay} = config.settings;\n    const selectedFuncKey = value;\n    const isFuncSelected = !!value;\n\n    const leftFieldConfig = getFieldConfig(config, field);\n    const leftFieldWidgetField = leftFieldConfig.widgets.field;\n    const leftFieldWidgetFieldProps = leftFieldWidgetField && leftFieldWidgetField.widgetProps || {};\n    const placeholder = !isFuncSelected ? funcPlaceholder : null;\n\n    const currFunc = isFuncSelected ? getFuncConfig(config, selectedFuncKey) : null;\n    const selectedOpts = currFunc || {};\n\n    const selectedKeys = getFieldPath(selectedFuncKey, config);\n    const selectedPath = getFieldPath(selectedFuncKey, config, true);\n    const selectedLabel = this.getFuncLabel(currFunc, selectedFuncKey, config);\n    const partsLabels = getFuncPathLabels(selectedFuncKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel)\n      selectedFullLabel = null;\n    \n    return {\n      placeholder,\n      selectedKey: selectedFuncKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedFullLabel,\n    };\n  }\n\n  filterFuncs(config, funcs, leftFieldFullkey, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition) {\n    funcs = clone(funcs);\n    const fieldSeparator = config.settings.fieldSeparator;\n    const leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n    let expectedType;\n    let targetDefinition = leftFieldConfig;\n    const widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n    if (isFuncArg && fieldDefinition) {\n      targetDefinition = fieldDefinition;\n      expectedType = fieldDefinition.type;\n    } else if (widget) {\n      let widgetConfig = config.widgets[widget];\n      let widgetType = widgetConfig.type;\n      //expectedType = leftFieldConfig.type;\n      expectedType = widgetType;\n    } else {\n      expectedType = leftFieldConfig.type;\n    }\n\n    function _filter(list, path) {\n      for (let funcKey in list) {\n        let subfields = list[funcKey].subfields;\n        let subpath = (path ? path : []).concat(funcKey);\n        let funcFullkey = subpath.join(fieldSeparator);\n        let funcConfig = getFuncConfig(config, funcFullkey);\n        if (funcConfig.type == \"!struct\") {\n          if(_filter(subfields, subpath) == 0)\n            delete list[funcKey];\n        } else {\n          let canUse = funcConfig.returnType == expectedType;\n          if (targetDefinition.funcs)\n            canUse = canUse && targetDefinition.funcs.includes(funcFullkey);\n          if (canUseFuncForField)\n            canUse = canUse && canUseFuncForField(leftFieldFullkey, leftFieldConfig, funcFullkey, funcConfig, operator);\n          // don't use func in func (can be configurable, but usually users don't need this)\n          if (!funcConfig.allowSelfNesting && parentFuncs && parentFuncs.map(([func, _arg]) => func).includes(funcFullkey))\n            canUse = false;\n          if (!canUse)\n            delete list[funcKey];\n        }\n      }\n      return keys(list).length;\n    }\n\n    _filter(funcs, []);\n\n    return funcs;\n  }\n\n  buildOptions(config, funcs, path = null, optGroupLabel = null) {\n    if (!funcs)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    return keys(funcs).map(funcKey => {\n      const func = funcs[funcKey];\n      const label = this.getFuncLabel(func, funcKey, config);\n      const partsLabels = getFuncPathLabels(funcKey, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label)\n        fullLabel = null;\n      const tooltip = func.tooltip;\n      const subpath = (path ? path : []).concat(funcKey);\n\n      if (func.type == \"!struct\") {\n        return {\n          key: funcKey,\n          path: prefix+funcKey,\n          label,\n          fullLabel,\n          tooltip,\n          items: this.buildOptions(config, func.subfields, subpath, label)\n        };\n      } else {\n        return {\n          key: funcKey,\n          path: prefix+funcKey,\n          label,\n          fullLabel,\n          tooltip,\n          grouplabel: optGroupLabel\n        };\n      }\n    });\n  }\n\n  getFuncLabel(funcOpts, funcKey, config) {\n    if (!funcKey) return null;\n    let fieldSeparator = config.settings.fieldSeparator;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let funcParts = Array.isArray(funcKey) ? funcKey : funcKey.split(fieldSeparator);\n    let label = funcOpts.label || last(funcParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  render() {\n    const {config, customProps, setValue, readonly, id, groupId} = this.props;\n    const {renderFunc} = config.settings;\n    const renderProps = {\n      config,\n      customProps,\n      readonly,\n      setField: setValue,\n      items: this.items,\n      id,\n      groupId,\n      ...this.meta\n    };\n    return renderFunc(renderProps, config.ctx);\n  }\n\n}\n","import React, { Component, PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport FuncSelect from \"./FuncSelect\";\nimport Widget from \"./Widget\";\nimport {Col} from \"../utils\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nconst {getFuncConfig} = Utils.ConfigUtils;\nconst {setFunc, setArgValue, setArgValueSrc} = Utils.FuncUtils;\n\n\nexport default class FuncWidget extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.string.isRequired,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    value: PropTypes.object, //instanceOf(Immutable.Map) //with keys 'func' and `args`\n    setValue: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"config\", \"field\", \"operator\", \"value\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({config, field, operator, value}) {\n    const funcKey = value ? value.get(\"func\") : null;\n    const funcDefinition = funcKey ? getFuncConfig(config, funcKey) : null;\n\n    return {\n      funcDefinition, funcKey\n    };\n  }\n\n  setFunc = (funcKey) => {\n    this.props.setValue( setFunc(this.props.value, funcKey, this.props.config) );\n  };\n\n  setArgValue = (argKey, argVal) => {\n    const {config} = this.props;\n    const {funcDefinition} = this.meta;\n    const {args} = funcDefinition;\n    const argDefinition = args[argKey];\n\n    this.props.setValue( setArgValue(this.props.value, argKey, argVal, argDefinition, config) );\n  };\n\n  setArgValueSrc = (argKey, argValSrc) => {\n    const {config} = this.props;\n    const {funcDefinition} = this.meta;\n    const {args} = funcDefinition;\n    const argDefinition = args[argKey];\n\n    this.props.setValue( setArgValueSrc(this.props.value, argKey, argValSrc, argDefinition, config) );\n  };\n\n  renderFuncSelect = () => {\n    const {config, field, operator, customProps, value, readonly, parentFuncs, id, groupId, isFuncArg, fieldDefinition} = this.props;\n    const funcKey = value ? value.get(\"func\") : null;\n    const selectProps = {\n      value: funcKey,\n      setValue: this.setFunc,\n      config, field, operator, customProps, readonly, parentFuncs, \n      isFuncArg, fieldDefinition,\n      id, groupId,\n    };\n    const {showLabels, funcLabel} = config.settings;\n    const widgetLabel = showLabels\n      ? <label className=\"rule--label\">{funcLabel}</label>\n      : null;\n\n    return (\n      <Col key=\"func\" className=\"rule--func\">\n        {widgetLabel}\n        <FuncSelect {...selectProps} />\n      </Col>\n    );\n  };\n\n  renderArgLabel = (argKey, argDefinition) => {\n    const {valueSources, type, showPrefix, label} = argDefinition;\n    const {config} = this.props;\n    const isConst = valueSources && valueSources.length == 1 && valueSources[0] == \"const\";\n    const forceShow = !config.settings.showLabels && (type == \"boolean\" || isConst) && showPrefix;\n    if (!forceShow) return null;\n    return (\n      <Col className=\"rule--func--arg-label\">\n        {label || argKey}\n      </Col>\n    );\n  };\n\n  renderArgLabelSep = (argKey, argDefinition) => {\n    const {valueSources, type, showPrefix} = argDefinition;\n    const {config} = this.props;\n    const isConst = valueSources && valueSources.length == 1 && valueSources[0] == \"const\";\n    const forceShow = !config.settings.showLabels && (type == \"boolean\" || isConst) && showPrefix;\n    if (!forceShow) return null;\n    return (\n      <Col className=\"rule--func--arg-label-sep\">\n        {\":\"}\n      </Col>\n    );\n  };\n\n  renderArgVal = (funcKey, argKey, argDefinition) => {\n    const {config, field, operator, value, readonly, parentFuncs, id, groupId} = this.props;\n    const arg = value ? value.getIn([\"args\", argKey]) : null;\n    const argVal = arg ? arg.get(\"value\") : undefined;\n    const defaultValueSource = argDefinition.valueSources.length == 1 ? argDefinition.valueSources[0] : undefined;\n    const argValSrc = arg ? (arg.get(\"valueSrc\") || defaultValueSource || \"value\") : defaultValueSource;\n\n    const widgetProps = {\n      config, \n      fieldFunc: funcKey,\n      fieldArg: argKey,\n      leftField: field,\n      operator: null,\n      value: argVal,\n      valueSrc: argValSrc,\n      setValue: this.setArgValue,\n      setValueSrc: this.setArgValueSrc,\n      funcKey,\n      argKey,\n      argDefinition,\n      readonly,\n      parentFuncs,\n      id,\n      groupId,\n    };\n    //tip: value & valueSrc will be converted to Immutable.List at <Widget>\n\n    return (\n      <Col className=\"rule--func--arg-value\">\n        <ArgWidget {...widgetProps} />\n      </Col>\n    );\n  };\n\n  renderArgSep = (argKey, argDefinition, argIndex, {renderSeps}) => {\n    if (!argIndex) return null;\n    return (\n      <Col className=\"rule--func--arg-sep\">\n        {renderSeps ? renderSeps[argIndex - 1] : \", \"}\n      </Col>\n    );\n  };\n\n  renderBracketBefore = ({renderBrackets}) => {\n    return (\n      <Col key=\"before_args\" className=\"rule--func--bracket-before\">\n        {renderBrackets ? renderBrackets[0] : \"(\"}\n      </Col>\n    );\n  };\n\n  renderBracketAfter = ({renderBrackets}) => {\n    return (\n      <Col key=\"after_args\" className=\"rule--func--bracket-after\">\n        {renderBrackets ? renderBrackets[1] : \")\"}\n      </Col>\n    );\n  };\n\n  renderFuncArgs = () => {\n    const {funcDefinition, funcKey} = this.meta;\n    if (!funcKey) return null;\n    const {args} = funcDefinition;\n    if (!args) return null;\n\n    return (\n      <>\n        {this.renderBracketBefore(funcDefinition)}\n        <Col key=\"args\" className=\"rule--func--args\">\n          {Object.keys(args).map((argKey, argIndex) => (\n            <Col key={`arg-${argKey}-${argIndex}`} className=\"rule--func--arg\">\n              {this.renderArgSep(argKey, args[argKey], argIndex, funcDefinition)}\n              {this.renderArgLabel(argKey, args[argKey])}\n              {this.renderArgLabelSep(argKey, args[argKey])}\n              {this.renderArgVal(funcKey, argKey, args[argKey])}\n            </Col>\n          ))}\n        </Col>\n        {this.renderBracketAfter(funcDefinition)}\n      </>\n    );\n  };\n\n  render() {\n    return (\n      <Col className=\"rule--func--wrapper\">\n        {this.renderFuncSelect()}\n        {this.renderFuncArgs()}\n      </Col>\n    );\n  }\n}\n\n\nclass ArgWidget extends PureComponent {\n  static propTypes = {\n    funcKey: PropTypes.string.isRequired,\n    argKey: PropTypes.string.isRequired,\n    setValue: PropTypes.func.isRequired,\n    setValueSrc: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n  };\n\n  setValue = (_delta, value, _widgetType) => {\n    const {setValue, argKey} = this.props;\n    setValue(argKey, value);\n  };\n\n  setValueSrc = (_delta, valueSrc, _widgetType) => {\n    const {setValueSrc, argKey} = this.props;\n    setValueSrc(argKey, valueSrc);\n  };\n\n  render() {\n    const {funcKey, argKey, parentFuncs} = this.props;\n    return (\n      <Widget\n        {...this.props} \n        setValue={this.setValue} \n        setValueSrc={this.setValueSrc} \n        isFuncArg={true}\n        parentFuncs={[...(parentFuncs || []), [funcKey, argKey]]}\n      />\n    );\n  }\n}\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, labelYes, labelNo, readonly, customProps = {}} = props;\n  const customRadioYesProps = customProps.radioYes || {};\n  const customRadioNoProps = customProps.radioNo || {};\n\n  const onCheckboxChange = e => setValue(e.target.checked);\n  const onRadioChange = e => setValue(e.target.value == \"true\");\n\n  // return <>\n  //     <input key={id}  type=\"checkbox\" id={id} checked={!!value} disabled={readonly} onChange={onCheckboxChange} />\n  //     <label style={{display: \"inline\"}} key={id+\"label\"}  htmlFor={id}>{value ? labelYes : labelNo}</label>\n  // </>;\n\n  return <>\n    <input type=\"radio\" value={true} checked={!!value} disabled={readonly} onChange={onRadioChange} { ...customRadioYesProps }/> {labelYes}\n    <input type=\"radio\" value={false} checked={!value} disabled={readonly} onChange={onRadioChange} { ...customRadioNoProps } /> {labelNo}\n  </>;\n\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, maxLength, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  const textValue = value || \"\";\n  return (\n    <input\n      type=\"text\" \n      value={textValue} \n      placeholder={placeholder} \n      disabled={readonly} \n      onChange={onChange}\n      maxLength={maxLength}\n      {...customProps}\n    />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, maxLength, maxRows, fullWidth, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  const textValue = value || \"\";\n  return (\n    <textarea\n      value={textValue} \n      placeholder={placeholder}\n      disabled={readonly}\n      onChange={onChange}\n      maxLength={maxLength}\n      style={{\n        width: fullWidth ? \"100%\" : undefined\n      }}\n      {...customProps}\n    />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { moment } = Utils;\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, readonly, customProps, } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    setValue(value);\n  };\n  \n  return (\n    <input type=\"date\"  value={value || \"\"}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, use12Hours, readonly, customProps } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    setValue(value);\n  };\n  \n  return (\n    <input type=\"time\"  value={value || \"\"}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { moment } = Utils;\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, use12Hours, readonly, customProps, } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    else\n      value = moment(new Date(value)).format(valueFormat);\n    setValue(value);\n  };\n\n  let dtValue = value;\n  if (!value)\n    dtValue = \"\";\n  else\n    dtValue = moment(value).format(\"YYYY-MM-DDTHH:mm\");\n  \n  return (\n    <input type=\"datetime-local\"  value={dtValue}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, customProps,}) => {\n  const renderOptions = () => \n    mapListValues(listValues, ({title, value}) => {\n      return <option key={value} value={value}>{title}</option>;\n    });\n\n  const getMultiSelectValues = (multiselect) => {\n    let values = [];\n    const options = multiselect.options;\n    for (let i = 0 ; i < options.length ; i++) {\n      const opt = options[i];\n      if (opt.selected) {\n        values.push(opt.value);\n      }\n    }\n    if (!values.length)\n      values = undefined; //not allow []\n    return values;\n  };\n\n  const onChange = e => setValue(getMultiSelectValues(e.target));\n  \n  return (\n    <select multiple\n      onChange={onChange}\n      value={value}\n      disabled={readonly}\n      {...omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])}\n    >\n      {renderOptions()}\n    </select>\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, customProps,}) => {\n  const renderOptions = () => \n    mapListValues(listValues, ({title, value}) => {\n      return <option key={value} value={value}>{title}</option>;\n    });\n\n  const onChange = e => setValue(e.target.value);\n  \n  const hasValue = value != null;\n  return (\n    <select\n      onChange={onChange}\n      value={hasValue ? value : \"\"}\n      disabled={readonly}\n      {...omit(customProps, [\"showSearch\", \"input\"])}\n    >\n      {!hasValue && <option disabled value={\"\"}></option>}\n      {renderOptions()}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n  const numberValue = value == undefined ? \"\" : value;\n  return (\n    <input type=\"number\"  value={numberValue} placeholder={placeholder} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps = {}, } = props;\n  const customInputProps = customProps.input || {};\n  const customSliderProps = customProps.slider || customProps;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n  const numberValue = value == undefined ? \"\" : value;\n  return (\n    <div style={{display: \"inline-flex\"}}>\n      <input key={\"number\"} type=\"number\"  value={numberValue} placeholder={placeholder} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customInputProps} />\n      <input key={\"range\"} type=\"range\"  value={numberValue} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customSliderProps} />\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default ({items, setField, selectedKey, readonly}) => {\n  const renderOptions = (fields) => (\n    fields.map(field => {\n      const {items, path, label, disabled} = field;\n      if (items) {\n        return <optgroup disabled={disabled} key={path} label={label}>{renderOptions(items)}</optgroup>;\n      } else {\n        return <option disabled={disabled} key={path} value={path}>{label}</option>;\n      }\n    })\n  );\n\n  const onChange = e => setField(e.target.value);\n  \n  const hasValue = selectedKey != null;\n  return (\n    <select \n      onChange={onChange}\n      value={hasValue ? selectedKey : \"\"}\n      disabled={readonly}\n    >\n      {!hasValue && <option disabled value={\"\"}></option>}\n      {renderOptions(items)}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default ({id, not, setNot, conjunctionOptions, setConjunction, disabled, readonly, config, showNot, notLabel}) => {\n  const conjsCount = Object.keys(conjunctionOptions).length;\n  const lessThenTwo = disabled;\n  const {forceShowConj} = config.settings;\n  const showConj = forceShowConj || conjsCount > 1 && !lessThenTwo;\n\n  const renderOptions = () => \n    Object.keys(conjunctionOptions).map(key => {\n      const {id, name, label, checked} = conjunctionOptions[key];\n      const postfix = setConjunction.isDummyFn ? \"__dummy\" : \"\";\n      if ((readonly || disabled) && !checked)\n        return null;\n      return [\n        <input key={id+postfix} type=\"radio\" id={id+postfix} name={name+postfix} checked={checked} disabled={readonly || disabled} value={key} onChange={onChange} />\n        ,\n        <label key={id+postfix+\"label\"} htmlFor={id+postfix}>{label}</label>\n      ];\n    });\n  \n  const renderNot = () => {\n    const postfix = \"not\";\n    return [\n      <input key={id+postfix}  type=\"checkbox\" id={id+postfix} checked={not} disabled={readonly} onChange={onNotChange} />\n      ,\n      <label key={id+postfix+\"label\"}  htmlFor={id+postfix}>{notLabel || \"NOT\"}</label>\n    ];\n  };\n\n  const onChange = e => setConjunction(e.target.value);\n\n  const onNotChange = e => setNot(e.target.checked);\n\n  return [\n    showNot && renderNot(),\n    showConj && renderOptions()\n  ];\n  \n};\n","import React from \"react\";\n\nexport default ({type, label, onClick, readonly, config}) => {\n  const typeToLabel = {\n    \"addRuleGroup\": \"+\",\n    \"addRuleGroupExt\": \"+\",\n    \"delGroup\": \"x\",\n    \"delRuleGroup\": \"x\",\n    \"delRule\": \"x\",\n  };\n  const btnLabel = label || typeToLabel[type];\n  return <button onClick={onClick} type=\"button\" disabled={readonly}>{btnLabel}</button>;\n};\n","import React from \"react\";\n\nexport default ({children, config}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\n\nexport default ({config, valueSources, valueSrc, title, setValueSrc, readonly}) => {\n  const renderOptions = (valueSources) => (\n    valueSources.map(([srcKey, info]) => (\n      <option key={srcKey} value={srcKey}>{info.label}</option>\n    ))\n  );\n\n  const onChange = e => setValueSrc(e.target.value);\n  \n  return (\n    <select \n      onChange={onChange}\n      value={valueSrc}\n      disabled={readonly}\n    >\n      {renderOptions(valueSources)}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default ({value, setValue, label, id, config, type}) => {\n  const onChange = e => setValue(e.target.checked);\n  const postfix = type;\n  return [\n    <input key={id+postfix}  type=\"checkbox\" id={id+postfix} checked={!!value} onChange={onChange} />\n    ,\n    <label key={id+postfix+\"label\"}  htmlFor={id+postfix}>{label}</label>\n  ];\n};\n","export default ({onOk, okText, cancelText, title}) => {\n  if (confirm(title)) {\n    onOk();\n  }\n};\n","import React from \"react\";\n\n// value widgets\nexport {default as VanillaBooleanWidget} from \"./value/VanillaBoolean\";\nexport {default as VanillaTextWidget} from \"./value/VanillaText\";\nexport {default as VanillaTextAreaWidget} from \"./value/VanillaTextArea\";\nexport {default as VanillaDateWidget} from \"./value/VanillaDate\";\nexport {default as VanillaTimeWidget} from \"./value/VanillaTime\";\nexport {default as VanillaDateTimeWidget} from \"./value/VanillaDateTime\";\nexport {default as VanillaMultiSelectWidget} from \"./value/VanillaMultiSelect\";\nexport {default as VanillaSelectWidget} from \"./value/VanillaSelect\";\nexport {default as VanillaNumberWidget} from \"./value/VanillaNumber\";\nexport {default as VanillaSliderWidget} from \"./value/VanillaSlider\";\n\n// field select widget\nexport {default as VanillaFieldSelect} from \"./core/VanillaFieldSelect\";\n\n// core components\nexport {default as VanillaConjs} from \"./core/VanillaConjs\";\nexport {default as VanillaButton} from \"./core/VanillaButton\";\nexport {default as VanillaButtonGroup} from \"./core/VanillaButtonGroup\";\nexport {default as VanillaValueSources} from \"./core/VanillaValueSources\";\nexport {default as VanillaSwitch} from \"./core/VanillaSwitch\";\nexport {default as vanillaConfirm} from \"./core/vanillaConfirm\";\n\nexport const VanillaProvider = ({config, children}) => children;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport range from \"lodash/range\";\n\nexport default class Proximity extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    setOption: PropTypes.func.isRequired,\n    options: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    minProximity: PropTypes.number,\n    maxProximity: PropTypes.number,\n    optionPlaceholder: PropTypes.string,\n    optionTextBefore: PropTypes.string,\n    optionLabel: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    //children\n  };\n\n  static defaultProps = {\n    customProps: {},\n    minProximity: 2,\n    maxProximity: 10,\n    optionPlaceholder: \"Select words between\",\n    optionLabel: \"Words between\",\n    optionTextBefore: null,\n  };\n\n  handleChange = (value) => {\n    this.props.setOption(\"proximity\", parseInt(value));\n  };\n\n  render() {\n    const {\n      defaults, options, config, optionLabel, optionPlaceholder, customProps, \n      minProximity, maxProximity, optionTextBefore, readonly\n    } = this.props;\n    const {settings, widgets, ctx} = config;\n    const defaultProximity = defaults ? defaults.proximity : undefined;\n    const {showLabels} = settings;\n    const selectedProximity = options.get(\"proximity\", defaultProximity);\n    const proxValues = range(minProximity, maxProximity + 1).map((item) => ({title: item, value: item}));\n    const factory = widgets.select.factory;\n    const Select = (props) => factory(props, ctx);\n\n    return (\n      <div className=\"operator--PROXIMITY\">\n        <div className=\"operator--options\">\n          { showLabels\n            && <label className=\"rule--label\">{optionLabel}</label>\n          }\n          { !showLabels && optionTextBefore\n            && <div className=\"operator--options--sep\">\n              <span>{optionTextBefore}</span>\n            </div>\n          }\n          <Select\n            config={config}\n            value={selectedProximity}\n            listValues={proxValues}\n            setValue={this.handleChange}\n            readonly={readonly}\n            placeholder={optionPlaceholder}\n            {...customProps}\n          />\n        </div>\n        <div className=\"operator--widgets\">{this.props.children}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport * as Widgets from \"../components/widgets\";\nimport * as CustomOperators from \"../components/operators\";\nimport { CoreConfig, Utils } from \"@react-awesome-query-builder/core\";\n\n\n//----------------------------  conjunctions\n\nconst conjunctions = {\n  ...CoreConfig.conjunctions,\n};\n\n//----------------------------  operators\n\nconst operators = {\n  ...CoreConfig.operators,\n  proximity: {\n    ...CoreConfig.operators.proximity,\n    options: {\n      ...CoreConfig.operators.proximity.options,\n      factory: (props, {RCE, O: {ProximityOperator}}) => RCE(ProximityOperator, props),\n    },\n  },\n};\n\n\n//----------------------------  widgets\n\nconst widgets = {\n  text: {\n    ...CoreConfig.widgets.text,\n    factory: (props, {RCE, W: {VanillaTextWidget}}) => RCE(VanillaTextWidget, props),\n  },\n  textarea: {\n    ...CoreConfig.widgets.textarea,\n    factory: (props, {RCE, W: {VanillaTextAreaWidget}}) => RCE(VanillaTextAreaWidget, props),\n  },\n  number: {\n    ...CoreConfig.widgets.number,\n    factory: (props, {RCE, W: {VanillaNumberWidget}}) => RCE(VanillaNumberWidget, props),\n  },\n  slider: {\n    ...CoreConfig.widgets.slider,\n    factory: (props, {RCE, W: {VanillaSliderWidget}}) => RCE(VanillaSliderWidget, props),\n  },\n  select: {\n    ...CoreConfig.widgets.select,\n    factory: (props, {RCE, W: {VanillaSelectWidget}}) => RCE(VanillaSelectWidget, props),\n  },\n  multiselect: {\n    ...CoreConfig.widgets.multiselect,\n    factory: (props, {RCE, W: {VanillaMultiSelectWidget}}) => RCE(VanillaMultiSelectWidget, props),\n  },\n  date: {\n    ...CoreConfig.widgets.date,\n    factory: (props, {RCE, W: {VanillaDateWidget}}) => RCE(VanillaDateWidget, props),\n  },\n  time: {\n    ...CoreConfig.widgets.time,\n    factory: (props, {RCE, W: {VanillaTimeWidget}}) => RCE(VanillaTimeWidget, props),\n  },\n  datetime: {\n    ...CoreConfig.widgets.datetime,\n    factory: (props, {RCE, W: {VanillaDateTimeWidget}}) => RCE(VanillaDateTimeWidget, props),\n  },\n  boolean: {\n    ...CoreConfig.widgets.boolean,\n    factory: (props, {RCE, W: {VanillaBooleanWidget}}) => RCE(VanillaBooleanWidget, props),\n  },\n  field: {\n    ...CoreConfig.widgets.field,\n    factory: (props, {RCE, W: {ValueFieldWidget}}) => RCE(ValueFieldWidget, props),\n    customProps: {\n      showSearch: true\n    }\n  },\n  func: {\n    ...CoreConfig.widgets.func,\n    factory: (props, {RCE, W: {FuncWidget}}) => RCE(FuncWidget, props),\n    customProps: {\n      //showSearch: true\n    }\n  },\n  case_value: {\n    ...CoreConfig.widgets.case_value,\n    // simple text value\n    factory: (props, {RCE, W: {VanillaTextWidget}}) =>  RCE(VanillaTextWidget, props),\n  }\n};\n\n//----------------------------  types\n\nconst types = {\n  ...CoreConfig.types,\n  select: {\n    ...CoreConfig.types.select,\n    widgets: {\n      ...CoreConfig.types.select.widgets,\n      select: {\n        ...CoreConfig.types.select.widgets.select,\n        widgetProps: {\n          customProps: {\n            showSearch: true\n          }\n        },\n      }\n    }\n  }\n};\n\n//----------------------------  settings\n\nconst settings = {\n  ...CoreConfig.settings,\n\n  renderField: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderOperator: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderFunc: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderConjs: (props, {RCE, W: {VanillaConjs}}) => RCE(VanillaConjs, props),\n  renderSwitch: (props, {RCE, W: {VanillaSwitch}}) => RCE(VanillaSwitch, props),\n  renderButton: (props, {RCE, W: {VanillaButton}}) => RCE(VanillaButton, props),\n  renderButtonGroup: (props, {RCE, W: {VanillaButtonGroup}}) => RCE(VanillaButtonGroup, props),\n  renderProvider: (props, {RCE, W: {VanillaProvider}}) => RCE(VanillaProvider, props),\n  renderValueSources: (props, {RCE, W: {VanillaValueSources}}) => RCE(VanillaValueSources, props),\n  renderConfirm: (props, {W: {vanillaConfirm}}) => vanillaConfirm(props),\n  renderSwitchPrefix: \"Conditions\",\n\n  customFieldSelectProps: {\n    showSearch: true\n  },\n\n  defaultSliderWidth: \"200px\",\n  defaultSelectWidth: \"200px\",\n  defaultSearchWidth: \"100px\",\n  defaultMaxRows: 5,\n  renderSize: \"small\",\n  maxLabelsLength: 100,\n\n  showLock: false,\n  showNot: true,\n  forceShowConj: false,\n  groupActionsPosition: \"topRight\", // oneOf [topLeft, topCenter, topRight, bottomLeft, bottomCenter, bottomRight]\n  \n};\n\n//----------------------------\n\nconst ctx = {\n  ...CoreConfig.ctx,\n  W: {\n    ...Widgets\n  },\n  O: {\n    ...CustomOperators\n  },\n  RCE: (C, P) => React.createElement(C, P),\n};\n\n//----------------------------\n\nlet config = {\n  conjunctions,\n  operators,\n  widgets,\n  types,\n  settings,\n  ctx,\n};\nconfig = Utils.ConfigMixins.removeMixins(config, [\n  \"rangeslider\",\n  \"treeselect\",\n  \"treemultiselect\",\n]);\n\nexport default config;\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport debounce from \"lodash/debounce\";\nconst { mergeListValues, listValueToOption, optionToListValue, optionsToListValues } = Utils.Autocomplete;\nconst { mapListValues, listValuesToArray, getListValue, makeCustomListValue, searchListValue, getItemInListValues } = Utils.ListUtils;\n\nfunction sleep(delay) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\nconst useListValuesAutocomplete = ({\n  asyncFetch, useLoadMore, useAsyncSearch, forceAsyncSearch,\n  asyncListValues: selectedAsyncListValues,\n  listValues: staticListValues, allowCustomValues,\n  value: selectedValue, setValue, placeholder, \n  config\n}, {\n  debounceTimeout,\n  multiple,\n  uif\n}) => {\n  const knownSpecialValues = [\"LOAD_MORE\", \"LOADING_MORE\"];\n  const loadMoreTitle = \"Load more...\";\n  const loadingMoreTitle = \"Loading more...\";\n  const aPlaceholder = forceAsyncSearch ? \"Type to search\" : placeholder;\n\n  // state\n  const [open, setOpen] = React.useState(false);\n  const [asyncFetchMeta, setAsyncFetchMeta] = React.useState(undefined);\n  const [loadingCnt, setLoadingCnt] = React.useState(0);\n  const [isLoadingMore, setIsLoadingMore] = React.useState(false);\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [asyncListValues, setAsyncListValues] = React.useState(undefined);\n\n  // ref\n  const asyncFectchCnt = React.useRef(0);\n  const componentIsMounted = React.useRef(0);\n  const isSelectedLoadMore = React.useRef(false);\n\n  // compute\n  const nSelectedAsyncListValues = listValuesToArray(selectedAsyncListValues);\n  const listValues = asyncFetch\n    ? (selectedAsyncListValues ? mergeListValues(asyncListValues, nSelectedAsyncListValues, true) : asyncListValues)\n    : staticListValues;\n  let listValuesToDisplay = asyncFetch\n    ? asyncListValues\n    : staticListValues;\n  if (allowCustomValues && inputValue && !searchListValue(inputValue, asyncListValues)) {\n    listValuesToDisplay = mergeListValues(listValuesToDisplay, [makeCustomListValue(inputValue)], true);\n  }\n  if (asyncFetch && !asyncListValues && selectedAsyncListValues && !inputValue && !open && uif === \"antd\") {\n    // for initial loading, to resolve \"a\" -> \"A\"\n    listValuesToDisplay = listValues;\n  }\n  if (asyncFetch && !allowCustomValues && selectedAsyncListValues && uif === \"mui\") {\n    // to prevent warning, when select A, search E -> A is missing in options\n    //  MUI: The value provided to Autocomplete is invalid.\n    //  None of the options match with `\"a\"`.\n    //  You can use the `isOptionEqualToValue` prop to customize the equality test.\n    listValuesToDisplay = mergeListValues(listValuesToDisplay, nSelectedAsyncListValues, true, true);\n  }\n  //const isDirtyInitialListValues = asyncListValues == undefined && selectedAsyncListValues && selectedAsyncListValues.length && typeof selectedAsyncListValues[0] != \"object\";\n  const isLoading = loadingCnt > 0;\n  const canInitialLoad = open && asyncFetch\n    && asyncListValues === undefined\n    && (forceAsyncSearch ? inputValue : true);\n  const isInitialLoading = canInitialLoad && isLoading;\n  const canLoadMore = !isInitialLoading && listValues && listValues.length > 0\n    && asyncFetchMeta && asyncFetchMeta.hasMore && (asyncFetchMeta.filter || \"\") === inputValue;\n  const canShowLoadMore = !isLoading && canLoadMore;\n  const options = mapListValues(listValuesToDisplay, listValueToOption);\n  const hasValue = selectedValue != null;\n  const selectedListValue = !multiple && hasValue ? getListValue(selectedValue, listValues) : null;\n  // const selectedListValues = multiple && hasValue ? selectedValue.map(v => getItemInListValues(listValues, v)) : [];\n\n  // fetch\n  const fetchListValues = async (filter = null, isLoadMore = false) => {\n    // clear obsolete meta\n    if (!isLoadMore && asyncFetchMeta) {\n      setAsyncFetchMeta(undefined);\n    }\n\n    const offset = isLoadMore && asyncListValues ? asyncListValues.length : 0;\n    const meta = isLoadMore && asyncFetchMeta || !useLoadMore && { pageSize: 0 };\n\n    const newAsyncFetchCnt = ++asyncFectchCnt.current;\n    const res = await asyncFetch.call(config?.ctx, filter, offset, meta);\n    const isFetchCancelled = asyncFectchCnt.current != newAsyncFetchCnt;\n    if (isFetchCancelled || !componentIsMounted.current) {\n      return null;\n    }\n\n    const { values, hasMore, meta: newMeta } = res && res.values ? res : { values: res };\n    const nValues = listValuesToArray(values);\n    let assumeHasMore;\n    let newValues;\n    if (isLoadMore) {\n      newValues = mergeListValues(asyncListValues, nValues, false);\n      assumeHasMore = newValues.length > asyncListValues.length;\n    } else {\n      newValues = nValues;\n      if (useLoadMore) {\n        assumeHasMore = newValues.length > 0;\n      }\n    }\n\n    // save new meta\n    const realNewMeta = hasMore != null || newMeta != null || assumeHasMore != null ? {\n      ...(assumeHasMore != null ? { hasMore: assumeHasMore } : {}),\n      ...(hasMore != null ? { hasMore } : {}),\n      ...(newMeta != null ? newMeta : {}),\n      filter\n    } : undefined;\n    if (realNewMeta) {\n      setAsyncFetchMeta(realNewMeta);\n    }\n\n    return newValues;\n  };\n\n  const loadListValues = async (filter = null, isLoadMore = false) => {\n    setLoadingCnt(x => (x + 1));\n    setIsLoadingMore(isLoadMore);\n    const list = await fetchListValues(filter, isLoadMore);\n    if (!componentIsMounted.current) {\n      return;\n    }\n    if (list != null) {\n      // tip: null can be used for reject (eg, if user don't want to filter by input)\n      setAsyncListValues(list);\n    }\n    setLoadingCnt(x => (x - 1));\n    setIsLoadingMore(false);\n  };\n  const loadListValuesDebounced = React.useCallback(debounce(loadListValues, debounceTimeout), []);\n\n  React.useEffect(() => {\n    componentIsMounted.current++;\n    // Initial loading\n    if (canInitialLoad && loadingCnt == 0 && asyncFectchCnt.current == 0) {\n      (async () => {\n        await loadListValues();\n      })();\n    }\n    // Unmount\n    return () => {\n      componentIsMounted.current--;\n    };\n  }, [canInitialLoad]);\n\n  // Event handlers\n  const onOpen = () => {\n    setOpen(true);\n  };\n\n  const onClose = async (_e) => {\n    const isLoadMoreClick = isSelectedLoadMore.current;\n    if (isLoadMoreClick) {\n      isSelectedLoadMore.current = false;\n      if (multiple) {\n        // required for MUI\n        setOpen(false);\n      }\n    } else {\n      setOpen(false);\n    }\n\n    if (uif === \"mui\" && !isLoadMoreClick) {\n      // parity with Antd\n      const resetValue = \"\";\n      await onInputChange(null, resetValue, \"my-reset\");\n    }\n  };\n\n  const onDropdownVisibleChange = (open) => {\n    if (open) {\n      onOpen();\n    } else {\n      onClose();\n    }\n  };\n\n  const isSpecialValue = (option) => {\n    const specialValue = option?.specialValue || option?.value;\n    return knownSpecialValues.includes(specialValue);\n  };\n\n  const onChange = async (e, val, option) => {\n    // todo: don't rely on 3rd param. check MUI 6\n    const isClearingAll = multiple && uif === \"mui\" && option === \"clear\";\n    // if user removes all chars in search, don't clear selected value\n    const isClearingInput = !multiple && uif === \"mui\" && option === \"clear\" && e?.type === \"change\";\n    if (uif === \"mui\") {\n      option = val;\n      if (multiple) {\n        val = option.map(o => (o?.value ?? o));\n      } else {\n        val = option?.value ?? option;\n      }\n    }\n    const specialValue = multiple && Array.isArray(option) && option.map(opt => opt?.specialValue).find(v => !!v)\n      || option?.specialValue;\n    if (multiple && val && !Array.isArray(val)) {\n      val = [...(selectedValue || []), val];\n      option = null;\n    }\n    // if there are tags AND input and select is opened, clear input first\n    const shouldIgnore = isClearingAll && val.length === 0 && inputValue && open\n      || isClearingInput;\n    if (shouldIgnore) {\n      return;\n    }\n    const isAddingCustomOptionFromSearch \n      = multiple\n      && val.length && val.length > (selectedValue || []).length\n      && val[val.length-1] == inputValue\n      && !getListValue(inputValue, asyncListValues);\n\n    if (specialValue == \"LOAD_MORE\") {\n      setInputValue(inputValue);\n      isSelectedLoadMore.current = true;\n      await loadListValues(inputValue, true);\n    } else if (specialValue == \"LOADING_MORE\") {\n      isSelectedLoadMore.current = true;\n    } else {\n      if (multiple) {\n        const [newSelectedValues, newSelectedListValues] = optionsToListValues(val, listValues, allowCustomValues);\n        setValue(newSelectedValues, asyncFetch ? newSelectedListValues : undefined);\n        \n        if (isAddingCustomOptionFromSearch) {\n          await sleep(0);\n          await onInputChange(null, \"\", \"my-reset\");\n        }\n      } else {\n        const [v, lvs] = optionToListValue(val, listValues, allowCustomValues);\n        setValue(v, asyncFetch ? lvs : undefined);\n      }\n    }\n  };\n\n  const onInputChange = async (e, newInputValue, eventType) => {\n    // eventType=reset used by MUI on:\n    // - (single) initial set, select option - e = null, newInputValue = selected  (+1 call before with e != null)\n    // - (single/multi, -ACV) blur - e != null, newInputValue = ''\n    // - (multiple v5, -ACV) blur - e = null, newInputValue = '' # unwanted\n    // - (multiple) select option - e != null, newInputValue = ''\n    // - (multiple v4) delete tag while searching - e = null, newInputValue = ''  # unwanted\n    // - (multiple v4) select option while searching - e = null, newInputValue = ''  # unwanted\n\n    const shouldIgnore = uif === \"mui\" && eventType === \"reset\"\n    // && (\n    //   e != null\n    //   // for MUI 4 if search \"A\" and select any option -> should NOT reset search\n    //   // for MUI 5 if search \"A\" and close -> let's hold search but hide, as it's done in antd\n    //   || e === null && inputValue && multiple\n    // )\n    ;\n    const val = newInputValue;\n    if (val === loadMoreTitle || val === loadingMoreTitle || shouldIgnore) {\n      return;\n    }\n\n    if (newInputValue != inputValue) {\n      setInputValue(val);\n\n      const canSearchAsync = useAsyncSearch && (forceAsyncSearch ? !!val : true);\n      if (canSearchAsync) {\n        await loadListValuesDebounced(val);\n      } else if (useAsyncSearch && forceAsyncSearch) {\n        setAsyncListValues([]);\n      }\n    }\n  };\n\n  // Options\n  const extendOptions = (options) => {\n    const filtered = [...options];\n    if (useLoadMore) {\n      if (canShowLoadMore) {\n        filtered.push({\n          specialValue: \"LOAD_MORE\",\n          title: loadMoreTitle,\n        });\n      } else if (isLoadingMore) {\n        filtered.push({\n          specialValue: \"LOADING_MORE\",\n          title: loadingMoreTitle,\n          disabled: true\n        });\n      }\n    }\n    return filtered;\n  };\n\n  const getOptionSelected = (option, valueOrOption) => {\n    if (valueOrOption == null)\n      return null;\n    const selectedValue = valueOrOption.value != undefined ? valueOrOption.value : valueOrOption;\n    return option.value === selectedValue;\n  };\n\n  const getOptionDisabled = (valueOrOption) => {\n    return valueOrOption && valueOrOption.disabled;\n  };\n\n  const getOptionIsCustom = (valueOrOption) => {\n    if (valueOrOption?.isCustom)\n      return true;\n    const val = valueOrOption?.value ?? valueOrOption;\n    const lv = getListValue(val, listValues);\n    return lv?.isCustom || false;\n  };\n\n  const getOptionLabel = (valueOrOption) => {\n    if (valueOrOption == null)\n      return null;\n    const option = valueOrOption.value != undefined ? valueOrOption\n      : listValueToOption(getListValue(valueOrOption, listValues));\n    if (!option && valueOrOption.specialValue) {\n      // special last 'Load more...' item\n      return valueOrOption.title;\n    }\n    if (!option && allowCustomValues) {\n      // there is just string value, it's not item from list\n      return valueOrOption;\n    }\n    if (!option) {\n      // weird\n      return valueOrOption;\n    }\n    return option.title || option.label;\n  };\n\n  return {\n    options,\n    listValues,\n    hasValue,\n    selectedListValue,\n\n    open,\n    onOpen,\n    onClose,\n    onDropdownVisibleChange,\n    onChange,\n    \n    inputValue,\n    onInputChange,\n    canShowLoadMore,\n    isInitialLoading,\n    isLoading,\n    isLoadingMore,\n    isSpecialValue,\n\n    extendOptions,\n    getOptionSelected,\n    getOptionDisabled,\n    getOptionIsCustom,\n    getOptionLabel,\n    aPlaceholder,\n  };\n};\n\nexport default useListValuesAutocomplete;\n","import { Utils } from \"@react-awesome-query-builder/core\";\nimport * as ReactUtils from \"./reactUtils\";\nexport default { ...Utils, ReactUtils };\n","var map = {\n\t\"./es-us\": 88218,\n\t\"./es-us.js\": 88218,\n\t\"./ru\": 31313,\n\t\"./ru.js\": 31313\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 40164;"],"names":["mapListValues","Utils","useListValuesAutocomplete","Hooks","nonCheckedIcon","CheckBoxOutlineBlank","fontSize","style","marginRight","marginTop","checkedIcon","CheckBox","defaultFilterOptions","createFilterOptions","emptyArray","props","allowCustomValues","multiple","selectedValue","value","customProps","readonly","config","groupBy","filterOptionsConfig","filterOptionsFn","debounceTimeout","uif","open","onOpen","onClose","onChange","onInputChange","inputValue","options","isInitialLoading","isLoading","aPlaceholder","extendOptions","getOptionSelected","getOptionDisabled","getOptionIsCustom","getOptionLabel","selectedListValue","settings","defaultSelectWidth","defaultSearchWidth","width","rest","customInputProps","input","inputWidth","omit","customAutocompleteProps","minWidth","undefined","placeholder","useStyles","makeStyles","theme","classesChip","root","height","label","marginBottom","useStylesChip","classes","FormControl","fullWidth","Autocomplete","disableCloseOnSelect","freeSolo","loading","disabled","readOnly","renderInput","params","shouldRenderSelected","selectedTitle","title","TextField","inputProps","InputProps","endAdornment","CircularProgress","color","size","renderTags","getTagProps","map","option","index","className","titleSpan","Chip","key","renderOption","selected","renderTitle","specialValue","isHidden","Box","filterOptions","filtered","itemsToListValues","items","level","item","path","grouplabel","prefix","repeat","groupTitle","flat","Infinity","stringify","k","join","paper","padding","spacing","MaterialTextWidget","setValue","maxLength","textValue","e","val","target","MaterialTextAreaWidget","maxRows","defaultMaxRows","multiline","MaterialDateWidget","dateFormat","valueFormat","Picker","window","matchMedia","matches","useKeyboard","KeyboardDatePicker","DatePicker","format","isValid","formatSingleValue","MaterialDateTimeWidget","use12Hours","timeFormat","KeyboardDateTimePicker","DateTimePicker","dateTimeFormat","ampm","MaterialTimeWidget","KeyboardTimePicker","TimePicker","hasSeconds","indexOf","timeValue","moment","views","MaterialSelectWidget","listValues","hasValue","Select","autoWidth","displayEmpty","renderValue","filter","v","shift","getListValueTitle","MenuItem","MaterialNumberWidget","min","max","step","numberValue","type","Number","MaterialSliderWidget","marks","defaultSliderWidth","customSliderProps","slider","sliderValue","muiMarks","Object","keys","InputCmp","onBlur","SliderCmp","Slider","_e","newValue","valueLabelDisplay","stylesSliderWrapper","marginLeft","paddingLeft","display","alignItems","flexWrap","MaterialRangeWidget","placeholders","textSeparators","useEffect","valueFrom","valueTo","setTimeout","oneValue","handleInputBlur","FromInputCmp","ToInputCmp","newValues","stylesInputWrapper","MaterialBooleanWidget","labelYes","labelNo","Typography","component","Grid","container","Switch","checked","MaterialMultiSelectWidget","selectedValues","length","selectedTitles","Checkbox","ListItemText","primary","MaterialAutocompleteWidget","MaterialFieldSelect","setField","selectedKey","findLabel","fields","field","Array","isArray","some","pop","renderOptions","ListSubheader","disableSticky","MaterialFieldAutocomplete","MaterialAutocomplete","_asyncValues","MaterialButton","onClick","typeToIcon","Delete","Add","typeToColor","IconButton","Button","startIcon","MaterialButtonGroup","children","MaterialConjs","id","not","setNot","conjunctionOptions","setConjunction","showNot","notLabel","conjsCount","lessThenTwo","showConj","forceShowConj","ButtonGroup","disableElevation","variant","bind","name","postfix","isDummyFn","MaterialSwitch","checkedLabel","hideLabel","renderSize","showLabel","icon","Lock","LockOpen","FormControlLabel","control","MaterialValueSources","valueSources","valueSrc","setValueSrc","React","anchorEl","setAnchorEl","handleClose","Boolean","event","currentTarget","handleOpen","ExpandMoreSharp","Popover","anchorOrigin","vertical","horizontal","transformOrigin","disablePortal","FormLabel","RadioGroup","srcKey","info","Radio","MaterialConfirm","onOk","okText","cancelText","confirmFn","description","confirmationText","cancellationText","then","MaterialUseConfirm","useConfirm","MaterialProvider","settingsTheme","settingsLocale","locale","themeConfig","material","createTheme","base","withProviders","M","utils","MomentUtils","ThemeProvider","BasicConfig","renderField","RCE","W","showSearch","renderOperator","renderFunc","renderConjs","renderSwitch","renderButton","renderButtonGroup","renderValueSources","renderProvider","renderConfirm","widgets","text","factory","textarea","number","multiselect","asyncFetch","select","boolean","date","time","datetime","rangeslider","types","ctx","MaterialWidgets","defaultValue","_default","deepEqual","v1","v2","Map","equals","JSON","shallowEqual","a","b","deep","shallowEqualArrays","shallowEqualObjects","arrA","arrB","len","i","isEqual","objA","objB","aKeys","bKeys","isImmutable","toJS","toImmutableList","Immutable","applyToJS","cleanJSX","jsx","el","_i","isDirtyJSX","cleaned","includes","isJSX","isJsonLogic","logic","sleep","delay","Promise","resolve","mergeArraysSmart","arr1","arr2","op","orig","next","slice","after","reverse","find","before","x","reduce","acc","newOp","rel","relOp","ind","splice","isDev","process","getFirstDefined","ret","arr","logger","devMode","verbose","console","error","log","warn","debug","getLogger","query_builder_seed","timePart","Date","getTime","toString","substr","replace","c","r","Math","floor","random","formatField","parts","label2","fieldDefinition","isForDisplay","valueSourcesInfo","fieldSeparator","fieldSeparatorDisplay","canReorder","canRegroup","canDeleteLocked","canLeaveEmptyGroup","shouldCreateEmptyGroup","canShortMongoQuery","removeEmptyGroupsOnLoad","removeIncompleteRulesOnLoad","removeInvalidMultiSelectValuesOnLoad","setOpOnChangeField","groupOperators","defaultGroupConjunction","valueLabel","valuePlaceholder","fieldLabel","operatorLabel","funcLabel","fieldPlaceholder","funcPlaceholder","operatorPlaceholder","lockLabel","lockedLabel","deleteLabel","addGroupLabel","addCaseLabel","addDefaultCaseLabel","defaultCaseLabel","addRuleLabel","addSubRuleLabel","delGroupLabel","valueSourcesPopupTitle","removeRuleConfirmOptions","removeGroupConfirmOptions","isObject","toListValue","makeCustomListValue","lv","isCustom","listValuesToArray","listValuesObj","listValuesArr","push","getItemInListValues","getTitleInListValues","it","getValueInListValues","mapFn","searchListValue","search","getListValue","defaultField","canGetFirst","parentRuleGroupPath","getFirstField","defaultOperator","fieldConfig","getFieldConfig","fieldOperators","operators","fieldDefaultOperator","getFirstOperator","defaultOperatorOptions","operator","operatorConfig","getOperatorConfig","defaults","defaultRuleProperties","setDefaultFieldAndOp","showErrorMessage","properties","current","operatorOptions","set","getNewValueForFieldOp","newValueSrc","newValueType","newValueError","conjs","conjunctions","defaultConjunction","defaultGroupProperties","conjunction","defaultItemProperties","defaultRule","defaultRoot","uuid","children1","createListFromArray","ids","emptyProperies","expandTreePath","suffix","interpose","withMutations","list","skip","apply","expandTreeSubpath","getItemByPath","tree","get","res","forEach","removePathsInTree","newTree","_processNode","itemPath","removeIn","child","_childId","removeIsLockedInTree","isParentLocked","isLocked","getIn","deleteIn","fixPathsInTree","lev","nodeId","currPath","currId","itemId","setIn","constructor","childId","fixEmptyGroupsInTree","allChildrenGone","curr","getFlatTree","realHeight","_flatizeTree","insideCollapsed","insideLocked","insideRuleGroup","parentType","caseId","collapsed","childrenIds","_child","isRuleGroup","isLeaf","itemsBefore","top","parent","isDefaultCase","concat","leaf","leafsCount","_top","node","subinfo","itemsAfter","assign","_height","bottom","prevId","nextId","prev","getTotalReordableNodesCountInTree","cnt","getTotalRulesCountInTree","getTreeBadFields","badFields","valueError","from","Set","getLightTree","children1AsArray","values","getSwitchValues","vals","caseValue","isEmptyTree","hasChildren","isTypeOf","typeOf","isNaN","validateAndFixTree","_oldTree","newConfig","oldConfig","removeEmptyGroups","removeIncompleteRules","validateTree","validateItem","meta","oldChildren","sanitized","submeta","currentChild","validateGroup","oldSerialized","operatorDefinition","availOps","getOperatorsForField","cardinality","newSerialized","isComplete","validateRule","validateValue","leftField","valueType","asyncListValues","canFix","isEndValue","isRawValue","validError","fixedValue","validateFieldValue","validateFuncValue","validateNormalValue","w","getWidgetForFieldOp","fieldWidgetDefinition","getFieldWidgetConfig","rightFieldDefinition","fieldSettings","fn","args","validResult","call","validateValueInList","List","goodVals","badVals","vv","goodValues","badValues","plural","wConfig","wType","jsType","treeValues","isAsyncListValues","canSkipCheck","realListValues","_valueSrc","isFuncArg","_isFuncArg","leftFieldStr","rightFieldStr","funcKey","funcConfig","getFuncConfig","returnType","argKey","argConfig","argVal","fieldDef","argValue","argValueSrc","argValidError","fixedArgVal","selectTypes","newField","newOperator","changedProp","currentField","currentOperator","currentValue","currentValueSrc","currentValueType","currentAsyncListValues","convertableWidgets","clearValueOnChangeField","clearValueOnChangeOp","newOperatorConfig","operatorCardinality","currentFieldConfig","newFieldConfig","canReuseValue","vs","currentWidget","newWidget","currentValueWidget","newValueWidget","canReuseWidget","firstWidgetConfig","first","getValueSourcesForFieldOp","valueFixes","valueErrors","vType","vSrc","isValidSrc","validateError","fixValue","dropValue","_ignore","validateValues","jsValues","rangeValidateError","vt","parentPathArr","split","parentField","getFieldRawConfig","firstField","keysPath","subfields","fieldOps","getFieldPath","onlyKeys","_curr","getFuncPathLabels","getFieldPathLabels","fieldsKey","subfieldsKey","parentParts","part","cnf","last","getFieldPartsConfigs","parentFieldDef","getValueLabel","delta","isSpecialRange","func","arg","showLabels","fieldWidgetConfig","mergedOpConfig","valueLabels","_getWidgetsAndSrcsForFieldOp","valueSrcs","opConfig","widgetConfig","widget","widgetValueSrc","canAdd","filterValueSourcesForField","canAddValueSrc","widgetWeight","wg","preferWidgets","mainWidget","sort","w1","w2","getWidgetsForFieldOp","_fieldsCntByType","minCnt","_funcsCntByType","funcs","filteredValueSrcs","formatFieldName","fieldParts","fieldName","useTableName","tableName","fieldPartsCopy","parentFieldName","errors","applyJsonLogic","data","JL","customJsonLogicOperations","CALL","JSX","mergeObjects","obj1","obj2","fromEntries","entries","strlen","str","regexTest","pattern","flags","match","RegExp","now","date_add","dim","add","toDate","toLowerCase","toUpperCase","applyJsonLogicWithPath","message","callContextFn","_this","addRequiredJsonLogicOperations","configKeys","compileMetaFieldSettings","isArr","compileMetaWidget","formatValue","sqlFormatValue","spelFormatValue","spelImportValue","mongoFormatValue","elasticSearchFormatValue","jsonLogic","compileMetaOperator","formatOp","mongoFormatOp","sqlFormatOp","spelFormatOp","ignore","elasticSearchQueryType","compileMetaWidgetForType","widgetProps","opProps","compileMeta","mainWidgetProps","formatConj","sqlFormatConj","spelFormatConj","renderBrackets","renderSeps","jsonLogicImport","formatFunc","sqlFormatFunc","mongoFormatFunc","spelFormatFunc","mui","invokeWith","canCompareFieldWithField","formatReverse","sqlFormatReverse","spelFormatReverse","formatSpelField","formatAggr","normalizeListValues","renderSwitchPrefix","renderItem","renderBeforeWidget","renderAfterWidget","renderBeforeActions","renderAfterActions","renderRuleError","compressConfig","baseConfig","__fieldNames","Error","zipConfig","pick","_clean","BasicFuncs","prototype","hasOwnProperty","rootKey","clone","decompressConfig","useConfigCompress","unzipConfig","_mergeDeep","mixin","_resolveAndMergeDeep","resolved","merge","compileConfig","__compliled","_compileConfigParts","defineProperty","enumerable","writable","subconfig","opts","logs","isRoot","newPath","targetObj","newVal","renderReactElement","compileJsonLogicReact","compileJsonLogic","def","jl","re","o","this","argNames","getReactComponentFromCtx","components","O","Cmp","extendConfig","configId","canCompile","__configId","defaultSettings","_extendTypesConfig","_extendFieldsConfig","_extendFuncArgsConfig","typesConfig","_extendTypeConfig","typeConfig","typeWidgetConfig","typeWidgetOperators","excludeOperators","_extendFieldConfig","funcDef","tmpIsOptional","argDef","isOptional","excludeOperatorsForField","keysToPutInFieldSettings","excludeOperatorsForType","shouldIncludeOperators","addOperators","computedFieldName","computeFieldName","mergeCustomizerNoArrays","objValue","srcValue","_key","_object","_source","_stack","targetFields","pathKey","f","fConfig","l","unshift","normalizeField","fieldStr","getFuncArgConfig","mergeWith","widgetOpProps","fieldWidgetOpProps","fieldWidgetProps","valueFieldSettings","mergedConfig","completeValue","completeFuncValue","complValue","tmpHasOptional","filteredValueSources","argDefaultValueSrc","completeArgValue","getDefaultArgValue","_checkFuncValue","setFunc","firstValueSrc","toList","toOrderedMap","setArgValue","setArgValueSrc","argValSrc","_argConfig","_config","queryBuilderFormat","usedFields","formatItem","formatGroup","formatRule","rules","condition","hasUndefinedValues","fieldType","toArray","secondField","ruleQuery","jsonLogicFormat","ff","tmp","p","pdef","mode","lockedOp","conjunctionDefinition","conj","jsonLogicConj","groupField","groupOperator","groupOperatorDefinition","formattedValue","formatItemValue","isGroup0","resultQuery","formattedField","count","var","formatLogic","reversedOp","revOperatorDefinition","isRev","iValueSrc","iValueType","iValue","valueTypes","oldUsedFields","fvalue","cValue","fieldWidgetDef","fv","operatorDef","formattedArgs","formattedArgVal","formattedArgsArr","funcName","isMethod","jsonLogicIsMethod","obj","varName","jsonLogicVar","groupVarKey","buildFnToFormatOp","formatteOp","isReverseArgs","_jsonLogicIsRevArgs","rangeOps","eqOps","opDef","opOpts","mongodbFormat","_mongodbFormat","returnErrors","parents","_not","_canWrapExpr","_fieldName","_value","hasParentRuleGroup","parentPath","realParentPath","groupFieldName","groupFieldDef","canHaveEmptyChildren","reversedConj","mongoConj","canShort","rule","totalQuery","filterQuery","as","cond","_f","useExpr","fvUseExpr","wrapExpr","formatRightField","rightField","fieldPartsLabels","fieldFullLabel","formatFieldFn","mongoFunc","mongoArgsAsObject","argsCnt","lastArg","argAsyncListValues","SqlString","SqlStringOrig","trim","charAt","substring","escapeLike","any_start","any_end","escape","sqlEmptyValue","mongoEmptyValue","spelEscapeString","spelInlineList","javaType","jt","escapedVals","numberJavaTypes","isInteger","spelEscape","spelFixList","numberToFloat","arrayToArray","isFinite","spelFormatConcat","spelImportConcat","isVariable","stringifyForDisplay","sqlFormat","_sqlFormat","revOpDef","canFormatOp","sqlOp","canFormatRevOp","valFrom","valTo","valFieldDefinition","sqlFunc","argsStr","spelFormat","_spelFormat","formatSwitch","formatCase","cases","filteredCases","left","right","isRuleGroupArray","isSpelArray","realGroupOperator","checkOp","isGroupOpRev","realGroupOperatorDefinition","omitBrackets","getSize","fullSize","filteredSize","groupValue","formatExpression","spelOp","objectIsFirstArg","isFunction","sop","realOp","expectedValueType","fieldPartsConfigs","fieldPartsMeta","parentCnf","isSpelMap","isSpelItemMap","isSpelVariable","spelFunc","queryString","conjStr","aggrArgs","_operator","fop","labelForFormat","returnArgs","revOperatorDef","cutParentField","fieldLabel2","funcValue","formattedArgsWithNames","argName","buildEsRule","syntax","queryType","parameters","textField","determineField","script","elasticSearchScript","ES_7_SYNTAX","geoPointString","coordsNumberArray","top_left","lat","lon","bottom_right","buildEsGeoPoint","gte","lte","dateTime","lt","gt","buildEsRangeParameters","buildEsWildcardParameters","buildRegexpParameters","buildParameters","bool","must_not","buildEsGroup","recursiveFxn","childrenArray","valueSeq","occurrence","combinator","determineOccurrence","result","resultFlat","ES_6_SYNTAX","elasticSearchFormat","getTree","immutableTree","light","loadTree","serTree","isImmutableTree","isTree","jsTreeToImmutable","startsWith","parse","checkTree","extendedConfig","isValidTree","fromJS","outValue","vJs","arrayUniq","loadFromJsonLogic","logicTree","_loadFromJsonLogic","conv","buildConv","jsTree","convertFromLogic","wrapInDefaultConj","immTree","opKey","opk","jsonLogic2","conjKey","fk","varKeys","altVarKey","expectedType","beforeErrorsCnt","isEmptyOp","convertField","convertFunc","convertVal","convertConj","convertOp","afterErrorsCnt","h","m","s","dateVal","setMilliseconds","setHours","setMinutes","setSeconds","toISOString","argsArr","funcKeys","fc","parsed","argKeys","parentFieldConfig","complexFields","complexFieldsGroupAncestors","ancs","fp","usedRuleGroups","topLevelFieldsFilter","groupToId","groupAncestors","ch","parentFieldParts","gf","gfc","groupId","j","wrapInDefaultConjRuleGroup","parseRule","arity","_parseRule","isRevArgs","opKeys","jlField","having","init","group","op2","parseRes","havingVals","canRev","havingNot","convertedArgs","asyncListValuesArr","loadFromSpel","_loadFromSpel","spelStr","compiledExpression","convertedObj","compileRes","SpelExpressionEvaluator","_compiledExpression","convertCompiled","convertToTree","expr","parentExpr","getType","getChildren","selection","lastChild","isSize","methodName","isLength","sourceParts","source","isThis","itype","getRaw","getValue","flatizeTernary","functionName","qid","cls","isVar","_processTernaryChildren","tern","if_val","else_val","spelOps","spelConj","convertPath","isError","convertArg","spel","parentSpel","literalTypes","string","null","groupFieldParts","_groupField","fullParts","isUnary","funcToOpMap","buildRule","at","dateString","timeString","buildCaseValueConcat","needWrapReverse","buildRuleGroup","groupFilter","groupFieldValue","groupOpRule","compareArgs","leftSource","rightSource","leftVal","rightVal","isBetweenNormal","isBetweenRev","isBetween","to","isNumbers","isSameSource","oneSpel","convertChildren","fieldObj","opArg","ws","buildSimpleSwitch","caseI","buildCase","sw","valProperties","buildCaseValProperties","_processConcatChildren","convertedChild","convVal","widgetDef","importCaseValue","normVal","normErrors","simulateAsyncFetch","all","cPageSize","offset","pageSize","ceil","currentOffset","newOffset","hasMore","mergeListValues","toStart","hideNewValues","old","newFiltered","av","merged","optionToListValue","customItem","listValue","optionsToListValues","newSelectedListValues","newSelectedValues","listValueToOption","NOW","jsonLogicCustomOps","RELATIVE_DATETIME","abs","parseInt","plus","minus","day","week","month","year","LOWER","UPPER","LINEAR_REGRESSION","_","coef","bias","mongoFormatOp1","mop","mc","_op","$field","mv","mongoFormatOp2","mops","escapeRegExp","equal","opStr","not_equal","isNotOp","less","less_or_equal","greater","greater_or_equal","like","not_like","starts_with","ends_with","between","not_between","is_empty","empty","is_not_empty","is_null","is_not_null","select_equals","select_not_equals","select_any_in","select_not_any_in","multiselect_contains","multiselect_not_contains","multiselect_equals","multiselect_not_equals","proximity","val1","val2","prox","aVal1","aVal2","optionLabel","optionTextBefore","optionPlaceholder","minProximity","maxProximity","none","wgtDef","regex","isFloat","valLabel","valsLabels","isCallable","rightFieldDef","case_value","partsExt","q","whereStr","aggrField","aggrFieldDef","leftFieldConfig","rightFieldConfig","_addMixins","mixins","doAdd","mixinFuncs","mixinWidgetRangeslider","treeselect","mixinWidgetTreeselect","treemultiselect","mixinWidgetTreemultiselect","rangeable__date","mixinRangeableWidget","mixName","mixinFunc","addMixins","addMixin","singleWidget","treeData","ConfigMixins","removeMixins","AND","sqlConj","spelConjs","OR","ADD_GROUP","ADD_CASE_GROUP","REMOVE_GROUP","SET_CONJUNCTION","SET_NOT","ADD_RULE","REMOVE_RULE","SET_FIELD","SET_OPERATOR","SET_VALUE","SET_VALUE_SRC","SET_OPERATOR_OPTION","SET_LOCK","SET_TREE","MOVE_ITEM","PLACEMENT_AFTER","PLACEMENT_BEFORE","PLACEMENT_APPEND","PLACEMENT_PREPEND","SET_DRAG_PROGRESS","SET_DRAG_START","SET_DRAG_END","addNewGroup","state","groupUuid","groupPath","canAddNewRule","origState","addItem","removeGroup","removeItem","removeRule","parentOperator","parentOperatorConfig","hasGroupCountRule","isParentRuleGroup","isEmptyParentGroup","canLeaveEmpty","initialEmptyWhere","setLock","lock","_addChildren1","id1","it1","currentNumber","maxNumber","maxNumberOfCases","maxNumberOfRules","maxNesting","rootType","isTernary","targetItem","caseGroup","take","childrenPath","targetChildren","targetChildrenSize","isLastDefaultCase","newChildren","newChildrenWithLast","mergeIn","moveItem","fromPath","toPath","placement","sourcePath","sourceChildren","targetPath","constants","isSameParent","isSourceInsideTarget","isTargetInsideSource","sourceSubpathFromTarget","targetSubpathFromSource","newTargetChildren","newSourceChildren","updateIn","_oldChildren","currentType","currentProperties","wasRuleGroup","isRuleGroupExt","isChangeToAnotherType","currentOperatorOptions","lastOp","strategy","groupProperties","newOperatorOptions","setOperator","__isInternal","isInternalValueChange","calculatedValueType","calculateValueType","isLastEmpty","isLastError","setOperatorOption","checkEmptyGroups","emptyDrag","dragging","y","mousePos","dragStart","getActionMeta","action","actionTypesToIgnore","mapValues","affectedField","getField","setTree","addRule","ruleType","addDefaultCaseGroup","addCaseGroup","addGroup","BasicUtils","Export","Import","setDragProgress","setDragStart","setDragEnd","TreeActions","ConfigUtils","createConfigMemo","configStore","getExtended","findConfig","savedConfig","findExtended","extendAndStore","findOrExtend","pickConfig","getBasic","basicConfig","extConfig","truncateString","n","useWordBoundary","subString","lastIndexOf","immutableEqual","getReactRootNodeType","_reactRootContainer","getOwnPropertyNames","parentNode","isUsingLegacyReactDomRender","liteShouldComponentUpdate","self","nextProps","nextState","prevProps","prevState","should","chs","changed","pureShouldComponentUpdate","useOnPropsChanged","shouldComponentUpdate","componentWillReceiveProps","onPropsChanged","origShouldComponentUpdate","bindActionCreators","actionCreators","dispatch","actionCreator","Query","nextValue","oldValidatedTree","validatedTree","_updateActions","getMemoizedTree","sanitizeTree","actions","newBasicConfig","getBasicConfig","__lastAction","renderBuilder","__isInternalValueChange","Component","propTypes","PropTypes","ConnectedQuery","connect","context","displayName","DefaultUtils","QueryContainer","setLastTree","lastTree","prevTree","prevprevTree","prevValue","getMemoizedConfig","originalTree","createValidationMemo","reducer","emptyTree","emptyState","unset","actionMeta","treeStoreReducer","store","createStore","QueryWrapper","pr","nextConfig","isConfigChanged","storeValue","getState","isTreeChanged","currentTree","isTreeTrulyChanged","get_children","TreeUtils","_isReorderingTree","createSortableContainer","Builder","CanMoveFn","_getEventTarget","__mocked_window","document","body","onDragStart","dom","treeEl","closest","_isUsingLegacyReactDomRender","classList","groupPadding","treeElContainer","scrollTop","_getScrollParent","tmpAllGroups","_getDraggableNodeEl","_getPlaceholderNodeEl","querySelectorAll","anyGroup","getComputedStyle","getPropertyValue","offsetLeft","offsetTop","offsetWidth","offsetHeight","itemInfo","clientX","clientY","eventTarget","addEventListener","onDrag","onDragEnd","doHandleDrag","startDragging","startMousePos","__mock_dom","dragEl","plhEl","plX","getBoundingClientRect","scrollX","plY","scrollY","startX","startY","startClientX","startClientY","startScrollTop","pos","moved","handleDrag","preventDefault","remove","_cacheEls","removeEventListener","_prevProps","_prevState","oldPlX","oldPlY","indexId","ignoreCache","contains","querySelector","els","getElementsByClassName","overflowY","scrollHeight","_isScrollable","dragInfo","canMoveFn","dragRect","plhRect","hovRect","treeRect","moveInfo","dragId","dragDirs","hrz","vrt","hovCNodeEl","trgCoord","__mocked_hov_container","hovNodeEl","elementFromPoint","rootGroupContainer","firstChild","isGroup","hovNodeId","getAttribute","hovEl","doAppend","doPrepend","hovHeight","hovII","trgRect","trgEl","trgII","altII","hovInnerEl","hovEl2","hovRect2","hovHeight2","isSamePos","dragLeftOffset","dragLev","round","availMoves","altMoves","isToRoot","isToCase","prevCaseId","nextCaseId","prevCase","nextCase","addCaseII","am","toII","fromCaseII","toCaseII","bestMode","filteredMoves","trg","isInside","toParentII","canMove","levs","curLev","allLevs","closestDragLev","move","fromII","canRegroupCases","canLeaveEmptyCase","newLev","isBeforeAfter","isPend","isLev1","isParentChange","isStructChange","isForbiddenStructChange","isLockedChange","isLastFromCase","newRulesInTargetCase","GroupOrRule","handleDraggerMouseDown","wrapper","isDraggingTempo","isDraggingMe","otherProps","isTrueLocked","styles","cn","classNames","ref","PureComponent","Operator","getMeta","selectedField","selectedOperator","pickBy","_opts","buildOptions","isOpSelected","selectedOpts","selectedKeys","selectedPath","selectedLabel","ops","fieldKey","renderProps","Col","dummyFn","DragIcon","xmlns","viewBox","fill","d","WithConfirmFn","OperatorWrapper","selectedFieldPartsLabels","showOperator","showOperatorLabel","selectedFieldWidgetConfig","operatorInlineLabel","RuleUtils","Field","maxLabelsLength","isFieldSelected","currField","getFieldLabel","partsLabels","selectedFullLabel","selectedAltLabel","parentFieldPath","sourceFields","fieldOpts","optGroupLabel","fullLabel","altLabel","tooltip","subpath","hideForSelect","FieldWrapper","classname","customFieldSelectProps","ListUtils","immValue","immValueError","widgetDefinition","widgetValueLabel","setValueHandler","parentFuncs","widgetFactory","isConst","funcArgDummyOpDef","Widget","_setValue","widgetType","oldRange","_onChangeValueSrc","renderWidget","iValues","aField","widgetLabel","WidgetFactory","setValueSrcHandler","valueSourcesOptions","ValueSources","sourceLabel","renderSep","sepText","sepLabel","renderWidgetDelta","simpleField","fieldFunc","fieldArg","isForRuleGruop","isCaseValue","iValueSrcs","defaultWidget","isSpecialRangeForSrcField","isTrueSpecialRange","range","OperatorOptions","operatorDefinitions","optionsFactory","basicOptionsProps","optionsCmp","setOption","Rule","removeSelf","reordableNodesCnt","selectedFieldConfig","isSelectedGroup","isFieldAndOpSelected","selectedOperatorConfig","selectedOperatorHasOptions","hideOperator","showDragIcon","showWidget","showOperatorOptions","confirmOptions","doRemove","isEmptyCurrentRule","onCancel","immutableFieldsMode","immutableOpsMode","immutableValuesMode","oneValueError","onMouseDown","immutableGroupsMode","Btn","showLock","canShrinkValue","BtnGrp","renderOperatorOptions","renderError","drag","renderDrag","renderLock","del","renderDel","totalRulesCnt","parentReordableNodesCnt","ConnectedRuleContainer","isInDraggingTempo","hasError","createRuleContainer","Draggable","Group","ConnectedGroupContainer","_selectedConjunction","selectedConjunction","_getConjunctionOptions","oldConjunction","currentNesting","allowFurtherNesting","createGroupContainer","groupActionsPositionList","topLeft","topCenter","topRight","bottomLeft","bottomCenter","bottomRight","GroupActions","canAddGroup","canAddRule","canDeleteGroup","groupActionsPosition","position","setLockSwitch","addRuleBtn","addGroupBtn","delGroupBtn","BasicGroup","childrenClassName","BeforeActions","AfterActions","isEmptyCurrentGroup","isEmpty","isEmptyGroup","isEmptyRule","renderHeaderWrapper","renderChildrenWrapper","renderFooterWrapper","showConjs","isOneChild","renderChildren","isGroupTopPosition","isNoChildren","renderHeader","renderActions","Item","extraPropsForItem","reordableNodesCntForItem","totalRulesCntForItem","_item","GroupContainer","RuleGroupActions","RuleGroup","RuleGroupExtActions","RuleGroupExt","renderGroupField","SwitchGroupActions","canAddDefault","addCaseGroupBtn","addDefaultCaseGroupBtn","SwitchGroup","hasDefaultCase","totalCasesCnt","casesToReorder","CaseGroup","renderHeaderLeft","renderHeaderCenter","renderCondition","getProperties","toObject","typeMap","rule_group","rule_group_ext","switch_group","case_group","itemComponent","isRequired","_updPath","ConnectedSortableContainer","ValueField","needUpdateItems","needUpdateMeta","getItems","filteredFields","filterFields","customPlaceholder","leftFieldWidgetField","leftFieldWidgetFieldProps","leftFieldFullkey","_filter","rightFieldKey","rightFieldFullkey","canUse","hideForCompare","FuncSelect","canUseFuncForField","filteredFuncs","filterFuncs","selectedFuncKey","isFuncSelected","currFunc","getFuncLabel","targetDefinition","funcFullkey","allowSelfNesting","funcOpts","funcParts","FuncUtils","FuncWidget","argDefinition","funcDefinition","renderFuncSelect","selectProps","renderArgLabel","showPrefix","renderArgLabelSep","renderArgVal","defaultValueSource","ArgWidget","renderArgSep","argIndex","renderBracketBefore","renderBracketAfter","renderFuncArgs","_delta","_widgetType","customRadioYesProps","radioYes","customRadioNoProps","radioNo","onRadioChange","dtValue","opt","getMultiSelectValues","htmlFor","btnLabel","confirm","VanillaProvider","Proximity","handleChange","defaultProximity","selectedProximity","proxValues","defaultProps","CoreConfig","ProximityOperator","VanillaTextWidget","VanillaTextAreaWidget","VanillaNumberWidget","VanillaSliderWidget","VanillaSelectWidget","VanillaMultiSelectWidget","VanillaDateWidget","VanillaTimeWidget","VanillaDateTimeWidget","VanillaBooleanWidget","ValueFieldWidget","VanillaFieldSelect","VanillaConjs","VanillaSwitch","VanillaButton","VanillaButtonGroup","VanillaValueSources","vanillaConfirm","Widgets","CustomOperators","C","P","useLoadMore","useAsyncSearch","forceAsyncSearch","selectedAsyncListValues","staticListValues","knownSpecialValues","loadMoreTitle","loadingMoreTitle","setOpen","asyncFetchMeta","setAsyncFetchMeta","loadingCnt","setLoadingCnt","isLoadingMore","setIsLoadingMore","setInputValue","setAsyncListValues","asyncFectchCnt","componentIsMounted","isSelectedLoadMore","nSelectedAsyncListValues","listValuesToDisplay","canInitialLoad","canLoadMore","canShowLoadMore","fetchListValues","isLoadMore","newAsyncFetchCnt","newMeta","nValues","assumeHasMore","realNewMeta","loadListValues","loadListValuesDebounced","debounce","isLoadMoreClick","isClearingAll","isClearingInput","isAddingCustomOptionFromSearch","lvs","newInputValue","eventType","shouldIgnore","onDropdownVisibleChange","isSpecialValue","valueOrOption","ReactUtils","webpackContext","req","webpackContextResolve","__webpack_require__","code","module","exports"],"sourceRoot":""}