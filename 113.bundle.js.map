{"version":3,"file":"113.bundle.js","mappings":"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,OACZhe,QAAS,CACPqb,KAAM,CACJ/E,UAAW,CACT,QACA,YACA,OACA,WACA,cACA,YACA,YACA,WACA,eACA,UACA,eAEFlT,YAAa,CAAC,EACd6a,QAAS,CAAC,GAEZhC,SAAU,CACR3F,UAAW,CACT,QACA,YACA,OACA,WACA,cACA,YACA,WACA,eACA,UACA,eAEFlT,YAAa,CAAC,EACd6a,QAAS,CAAC,GAEZ1b,MAAO,CACL+T,UAAW,CAET,QACA,YACA,gBAKR4F,OAAQ,CACN6B,gBAAiB,QACjBC,WAAY,SACZhe,QAAS,CACPkc,OAAQ,CACN5F,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,gBAGJnD,OAAQ,CACNmD,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBAGA,UACA,kBAKRoG,KAAM,CACJqB,gBAAiB,QACjB/d,QAAS,CACP0c,KAAM,CACJpG,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,kBAKR0G,KAAM,CACJe,gBAAiB,QACjB/d,QAAS,CACPgd,KAAM,CACJ1G,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,kBAKRkH,SAAU,CACRO,gBAAiB,QACjB/d,QAAS,CACPwd,SAAU,CACRlH,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,kBAKRzV,OAAQ,CACNmd,WAAY,SACZD,gBAAiB,gBACjB/d,QAAS,CACPa,OAAQ,CACNyV,UAAW,CACT,gBACA,oBAGA,UACA,eAEFlT,YAAa,CACX1D,YAAa,CACXie,YAAY,KAIlBzL,YAAa,CACXoE,UAAW,CACT,gBACA,oBAGA,UACA,kBAKRpE,YAAa,CACX6L,gBAAiB,qBACjB/d,QAAS,CACPkS,YAAa,CACXoE,UAAW,CACT,uBACA,2BACA,qBACA,yBAGA,UACA,kBAKRmH,QAAS,CACPM,gBAAiB,QACjB/d,QAAS,CACPyd,QAAS,CACPnH,UAAW,CACT,QACA,YACA,UACA,eAEFlT,YAAa,CAGX,GAGJb,MA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","sources":["webpack://react-awesome-query-builder-demo-local/../modules/components/operators/Proximity.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/rule/WidgetFactory.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/rule/Widget.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/utils.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/rule/ValueField.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/rule/FuncSelect.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/rule/FuncWidget.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/vanilla/value/VanillaBoolean.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/vanilla/value/VanillaText.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/vanilla/value/VanillaTextArea.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/vanilla/value/VanillaDate.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/vanilla/value/VanillaTime.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/vanilla/value/VanillaDateTime.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/vanilla/value/VanillaMultiSelect.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/vanilla/value/VanillaSelect.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/vanilla/value/VanillaNumber.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/vanilla/value/VanillaSlider.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/vanilla/core/VanillaFieldSelect.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/vanilla/core/VanillaConjs.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/vanilla/core/VanillaButton.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/vanilla/core/VanillaButtonGroup.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/vanilla/core/VanillaValueSources.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/vanilla/core/VanillaSwitch.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/vanilla/core/vanillaConfirm.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/vanilla/index.js","webpack://react-awesome-query-builder-demo-local/../modules/config/basic.js","webpack://react-awesome-query-builder-demo-local/../modules/config/default.js","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/material/value/MaterialAutocomplete.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/material/core/MaterialFieldAutocomplete.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/material/core/MaterialValueSources.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/material/index.js","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/material/value/MaterialText.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/material/value/MaterialTextArea.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/material/value/MaterialDate.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/material/value/MaterialDateTime.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/material/value/MaterialTime.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/material/value/MaterialSelect.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/material/value/MaterialNumber.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/material/value/MaterialSlider.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/material/value/MaterialRange.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/material/value/MaterialBoolean.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/material/value/MaterialMultiSelect.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/material/core/MaterialFieldSelect.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/material/core/MaterialButton.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/material/core/MaterialButtonGroup.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/material/core/MaterialConjs.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/material/core/MaterialSwitch.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/widgets/material/core/MaterialConfirm.jsx","webpack://react-awesome-query-builder-demo-local/../modules/config/material/index.js","webpack://react-awesome-query-builder-demo-local/../modules/hooks/useListValuesAutocomplete.jsx","webpack://react-awesome-query-builder-demo-local/../modules/constants.js","webpack://react-awesome-query-builder-demo-local/../modules/stores/tree.js","webpack://react-awesome-query-builder-demo-local/../modules/stores/context.js","webpack://react-awesome-query-builder-demo-local/../modules/actions/tree.js","webpack://react-awesome-query-builder-demo-local/../modules/actions/group.js","webpack://react-awesome-query-builder-demo-local/../modules/actions/rule.js","webpack://react-awesome-query-builder-demo-local/../modules/actions/drag.js","webpack://react-awesome-query-builder-demo-local/../modules/components/Query.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/QueryContainer.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/containers/RuleContainer.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/containers/SortableContainer.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/containers/Draggable.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/rule/Operator.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/rule/OperatorWrapper.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/rule/Field.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/rule/FieldWrapper.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/rule/OperatorOptions.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/item/Rule.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/containers/GroupContainer.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/item/GroupActions.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/item/Group.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/item/RuleGroupActions.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/item/RuleGroup.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/item/RuleGroupExtActions.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/item/RuleGroupExt.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/item/SwitchGroupActions.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/item/SwitchGroup.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/item/CaseGroup.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/item/Item.jsx","webpack://react-awesome-query-builder-demo-local/../modules/components/Builder.jsx","webpack://react-awesome-query-builder-demo-local/../modules/export/queryBuilder.js","webpack://react-awesome-query-builder-demo-local/../modules/export/jsonLogic.js","webpack://react-awesome-query-builder-demo-local/../modules/export/mongoDb.js","webpack://react-awesome-query-builder-demo-local/../modules/export/sql.js","webpack://react-awesome-query-builder-demo-local/../modules/export/spel.js","webpack://react-awesome-query-builder-demo-local/../modules/export/queryString.js","webpack://react-awesome-query-builder-demo-local/../modules/export/elasticSearch.js","webpack://react-awesome-query-builder-demo-local/../modules/import/tree.js","webpack://react-awesome-query-builder-demo-local/../modules/import/jsonLogic.js","webpack://react-awesome-query-builder-demo-local/../modules/import/spel.js","webpack://react-awesome-query-builder-demo-local/../modules/config/funcs.js","webpack://react-awesome-query-builder-demo-local/../modules/index.js","webpack://react-awesome-query-builder-demo-local/../modules/utils/autocomplete.js","webpack://react-awesome-query-builder-demo-local/../modules/utils/configUtils.js","webpack://react-awesome-query-builder-demo-local/../modules/utils/defaultUtils.js","webpack://react-awesome-query-builder-demo-local/../modules/utils/export.js","webpack://react-awesome-query-builder-demo-local/../modules/utils/funcUtils.js","webpack://react-awesome-query-builder-demo-local/../modules/utils/reactUtils.js","webpack://react-awesome-query-builder-demo-local/../modules/utils/ruleUtils.js","webpack://react-awesome-query-builder-demo-local/../modules/utils/stuff.js","webpack://react-awesome-query-builder-demo-local/../modules/utils/treeUtils.js","webpack://react-awesome-query-builder-demo-local/../modules/utils/uuid.js","webpack://react-awesome-query-builder-demo-local/../modules/utils/validation.js","webpack://react-awesome-query-builder-demo-local/../node_modules/moment/locale/ sync [/\\\\](es-us(\\.js)"],"sourcesContent":["import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport range from \"lodash/range\";\n\nexport default class Proximity extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    setOption: PropTypes.func.isRequired,\n    options: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    minProximity: PropTypes.number,\n    maxProximity: PropTypes.number,\n    optionPlaceholder: PropTypes.string,\n    optionTextBefore: PropTypes.string,\n    optionLabel: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    //children\n  };\n\n  static defaultProps = {\n    customProps: {},\n    minProximity: 2,\n    maxProximity: 10,\n    optionPlaceholder: \"Select words between\",\n    optionLabel: \"Words between\",\n    optionTextBefore: null,\n  };\n\n  handleChange = (value) => {\n    this.props.setOption(\"proximity\", parseInt(value));\n  };\n\n  render() {\n    const {\n      defaults, options, config, optionLabel, optionPlaceholder, customProps, \n      minProximity, maxProximity, optionTextBefore, readonly\n    } = this.props;\n    const {settings, widgets} = config;\n    const defaultProximity = defaults ? defaults.proximity : undefined;\n    const {showLabels} = settings;\n    const selectedProximity = options.get(\"proximity\", defaultProximity);\n    const proxValues = range(minProximity, maxProximity + 1).map((item) => ({title: item, value: item}));\n    const Select = widgets.select.factory;\n\n    return (\n      <div className=\"operator--PROXIMITY\">\n        <div className=\"operator--options\">\n          { showLabels\n            && <label className=\"rule--label\">{optionLabel}</label>\n          }\n          { !showLabels && optionTextBefore\n            && <div className=\"operator--options--sep\">\n              <span>{optionTextBefore}</span>\n            </div>\n          }\n          <Select\n            config={config}\n            value={selectedProximity}\n            listValues={proxValues}\n            setValue={this.handleChange}\n            readonly={readonly}\n            placeholder={optionPlaceholder}\n            {...customProps}\n          />\n        </div>\n        <div className=\"operator--widgets\">{this.props.children}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport {getTitleInListValues} from \"../../utils/stuff\";\n\nexport default ({\n  delta, isFuncArg, valueSrc,\n  value: immValue, valueError: immValueError, asyncListValues,\n  isSpecialRange, fieldDefinition,\n  widget, widgetDefinition, widgetValueLabel, valueLabels, textSeparators, setValueHandler,\n  config, field, operator, readonly, parentField, parentFuncs, id, groupId\n}) => {\n  const {factory: widgetFactory, ...fieldWidgetProps} = widgetDefinition;\n  const isConst = isFuncArg && fieldDefinition.valueSources && fieldDefinition.valueSources.length == 1 && fieldDefinition.valueSources[0] == \"const\";\n  const defaultValue = fieldDefinition.defaultValue;\n\n  if (!widgetFactory) {\n    return \"?\";\n  }\n    \n  let value = isSpecialRange \n    ? [immValue.get(0), immValue.get(1)] \n    : (immValue ? immValue.get(delta) : undefined);\n  const valueError = immValueError && (isSpecialRange \n    ? [immValueError.get(0), immValueError.get(1)]\n    : immValueError.get(delta)\n  ) || null;\n  if (isSpecialRange && value[0] === undefined && value[1] === undefined)\n    value = undefined;\n  const {fieldSettings} = fieldDefinition || {};\n  const widgetProps = Object.assign({}, fieldWidgetProps, fieldSettings, {\n    config: config,\n    field: field,\n    parentField: parentField,\n    parentFuncs: parentFuncs,\n    fieldDefinition: fieldDefinition,\n    operator: operator,\n    delta: delta,\n    isSpecialRange: isSpecialRange,\n    isFuncArg: isFuncArg,\n    value: value,\n    valueError: valueError,\n    label: widgetValueLabel.label,\n    placeholder: widgetValueLabel.placeholder,\n    placeholders: valueLabels ? valueLabels.placeholder : null,\n    textSeparators: textSeparators,\n    setValue: setValueHandler,\n    readonly: readonly,\n    asyncListValues: asyncListValues,\n    id, groupId\n  });\n    \n  if (widget == \"field\") {\n    //\n  }\n\n  if (isConst && defaultValue) {\n    if (typeof defaultValue == \"boolean\") {\n      return defaultValue ? (widgetProps.labelYes || \"YES\") : (widgetProps.labelNo || \"NO\");\n    } else if (fieldSettings.listValues) {\n      if (Array.isArray(defaultValue))\n        return defaultValue.map(v => getTitleInListValues(fieldSettings.listValues, v) || v).join(\", \");\n      else\n        return (getTitleInListValues(fieldSettings.listValues, defaultValue) || defaultValue);  \n    }\n    return \"\"+defaultValue;\n  }\n    \n  return widgetFactory(widgetProps);\n};\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport range from \"lodash/range\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig\n} from \"../../utils/configUtils\";\nimport {\n  getValueSourcesForFieldOp, getWidgetsForFieldOp, getWidgetForFieldOp, getValueLabel\n} from \"../../utils/ruleUtils\";\nimport {defaultValue} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport pick from \"lodash/pick\";\nimport Immutable from \"immutable\";\nimport WidgetFactory from \"./WidgetFactory\";\nimport {Col} from \"../utils\";\n\nconst funcArgDummyOpDef = {cardinality: 1};\n\nexport default class Widget extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    value: PropTypes.any, //instanceOf(Immutable.List)\n    valueSrc: PropTypes.any, //instanceOf(Immutable.List)\n    valueError: PropTypes.any,\n    field: PropTypes.string,\n    operator: PropTypes.string,\n    readonly: PropTypes.bool,\n    asyncListValues: PropTypes.array,\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    //actions\n    setValue: PropTypes.func,\n    setValueSrc: PropTypes.func,\n    // for isFuncArg\n    isFuncArg: PropTypes.bool,\n    fieldFunc: PropTypes.string,\n    fieldArg: PropTypes.string,\n    leftField: PropTypes.string,\n    // for RuleGroupExt\n    isForRuleGruop: PropTypes.bool,\n    parentField: PropTypes.string,\n    // for func in func\n    parentFuncs: PropTypes.array,\n    // for case_value\n    isCaseValue: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\n      \"config\", \"field\", \"fieldFunc\", \"fieldArg\", \"leftField\", \"operator\", \"valueSrc\", \"isFuncArg\", \"asyncListValues\"\n    ];\n    const needUpdateMeta = !this.meta \n          || keysForMeta\n            .map(k => (\n              nextProps[k] !== prevProps[k] \n                  //tip: for isFuncArg we need to wrap value in Imm list\n                  || k == \"isFuncArg\" && nextProps[\"isFuncArg\"] && nextProps[\"value\"] !== prevProps[\"value\"])\n            )\n            .filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  _setValue = (isSpecialRange, delta, widgetType, value, asyncListValues, __isInternal) => {\n    if (isSpecialRange && Array.isArray(value)) {\n      const oldRange = [this.props.value.get(0), this.props.value.get(1)];\n      if (oldRange[0] != value[0])\n        this.props.setValue(0, value[0], widgetType, asyncListValues, __isInternal);\n      if (oldRange[1] != value[1])\n        this.props.setValue(1, value[1], widgetType, asyncListValues, __isInternal);\n    } else {\n      this.props.setValue(delta, value, widgetType, asyncListValues, __isInternal);\n    }\n  };\n\n  _onChangeValueSrc = (delta, srcKey) => {\n    this.props.setValueSrc(delta, srcKey);\n  };\n\n  getMeta({\n    config, field: simpleField, fieldFunc, fieldArg, operator, valueSrc: valueSrcs, value: values, \n    isForRuleGruop, isCaseValue, isFuncArg, leftField, asyncListValues\n  }) {\n    const field = isFuncArg ? {func: fieldFunc, arg: fieldArg} : simpleField;\n    let iValueSrcs = valueSrcs;\n    let iValues = values;\n    if (isFuncArg || isForRuleGruop || isCaseValue) {\n      iValueSrcs = Immutable.List([valueSrcs]);\n      iValues = Immutable.List([values]);\n    }\n\n    const fieldDefinition = getFieldConfig(config, field);\n    const defaultWidget = getWidgetForFieldOp(config, field, operator);\n    const _widgets = getWidgetsForFieldOp(config, field, operator);\n    const operatorDefinition = isFuncArg ? funcArgDummyOpDef : getOperatorConfig(config, operator, field);\n    if ((fieldDefinition == null || operatorDefinition == null) && !isCaseValue) {\n      return null;\n    }\n    const isSpecialRange = operatorDefinition?.isSpecialRange;\n    const isSpecialRangeForSrcField = isSpecialRange && (iValueSrcs.get(0) == \"field\" || iValueSrcs.get(1) == \"field\");\n    const isTrueSpecialRange = isSpecialRange && !isSpecialRangeForSrcField;\n    const cardinality = isTrueSpecialRange ? 1 : defaultValue(operatorDefinition?.cardinality, 1);\n    if (cardinality === 0) {\n      return null;\n    }\n\n    const valueSources = getValueSourcesForFieldOp(config, field, operator, fieldDefinition, isFuncArg ? leftField : null);\n\n    const widgets = range(0, cardinality).map(delta => {\n      const valueSrc = iValueSrcs.get(delta) || null;\n      let widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      let widgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc);\n      if (isSpecialRangeForSrcField) {\n        widget = widgetDefinition.singleWidget;\n        widgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc);\n      }\n      const widgetType = widgetDefinition?.type;\n      const valueLabel = getValueLabel(config, field, operator, delta, valueSrc, isTrueSpecialRange);\n      const widgetValueLabel = getValueLabel(config, field, operator, delta, null, isTrueSpecialRange);\n      const sepText = operatorDefinition?.textSeparators ? operatorDefinition?.textSeparators[delta] : null;\n      const setValueSrcHandler = this._onChangeValueSrc.bind(this, delta);\n\n      let valueLabels = null;\n      let textSeparators = null;\n      if (isSpecialRange) {\n        valueLabels = [\n          getValueLabel(config, field, operator, 0),\n          getValueLabel(config, field, operator, 1)\n        ];\n        valueLabels = {\n          placeholder: [ valueLabels[0].placeholder, valueLabels[1].placeholder ],\n          label: [ valueLabels[0].label, valueLabels[1].label ],\n        };\n        textSeparators = operatorDefinition?.textSeparators;\n      }\n\n      const setValueHandler = this._setValue.bind(this, isSpecialRange, delta, widgetType);\n\n      return {\n        valueSrc,\n        valueLabel,\n        widget,\n        sepText,\n        setValueSrcHandler,\n        widgetDefinition,\n        widgetValueLabel,\n        valueLabels,\n        textSeparators,\n        setValueHandler\n      };\n    });\n      \n    return {\n      defaultWidget,\n      fieldDefinition,\n      operatorDefinition,\n      isSpecialRange: isTrueSpecialRange,\n      cardinality,\n      valueSources,\n      widgets,\n      iValues, //correct for isFuncArg\n      aField: field, //correct for isFuncArg\n      asyncListValues,\n    };\n  }\n\n  renderWidget = (delta, meta, props) => {\n    const {config, isFuncArg, leftField, operator, value: values, valueError, readonly, parentField, parentFuncs, id, groupId} = props;\n    const {settings} = config;\n    const { widgets, iValues, aField } = meta;\n    const value = isFuncArg ? iValues : values;\n    const field = isFuncArg ? leftField : aField;\n    const {valueSrc, valueLabel} = widgets[delta];\n \n    const widgetLabel = settings.showLabels\n      ? <label className=\"rule--label\">{valueLabel.label}</label>\n      : null;\n\n    return (\n      <div key={\"widget-\"+field+\"-\"+delta} className=\"widget--widget\">\n        {valueSrc == \"func\" ? null : widgetLabel}\n        <WidgetFactory\n          id={id}\n          groupId={groupId}\n          valueSrc={valueSrc}\n          delta={delta}\n          value={value}\n          valueError={valueError}\n          isFuncArg={isFuncArg}\n          {...pick(meta, [\"isSpecialRange\", \"fieldDefinition\", \"asyncListValues\"])}\n          {...pick(widgets[delta], [\"widget\", \"widgetDefinition\", \"widgetValueLabel\", \"valueLabels\", \"textSeparators\", \"setValueHandler\"])}\n          config={config}\n          field={field}\n          parentField={parentField}\n          parentFuncs={parentFuncs}\n          operator={operator}\n          readonly={readonly}\n        />\n      </div>\n    );\n  };\n\n  renderValueSources = (delta, meta, props) => {\n    const {config, isFuncArg, leftField, operator, readonly} = props;\n    const {settings} = config;\n    const { valueSources, widgets, aField } = meta;\n    const field = isFuncArg ? leftField : aField;\n    const {valueSrc, setValueSrcHandler} = widgets[delta];\n    const {valueSourcesInfo, renderValueSources: ValueSources} = settings;\n    const valueSourcesOptions = valueSources.map(srcKey => [srcKey, {\n      label: valueSourcesInfo[srcKey].label\n    }]);\n\n    const sourceLabel = settings.showLabels\n      ? <label className=\"rule--label\">&nbsp;</label>\n      : null;\n\n    return valueSources.length > 1 && !readonly\n      && <div key={\"valuesrc-\"+field+\"-\"+delta} className=\"widget--valuesrc\">\n        {sourceLabel}\n        <ValueSources\n          key={\"valuesrc-\"+delta}\n          delta={delta}\n          valueSources={valueSourcesOptions}\n          valueSrc={valueSrc}\n          config={config}\n          field={field}\n          operator={operator}\n          setValueSrc={setValueSrcHandler}\n          readonly={readonly}\n          title={settings.valueSourcesPopupTitle}\n        />\n      </div>;\n  };\n\n  renderSep = (delta, meta, props) => {\n    const {config} = props;\n    const {widgets} = meta;\n    const {settings} = config;\n    const {sepText} = widgets[delta];\n\n    const sepLabel = settings.showLabels\n      ? <label className=\"rule--label\">&nbsp;</label>\n      : null;\n\n    return sepText\n      && <div key={\"widget-separators-\"+delta} className=\"widget--sep\" >\n        {sepLabel}\n        <span>{sepText}</span>\n      </div>;\n  };\n\n  renderWidgetDelta = (delta) => {\n    const sep = this.renderSep(delta, this.meta, this.props);\n    const sources = this.renderValueSources(delta, this.meta, this.props);\n    const widgetCmp = this.renderWidget(delta, this.meta, this.props);\n\n    return [\n      sep,\n      sources,\n      widgetCmp,\n    ];\n  };\n\n  render() {\n    if (!this.meta) return null;\n    const { defaultWidget, cardinality } = this.meta;\n    if (!defaultWidget) return null;\n    const name = defaultWidget;\n\n    return (\n      <Col\n        className={`rule--widget rule--widget--${name.toUpperCase()}`}\n        key={\"widget-col-\"+name}\n      >\n        {range(0, cardinality).map(this.renderWidgetDelta)}\n      </Col>\n    );\n  }\n\n}\n","import React from \"react\";\n\nconst Col = ({children, ...props}) => (<div {...props}>{children}</div>);\n\nconst dummyFn = () => {};\n\nconst DragIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"gray\" width=\"18px\" height=\"18px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"/>\n  </svg>\n);\n\nconst ConfirmFn = (Cmp) => (\n  props => {\n    const {useConfirm} = props.config.settings;\n    const confirmFn = useConfirm ? useConfirm() : null;\n    return <Cmp {...props} confirmFn={confirmFn} />;\n  }\n);\n\nexport {\n  Col, dummyFn, DragIcon, ConfirmFn\n};\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {getFieldConfig} from \"../../utils/configUtils\";\nimport {getFieldPath, getFieldPathLabels, getWidgetForFieldOp} from \"../../utils/ruleUtils\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nimport clone from \"clone\";\n\n//tip: this.props.value - right value, this.props.field - left value\n\nexport default class ValueField extends PureComponent {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.string.isRequired,\n    value: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    parentField: PropTypes.string,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForItems = [\"config\", \"field\", \"operator\", \"isFuncArg\", \"parentField\"];\n    const keysForMeta = [\"config\", \"field\", \"operator\", \"value\", \"placeholder\", \"isFuncArg\", \"parentField\"];\n    const needUpdateItems = !this.items || keysForItems.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateItems) {\n      this.items = this.getItems(nextProps);\n    }\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getItems({config, field, operator, parentField, isFuncArg, fieldDefinition}) {\n    const {canCompareFieldWithField} = config.settings;\n    const fieldSeparator = config.settings.fieldSeparator;\n    const parentFieldPath = typeof parentField == \"string\" ? parentField.split(fieldSeparator) : parentField;\n    const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n    const sourceFields = parentField ? parentFieldConfig && parentFieldConfig.subfields : config.fields;\n\n    const filteredFields = this.filterFields(config, sourceFields, field, parentField, parentFieldPath, operator, canCompareFieldWithField, isFuncArg, fieldDefinition);\n    const items = this.buildOptions(parentFieldPath, config, filteredFields, parentFieldPath);\n    return items;\n  }\n\n  getMeta({config, field, operator, value, placeholder: customPlaceholder, isFuncArg, parentField}) {\n    const {fieldPlaceholder, fieldSeparatorDisplay} = config.settings;\n    const selectedKey = value;\n    const isFieldSelected = !!value;\n\n    const leftFieldConfig = getFieldConfig(config, field);\n    const leftFieldWidgetField = leftFieldConfig.widgets.field;\n    const leftFieldWidgetFieldProps = leftFieldWidgetField && leftFieldWidgetField.widgetProps || {};\n    const placeholder = isFieldSelected ? null \n      : (isFuncArg && customPlaceholder || leftFieldWidgetFieldProps.valuePlaceholder || fieldPlaceholder);\n    const currField = isFieldSelected ? getFieldConfig(config, selectedKey) : null;\n    const selectedOpts = currField || {};\n\n    const selectedKeys = getFieldPath(selectedKey, config);\n    const selectedPath = getFieldPath(selectedKey, config, true);\n    const selectedLabel = this.getFieldLabel(currField, selectedKey, config);\n    const partsLabels = getFieldPathLabels(selectedKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel || parentField)\n      selectedFullLabel = null;\n    const selectedAltLabel = selectedOpts.label2;\n\n    return {\n      placeholder,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n    };\n  }\n\n  filterFields(config, fields, leftFieldFullkey, parentField, parentFieldPath, operator, canCompareFieldWithField, isFuncArg, fieldDefinition) {\n    fields = clone(fields);\n    const fieldSeparator = config.settings.fieldSeparator;\n    const leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n    let expectedType;\n    const widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n    if (isFuncArg && fieldDefinition) {\n      expectedType = fieldDefinition.type;\n    } else if (widget) {\n      let widgetConfig = config.widgets[widget];\n      let widgetType = widgetConfig.type;\n      //expectedType = leftFieldConfig.type;\n      expectedType = widgetType;\n    } else {\n      expectedType = leftFieldConfig.type;\n    }\n    \n    function _filter(list, path) {\n      for (let rightFieldKey in list) {\n        let subfields = list[rightFieldKey].subfields;\n        let subpath = (path ? path : []).concat(rightFieldKey);\n        let rightFieldFullkey = subpath.join(fieldSeparator);\n        let rightFieldConfig = getFieldConfig(config, rightFieldFullkey);\n        if (!rightFieldConfig) {\n          delete list[rightFieldKey];\n        } else if (rightFieldConfig.type == \"!struct\" || rightFieldConfig.type == \"!group\") {\n          if(_filter(subfields, subpath) == 0)\n            delete list[rightFieldKey];\n        } else {\n          // tip: LHS field can be used as arg in RHS function\n          let canUse = rightFieldConfig.type == expectedType && (isFuncArg ? true : rightFieldFullkey != leftFieldFullkey);\n          let fn = canCompareFieldWithField || config.settings.canCompareFieldWithField;\n          if (fn)\n            canUse = canUse && fn(leftFieldFullkey, leftFieldConfig, rightFieldFullkey, rightFieldConfig, operator);\n          if (!canUse)\n            delete list[rightFieldKey];\n        }\n      }\n      return keys(list).length;\n    }\n\n    _filter(fields, parentFieldPath || []);\n\n    return fields;\n  }\n\n  buildOptions(parentFieldPath, config, fields, path = null, optGroupLabel = null) {\n    if (!fields)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    return keys(fields).map(fieldKey => {\n      const field = fields[fieldKey];\n      const label = this.getFieldLabel(field, fieldKey, config);\n      const partsLabels = getFieldPathLabels(fieldKey, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label || parentFieldPath)\n        fullLabel = null;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n      const subpath = (path ? path : []).concat(fieldKey);\n\n      if (field.hideForCompare)\n        return undefined;\n\n      if (field.type == \"!struct\" || field.type == \"!group\") {\n        return {\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          items: this.buildOptions(parentFieldPath, config, field.subfields, subpath, label)\n        };\n      } else {\n        return {\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          grouplabel: optGroupLabel\n        };\n      }\n    }).filter(o => !!o);\n  }\n\n  getFieldLabel(fieldOpts, fieldKey, config) {\n    if (!fieldKey) return null;\n    let fieldSeparator = config.settings.fieldSeparator;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let fieldParts = Array.isArray(fieldKey) ? fieldKey : fieldKey.split(fieldSeparator);\n    let label = fieldOpts.label || last(fieldParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  render() {\n    const {config, customProps, setValue, readonly, id, groupId} = this.props;\n    const {renderField} = config.settings;\n    const renderProps = {\n      config,\n      customProps,\n      setField: setValue,\n      readonly,\n      items: this.items,\n      id,\n      groupId,\n      ...this.meta\n    };\n    return renderField(renderProps);\n  }\n\n}\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {getFieldConfig, getFuncConfig} from \"../../utils/configUtils\";\nimport {\n  getFieldPath, getFuncPathLabels, getFieldPathLabels, getValueSourcesForFieldOp, getWidgetForFieldOp\n} from \"../../utils/ruleUtils\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nimport clone from \"clone\";\n\n//tip: this.props.value - right value, this.props.field - left value\n\nexport default class FuncSelect extends PureComponent {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.string.isRequired,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    value: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n      \n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForItems = [\"config\", \"field\", \"operator\", \"isFuncArg\"];\n    const keysForMeta = [\"config\", \"field\", \"value\"];\n    const needUpdateItems = !this.items || keysForItems.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n    if (needUpdateItems) {\n      this.items = this.getItems(nextProps);\n    }\n  }\n\n  getItems({config, field, operator, parentFuncs, fieldDefinition, isFuncArg}) {\n    const {canUseFuncForField} = config.settings;\n    const filteredFuncs = this.filterFuncs(config, config.funcs, field, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition);\n    const items = this.buildOptions(config, filteredFuncs);\n    return items;\n  }\n\n  getMeta({config, field, value}) {\n    const {funcPlaceholder, fieldSeparatorDisplay} = config.settings;\n    const selectedFuncKey = value;\n    const isFuncSelected = !!value;\n\n    const leftFieldConfig = getFieldConfig(config, field);\n    const leftFieldWidgetField = leftFieldConfig.widgets.field;\n    const leftFieldWidgetFieldProps = leftFieldWidgetField && leftFieldWidgetField.widgetProps || {};\n    const placeholder = !isFuncSelected ? funcPlaceholder : null;\n\n    const currFunc = isFuncSelected ? getFuncConfig(config, selectedFuncKey) : null;\n    const selectedOpts = currFunc || {};\n\n    const selectedKeys = getFieldPath(selectedFuncKey, config);\n    const selectedPath = getFieldPath(selectedFuncKey, config, true);\n    const selectedLabel = this.getFuncLabel(currFunc, selectedFuncKey, config);\n    const partsLabels = getFuncPathLabels(selectedFuncKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel)\n      selectedFullLabel = null;\n    \n    return {\n      placeholder,\n      selectedKey: selectedFuncKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedFullLabel,\n    };\n  }\n\n  filterFuncs(config, funcs, leftFieldFullkey, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition) {\n    funcs = clone(funcs);\n    const fieldSeparator = config.settings.fieldSeparator;\n    const leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n    let expectedType;\n    let targetDefinition = leftFieldConfig;\n    const widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n    if (isFuncArg && fieldDefinition) {\n      targetDefinition = fieldDefinition;\n      expectedType = fieldDefinition.type;\n    } else if (widget) {\n      let widgetConfig = config.widgets[widget];\n      let widgetType = widgetConfig.type;\n      //expectedType = leftFieldConfig.type;\n      expectedType = widgetType;\n    } else {\n      expectedType = leftFieldConfig.type;\n    }\n\n    function _filter(list, path) {\n      for (let funcKey in list) {\n        let subfields = list[funcKey].subfields;\n        let subpath = (path ? path : []).concat(funcKey);\n        let funcFullkey = subpath.join(fieldSeparator);\n        let funcConfig = getFuncConfig(config, funcFullkey);\n        if (funcConfig.type == \"!struct\") {\n          if(_filter(subfields, subpath) == 0)\n            delete list[funcKey];\n        } else {\n          let canUse = funcConfig.returnType == expectedType;\n          if (targetDefinition.funcs)\n            canUse = canUse && targetDefinition.funcs.includes(funcFullkey);\n          if (canUseFuncForField)\n            canUse = canUse && canUseFuncForField(leftFieldFullkey, leftFieldConfig, funcFullkey, funcConfig, operator);\n          // don't use func in func (can be configurable, but usually users don't need this)\n          if (!funcConfig.allowSelfNesting && parentFuncs && parentFuncs.map(([func, _arg]) => func).includes(funcFullkey))\n            canUse = false;\n          if (!canUse)\n            delete list[funcKey];\n        }\n      }\n      return keys(list).length;\n    }\n\n    _filter(funcs, []);\n\n    return funcs;\n  }\n\n  buildOptions(config, funcs, path = null, optGroupLabel = null) {\n    if (!funcs)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    return keys(funcs).map(funcKey => {\n      const func = funcs[funcKey];\n      const label = this.getFuncLabel(func, funcKey, config);\n      const partsLabels = getFuncPathLabels(funcKey, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label)\n        fullLabel = null;\n      const tooltip = func.tooltip;\n      const subpath = (path ? path : []).concat(funcKey);\n\n      if (func.type == \"!struct\") {\n        return {\n          key: funcKey,\n          path: prefix+funcKey,\n          label,\n          fullLabel,\n          tooltip,\n          items: this.buildOptions(config, func.subfields, subpath, label)\n        };\n      } else {\n        return {\n          key: funcKey,\n          path: prefix+funcKey,\n          label,\n          fullLabel,\n          tooltip,\n          grouplabel: optGroupLabel\n        };\n      }\n    });\n  }\n\n  getFuncLabel(funcOpts, funcKey, config) {\n    if (!funcKey) return null;\n    let fieldSeparator = config.settings.fieldSeparator;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let funcParts = Array.isArray(funcKey) ? funcKey : funcKey.split(fieldSeparator);\n    let label = funcOpts.label || last(funcParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  render() {\n    const {config, customProps, setValue, readonly, id, groupId} = this.props;\n    const {renderFunc} = config.settings;\n    const renderProps = {\n      config,\n      customProps,\n      readonly,\n      setField: setValue,\n      items: this.items,\n      id,\n      groupId,\n      ...this.meta\n    };\n    return renderFunc(renderProps);\n  }\n\n}\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport FuncSelect from \"./FuncSelect\";\nimport {\n  getFuncConfig\n} from \"../../utils/configUtils\";\nimport Widget from \"./Widget\";\nimport {Col} from \"../utils\";\nimport {setFunc, setArgValue, setArgValueSrc} from \"../../utils/funcUtils\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\n\n\nexport default class FuncWidget extends PureComponent {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.string.isRequired,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    value: PropTypes.object, //instanceOf(Immutable.Map) //with keys 'func' and `args`\n    setValue: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"config\", \"field\", \"operator\", \"value\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({config, field, operator, value}) {\n    const funcKey = value ? value.get(\"func\") : null;\n    const funcDefinition = funcKey ? getFuncConfig(config, funcKey) : null;\n\n    return {\n      funcDefinition, funcKey\n    };\n  }\n\n  setFunc = (funcKey) => {\n    this.props.setValue( setFunc(this.props.value, funcKey, this.props.config) );\n  };\n\n  setArgValue = (argKey, argVal) => {\n    const {config} = this.props;\n    const {funcDefinition} = this.meta;\n    const {args} = funcDefinition;\n    const argDefinition = args[argKey];\n\n    this.props.setValue( setArgValue(this.props.value, argKey, argVal, argDefinition, config) );\n  };\n\n  setArgValueSrc = (argKey, argValSrc) => {\n    const {config} = this.props;\n    const {funcDefinition} = this.meta;\n    const {args} = funcDefinition;\n    const argDefinition = args[argKey];\n\n    this.props.setValue( setArgValueSrc(this.props.value, argKey, argValSrc, argDefinition, config) );\n  };\n\n  renderFuncSelect = () => {\n    const {config, field, operator, customProps, value, readonly, parentFuncs, id, groupId, isFuncArg, fieldDefinition} = this.props;\n    const funcKey = value ? value.get(\"func\") : null;\n    const selectProps = {\n      value: funcKey,\n      setValue: this.setFunc,\n      config, field, operator, customProps, readonly, parentFuncs, \n      isFuncArg, fieldDefinition,\n      id, groupId,\n    };\n    const {showLabels, funcLabel} = config.settings;\n    const widgetLabel = showLabels\n      ? <label className=\"rule--label\">{funcLabel}</label>\n      : null;\n\n    return (\n      <Col key=\"func\" className=\"rule--func\">\n        {widgetLabel}\n        <FuncSelect {...selectProps} />\n      </Col>\n    );\n  };\n\n  renderArgLabel = (argKey, argDefinition) => {\n    const {valueSources, type, showPrefix, label} = argDefinition;\n    const {config} = this.props;\n    const isConst = valueSources && valueSources.length == 1 && valueSources[0] == \"const\";\n    const forceShow = !config.settings.showLabels && (type == \"boolean\" || isConst) && showPrefix;\n    if (!forceShow) return null;\n    return (\n      <Col className=\"rule--func--arg-label\">\n        {label || argKey}\n      </Col>\n    );\n  };\n\n  renderArgLabelSep = (argKey, argDefinition) => {\n    const {valueSources, type, showPrefix} = argDefinition;\n    const {config} = this.props;\n    const isConst = valueSources && valueSources.length == 1 && valueSources[0] == \"const\";\n    const forceShow = !config.settings.showLabels && (type == \"boolean\" || isConst) && showPrefix;\n    if (!forceShow) return null;\n    return (\n      <Col className=\"rule--func--arg-label-sep\">\n        {\":\"}\n      </Col>\n    );\n  };\n\n  renderArgVal = (funcKey, argKey, argDefinition) => {\n    const {config, field, operator, value, readonly, parentFuncs, id, groupId} = this.props;\n    const arg = value ? value.getIn([\"args\", argKey]) : null;\n    const argVal = arg ? arg.get(\"value\") : undefined;\n    const defaultValueSource = argDefinition.valueSources.length == 1 ? argDefinition.valueSources[0] : undefined;\n    const argValSrc = arg ? (arg.get(\"valueSrc\") || defaultValueSource || \"value\") : defaultValueSource;\n\n    const widgetProps = {\n      config, \n      fieldFunc: funcKey,\n      fieldArg: argKey,\n      leftField: field,\n      operator: null,\n      value: argVal,\n      valueSrc: argValSrc,\n      setValue: this.setArgValue,\n      setValueSrc: this.setArgValueSrc,\n      funcKey,\n      argKey,\n      argDefinition,\n      readonly,\n      parentFuncs,\n      id,\n      groupId,\n    };\n    //tip: value & valueSrc will be converted to Immutable.List at <Widget>\n\n    return (\n      <Col className=\"rule--func--arg-value\">\n        <ArgWidget {...widgetProps} />\n      </Col>\n    );\n  };\n\n  renderArgSep = (argKey, argDefinition, argIndex, {renderSeps}) => {\n    if (!argIndex) return null;\n    return (\n      <Col className=\"rule--func--arg-sep\">\n        {renderSeps ? renderSeps[argIndex - 1] : \", \"}\n      </Col>\n    );\n  };\n\n  renderBracketBefore = ({renderBrackets}) => {\n    return (\n      <Col key=\"before_args\" className=\"rule--func--bracket-before\">\n        {renderBrackets ? renderBrackets[0] : \"(\"}\n      </Col>\n    );\n  };\n\n  renderBracketAfter = ({renderBrackets}) => {\n    return (\n      <Col key=\"after_args\" className=\"rule--func--bracket-after\">\n        {renderBrackets ? renderBrackets[1] : \")\"}\n      </Col>\n    );\n  };\n\n  renderFuncArgs = () => {\n    const {funcDefinition, funcKey} = this.meta;\n    if (!funcKey) return null;\n    const {args} = funcDefinition;\n    if (!args) return null;\n\n    return (\n      <>\n        {this.renderBracketBefore(funcDefinition)}\n        <Col key=\"args\" className=\"rule--func--args\">\n          {Object.keys(args).map((argKey, argIndex) => (\n            <Col key={`arg-${argKey}-${argIndex}`} className=\"rule--func--arg\">\n              {this.renderArgSep(argKey, args[argKey], argIndex, funcDefinition)}\n              {this.renderArgLabel(argKey, args[argKey])}\n              {this.renderArgLabelSep(argKey, args[argKey])}\n              {this.renderArgVal(funcKey, argKey, args[argKey])}\n            </Col>\n          ))}\n        </Col>\n        {this.renderBracketAfter(funcDefinition)}\n      </>\n    );\n  };\n\n  render() {\n    return (\n      <Col className=\"rule--func--wrapper\">\n        {this.renderFuncSelect()}\n        {this.renderFuncArgs()}\n      </Col>\n    );\n  }\n}\n\n\nclass ArgWidget extends PureComponent {\n  static propTypes = {\n    funcKey: PropTypes.string.isRequired,\n    argKey: PropTypes.string.isRequired,\n    setValue: PropTypes.func.isRequired,\n    setValueSrc: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n  };\n\n  setValue = (_delta, value, _widgetType) => {\n    const {setValue, argKey} = this.props;\n    setValue(argKey, value);\n  };\n\n  setValueSrc = (_delta, valueSrc, _widgetType) => {\n    const {setValueSrc, argKey} = this.props;\n    setValueSrc(argKey, valueSrc);\n  };\n\n  render() {\n    const {funcKey, argKey, parentFuncs} = this.props;\n    return (\n      <Widget\n        {...this.props} \n        setValue={this.setValue} \n        setValueSrc={this.setValueSrc} \n        isFuncArg={true}\n        parentFuncs={[...(parentFuncs || []), [funcKey, argKey]]}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport uuid from \"../../../../utils/uuid\";\n\nexport default (props) => {\n  const {value, setValue, config, labelYes, labelNo, readonly, customProps = {}} = props;\n  const customRadioYesProps = customProps.radioYes || {};\n  const customRadioNoProps = customProps.radioNo || {};\n\n  const onCheckboxChange = e => setValue(e.target.checked);\n  const onRadioChange = e => setValue(e.target.value == \"true\");\n  const id = uuid(), id2 = uuid();\n\n  // return <>\n  //     <input key={id}  type=\"checkbox\" id={id} checked={!!value} disabled={readonly} onChange={onCheckboxChange} />\n  //     <label style={{display: \"inline\"}} key={id+\"label\"}  htmlFor={id}>{value ? labelYes : labelNo}</label>\n  // </>;\n\n  return <>\n    <input key={id}  type=\"radio\" id={id} value={true} checked={!!value} disabled={readonly} onChange={onRadioChange} { ...customRadioYesProps }/>\n    <label style={{display: \"inline\"}} key={id+\"label\"}  htmlFor={id}>{labelYes}</label>\n    <input key={id2}  type=\"radio\" id={id2} value={false} checked={!value} disabled={readonly} onChange={onRadioChange} { ...customRadioNoProps } />\n    <label style={{display: \"inline\"}} key={id2+\"label\"}  htmlFor={id2}>{labelNo}</label>\n  </>;\n\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, maxLength, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  const textValue = value || \"\";\n  return (\n    <input\n      type=\"text\" \n      value={textValue} \n      placeholder={placeholder} \n      disabled={readonly} \n      onChange={onChange}\n      maxLength={maxLength}\n      {...customProps}\n    />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, maxLength, maxRows, fullWidth, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  const textValue = value || \"\";\n  return (\n    <textarea\n      value={textValue} \n      placeholder={placeholder}\n      disabled={readonly}\n      onChange={onChange}\n      maxLength={maxLength}\n      style={{\n        width: fullWidth ? \"100%\" : undefined\n      }}\n      {...customProps}\n    />\n  );\n};\n","import React from \"react\";\nimport moment from \"moment\";\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, readonly, customProps, } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    setValue(value);\n  };\n  \n  return (\n    <input type=\"date\"  value={value || \"\"}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, use12Hours, readonly, customProps } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    setValue(value);\n  };\n  \n  return (\n    <input type=\"time\"  value={value || \"\"}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\nimport moment from \"moment\";\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, use12Hours, readonly, customProps, } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    else\n      value = moment(new Date(value)).format(valueFormat);\n    setValue(value);\n  };\n\n  let dtValue = value;\n  if (!value)\n    dtValue = \"\";\n  else\n    dtValue = moment(value).format(\"YYYY-MM-DDTHH:mm\");\n  \n  return (\n    <input type=\"datetime-local\"  value={dtValue}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\nimport {mapListValues} from \"../../../../utils/stuff\";\nimport omit from \"lodash/omit\";\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, customProps,}) => {\n  const renderOptions = () => \n    mapListValues(listValues, ({title, value}) => {\n      return <option key={value} value={value}>{title}</option>;\n    });\n\n  const getMultiSelectValues = (multiselect) => {\n    let values = [];\n    const options = multiselect.options;\n    for (let i = 0 ; i < options.length ; i++) {\n      const opt = options[i];\n      if (opt.selected) {\n        values.push(opt.value);\n      }\n    }\n    if (!values.length)\n      values = undefined; //not allow []\n    return values;\n  };\n\n  const onChange = e => setValue(getMultiSelectValues(e.target));\n  \n  return (\n    <select multiple\n      onChange={onChange}\n      value={value}\n      disabled={readonly}\n      {...omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])}\n    >\n      {renderOptions()}\n    </select>\n  );\n};\n","import React from \"react\";\nimport {mapListValues} from \"../../../../utils/stuff\";\nimport omit from \"lodash/omit\";\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, customProps,}) => {\n  const renderOptions = () => \n    mapListValues(listValues, ({title, value}) => {\n      return <option key={value} value={value}>{title}</option>;\n    });\n\n  const onChange = e => setValue(e.target.value);\n  \n  const hasValue = value != null;\n  return (\n    <select\n      onChange={onChange}\n      value={hasValue ? value : \"\"}\n      disabled={readonly}\n      {...omit(customProps, [\"showSearch\", \"input\"])}\n    >\n      {!hasValue && <option disabled value={\"\"}></option>}\n      {renderOptions()}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n  const numberValue = value == undefined ? \"\" : value;\n  return (\n    <input type=\"number\"  value={numberValue} placeholder={placeholder} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps = {}, } = props;\n  const customInputProps = customProps.input || {};\n  const customSliderProps = customProps.slider || customProps;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n  const numberValue = value == undefined ? \"\" : value;\n  return [\n    <input key={\"number\"} type=\"number\"  value={numberValue} placeholder={placeholder} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customInputProps} />\n    ,\n    <input key={\"range\"} type=\"range\"  value={numberValue} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customSliderProps} />\n  ];\n};\n","import React from \"react\";\n\nexport default ({items, setField, selectedKey, readonly}) => {\n  const renderOptions = (fields) => (\n    fields.map(field => {\n      const {items, path, label, disabled} = field;\n      if (items) {\n        return <optgroup disabled={disabled} key={path} label={label}>{renderOptions(items)}</optgroup>;\n      } else {\n        return <option disabled={disabled} key={path} value={path}>{label}</option>;\n      }\n    })\n  );\n\n  const onChange = e => setField(e.target.value);\n  \n  const hasValue = selectedKey != null;\n  return (\n    <select \n      onChange={onChange}\n      value={hasValue ? selectedKey : \"\"}\n      disabled={readonly}\n    >\n      {!hasValue && <option disabled value={\"\"}></option>}\n      {renderOptions(items)}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default ({id, not, setNot, conjunctionOptions, setConjunction, disabled, readonly, config, showNot, notLabel}) => {\n  const conjsCount = Object.keys(conjunctionOptions).length;\n  const lessThenTwo = disabled;\n  const {forceShowConj} = config.settings;\n  const showConj = forceShowConj || conjsCount > 1 && !lessThenTwo;\n\n  const renderOptions = () => \n    Object.keys(conjunctionOptions).map(key => {\n      const {id, name, label, checked} = conjunctionOptions[key];\n      const postfix = setConjunction.isDummyFn ? \"__dummy\" : \"\";\n      if ((readonly || disabled) && !checked)\n        return null;\n      return [\n        <input key={id+postfix} type=\"radio\" id={id+postfix} name={name+postfix} checked={checked} disabled={readonly || disabled} value={key} onChange={onChange} />\n        ,\n        <label key={id+postfix+\"label\"} htmlFor={id+postfix}>{label}</label>\n      ];\n    });\n  \n  const renderNot = () => {\n    const postfix = \"not\";\n    return [\n      <input key={id+postfix}  type=\"checkbox\" id={id+postfix} checked={not} disabled={readonly} onChange={onNotChange} />\n      ,\n      <label key={id+postfix+\"label\"}  htmlFor={id+postfix}>{notLabel || \"NOT\"}</label>\n    ];\n  };\n\n  const onChange = e => setConjunction(e.target.value);\n\n  const onNotChange = e => setNot(e.target.checked);\n\n  return [\n    showNot && renderNot(),\n    showConj && renderOptions()\n  ];\n  \n};\n","import React from \"react\";\n\nexport default ({type, label, onClick, readonly, config}) => {\n  const typeToLabel = {\n    \"addRuleGroup\": \"+\",\n    \"addRuleGroupExt\": \"+\",\n    \"delGroup\": \"x\",\n    \"delRuleGroup\": \"x\",\n    \"delRule\": \"x\",\n  };\n  const btnLabel = label || typeToLabel[type];\n  return <button onClick={onClick} type=\"button\" disabled={readonly}>{btnLabel}</button>;\n};\n","import React from \"react\";\n\nexport default ({children, config}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\n\nexport default ({config, valueSources, valueSrc, title, setValueSrc, readonly}) => {\n  const renderOptions = (valueSources) => (\n    valueSources.map(([srcKey, info]) => (\n      <option key={srcKey} value={srcKey}>{info.label}</option>\n    ))\n  );\n\n  const onChange = e => setValueSrc(e.target.value);\n  \n  return (\n    <select \n      onChange={onChange}\n      value={valueSrc}\n      disabled={readonly}\n    >\n      {renderOptions(valueSources)}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default ({value, setValue, label, id, config, type}) => {\n  const onChange = e => setValue(e.target.checked);\n  const postfix = type;\n  return [\n    <input key={id+postfix}  type=\"checkbox\" id={id+postfix} checked={!!value} onChange={onChange} />\n    ,\n    <label key={id+postfix+\"label\"}  htmlFor={id+postfix}>{label}</label>\n  ];\n};\n","export default ({onOk, okText, cancelText, title}) => {\n  if (confirm(title)) {\n    onOk();\n  }\n};\n","import React from \"react\";\n\n// value widgets\nexport {default as VanillaBooleanWidget} from \"./value/VanillaBoolean\";\nexport {default as VanillaTextWidget} from \"./value/VanillaText\";\nexport {default as VanillaTextAreaWidget} from \"./value/VanillaTextArea\";\nexport {default as VanillaDateWidget} from \"./value/VanillaDate\";\nexport {default as VanillaTimeWidget} from \"./value/VanillaTime\";\nexport {default as VanillaDateTimeWidget} from \"./value/VanillaDateTime\";\nexport {default as VanillaMultiSelectWidget} from \"./value/VanillaMultiSelect\";\nexport {default as VanillaSelectWidget} from \"./value/VanillaSelect\";\nexport {default as VanillaNumberWidget} from \"./value/VanillaNumber\";\nexport {default as VanillaSliderWidget} from \"./value/VanillaSlider\";\n\n// field select widget\nexport {default as VanillaFieldSelect} from \"./core/VanillaFieldSelect\";\n\n// core components\nexport {default as VanillaConjs} from \"./core/VanillaConjs\";\nexport {default as VanillaButton} from \"./core/VanillaButton\";\nexport {default as VanillaButtonGroup} from \"./core/VanillaButtonGroup\";\nexport {default as VanillaValueSources} from \"./core/VanillaValueSources\";\nexport {default as VanillaSwitch} from \"./core/VanillaSwitch\";\nexport {default as vanillaConfirm} from \"./core/vanillaConfirm\";\n\nexport const VanillaProvider = ({config, children}) => children;\n","import React from \"react\";\nimport * as Widgets from \"../components/widgets\";\nimport * as Operators from \"../components/operators\";\nimport {SqlString, sqlEmptyValue, mongoEmptyValue, spelEscape, spelFixList} from \"../utils/export\";\nimport {escapeRegExp, getTitleInListValues} from \"../utils/stuff\";\nimport moment from \"moment\";\nimport {settings as defaultSettings} from \"../config/default\";\n\nconst {\n  //vanilla\n  VanillaBooleanWidget,\n  VanillaTextWidget,\n  VanillaTextAreaWidget,\n  VanillaDateWidget,\n  VanillaTimeWidget,\n  VanillaDateTimeWidget,\n  VanillaMultiSelectWidget,\n  VanillaSelectWidget,\n  VanillaNumberWidget,\n  VanillaSliderWidget,\n\n  //common\n  ValueFieldWidget,\n  FuncWidget\n} = Widgets;\nconst { ProximityOperator } = Operators;\n\n\n//----------------------------  conjunctions\n\nconst conjunctions = {\n  AND: {\n    label: \"And\",\n    mongoConj: \"$and\",\n    jsonLogicConj: \"and\",\n    sqlConj: \"AND\",\n    spelConj: \"and\",\n    spelConjs: [\"and\", \"&&\"],\n    reversedConj: \"OR\",\n    formatConj: (children, conj, not, isForDisplay) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + (isForDisplay ? \"AND\" : \"&&\") + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    sqlFormatConj: (children, conj, not) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + \"AND\" + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    spelFormatConj: (children, conj, not, omitBrackets) => {\n      if (not) omitBrackets = false;\n      return children.size > 1\n        ? (not ? \"!\" : \"\") + (omitBrackets ? \"\" : \"(\") + children.join(\" \" + \"&&\" + \" \") + (omitBrackets ? \"\" : \")\")\n        : (not ? \"!(\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n  },\n  OR: {\n    label: \"Or\",\n    mongoConj: \"$or\",\n    jsonLogicConj: \"or\",\n    sqlConj: \"OR\",\n    spelConj: \"or\",\n    spelConjs: [\"or\", \"||\"],\n    reversedConj: \"AND\",\n    formatConj: (children, conj, not, isForDisplay) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + (isForDisplay ? \"OR\" : \"||\") + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    sqlFormatConj: (children, conj, not) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + \"OR\" + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    spelFormatConj: (children, conj, not, omitBrackets) => {\n      if (not) omitBrackets = false;\n      return children.size > 1\n        ? (not ? \"!\" : \"\") + (omitBrackets ? \"\" : \"(\") + children.join(\" \" + \"||\" + \" \") + (omitBrackets ? \"\" : \")\")\n        : (not ? \"!(\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n  },\n};\n\n//----------------------------  operators\n\n// helpers for mongo format\nexport const mongoFormatOp1 = (mop, mc, not,  field, _op, value, useExpr, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n  const $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\"+field : field;\n  const mv = mc(value, fieldDef);\n  if (mv === undefined)\n    return undefined;\n  if (not) {\n    if (!useExpr && (!mop || mop == \"$eq\"))\n      return { [field]: { \"$ne\": mv } }; // short form\n    return !useExpr\n      ? { [field]: { \"$not\": { [mop]: mv } } } \n      : { \"$not\": { [mop]: [$field, mv] } };\n  } else {\n    if (!useExpr && (!mop || mop == \"$eq\"))\n      return { [field]: mv }; // short form\n    return !useExpr\n      ? { [field]: { [mop]: mv } } \n      : { [mop]: [$field, mv] };\n  }\n};\n\nexport const mongoFormatOp2 = (mops, not,  field, _op, values, useExpr, valueSrcs, valueTypes, opDef, operatorOptions, fieldDef) => {\n  const $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\"+field : field;\n  if (not) {\n    return !useExpr\n      ? { [field]: { \"$not\": { [mops[0]]: values[0], [mops[1]]: values[1] } } } \n      : {\"$not\":\n                {\"$and\": [\n                  { [mops[0]]: [ $field, values[0] ] },\n                  { [mops[1]]: [ $field, values[1] ] },\n                ]}\n      };\n  } else {\n    return !useExpr\n      ? { [field]: { [mops[0]]: values[0], [mops[1]]: values[1] } } \n      : {\"$and\": [\n        { [mops[0]]: [ $field, values[0] ] },\n        { [mops[1]]: [ $field, values[1] ] },\n      ]};\n  }\n};\n\n\nconst operators = {\n  equal: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    reversedOp: \"not_equal\",\n    formatOp: (field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) => {\n      const opStr = isForDisplay ? \"=\" : opDef.label;\n      if (valueTypes == \"boolean\" && isForDisplay)\n        return value == \"No\" ? `NOT ${field}` : `${field}`;\n      else\n        return `${field} ${opStr} ${value}`;\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", v => v, false),\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\",\n  },\n  not_equal: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    reversedOp: \"equal\",\n    formatOp: (field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) => {\n      if (valueTypes == \"boolean\" && isForDisplay)\n        return value == \"No\" ? `${field}` : `NOT ${field}`;\n      else\n        return `${field} ${opDef.label} ${value}`;\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$ne\", v => v, false),\n    jsonLogic: \"!=\",\n  },\n  less: {\n    label: \"<\",\n    labelForFormat: \"<\",\n    sqlOp: \"<\",\n    spelOp: \"<\",\n    spelOps: [\"<\", \"lt\"],\n    reversedOp: \"greater_or_equal\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$lt\", v => v, false),\n    jsonLogic: \"<\",\n    elasticSearchQueryType: \"range\",\n  },\n  less_or_equal: {\n    label: \"<=\",\n    labelForFormat: \"<=\",\n    sqlOp: \"<=\",\n    spelOp: \"<=\",\n    spelOps: [\"<=\", \"le\"],\n    reversedOp: \"greater\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$lte\", v => v, false),\n    jsonLogic: \"<=\",\n    elasticSearchQueryType: \"range\",\n  },\n  greater: {\n    label: \">\",\n    labelForFormat: \">\",\n    sqlOp: \">\",\n    spelOp: \">\",\n    spelOps: [\">\", \"gt\"],\n    reversedOp: \"less_or_equal\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$gt\", v => v, false),\n    jsonLogic: \">\",\n    elasticSearchQueryType: \"range\",\n  },\n  greater_or_equal: {\n    label: \">=\",\n    labelForFormat: \">=\",\n    sqlOp: \">=\",\n    spelOp: \">=\",\n    spelOps: [\">=\", \"ge\"],\n    reversedOp: \"less\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$gte\", v => v, false),\n    jsonLogic: \">=\",\n    elasticSearchQueryType: \"range\",\n  },\n  like: {\n    label: \"Contains\",\n    labelForFormat: \"Contains\",\n    reversedOp: \"not_like\",\n    sqlOp: \"LIKE\",\n    spelOp: \".contains\",\n    spelOps: [\"matches\", \".contains\"],\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$regex\", v => (typeof v == \"string\" ? escapeRegExp(v) : undefined), false),\n    //jsonLogic: (field, op, val) => ({ \"in\": [val, field] }),\n    jsonLogic: \"in\",\n    _jsonLogicIsRevArgs: true,\n    valueSources: [\"value\"],\n    elasticSearchQueryType: \"regexp\",\n  },\n  not_like: {\n    isNotOp: true,\n    label: \"Not contains\",\n    reversedOp: \"like\",\n    labelForFormat: \"Not Contains\",\n    sqlOp: \"NOT LIKE\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$regex\", v => (typeof v == \"string\" ? escapeRegExp(v) : undefined), true),\n    valueSources: [\"value\"],\n  },\n  starts_with: {\n    label: \"Starts with\",\n    labelForFormat: \"Starts with\",\n    sqlOp: \"LIKE\",\n    spelOp: \".startsWith\",\n    spelOps: [\"matches\", \".startsWith\"],\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$regex\", v => (typeof v == \"string\" ? \"^\" + escapeRegExp(v) : undefined), false),\n    jsonLogic: undefined, // not supported\n    valueSources: [\"value\"],\n  },\n  ends_with: {\n    label: \"Ends with\",\n    labelForFormat: \"Ends with\",\n    sqlOp: \"LIKE\",\n    spelOp: \".endsWith\",\n    spelOps: [\"matches\", \".endsWith\"],\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$regex\", v => (typeof v == \"string\" ? escapeRegExp(v) + \"$\" : undefined), false),\n    jsonLogic: undefined, // not supported\n    valueSources: [\"value\"],\n  },\n  between: {\n    label: \"Between\",\n    labelForFormat: \"BETWEEN\",\n    sqlOp: \"BETWEEN\",\n    cardinality: 2,\n    formatOp: (field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) => {\n      let valFrom = values.first();\n      let valTo = values.get(1);\n      if (isForDisplay)\n        return `${field} BETWEEN ${valFrom} AND ${valTo}`;\n      else\n        return `${field} >= ${valFrom} && ${field} <= ${valTo}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values[0];\n      const valTo = values[1];\n      return `${field} >= ${valFrom} && ${field} <= ${valTo}`;\n    },\n    mongoFormatOp: mongoFormatOp2.bind(null, [\"$gte\", \"$lte\"], false),\n    valueLabels: [\n      \"Value from\",\n      \"Value to\"\n    ],\n    textSeparators: [\n      null,\n      \"and\"\n    ],\n    reversedOp: \"not_between\",\n    jsonLogic: \"<=\",\n    validateValues: (values) => {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1] ? null : \"Invalid range\";\n      }\n      return null;\n    },\n    elasticSearchQueryType: function elasticSearchQueryType(type) {\n      return type === \"time\" ? \"filter\" : \"range\";\n    },\n  },\n  not_between: {\n    isNotOp: true,\n    label: \"Not between\",\n    labelForFormat: \"NOT BETWEEN\",\n    sqlOp: \"NOT BETWEEN\",\n    cardinality: 2,\n    formatOp: (field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) => {\n      let valFrom = values.first();\n      let valTo = values.get(1);\n      if (isForDisplay)\n        return `${field} NOT BETWEEN ${valFrom} AND ${valTo}`;\n      else\n        return `(${field} < ${valFrom} || ${field} > ${valTo})`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values[0];\n      const valTo = values[1];\n      return `(${field} < ${valFrom} || ${field} > ${valTo})`;\n    },\n    mongoFormatOp: mongoFormatOp2.bind(null, [\"$gte\", \"$lte\"], true),\n    valueLabels: [\n      \"Value from\",\n      \"Value to\"\n    ],\n    textSeparators: [\n      null,\n      \"and\"\n    ],\n    reversedOp: \"between\",\n    validateValues: (values) => {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1] ? null : \"Invalid range\";\n      }\n      return null;\n    },\n  },\n  is_empty: {\n    label: \"Is empty\",\n    labelForFormat: \"IS EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_not_empty\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS EMPTY` : `!${field}`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const empty = sqlEmptyValue(fieldDef);\n      return `COALESCE(${field}, ${empty}) = ${empty}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      //tip: is empty or null\n      return `${field} <= ''`;\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$in\", (v, fieldDef) => [mongoEmptyValue(fieldDef), null], false),\n    jsonLogic: \"!\",\n  },\n  is_not_empty: {\n    isNotOp: true,\n    label: \"Is not empty\",\n    labelForFormat: \"IS NOT EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_empty\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NOT EMPTY` : `!!${field}`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const empty = sqlEmptyValue(fieldDef);\n      return `COALESCE(${field}, ${empty}) <> ${empty}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      //tip: is not empty and not null\n      return `${field} > ''`;\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$nin\", (v, fieldDef) => [mongoEmptyValue(fieldDef), null], false),\n    jsonLogic: \"!!\",\n    elasticSearchQueryType: \"exists\",\n  },\n  is_null: {\n    label: \"Is null\",\n    labelForFormat: \"IS NULL\",\n    sqlOp: \"IS NULL\",\n    cardinality: 0,\n    reversedOp: \"is_not_null\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NULL` : `!${field}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      return `${field} == null`;\n    },\n    // check if value is null OR not exists\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", v => null, false),\n    jsonLogic: \"==\",\n  },\n  is_not_null: {\n    label: \"Is not null\",\n    labelForFormat: \"IS NOT NULL\",\n    sqlOp: \"IS NOT NULL\",\n    cardinality: 0,\n    reversedOp: \"is_null\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NOT NULL` : `!!${field}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      return `${field} != null`;\n    },\n    // check if value exists and is not null\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$ne\", v => null, false),\n    jsonLogic: \"!=\",\n    elasticSearchQueryType: \"exists\",\n  },\n  select_equals: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\", // enum/set\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const opStr = isForDisplay ? \"=\" : \"==\";\n      return `${field} ${opStr} ${value}`;\n    },\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", v => v, false),\n    reversedOp: \"select_not_equals\",\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\",\n  },\n  select_not_equals: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\", // enum/set\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} != ${value}`;\n    },\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$ne\", v => v, false),\n    reversedOp: \"select_equals\",\n    jsonLogic: \"!=\",\n  },\n  select_any_in: {\n    label: \"Any in\",\n    labelForFormat: \"IN\",\n    sqlOp: \"IN\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} IN (${values.join(\", \")})`;\n      else\n        return `${field} IN (${values})`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\") {\n        return `${field} IN (${values.join(\", \")})`;\n      } else return undefined; // not supported\n    },\n    spelOp: \"$contains\", // tip: $ means first arg is object\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$in\", v => v, false),\n    reversedOp: \"select_not_any_in\",\n    jsonLogic: \"in\",\n    elasticSearchQueryType: \"term\",\n  },\n  select_not_any_in: {\n    isNotOp: true,\n    label: \"Not in\",\n    labelForFormat: \"NOT IN\",\n    sqlOp: \"NOT IN\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} NOT IN (${values.join(\", \")})`;\n      else\n        return `${field} NOT IN (${values})`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\") {\n        return `${field} NOT IN (${values.join(\", \")})`;\n      } else return undefined; // not supported\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$nin\", v => v, false),\n    reversedOp: \"select_any_in\",\n  },\n  // it's not \"contains all\", but \"contains any\" operator\n  multiselect_contains: {\n    label: \"Contains\",\n    labelForFormat: \"CONTAINS\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} CONTAINS [${values.join(\", \")}]`;\n      else\n        return `${field} CONTAINS ${values}`;\n    },\n    reversedOp: \"multiselect_not_contains\",\n    jsonLogic2: \"some-in\",\n    jsonLogic: (field, op, vals) => ({\n      \"some\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]\n    }),\n    //spelOp: \".containsAll\",\n    spelOp: \"CollectionUtils.containsAny()\",\n    elasticSearchQueryType: \"term\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$in\", v => v, false),\n  },\n  multiselect_not_contains: {\n    isNotOp: true,\n    label: \"Not contains\",\n    labelForFormat: \"NOT CONTAINS\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} NOT CONTAINS [${values.join(\", \")}]`;\n      else\n        return `${field} NOT CONTAINS ${values}`;\n    },\n    reversedOp: \"multiselect_contains\"\n  },\n  multiselect_equals: {\n    label: \"Equals\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const opStr = isForDisplay ? \"=\" : \"==\";\n      if (valueSrc == \"value\")\n        return `${field} ${opStr} [${values.join(\", \")}]`;\n      else\n        return `${field} ${opStr} ${values}`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\")\n      // set\n        return `${field} = '${values.map(v => SqlString.trim(v)).join(\",\")}'`;\n      else\n        return undefined; //not supported\n    },\n    spelOp: \".equals\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", v => v, false),\n    reversedOp: \"multiselect_not_equals\",\n    jsonLogic2: \"all-in\",\n    jsonLogic: (field, op, vals) => ({\n      // it's not \"equals\", but \"includes\" operator - just for example\n      \"all\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]\n    }),\n    elasticSearchQueryType: \"term\",\n  },\n  multiselect_not_equals: {\n    isNotOp: true,\n    label: \"Not equals\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} != [${values.join(\", \")}]`;\n      else\n        return `${field} != ${values}`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\")\n      // set\n        return `${field} != '${values.map(v => SqlString.trim(v)).join(\",\")}'`;\n      else\n        return undefined; //not supported\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$ne\", v => v, false),\n    reversedOp: \"multiselect_equals\",\n  },\n  proximity: {\n    label: \"Proximity search\",\n    cardinality: 2,\n    valueLabels: [\n      { label: \"Word 1\", placeholder: \"Enter first word\" },\n      { label: \"Word 2\", placeholder: \"Enter second word\" },\n    ],\n    textSeparators: [\n      //'Word 1',\n      //'Word 2'\n    ],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const val1 = values.first();\n      const val2 = values.get(1);\n      const prox = operatorOptions.get(\"proximity\");\n      return `${field} ${val1} NEAR/${prox} ${val2}`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const val1 = values.first();\n      const val2 = values.get(1);\n      const aVal1 = SqlString.trim(val1);\n      const aVal2 = SqlString.trim(val2);\n      const prox = operatorOptions.get(\"proximity\");\n      return `CONTAINS(${field}, 'NEAR((${aVal1}, ${aVal2}), ${prox})')`;\n    },\n    mongoFormatOp: undefined, // not supported\n    jsonLogic: undefined, // not supported\n    options: {\n      optionLabel: \"Near\", // label on top of \"near\" selectbox (for config.settings.showLabels==true)\n      optionTextBefore: \"Near\", // label before \"near\" selectbox (for config.settings.showLabels==false)\n      optionPlaceholder: \"Select words between\", // placeholder for \"near\" selectbox\n      factory: (props) => <ProximityOperator {...props} />,\n      minProximity: 2,\n      maxProximity: 10,\n      defaults: {\n        proximity: 2\n      },\n    },\n  },\n  some: {\n    label: \"Some\",\n    labelForFormat: \"SOME\",\n    cardinality: 0,\n    jsonLogic: \"some\",\n    spelFormatOp: (filteredSize) => `${filteredSize} > 0`,\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$gt\", v => 0, false),\n  },\n  all: {\n    label: \"All\",\n    labelForFormat: \"ALL\",\n    cardinality: 0,\n    jsonLogic: \"all\",\n    spelFormatOp: (filteredSize, op, fullSize) => `${filteredSize} == ${fullSize}`,\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", v => v, false),\n  },\n  none: {\n    label: \"None\",\n    labelForFormat: \"NONE\",\n    cardinality: 0,\n    jsonLogic: \"none\",\n    spelFormatOp: (filteredSize) => `${filteredSize} == 0`,\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", v => 0, false),\n  }\n};\n\n\n//----------------------------  widgets\n\nexport const stringifyForDisplay = (v) => (v == null ? \"NULL\" : v.toString());\n\nconst widgets = {\n  text: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"String\",\n    valuePlaceholder: \"Enter string\",\n    factory: (props) => <VanillaTextWidget {...props} />,\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      return isForDisplay ? stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    spelFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      if (opDef.spelOp == \"matches\" && op != \"regex\") {\n        let regex;\n        if (op == \"starts_with\") {\n          regex = `(?s)^${escapeRegExp(val)}.*`;\n        } else if (op == \"ends_with\") {\n          regex = `(?s).*${escapeRegExp(val)}$`;\n        } else { // op == 'like'\n          regex = `(?s).*${escapeRegExp(val)}.*`; //tip: can use (?sui) for case-insensitive\n        }\n        return spelEscape(regex);\n      } else {\n        return spelEscape(val);\n      }\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\");\n      } else {\n        return SqlString.escape(val);\n      }\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  textarea: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Text\",\n    valuePlaceholder: \"Enter text\",\n    factory: (props) => <VanillaTextAreaWidget {...props} />,\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      return isForDisplay ? stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\");\n      } else {\n        return SqlString.escape(val);\n      }\n    },\n    spelFormatValue: (val) => spelEscape(val),\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n    fullWidth: true,\n  },\n  number: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    factory: (props) => <VanillaNumberWidget {...props} />,\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number\",\n    valueLabels: [\n      { label: \"Number from\", placeholder: \"Enter number from\" },\n      { label: \"Number to\", placeholder: \"Enter number to\" },\n    ],\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      return isForDisplay ? stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return SqlString.escape(val);\n    },\n    spelFormatValue: (val, fieldDef, wgtDef) => {\n      const isFloat = wgtDef.step && !Number.isInteger(wgtDef.step);\n      return spelEscape(val, isFloat);\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  slider: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    factory: (props) => <VanillaSliderWidget {...props} />,\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number or move slider\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      return isForDisplay ? stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return SqlString.escape(val);\n    },\n    spelFormatValue: (val) => spelEscape(val),\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  select: {\n    type: \"select\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    factory: (props) => <VanillaSelectWidget {...props} />,\n    valueLabel: \"Value\",\n    valuePlaceholder: \"Select value\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      let valLabel = getTitleInListValues(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, val);\n      return isForDisplay ? stringifyForDisplay(valLabel) : JSON.stringify(val);\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return SqlString.escape(val);\n    },\n    spelFormatValue: (val) => spelEscape(val),\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  multiselect: {\n    type: \"multiselect\",\n    jsType: \"array\",\n    valueSrc: \"value\",\n    factory: (props) => <VanillaMultiSelectWidget {...props} />,\n    valueLabel: \"Values\",\n    valuePlaceholder: \"Select values\",\n    formatValue: (vals, fieldDef, wgtDef, isForDisplay) => {\n      let valsLabels = vals.map(v => getTitleInListValues(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, v));\n      return isForDisplay ? valsLabels.map(stringifyForDisplay) : vals.map(JSON.stringify);\n    },\n    sqlFormatValue: (vals, fieldDef, wgtDef, op, opDef) => {\n      return vals.map(v => SqlString.escape(v));\n    },\n    spelFormatValue: (vals, fieldDef, wgtDef, op, opDef) => {\n      const isCallable = opDef.spelOp && opDef.spelOp[0] == \"$\";\n      let res = spelEscape(vals); // inline list\n      if (isCallable) {\n        // `{1,2}.contains(1)` NOT works\n        // `{1,2}.?[true].contains(1)` works\n        res = spelFixList(res);\n      }\n      return res;\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  date: {\n    type: \"date\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    factory: (props) => <VanillaDateWidget {...props} />,\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD\",\n    useKeyboard: true,\n    valueLabel: \"Date\",\n    valuePlaceholder: \"Enter date\",\n    valueLabels: [\n      { label: \"Date from\", placeholder: \"Enter date from\" },\n      { label: \"Date to\", placeholder: \"Enter date to\" },\n    ],\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return SqlString.escape(dateVal.format(\"YYYY-MM-DD\"));\n    },\n    spelFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return `new java.text.SimpleDateFormat('yyyy-MM-dd').parse('${dateVal.format(\"YYYY-MM-DD\")}')`;\n    },\n    jsonLogic: (val, fieldDef, wgtDef) => moment(val, wgtDef.valueFormat).toDate(),\n    toJS: (val, fieldSettings) => {\n      const dateVal = moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: (val, fieldDef, wgtDef) => {\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  time: {\n    type: \"time\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    factory: (props) => <VanillaTimeWidget {...props} />,\n    timeFormat: \"HH:mm\",\n    valueFormat: \"HH:mm:ss\",\n    use12Hours: false,\n    useKeyboard: true,\n    valueLabel: \"Time\",\n    valuePlaceholder: \"Enter time\",\n    valueLabels: [\n      { label: \"Time from\", placeholder: \"Enter time from\" },\n      { label: \"Time to\", placeholder: \"Enter time to\" },\n    ],\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return SqlString.escape(dateVal.format(\"HH:mm:ss\"));\n    },\n    spelFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return `T(java.time.LocalTime).parse('${dateVal.format(\"HH:mm:ss\")}')`;\n      //return `new java.text.SimpleDateFormat('HH:mm:ss').parse('${dateVal.format(\"HH:mm:ss\")}')`;\n    },\n    jsonLogic: (val, fieldDef, wgtDef) => {\n      // return seconds of day\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    toJS: (val, fieldSettings) => {\n      // return seconds of day\n      const dateVal = moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\") : undefined;\n    },\n    mongoFormatValue: (val, fieldDef, wgtDef) => {\n      // return seconds of day\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    elasticSearchFormatValue: function elasticSearchFormatValue(queryType, value, operator, fieldName) {\n      return {\n        script: {\n          script: {\n            source: \"doc[\".concat(fieldName, \"][0].getHour() >== params.min && doc[\").concat(fieldName, \"][0].getHour() <== params.max\"),\n            params: {\n              min: value[0],\n              max: value[1]\n            }\n          }\n        }\n      };\n    },\n  },\n  datetime: {\n    type: \"datetime\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    factory: (props) => <VanillaDateTimeWidget {...props} />,\n    timeFormat: \"HH:mm\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD HH:mm:ss\",\n    use12Hours: false,\n    useKeyboard: true,\n    valueLabel: \"Datetime\",\n    valuePlaceholder: \"Enter datetime\",\n    valueLabels: [\n      { label: \"Datetime from\", placeholder: \"Enter datetime from\" },\n      { label: \"Datetime to\", placeholder: \"Enter datetime to\" },\n    ],\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat + \" \" + wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return SqlString.escape(dateVal.toDate());\n    },\n    spelFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return `new java.text.SimpleDateFormat('yyyy-MM-dd HH:mm:ss').parse('${dateVal.format(\"YYYY-MM-DD HH:mm:ss\")}')`;\n    },\n    jsonLogic: (val, fieldDef, wgtDef) => moment(val, wgtDef.valueFormat).toDate(),\n    toJS: (val, fieldSettings) => {\n      const dateVal = moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: (val, fieldDef, wgtDef) => {\n      const dateVal = moment(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  boolean: {\n    type: \"boolean\",\n    jsType: \"boolean\",\n    valueSrc: \"value\",\n    factory: (props) => <VanillaBooleanWidget {...props} />,\n    labelYes: \"Yes\",\n    labelNo: \"No\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      return isForDisplay ? (val ? \"Yes\" : \"No\") : JSON.stringify(!!val);\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return SqlString.escape(val);\n    },\n    spelFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return spelEscape(val);\n    },\n    defaultValue: false,\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  field: {\n    valueSrc: \"field\",\n    factory: (props) => <ValueFieldWidget {...props} />,\n    formatValue: (val, fieldDef, wgtDef, isForDisplay, op, opDef, rightFieldDef) => {\n      return isForDisplay ? (rightFieldDef.label || val) : val;\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef, rightFieldDef) => {\n      return val;\n    },\n    spelFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return val;\n    },\n    valueLabel: \"Field to compare\",\n    valuePlaceholder: \"Select field to compare\",\n    customProps: {\n      showSearch: true\n    }\n  },\n  func: {\n    valueSrc: \"func\",\n    factory: (props) => <FuncWidget {...props} />,\n    valueLabel: \"Function\",\n    valuePlaceholder: \"Select function\",\n    customProps: {\n      //showSearch: true\n    }\n  },\n  case_value: {\n    valueSrc: \"value\",\n    type: \"case_value\",\n    spelFormatValue: (val) => {\n      return spelEscape(val === \"\" ? null : val);\n    },\n    spelImportValue: (val) => {\n      return [val.value, []];\n    },\n    factory: ({value, setValue}) =>  \n      <input \n        type=\"text\" \n        value={value || \"\"} \n        onChange={e => setValue(e.target.value)} \n      />\n  }\n};\n\n//----------------------------  types\n\nconst types = {\n  text: {\n    defaultOperator: \"equal\",\n    mainWidget: \"text\",\n    widgets: {\n      text: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"like\",\n          \"not_like\",\n          \"starts_with\",\n          \"ends_with\",\n          \"proximity\",\n          \"is_empty\",\n          \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {},\n        opProps: {},\n      },\n      textarea: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"like\",\n          \"not_like\",\n          \"starts_with\",\n          \"ends_with\",\n          \"is_empty\",\n          \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {},\n        opProps: {},\n      },\n      field: {\n        operators: [\n          //unary ops (like `is_empty`) will be excluded anyway, see getWidgetsForFieldOp()\n          \"equal\",\n          \"not_equal\",\n          \"proximity\", //can exclude if you want\n        ],\n      }\n    },\n  },\n  number: {\n    defaultOperator: \"equal\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n      slider: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\"\n        ],\n      },\n    },\n  },\n  date: {\n    defaultOperator: \"equal\",\n    widgets: {\n      date: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\"\n        ]\n      }\n    },\n  },\n  time: {\n    defaultOperator: \"equal\",\n    widgets: {\n      time: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ]\n      }\n    },\n  },\n  datetime: {\n    defaultOperator: \"equal\",\n    widgets: {\n      datetime: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      }\n    },\n  },\n  select: {\n    mainWidget: \"select\",\n    defaultOperator: \"select_equals\",\n    widgets: {\n      select: {\n        operators: [\n          \"select_equals\",\n          \"select_not_equals\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {\n          customProps: {\n            showSearch: true\n          }\n        },\n      },\n      multiselect: {\n        operators: [\n          \"select_any_in\",\n          \"select_not_any_in\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n    },\n  },\n  multiselect: {\n    defaultOperator: \"multiselect_equals\",\n    widgets: {\n      multiselect: {\n        operators: [\n          \"multiselect_contains\",\n          \"multiselect_not_contains\",\n          \"multiselect_equals\",\n          \"multiselect_not_equals\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ]\n      }\n    },\n  },\n  boolean: {\n    defaultOperator: \"equal\",\n    widgets: {\n      boolean: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {\n          //you can enable this if you don't use fields as value sources\n          // hideOperator: true,\n          // operatorInlineLabel: \"is\",\n        }\n      },\n      field: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n        ],\n      }\n    },\n  },\n  \"!group\": {\n    defaultOperator: \"some\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        widgetProps: {\n          min: 0\n        },\n        operators: [\n          // w/o operand\n          \"some\",\n          \"all\",\n          \"none\",\n\n          // w/ operand - count\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n        ],\n        opProps: {\n          equal: {\n            label: \"Count ==\"\n          },\n          not_equal: {\n            label: \"Count !=\"\n          },\n          less: {\n            label: \"Count <\"\n          },\n          less_or_equal: {\n            label: \"Count <=\"\n          },\n          greater: {\n            label: \"Count >\"\n          },\n          greater_or_equal: {\n            label: \"Count >=\"\n          },\n          between: {\n            label: \"Count between\"\n          },\n          not_between: {\n            label: \"Count not between\"\n          }\n        }\n      }\n    }\n  },\n  \"case_value\": {\n    mainWidget: \"case_value\",\n    widgets: {\n      case_value: {}\n    }\n  },\n};\n\n//----------------------------  settings\n\nconst settings = {\n  ...defaultSettings,\n\n  formatField: (field, parts, label2, fieldDefinition, config, isForDisplay) => {\n    if (isForDisplay)\n      return label2;\n    else\n      return field;\n  },\n  formatSpelField: (field, parentField, parts, partsExt, fieldDefinition, config) => {\n    let fieldName = partsExt.map(({key, parent}, ind) => {\n      if (ind == 0) {\n        if (parent == \"[map]\")\n          return `#this[${spelEscape(key)}]`;\n        else if (parent == \"[class]\")\n          return key;\n        else\n          return key;\n      } else {\n        if (parent == \"map\" || parent == \"[map]\")\n          return `[${spelEscape(key)}]`;\n        else if (parent == \"class\" || parent == \"[class]\")\n          return `.${key}`;\n        else\n          return `.${key}`;\n      }\n    }).join(\"\");\n    if (fieldDefinition.isSpelVariable) {\n      fieldName = \"#\" + fieldName;\n    }\n    return fieldName;\n  },\n  sqlFormatReverse: (q) => {\n    if (q == undefined) return undefined;\n    return \"NOT(\" + q + \")\";\n  },\n  spelFormatReverse: (q) => {\n    if (q == undefined) return undefined;\n    return \"!(\" + q + \")\";\n  },\n  formatReverse: (q, operator, reversedOp, operatorDefinition, revOperatorDefinition, isForDisplay) => {\n    if (q == undefined) return undefined;\n    if (isForDisplay)\n      return \"NOT (\" + q + \")\";\n    else\n      return \"!(\" + q + \")\";\n  },\n  formatAggr: (whereStr, aggrField, operator, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay, aggrFieldDef) => {\n    const {labelForFormat, cardinality} = opDef;\n    if (cardinality == 0) {\n      const cond = whereStr ? ` HAVE ${whereStr}` : \"\";\n      return `${labelForFormat} OF ${aggrField}${cond}`;\n    } else if (cardinality == undefined || cardinality == 1) {\n      const cond = whereStr ? ` WHERE ${whereStr}` : \"\";\n      return `COUNT OF ${aggrField}${cond} ${labelForFormat} ${value}`;\n    } else if (cardinality == 2) {\n      const cond = whereStr ? ` WHERE ${whereStr}` : \"\";\n      let valFrom = value.first();\n      let valTo = value.get(1);\n      return `COUNT OF ${aggrField}${cond} ${labelForFormat} ${valFrom} AND ${valTo}`;\n    }\n  },\n  canCompareFieldWithField: (leftField, leftFieldConfig, rightField, rightFieldConfig) => {\n    //for type == 'select'/'multiselect' you can check listValues\n    return true;\n  },\n\n  // enable compare fields\n  valueSourcesInfo: {\n    value: {\n      label: \"Value\"\n    },\n    field: {\n      label: \"Field\",\n      widget: \"field\",\n    },\n    func: {\n      label: \"Function\",\n      widget: \"func\",\n    }\n  },\n  customFieldSelectProps: {\n    showSearch: true\n  },\n\n  defaultSliderWidth: \"200px\",\n  defaultSelectWidth: \"200px\",\n  defaultSearchWidth: \"100px\",\n  defaultMaxRows: 5,\n};\n\n//----------------------------\n\nexport default {\n  conjunctions,\n  operators,\n  widgets,\n  types,\n  settings,\n};\n","import * as Widgets from \"../components/widgets\";\nimport React from \"react\";\nconst {\n  VanillaFieldSelect,\n  VanillaConjs,\n  VanillaButton,\n  VanillaButtonGroup,\n  VanillaProvider,\n  VanillaValueSources,\n  vanillaConfirm,\n  VanillaSwitch,\n} = Widgets;\n\nexport const settings = {\n  formatField: (field, parts, label2, fieldDefinition, config, isForDisplay) => {\n    if (isForDisplay)\n      return label2;\n    else\n      return field;\n  },\n\n  renderField: (props) => <VanillaFieldSelect {...props} />,\n  renderOperator: (props) => <VanillaFieldSelect {...props} />,\n  renderFunc: (props) => <VanillaFieldSelect {...props} />,\n  renderConjs: (props) => <VanillaConjs {...props} />,\n  renderSwitch: (props) => <VanillaSwitch {...props} />,\n  renderButton: (props) => <VanillaButton {...props} />,\n  renderButtonGroup: (props) => <VanillaButtonGroup {...props} />,\n  renderProvider: (props) => <VanillaProvider {...props} />,\n  renderValueSources: (props) => <VanillaValueSources {...props} />,\n  renderConfirm: vanillaConfirm,\n  renderSwitchPrefix: () => <>{\"Conditions\"}</>,\n\n  valueSourcesInfo: {\n    value: {},\n  },\n  fieldSeparator: \".\",\n  fieldSeparatorDisplay: \".\",\n  renderSize: \"small\",\n  maxLabelsLength: 100,\n  canReorder: true,\n  canRegroup: true,\n  showLock: false,\n  canDeleteLocked: false,\n  showNot: true,\n  canLeaveEmptyGroup: true,\n  shouldCreateEmptyGroup: false,\n  forceShowConj: false,\n  canShortMongoQuery: true,\n  removeEmptyGroupsOnLoad: true,\n  removeIncompleteRulesOnLoad: true,\n  removeInvalidMultiSelectValuesOnLoad: true,\n  groupActionsPosition: \"topRight\", // oneOf [topLeft, topCenter, topRight, bottomLeft, bottomCenter, bottomRight]\n  setOpOnChangeField: [\"keep\", \"default\"], // 'default' (default if present), 'keep' (keep prev from last field), 'first', 'none'\n  groupOperators: [\"some\", \"all\", \"none\"],\n\n  convertableWidgets: {\n    \"number\": [\"slider\", \"rangeslider\"],\n    \"slider\": [\"number\", \"rangeslider\"],\n    \"rangeslider\": [\"number\", \"slider\"],\n    \"text\": [\"textarea\"],\n    \"textarea\": [\"text\"]\n  },\n\n  // localization\n  locale: {\n    moment: \"en\",\n  },\n  valueLabel: \"Value\",\n  valuePlaceholder: \"Value\",\n  fieldLabel: \"Field\",\n  operatorLabel: \"Operator\",\n  funcLabel: \"Function\",\n  fieldPlaceholder: \"Select field\",\n  funcPlaceholder: \"Select function\",\n  operatorPlaceholder: \"Select operator\",\n  lockLabel: \"Lock\",\n  lockedLabel: \"Locked\",\n  deleteLabel: null,\n  addGroupLabel: \"Add group\",\n  addCaseLabel: \"Add condition\",\n  addDefaultCaseLabel: \"Add default condition\",\n  defaultCaseLabel: \"Default:\",\n  addRuleLabel: \"Add rule\",\n  addSubRuleLabel: \"Add sub rule\",\n  delGroupLabel: \"\",\n  notLabel: \"Not\",\n  valueSourcesPopupTitle: \"Select value source\",\n  removeRuleConfirmOptions: null,\n  removeGroupConfirmOptions: null,\n\n  defaultGroupConjunction: \"AND\",\n  jsonLogic: {\n    groupVarKey: \"var\",\n    altVarKey: \"var\",\n    lockedOp: \"locked\"\n  }\n};\n","import React from \"react\";\nimport omit from \"lodash/omit\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Autocomplete, { createFilterOptions } from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\n\nimport useListValuesAutocomplete from \"../../../../hooks/useListValuesAutocomplete\";\n\nconst nonCheckedIcon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\nconst defaultFilterOptions = createFilterOptions();\nconst emptyArray = [];\n\nexport default (props) => {\n  const {\n    allowCustomValues, multiple,\n    value: selectedValue, customProps, readonly, config, groupBy, filterOptionsConfig\n  } = props;\n  const filterOptionsFn = filterOptionsConfig ? createFilterOptions(filterOptionsConfig) : defaultFilterOptions;\n\n  // hook\n  const {\n    open,\n    onOpen,\n    onClose,\n    onChange,\n    onInputChange,\n    inputValue,\n    options,\n    isInitialLoading,\n    isLoading,\n    aPlaceholder,\n    extendOptions,\n    getOptionSelected,\n    getOptionDisabled,\n    getOptionLabel,\n  } = useListValuesAutocomplete(props, {\n    debounceTimeout: 100,\n    multiple\n  });\n\n  // setings\n  const {defaultSelectWidth, defaultSearchWidth} = config.settings;\n  const {width, showCheckboxes, ...rest} = customProps || {};\n  let customInputProps = rest.input || {};\n  const inputWidth = customInputProps.width || defaultSearchWidth;\n  customInputProps = omit(customInputProps, [\"width\"]);\n  const customAutocompleteProps = omit(rest, [\"showSearch\", \"showCheckboxes\"]);\n\n  const fullWidth = true;\n  const minWidth = width || defaultSelectWidth;\n  const style = {\n    width: (multiple ? undefined : minWidth),\n    minWidth: minWidth\n  };\n  const placeholder = !readonly ? aPlaceholder : \"\";\n  const hasValue = selectedValue != null;\n  // should be simple value to prevent re-render!s\n  const value = hasValue ? selectedValue : (multiple ? emptyArray : null);\n  \n  const filterOptions = (options, params) => {\n    const filtered = filterOptionsFn(options, params);\n    const extended = extendOptions(filtered);\n    return extended;\n  };\n\n  // styles\n  const useStyles = makeStyles((theme) => ({\n    // fix too small width\n    input: {\n      minWidth: inputWidth + \" !important\",\n    }\n  }));\n\n  const useStylesChip = makeStyles((theme) => ({\n    // fix height\n    root: {\n      height: \"auto\"\n    },\n    label: {\n      marginTop: \"3px\",\n      marginBottom: \"3px\",\n    }\n  }));\n\n  const classesChip = useStylesChip();\n  const classes = useStyles();\n\n  // render\n  const renderInput = (params) => {\n    return (\n      <TextField \n        {...params} \n        InputProps={{\n          ...params.InputProps,\n          readOnly: readonly,\n          endAdornment: (\n            <React.Fragment>\n              {isLoading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n              {params.InputProps.endAdornment}\n            </React.Fragment>\n          ),\n        }}\n        disabled={readonly}\n        placeholder={placeholder}\n        //onChange={onInputChange}\n        {...customInputProps}\n      />\n    );\n  };\n\n  const renderTags = (value, getTagProps) => value.map((option, index) => {\n    return <Chip\n      key={index}\n      classes={classesChip}\n      label={getOptionLabel(option)}\n      {...getTagProps({ index })}\n    />;\n  });\n\n  const renderOption = (option, { selected }) => {\n    if (option.specialValue) {\n      return <React.Fragment>{option.renderTitle || option.title}</React.Fragment>;\n    } else if (multiple && showCheckboxes != false) {\n      return <React.Fragment>\n        <Checkbox\n          icon={nonCheckedIcon}\n          checkedIcon={checkedIcon}\n          style={{ marginRight: 8 }}\n          checked={selected}\n        />\n        {option.title}\n      </React.Fragment>;\n    } else {\n      return <React.Fragment>{option.renderTitle || option.title}</React.Fragment>;\n    }\n  };\n\n  return (\n    <FormControl fullWidth={fullWidth}>\n      <Autocomplete\n        disableCloseOnSelect={multiple}\n        fullWidth={fullWidth}\n        multiple={multiple}\n        style={style}\n        classes={classes}\n        freeSolo={allowCustomValues}\n        loading={isInitialLoading}\n        open={open}\n        onOpen={onOpen}\n        onClose={onClose}\n        inputValue={inputValue}\n        onInputChange={onInputChange}\n        label={placeholder}\n        onChange={onChange}\n        value={value}\n        getOptionSelected={getOptionSelected}\n        disabled={readonly}\n        readOnly={readonly}\n        options={options}\n        groupBy={groupBy}\n        getOptionLabel={getOptionLabel}\n        getOptionDisabled={getOptionDisabled}\n        renderInput={renderInput}\n        renderTags={renderTags}\n        renderOption={renderOption}\n        filterOptions={filterOptions}\n        {...customAutocompleteProps}\n      ></Autocomplete>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport MaterialAutocomplete from \"../value/MaterialAutocomplete\";\n\nconst itemsToListValues = (items, level = 0) => (\n  items.map(item => {\n    const {items, path, label, disabled, grouplabel} = item;\n    const prefix = \"\\u00A0\\u00A0\".repeat(level);\n    if (items) {\n      return itemsToListValues(items, level+1);\n    } else {\n      return {\n        title: label,\n        renderTitle: prefix+label,\n        value: path,\n        disabled,\n        groupTitle: level > 0 ? prefix+grouplabel : null,\n      };\n    }\n  }).flat(Infinity)\n);\n\nconst filterOptionsConfig = {\n  stringify: (option) => {\n    const keysForFilter = [\"title\", \"value\", \"grouplabel\", \"label\"];\n    const valueForFilter = keysForFilter\n      .map(k => (typeof option[k] == \"string\" ? option[k] : \"\"))\n      .join(\"\\0\");\n    return valueForFilter;\n  }\n};\n\nconst fieldAdapter = ({items, selectedKey, setField, ...rest}) => {\n  const listValues = itemsToListValues(items);\n  const groupBy = (option) => option.groupTitle;\n  const value = selectedKey;\n  const setValue = (value, _asyncValues) => {\n    if (!value) return undefined;\n    return setField(value);\n  };\n\n  return {\n    ...rest,\n    listValues,\n    setValue,\n    groupBy,\n    filterOptionsConfig,\n    allowCustomValues: false,\n    multiple: false,\n    value,\n  };\n};\n\nexport default (props) => {\n  return <MaterialAutocomplete  {...fieldAdapter(props)} />;\n};\n","import React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ExpandMoreSharpIcon from \"@material-ui/icons/ExpandMoreSharp\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(1),\n  },\n}));\n\nexport default ({ valueSources, valueSrc, title, setValueSrc, readonly}) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const classes = useStyles();\n\n\n  const handleOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const toggleOpenClose = (event) => {\n    anchorEl ? handleClose() : handleOpen(event);\n  };\n\n  const handleChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValueSrc(e.target.value);\n    handleClose();\n  };\n\n  const renderOptions = (valueSources) => (\n    valueSources.map(([srcKey, info]) => (\n      <FormControlLabel \n        key={srcKey} \n        value={srcKey} \n        checked={valueSrc == srcKey || !valueSrc && srcKey == \"value\"} \n        control={<Radio />} \n        label={info.label}\n      />\n    ))\n  );\n\n  const open = Boolean(anchorEl);\n\n  return (\n    <div>\n      <IconButton size=\"small\" onClick={toggleOpenClose}>\n        <ExpandMoreSharpIcon />\n      </IconButton>\n    \n      <Popover    \n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"left\",\n        }}\n        onClose={handleClose}\n        classes={{\n          paper: classes.paper,\n        }}\n        disablePortal\n      >\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">{title}</FormLabel>\n          <RadioGroup value={valueSrc || \"value\"} onChange={handleChange}>\n            {renderOptions(valueSources)}\n          </RadioGroup>\n        </FormControl>\n      </Popover>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { ThemeProvider, createTheme } from \"@material-ui/core/styles\";\nimport { ConfirmProvider, useConfirm } from \"material-ui-confirm\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\n\n\n// value widgets\nimport MaterialTextWidget from \"./value/MaterialText\";\nimport MaterialTextAreaWidget from \"./value/MaterialTextArea\";\nimport MaterialDateWidget from \"./value/MaterialDate\";\nimport MaterialDateTimeWidget from \"./value/MaterialDateTime\";\nimport MaterialTimeWidget from \"./value/MaterialTime\";\nimport MaterialSelectWidget from \"./value/MaterialSelect\";\nimport MaterialNumberWidget from \"./value/MaterialNumber\";\nimport MaterialSliderWidget from \"./value/MaterialSlider\";\nimport MaterialRangeWidget from \"./value/MaterialRange\";\nimport MaterialBooleanWidget from \"./value/MaterialBoolean\";\nimport MaterialMultiSelectWidget from \"./value/MaterialMultiSelect\";\nimport MaterialAutocompleteWidget from \"./value/MaterialAutocomplete\";\n\n// field select widgets\nimport MaterialFieldSelect from \"./core/MaterialFieldSelect\";\nimport MaterialFieldAutocomplete from \"./core/MaterialFieldAutocomplete\";\n\n// core components\nimport MaterialButton from \"./core/MaterialButton\";\nimport MaterialButtonGroup from \"./core/MaterialButtonGroup\";\nimport MaterialConjs from \"./core/MaterialConjs\";\nimport MaterialSwitch from \"./core/MaterialSwitch\";\nimport MaterialValueSources from \"./core/MaterialValueSources\";\nimport MaterialConfirm from \"./core/MaterialConfirm\";\n\n// provider\nconst MaterialProvider = ({config, children}) => {\n  const settingsTheme = config.settings.theme || {};\n  const settingsLocale = config.settings.locale || {};\n  const themeConfig = settingsTheme.material;\n  const locale = settingsLocale.material;\n  const useTheme = themeConfig || locale;\n  const theme = useTheme ? createTheme(themeConfig, locale) : null;\n\n  const base = (<div className=\"mui\">{children}</div>);\n  const withProviders = (\n    <MuiPickersUtilsProvider utils={MomentUtils}>\n      <ConfirmProvider>\n        {base}\n      </ConfirmProvider>\n    </MuiPickersUtilsProvider>\n  );\n  const withTheme = theme ? (\n    <ThemeProvider theme={theme}>\n      {withProviders}\n    </ThemeProvider>\n  ) : withProviders;\n\n  return withTheme;\n};\n\n\nexport default {\n  MaterialTextWidget,\n  MaterialTextAreaWidget,\n  MaterialDateWidget,\n  MaterialDateTimeWidget,\n  MaterialTimeWidget,\n  MaterialSelectWidget,\n  MaterialNumberWidget,\n  MaterialSliderWidget,\n  MaterialRangeWidget,\n  MaterialBooleanWidget,\n  MaterialMultiSelectWidget,\n  MaterialAutocompleteWidget,\n\n  MaterialFieldSelect,\n  MaterialFieldAutocomplete,\n\n  MaterialButton,\n  MaterialButtonGroup,\n  MaterialConjs,\n  MaterialSwitch,\n  MaterialValueSources,\n  MaterialConfirm,\n  MaterialUseConfirm: useConfirm,\n\n  MaterialProvider,\n};\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, customProps, maxLength} = props;\n\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n\n  const textValue = value || \"\";\n\n  return (\n    <FormControl>\n      <TextField \n        value={textValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          maxLength: maxLength,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, customProps, maxLength, maxRows, fullWidth} = props;\n  const {defaultMaxRows} = config.settings;\n\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  \n  const textValue = value || \"\";\n\n  return (\n    <FormControl fullWidth={fullWidth}>\n      <TextField \n        fullWidth={fullWidth}\n        maxRows={maxRows || defaultMaxRows}\n        multiline={true}\n        value={textValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          maxLength: maxLength,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport { KeyboardDatePicker, DatePicker } from \"@material-ui/pickers\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, readonly, customProps, dateFormat, valueFormat, placeholder, useKeyboard} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const Picker = useKeyboard ? KeyboardDatePicker : DatePicker;\n\n  return (\n    <FormControl>\n      <Picker\n        readOnly={readonly}\n        disabled={readonly}\n        placeholder={!readonly ? placeholder : \"\"}\n        format={dateFormat}\n        value={value || null}\n        onChange={handleChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};","import React from \"react\";\nimport { DateTimePicker, KeyboardDateTimePicker } from \"@material-ui/pickers\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, use12Hours, readonly, placeholder, dateFormat, timeFormat, valueFormat, customProps, useKeyboard} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const Picker = useKeyboard ? KeyboardDateTimePicker : DateTimePicker;\n  const dateTimeFormat = dateFormat + \" \" + timeFormat;\n  \n  return (\n    <FormControl>\n      <Picker\n        readOnly={readonly}\n        disabled={readonly}\n        ampm={!!use12Hours}\n        placeholder={!readonly ? placeholder : \"\"}\n        format={dateTimeFormat}\n        value={value || null}\n        onChange={handleChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport { TimePicker, KeyboardTimePicker } from \"@material-ui/pickers\";\nimport moment from \"moment\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, use12Hours, readonly, placeholder, timeFormat, valueFormat, customProps, useKeyboard} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const Picker = useKeyboard ? KeyboardTimePicker : TimePicker;\n  const hasSeconds = timeFormat.indexOf(\":ss\") != -1;\n  const timeValue = value ? moment(value, timeFormat) : null;\n\n  return (\n    <FormControl>\n      <Picker\n        readOnly={readonly}\n        disabled={readonly}\n        ampm={!!use12Hours}\n        placeholder={!readonly ? placeholder : \"\"}\n        format={timeFormat}\n        value={timeValue || null}\n        onChange={handleChange}\n        views={hasSeconds ? [\"hours\", \"minutes\", \"seconds\"] : [\"hours\", \"minutes\"]}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {mapListValues} from \"../../../../utils/stuff\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport omit from \"lodash/omit\";\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, placeholder, customProps}) => {\n  const renderOptions = () =>\n    mapListValues(listValues, ({title, value}) => {\n      return <MenuItem key={value} value={value}>{title}</MenuItem>;\n    });\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValue(e.target.value);\n  };\n\n  const renderValue = (selectedValue) => {\n    if (!readonly && selectedValue == null)\n      return placeholder;\n    return getListValueTitle(selectedValue);\n  };\n\n  const getListValueTitle = (selectedValue) => \n    mapListValues(listValues, ({title, value}) => \n      (value === selectedValue ? title : null)\n    )\n      .filter(v => v !== null)\n      .shift();\n  \n  const hasValue = value != null;\n\n  return (\n    <FormControl>\n      <Select\n        autoWidth\n        displayEmpty\n        label={!readonly ? placeholder : \"\"}\n        onChange={onChange}\n        value={hasValue ? value : \"\"}\n        disabled={readonly}\n        readOnly={readonly}\n        renderValue={renderValue}\n        {...omit(customProps, [\"showSearch\", \"input\"])}\n      >\n        {renderOptions()}\n      </Select>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps} = props;\n  \n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n\n  const numberValue = value == undefined ? \"\" : value;\n  \n  return (\n    <FormControl>\n      <TextField \n        type=\"number\"\n        value={numberValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          min: min,\n          max: max,\n          step: step,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Slider from \"@material-ui/core/Slider\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {config, placeholder, customProps, value, setValue, min, max, step, marks, readonly} = props;\n  const {defaultSliderWidth} = config.settings;\n\n  const handleSliderChange = (_e, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleInputChange = (e) => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n\n  const handleInputBlur = () => {\n    // TIP: Fix if typed value out of range in input\n    if (value < min) {\n      setValue(min);\n    } else if (value > max) {\n      setValue(max);\n    }\n  };\n\n\n  const {width, ...rest} =  customProps || {};\n  const customInputProps = rest.input || {};\n  const customSliderProps = rest.slider || rest;\n  \n  // TIP: Can't pass undefined to MUI, cause it means uncontrolled component use.\n  //      For empty value input needs \"\", slider needs null or 0\n  const inputValue = typeof value === \"number\" ? value : \"\";\n  const sliderValue = typeof value === \"number\" ? value : null;\n\n  // marks example: { 0: \"0%\", 100: React.createElement('strong', null, \"100%\") }\n  const muiMarks = marks ? Object.keys(marks).map(v => ({value: v, label: marks[v]})) : false;\n\n\n  const InputCmp = (\n    <TextField \n      type=\"number\"\n      value={inputValue}\n      placeholder={placeholder}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChange}\n      onBlur={handleInputBlur}\n      {...customInputProps}\n    />\n  );\n\n  const SliderCmp = (\n    <Slider \n      value={sliderValue}\n      onChange={handleSliderChange}\n      disabled={readonly}\n      min={min}\n      max={max}\n      step={step}\n      marks={muiMarks}\n      valueLabelDisplay=\"auto\"\n      {...customSliderProps}\n    />\n  );\n\n  const stylesWrapper = {\n    display: \"inline-flex\", \n    alignItems: \"center\"\n  };\n\n  const stylesInputWrapper = {\n    marginLeft: \"5px\",\n  };\n\n  const stylesSliderWrapper = {\n    marginLeft: \"5px\", \n    paddingLeft: \"12px\", \n    marginBottom: muiMarks && \"-16px\", \n    width: width || defaultSliderWidth,\n  };\n\n  return (\n    <FormControl>\n      <div style={stylesWrapper}>\n        <div style={stylesInputWrapper}>\n          {InputCmp}\n        </div>\n        <div style={stylesSliderWrapper}>\n          {SliderCmp}\n        </div>\n      </div>\n    </FormControl>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport Slider from \"@material-ui/core/Slider\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {config, placeholders, customProps, value, setValue, min, max, step, marks, readonly, textSeparators} = props;\n  const {defaultSliderWidth} = config.settings;\n\n  useEffect(() => {\n    const [valueFrom, valueTo] = props.value || [undefined, undefined];\n    if (props.value && (valueFrom == undefined || valueTo == undefined)) {\n      // happens if we changed op from '==' to 'between'\n      // (I know, timeout is dirty hack..)\n      setTimeout(() => {\n        const oneValue = valueFrom || valueTo;\n        const value = [oneValue, oneValue];\n        setValue(value);\n      }, 1);\n    }\n  }, []);\n\n  const handleSliderChange = (_e, newValues) => {\n    setValue(newValues);\n  };\n\n  const handleInputChangeFrom = (e) => {\n    // TIP: need to use props.value instead of value\n    let valueFrom = e.target.value;\n    if (valueFrom === \"\" || valueFrom == null)\n      valueFrom = undefined;\n    else\n      valueFrom = Number(valueFrom);\n    let value = props.value ? [...props.value] : [undefined, undefined];\n    value[0] = valueFrom;\n    setValue(value);\n  };\n\n  const handleInputChangeTo = (e) => {\n    let valueTo = e.target.value;\n    if (valueTo === \"\" || valueTo == null)\n      valueTo = undefined;\n    else\n      valueTo = Number(valueTo);\n    let value = props.value ? [...props.value] : [undefined, undefined];\n    value[1] = valueTo;\n    setValue(value);\n  };\n\n  const handleInputBlur = () => {\n    // TIP: Fix if typed value out of range in inputs\n    if (!value) return;\n    if (value[0] < min) {\n      setValue([min, value[1]]);\n    } else if (value[1] > max) {\n      setValue([value[0], max]);\n    }\n  };\n\n  const {width, ...rest} =  customProps || {};\n  const customInputProps = rest.input || {};\n  const customSliderProps = rest.slider || rest;\n\n  // marks example: { 0: \"0%\", 100: React.createElement('strong', null, \"100%\") }\n  const muiMarks = marks ? Object.keys(marks).map(v => ({value: v, label: marks[v]})) : false;\n\n  // TIP: Can't pass undefined to MUI, cause it means uncontrolled component use.\n  //      For empty value input needs \"\", slider needs null or 0, but null will cause problems with range mode\n  let sliderValue = value ? [...value] : [undefined, undefined];\n  let [valueFrom, valueTo] = sliderValue;\n  if (valueFrom == undefined) {\n    valueFrom = \"\";\n    sliderValue[0] = 0;\n  }\n  if (valueTo == undefined) {\n    valueTo = \"\";\n    sliderValue[1] = 0;\n  }\n  \n\n  const FromInputCmp = (\n    <TextField \n      type=\"number\"\n      value={valueFrom}\n      placeholder={placeholders[0]}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChangeFrom}\n      onBlur={handleInputBlur}\n      {...customInputProps}\n    />\n  );\n\n  const ToInputCmp = (\n    <TextField \n      type=\"number\"\n      value={valueTo}\n      placeholder={placeholders[1]}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChangeTo}\n      onBlur={handleInputBlur}\n      {...customInputProps}\n    />\n  );\n\n  const SliderCmp = (\n    <Slider \n      value={sliderValue}\n      onChange={handleSliderChange}\n      disabled={readonly}\n      min={min}\n      max={max}\n      step={step}\n      marks={muiMarks}\n      valueLabelDisplay=\"auto\"\n      {...customSliderProps}\n    />\n  );\n\n  const stylesWrapper = {\n    display: \"inline-flex\", \n  };\n\n  const stylesInputWrapper = {\n    marginLeft: \"5px\",\n  };\n\n  const stylesSliderWrapper = {\n    marginLeft: \"5px\", \n    paddingLeft: \"12px\", \n    marginBottom: muiMarks && \"-16px\", \n    width: width || defaultSliderWidth,\n  };\n\n  return (\n    <FormControl>\n      <div style={stylesWrapper}>\n        <div style={stylesInputWrapper}>\n          {FromInputCmp}\n        </div>\n        <div className={\"widget--sep\"}>\n          <span>{ textSeparators[1] }</span>\n        </div>\n        <div style={stylesInputWrapper}>\n          {ToInputCmp}\n        </div>\n        <div style={stylesSliderWrapper}>\n          {SliderCmp}\n        </div>\n      </div>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default (props) => {\n  const { customProps, value, setValue, labelYes, labelNo, readonly } = props;\n\n  const onChange = () => {\n    setValue(!value);\n  };\n  \n  return (\n    <FormControl>\n      <Typography component=\"div\">\n        <Grid component=\"label\" container alignItems=\"center\" spacing={0}>\n          <Grid item component=\"span\">{labelNo}</Grid>\n          <Grid item component=\"span\">\n            <Switch\n              checked={!!value}\n              onChange={onChange}\n              disabled={readonly}\n              {...customProps}\n            />\n          </Grid>\n          <Grid item component=\"span\">{labelYes}</Grid>\n        </Grid>\n      </Typography>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport {mapListValues} from \"../../../../utils/stuff\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport omit from \"lodash/omit\";\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, placeholder, customProps}) => {\n  const renderOptions = (selectedValues) => \n    mapListValues(listValues, ({title, value}) => {\n      return (\n        <MenuItem key={value} value={value}>\n          <Checkbox checked={selectedValues.indexOf(value) > -1} />\n          <ListItemText primary={title} />\n        </MenuItem>\n      );\n    });\n\n  const renderValue = (selectedValues) => {\n    if (!readonly && !selectedValues.length)\n      return placeholder;\n    const selectedTitles = mapListValues(listValues, ({title, value}) => (\n      selectedValues.indexOf(value) > -1 ? title : null\n    )).filter(v => v !== null);\n    return selectedTitles.join(\", \");\n  };\n\n  const hasValue = value != null && value.length > 0;\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValue(e.target.value);\n  };\n\n  return (\n    <FormControl>\n      <Select multiple\n        autoWidth\n        displayEmpty\n        label={!readonly ? placeholder : \"\"}\n        onChange={onChange}\n        value={hasValue ? value : []}\n        disabled={readonly}\n        readOnly={readonly}\n        renderValue={renderValue}\n        {...omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])}\n      >\n        {renderOptions(hasValue ? value : [])}\n      </Select>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default ({items, setField, selectedKey, readonly, placeholder}) => {\n  const renderOptions = (fields, level = 0) => (\n    fields.map(field => {\n      const {items, path, label, disabled} = field;\n      const prefix = \"\\u00A0\\u00A0\".repeat(level);\n      if (items) {\n        return [\n          <ListSubheader disabled={disabled} key={path} disableSticky={true}>\n            {prefix && <span>{prefix}</span>}\n            {label}\n          </ListSubheader>,\n          renderOptions(items, level+1),\n        ];\n      } else {\n        return <MenuItem disabled={disabled} key={path} value={path}>\n          {prefix && <span>{prefix}</span>}\n          {label}\n        </MenuItem>;\n      }\n    })\n  );\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setField(e.target.value);\n  };\n\n  const renderValue = (selectedValue) => {\n    if (!readonly && !selectedValue)\n      return placeholder;\n    const findLabel = (fields) => {\n      return fields.map(field => {\n        if(!field.items) return field.path === selectedValue ? field.label : null;\n        return findLabel(field.items);\n      });\n    };\n    return findLabel(items).filter((v) => {\n      if (Array.isArray(v)) {\n        return v.some((value) => value !== null);\n      } else {\n        return v !== null;\n      }\n    }).pop();\n  };\n  \n  const hasValue = selectedKey != null;\n  return (\n    <FormControl>\n      <Select\n        autoWidth\n        displayEmpty\n        label={placeholder}\n        onChange={onChange}\n        value={hasValue ? selectedKey : \"\"}\n        disabled={readonly}\n        renderValue={renderValue}\n      >\n        {renderOptions(items)}\n      </Select>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nexport default ({type, label, onClick, readonly, config}) => {\n  const typeToOnlyIcon = {\n    \"delGroup\": <DeleteIcon />,\n    \"delRuleGroup\": <DeleteIcon />,\n    \"delRule\": <DeleteIcon />,\n    \"addRuleGroup\": <AddIcon />,\n  };\n  const typeToIcon = {\n    \"addRule\": <AddIcon />,\n    \"addGroup\": <AddIcon />,\n    \"addRuleGroupExt\": <AddIcon />,\n  };\n  const typeToColor = {\n    \"addRule\": \"default\",\n    \"addGroup\": \"primary\",\n    \"delGroup\": \"secondary\",\n    \"delRuleGroup\": \"secondary\",\n    \"delRule\": \"secondary\",\n  };\n  if (typeToOnlyIcon[type])\n    return <IconButton size=\"small\" disabled={readonly} onClick={onClick} color={typeToColor[type]}>{typeToOnlyIcon[type]}</IconButton>;\n  else\n    return <Button size=\"small\" disabled={readonly} onClick={onClick} color={typeToColor[type]} startIcon={typeToIcon[type]}>{label}</Button>;\n};\n","import React from \"react\";\n\nexport default ({children, config}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default ({id, not, setNot, conjunctionOptions, setConjunction, disabled, readonly, config, showNot, notLabel}) => {\n  //TIP: disabled=true if only 1 rule; readonly=true if immutable mode\n  const conjsCount = Object.keys(conjunctionOptions).length;\n  const lessThenTwo = disabled;\n  const {forceShowConj} = config.settings;\n  const showConj = forceShowConj || conjsCount > 1 && !lessThenTwo;\n\n  const renderOptions = () => \n    Object.keys(conjunctionOptions).map(key => {\n      const {id, name, label, checked} = conjunctionOptions[key];\n      const postfix = setConjunction.isDummyFn ? \"__dummy\" : \"\";\n      if ((readonly || disabled) && !checked)\n        return null;\n      return (\n        <Button \n          key={id+postfix} \n          id={id+postfix} \n          color={checked ? \"primary\" : \"default\"} \n          value={key} \n          onClick={onClick.bind(null, key)} \n          disabled={readonly || disabled}\n        >\n          {label}\n        </Button>\n      );\n    });\n  \n  const renderNot = () => {\n    if (readonly && !not)\n      return null;\n    return (\n      <Button \n        key={id}\n        id={id + \"__not\"}\n        color={not ? \"secondary\" : \"default\"} \n        onClick={onNotClick.bind(null, !not)} \n        disabled={readonly}\n      >\n        {notLabel || \"NOT\"}\n      </Button>\n    );\n  };\n\n  const onClick = value => setConjunction(value);\n  const onNotClick = checked => setNot(checked);\n\n  return (\n    <FormControl>\n      <ButtonGroup \n        disableElevation \n        variant=\"contained\" \n        size=\"small\" \n        disabled={readonly}\n      >\n        {showNot && renderNot()}\n        {showConj && renderOptions()}\n      </ButtonGroup>\n    </FormControl>\n  );\n  \n};\n","import React from \"react\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport LockIcon from \"@material-ui/icons/Lock\";\n\nexport default ({value, setValue, label, checkedLabel, hideLabel, id, config, type}) => {\n  const {renderSize} = config.settings;\n  const onChange = e => setValue(e.target.checked);\n  const onClick = () => setValue(!value);\n  const postfix = type;\n  const showLabel = value ? (checkedLabel || label) : label;\n  const icon = value ? <LockIcon /> : <LockOpenIcon />;\n\n  if (type == \"lock\") {\n    if (hideLabel) {\n      return <IconButton\n        key={id+postfix}\n        onClick={onClick}\n        size={\"small\"}\n      >{icon}</IconButton>;\n    } else {\n      return <Button\n        key={id+postfix}\n        onClick={onClick}\n        size={\"small\"}\n        startIcon={icon}\n      >{showLabel}</Button>;\n    }\n  }\n\n  return <FormControlLabel \n    control={<Switch\n      checked={!!value}\n      size={\"small\"}\n      onChange={onChange}\n    />} \n    label={showLabel} \n  />;\n};\n","export default ({onOk, okText, cancelText, title, confirmFn}) => {\n  confirmFn({ \n    description: title || \"Are you sure?\",\n    title: null,\n    confirmationText: okText || \"Ok\",\n    cancellationText: cancelText || \"Cancel\",\n  })\n    .then(onOk)\n    .catch(() => {});\n};\n","import MaterialWidgets from \"../../components/widgets/material\";\nimport BasicConfig, {stringifyForDisplay} from \"../basic\";\nimport React from \"react\";\nimport {SqlString, spelEscape} from \"../../utils/export\";\n\n\nconst {\n  MaterialBooleanWidget,\n  MaterialTextWidget,\n  MaterialTextAreaWidget,\n  MaterialDateWidget,\n  MaterialTimeWidget,\n  MaterialDateTimeWidget,\n  MaterialMultiSelectWidget,\n  MaterialSelectWidget,\n  MaterialNumberWidget,\n  MaterialSliderWidget,\n  MaterialRangeWidget,\n  MaterialAutocompleteWidget,\n\n  MaterialFieldSelect,\n  MaterialFieldAutocomplete,\n  MaterialConjs,\n  MaterialSwitch,\n  MaterialButton,\n  MaterialButtonGroup,\n  MaterialValueSources,\n\n  MaterialProvider,\n  MaterialConfirm,\n  MaterialUseConfirm,\n} = MaterialWidgets;\n\n\nconst settings = {\n  ...BasicConfig.settings,\n\n  renderField: (props) => props?.customProps?.showSearch \n    ? <MaterialFieldAutocomplete {...props} /> \n    : <MaterialFieldSelect {...props} />,\n  renderOperator: (props) => <MaterialFieldSelect {...props} />,\n  renderFunc: (props) => <MaterialFieldSelect {...props} />,\n  renderConjs: (props) => <MaterialConjs {...props} />,\n  renderSwitch: (props) => <MaterialSwitch {...props} />,\n  renderButton: (props) => <MaterialButton {...props} />,\n  renderButtonGroup: (props) => <MaterialButtonGroup {...props} />,\n  renderValueSources: (props) => <MaterialValueSources {...props} />,\n  renderProvider: (props) => <MaterialProvider {...props} />,\n  renderConfirm: MaterialConfirm,\n  useConfirm: MaterialUseConfirm,\n};\n\n\nconst widgets = {\n  ...BasicConfig.widgets,\n  text: {\n    ...BasicConfig.widgets.text,\n    factory: (props) => <MaterialTextWidget {...props} />,\n  },\n  textarea: {\n    ...BasicConfig.widgets.textarea,\n    factory: (props) => <MaterialTextAreaWidget {...props} />,\n  },\n  number: {\n    ...BasicConfig.widgets.number,\n    factory: (props) => <MaterialNumberWidget {...props} />,\n  },\n  multiselect: {\n    ...BasicConfig.widgets.multiselect,\n    factory: (props) => {\n      return (props.asyncFetch || props.showSearch) \n        ? <MaterialAutocompleteWidget multiple {...props} /> \n        : <MaterialMultiSelectWidget {...props} />;\n    },\n  },\n  select: {\n    ...BasicConfig.widgets.select,\n    factory: (props) => {\n      return (props.asyncFetch || props.showSearch) \n        ? <MaterialAutocompleteWidget {...props} /> \n        : <MaterialSelectWidget {...props} />;\n    },\n  },\n  slider: {\n    ...BasicConfig.widgets.slider,\n    factory: (props) => <MaterialSliderWidget {...props} />,\n  },\n  boolean: {\n    ...BasicConfig.widgets.boolean,\n    factory: (props) => <MaterialBooleanWidget {...props} />,\n  },\n  date: {\n    ...BasicConfig.widgets.date,\n    factory: (props) => <MaterialDateWidget {...props} />,\n  },\n  time: {\n    ...BasicConfig.widgets.time,\n    factory: (props) => <MaterialTimeWidget {...props} />,\n  },\n  datetime: {\n    ...BasicConfig.widgets.datetime,\n    factory: (props) => <MaterialDateTimeWidget {...props} />,\n  },\n\n  rangeslider: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    factory: (props) => <MaterialRangeWidget {...props} />,\n    valueLabel: \"Range\",\n    valuePlaceholder: \"Select range\",\n    valueLabels: [\n      { label: \"Number from\", placeholder: \"Enter number from\" },\n      { label: \"Number to\", placeholder: \"Enter number to\" },\n    ],\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      return isForDisplay ? stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return SqlString.escape(val);\n    },\n    spelFormatValue: (val) => spelEscape(val),\n    singleWidget: \"slider\",\n    toJS: (val, fieldSettings) => (val),\n  },\n};\n\n\nconst types = {\n  ...BasicConfig.types,\n  number: {\n    ...BasicConfig.types.number,\n    widgets: {\n      ...BasicConfig.types.number.widgets,\n      rangeslider: {\n        opProps: {\n          between: {\n            isSpecialRange: true,\n          },\n          not_between: {\n            isSpecialRange: true,\n          }\n        },\n        operators: [\n          \"between\",\n          \"not_between\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      }\n    },\n  },\n};\n\nexport default {\n  ...BasicConfig,\n  types,\n  widgets,\n  settings,\n};","import React from \"react\";\nimport debounce from \"lodash/debounce\";\nimport { mapListValues, listValuesToArray } from \"../utils/stuff\";\nimport { mergeListValues, listValueToOption, getListValue } from \"../utils/autocomplete\";\n\n\nconst useListValuesAutocomplete = ({\n  asyncFetch, useLoadMore, useAsyncSearch, forceAsyncSearch,\n  asyncListValues: selectedAsyncListValues,\n  listValues: staticListValues, allowCustomValues,\n  value: selectedValue, setValue, placeholder\n}, {\n  debounceTimeout,\n  multiple\n}) => {\n  const knownSpecialValues = [\"LOAD_MORE\", \"LOADING_MORE\"];\n  const loadMoreTitle = \"Load more...\";\n  const loadingMoreTitle = \"Loading more...\";\n  const aPlaceholder = forceAsyncSearch ? \"Type to search\" : placeholder;\n\n  // state\n  const [open, setOpen] = React.useState(false);\n  const [asyncFetchMeta, setAsyncFetchMeta] = React.useState(undefined);\n  const [loadingCnt, setLoadingCnt] = React.useState(0);\n  const [isLoadingMore, setIsLoadingMore] = React.useState(false);\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [asyncListValues, setAsyncListValues] = React.useState(undefined);\n\n  // ref\n  const asyncFectchCnt = React.useRef(0);\n  const componentIsMounted = React.useRef(true);\n  const isSelectedLoadMore = React.useRef(false);\n\n  // compute\n  const nSelectedAsyncListValues = listValuesToArray(selectedAsyncListValues);\n  const listValues = asyncFetch\n    ? (!allowCustomValues ? mergeListValues(asyncListValues, nSelectedAsyncListValues, true) : asyncListValues)\n    : staticListValues;\n  //const isDirtyInitialListValues = asyncListValues == undefined && selectedAsyncListValues && selectedAsyncListValues.length && typeof selectedAsyncListValues[0] != \"object\";\n  const isLoading = loadingCnt > 0;\n  const canInitialLoad = open && asyncFetch\n    && asyncListValues === undefined\n    && (forceAsyncSearch ? inputValue : true);\n  const isInitialLoading = canInitialLoad && isLoading;\n  const canLoadMore = !isInitialLoading && listValues && listValues.length > 0\n    && asyncFetchMeta && asyncFetchMeta.hasMore && (asyncFetchMeta.filter || \"\") === inputValue;\n  const canShowLoadMore = !isLoading && canLoadMore;\n  const options = mapListValues(listValues, listValueToOption);\n  const hasValue = selectedValue != null;\n  // const selectedListValue = hasValue ? getListValue(selectedValue, listValues) : null;\n  // const selectedOption = listValueToOption(selectedListValue);\n\n  // fetch\n  const fetchListValues = async (filter = null, isLoadMore = false) => {\n    // clear obsolete meta\n    if (!isLoadMore && asyncFetchMeta) {\n      setAsyncFetchMeta(undefined);\n    }\n\n    const offset = isLoadMore && asyncListValues ? asyncListValues.length : 0;\n    const meta = isLoadMore && asyncFetchMeta || !useLoadMore && { pageSize: 0 };\n\n    const newAsyncFetchCnt = ++asyncFectchCnt.current;\n    const res = await asyncFetch(filter, offset, meta);\n    const isFetchCancelled = asyncFectchCnt.current != newAsyncFetchCnt;\n    if (isFetchCancelled || !componentIsMounted.current) {\n      return null;\n    }\n\n    const { values, hasMore, meta: newMeta } = res && res.values ? res : { values: res };\n    const nValues = listValuesToArray(values);\n    let assumeHasMore;\n    let newValues;\n    if (isLoadMore) {\n      newValues = mergeListValues(asyncListValues, nValues, false);\n      assumeHasMore = newValues.length > asyncListValues.length;\n    } else {\n      newValues = nValues;\n      if (useLoadMore) {\n        assumeHasMore = newValues.length > 0;\n      }\n    }\n\n    // save new meta\n    const realNewMeta = hasMore != null || newMeta != null || assumeHasMore != null ? {\n      ...(assumeHasMore != null ? { hasMore: assumeHasMore } : {}),\n      ...(hasMore != null ? { hasMore } : {}),\n      ...(newMeta != null ? newMeta : {}),\n      filter\n    } : undefined;\n    if (realNewMeta) {\n      setAsyncFetchMeta(realNewMeta);\n    }\n\n    return newValues;\n  };\n\n  const loadListValues = async (filter = null, isLoadMore = false) => {\n    setLoadingCnt(x => (x + 1));\n    setIsLoadingMore(isLoadMore);\n    const list = await fetchListValues(filter, isLoadMore);\n    if (!componentIsMounted.current) {\n      return;\n    }\n    if (list != null) {\n      // tip: null can be used for reject (eg, if user don't want to filter by input)\n      setAsyncListValues(list);\n    }\n    setLoadingCnt(x => (x - 1));\n    setIsLoadingMore(false);\n  };\n  const loadListValuesDebounced = React.useCallback(debounce(loadListValues, debounceTimeout), []);\n\n  // Unmount\n  React.useEffect(() => {\n    return () => {\n      componentIsMounted.current = false;\n    };\n  }, []);\n\n  // Initial loading\n  React.useEffect(() => {\n    if (canInitialLoad && loadingCnt == 0 && asyncFectchCnt.current == 0) {\n      (async () => {\n        await loadListValues();\n      })();\n    }\n  }, [canInitialLoad]);\n\n  // Event handlers\n  const onOpen = () => {\n    setOpen(true);\n  };\n\n  const onClose = (_e) => {\n    if (isSelectedLoadMore.current) {\n      isSelectedLoadMore.current = false;\n      if (multiple) {\n        setOpen(false);\n      }\n    } else {\n      setOpen(false);\n    }\n  };\n\n  const onDropdownVisibleChange = (open) => {\n    if (open) {\n      onOpen();\n    } else {\n      onClose();\n    }\n  };\n\n  const isSpecialValue = (option) => {\n    const specialValue = option?.specialValue || option?.value;\n    return knownSpecialValues.includes(specialValue);\n  };\n\n  const onChange = async (_e, option) => {\n    let specialValue = option?.specialValue || option?.value \n      || multiple && option.map(opt => opt?.specialValue || opt?.value).find(v => !!v);\n    if (specialValue == \"LOAD_MORE\") {\n      isSelectedLoadMore.current = true;\n      await loadListValues(inputValue, true);\n    } else if (specialValue == \"LOADING_MORE\") {\n      isSelectedLoadMore.current = true;\n    } else {\n      if (multiple) {\n        const options = option;\n        let newSelectedListValues = options.map((o, i) => {\n          const item = o.value != null ? o : getListValue(o, listValues);\n          // AntDesign puts array of labels in `_e` (`option` is array of objects, but custom option is always `{}`)\n          // MUI puts array of labels in `option`\n          const customItem = allowCustomValues && !item ? (Array.isArray(_e) ? _e[i] : o) : null;\n          return item || customItem;\n        });\n        let newSelectedValues = newSelectedListValues\n          .filter(o => o !== undefined)\n          .map(o => (o.value !== undefined ? o.value : o));\n        if (!newSelectedValues.length)\n          newSelectedValues = undefined; //not allow []\n        setValue(newSelectedValues, newSelectedListValues);\n      } else {\n        const v = option == null ? undefined : option.value;\n        setValue(v, [option]);\n      }\n    }\n  };\n\n  const onInputChange = async (_e, newInputValue) => {\n    const val = newInputValue;\n    //const isTypeToSearch = e.type == 'change';\n\n    if (val === loadMoreTitle || val === loadingMoreTitle) {\n      return;\n    }\n\n    setInputValue(val);\n\n    if (allowCustomValues) {\n      if (multiple) {\n        //todo\n      } else {\n        setValue(val, [val]);\n      }\n    }\n\n    const canSearchAsync = useAsyncSearch && (forceAsyncSearch ? !!val : true);\n    if (canSearchAsync) {\n      await loadListValuesDebounced(val);\n    } else if (useAsyncSearch && forceAsyncSearch) {\n      setAsyncListValues([]);\n    }\n  };\n\n  // to keep compatibility with antD\n  const onSearch = async (newInputValue) => {\n    if (newInputValue === \"\" && !open) {\n      return;\n    }\n\n    await onInputChange(null, newInputValue);\n  };\n\n  // Options\n  const extendOptions = (options) => {\n    const filtered = [...options];\n    if (useLoadMore) {\n      if (canShowLoadMore) {\n        filtered.push({\n          specialValue: \"LOAD_MORE\",\n          title: loadMoreTitle,\n        });\n      } else if (isLoadingMore) {\n        filtered.push({\n          specialValue: \"LOADING_MORE\",\n          title: loadingMoreTitle,\n          disabled: true\n        });\n      }\n    }\n    return filtered;\n  };\n\n  const getOptionSelected = (option, valueOrOption) => {\n    if (valueOrOption == null)\n      return null;\n    const selectedValue = valueOrOption.value != undefined ? valueOrOption.value : valueOrOption;\n    return option.value === selectedValue;\n  };\n\n  const getOptionDisabled = (valueOrOption) => {\n    return valueOrOption && valueOrOption.disabled;\n  };\n\n  const getOptionLabel = (valueOrOption) => {\n    if (valueOrOption == null)\n      return null;\n    const option = valueOrOption.value != undefined ? valueOrOption\n      : listValueToOption(getListValue(valueOrOption, listValues));\n    if (!option && valueOrOption.specialValue) {\n      // special last 'Load more...' item\n      return valueOrOption.title;\n    }\n    if (!option && allowCustomValues) {\n      // there is just string value, it's not item from list\n      return valueOrOption;\n    }\n    if (!option) {\n      // weird\n      return valueOrOption;\n    }\n    return option.title;\n  };\n\n  return {\n    options,\n    listValues,\n    hasValue,\n\n    open,\n    onOpen,\n    onClose,\n    onDropdownVisibleChange,\n    onChange,\n    \n    inputValue,\n    onInputChange,\n    onSearch,\n    canShowLoadMore,\n    isInitialLoading,\n    isLoading,\n    isLoadingMore,\n    isSpecialValue,\n\n    extendOptions,\n    getOptionSelected,\n    getOptionDisabled,\n    getOptionLabel,\n\n    // unused\n    //selectedListValue,\n    //selectedOption,\n    aPlaceholder,\n  };\n};\n\nexport default useListValuesAutocomplete;\n","export const ADD_GROUP = \"ADD_GROUP\";\nexport const ADD_CASE_GROUP = \"ADD_CASE_GROUP\";\nexport const REMOVE_GROUP = \"REMOVE_GROUP\";\nexport const SET_CONJUNCTION = \"SET_CONJUNCTION\";\nexport const SET_NOT = \"SET_NOT\";\nexport const ADD_RULE = \"ADD_RULE\";\nexport const REMOVE_RULE = \"REMOVE_RULE\";\nexport const SET_FIELD = \"SET_FIELD\";\nexport const SET_OPERATOR = \"SET_OPERATOR\";\nexport const SET_VALUE = \"SET_VALUE\";\nexport const SET_VALUE_SRC = \"SET_VALUE_SRC\";\nexport const SET_OPERATOR_OPTION = \"SET_OPERATOR_OPTION\";\nexport const SET_LOCK = \"SET_LOCK\";\n\nexport const SET_TREE = \"SET_TREE\";\n\nexport const MOVE_ITEM = \"MOVE_ITEM\";\n\nexport const PLACEMENT_AFTER = \"after\";\nexport const PLACEMENT_BEFORE = \"before\";\nexport const PLACEMENT_APPEND = \"append\";\nexport const PLACEMENT_PREPEND = \"prepend\";\n\nexport const SET_DRAG_PROGRESS = \"SET_DRAG_PROGRESS\";\nexport const SET_DRAG_START = \"SET_DRAG_START\";\nexport const SET_DRAG_END = \"SET_DRAG_END\";\n","\nimport Immutable from \"immutable\";\nimport {\n  expandTreePath, expandTreeSubpath, getItemByPath, fixPathsInTree, \n  getTotalRulesCountInTree, fixEmptyGroupsInTree, isEmptyTree, hasChildren, removeIsLockedInTree\n} from \"../utils/treeUtils\";\nimport {\n  defaultRuleProperties, defaultGroupProperties, defaultOperator, \n  defaultOperatorOptions, defaultRoot, defaultItemProperties\n} from \"../utils/defaultUtils\";\nimport * as constants from \"../constants\";\nimport uuid from \"../utils/uuid\";\nimport {\n  getFuncConfig, getFieldConfig, getFieldWidgetConfig, getOperatorConfig\n} from \"../utils/configUtils\";\nimport {\n  getOperatorsForField, getFirstOperator, getWidgetForFieldOp,\n  getNewValueForFieldOp\n} from \"../utils/ruleUtils\";\nimport {deepEqual, defaultValue, applyToJS} from \"../utils/stuff\";\nimport {validateValue} from \"../utils/validation\";\nimport omit from \"lodash/omit\";\nimport mapValues from \"lodash/mapValues\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nconst addNewGroup = (state, path, type, groupUuid, properties, config, children = null, meta = {}) => {\n  const {shouldCreateEmptyGroup} = config.settings;\n  const groupPath = path.push(groupUuid);\n  const canAddNewRule = !shouldCreateEmptyGroup;\n  const isDefaultCase = !!meta?.isDefaultCase;\n\n  const origState = state;\n  state = addItem(state, path, type, groupUuid, defaultGroupProperties(config).merge(properties || {}), config, children);\n  if (state !== origState) {\n    if (!children && !isDefaultCase) {\n      state = state.setIn(expandTreePath(groupPath, \"children1\"), new Immutable.OrderedMap());\n\n      // Add one empty rule into new group\n      if (canAddNewRule) {\n        state = addItem(state, groupPath, \"rule\", uuid(), defaultRuleProperties(config), config);\n      }\n    }\n\n    state = fixPathsInTree(state);\n  }\n  \n  return state;\n};\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nconst removeGroup = (state, path, config) => {\n  state = removeItem(state, path);\n\n  const {canLeaveEmptyGroup} = config.settings;\n  const parentPath = path.slice(0, -1);\n  const isEmptyParentGroup = !hasChildren(state, parentPath);\n  if (isEmptyParentGroup && !canLeaveEmptyGroup) {\n    // check ancestors for emptiness (and delete 'em if empty)\n    state = fixEmptyGroupsInTree(state);\n    \n    if (isEmptyTree(state) && !canLeaveEmptyGroup) {\n      // if whole query is empty, add one empty rule to root\n      state = addItem(state, new Immutable.List(), \"rule\", uuid(), defaultRuleProperties(config), config);\n    }\n  }\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nconst removeRule = (state, path, config) => {\n  state = removeItem(state, path);\n\n  const {canLeaveEmptyGroup} = config.settings;\n  const parentPath = path.pop();\n  const parent = state.getIn(expandTreePath(parentPath));\n\n  const parentField = parent.getIn([\"properties\", \"field\"]);\n  const parentOperator = parent.getIn([\"properties\", \"operator\"]);\n  const parentValue = parent.getIn([\"properties\", \"value\", 0]);\n  const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n  const parentOperatorConfig = parentOperator ? getOperatorConfig(config, parentOperator, parentField) : null;\n  const hasGroupCountRule = parentField && parentOperator && parentOperatorConfig.cardinality != 0; // && parentValue != undefined;\n  \n  const isParentRuleGroup = parent.get(\"type\") == \"rule_group\";\n  const isEmptyParentGroup = !hasChildren(state, parentPath);\n  const canLeaveEmpty = isParentRuleGroup \n    ? hasGroupCountRule && parentFieldConfig.initialEmptyWhere\n    : canLeaveEmptyGroup;\n  \n  if (isEmptyParentGroup && !canLeaveEmpty) {\n    if (isParentRuleGroup) {\n      // deleted last rule from rule_group, so delete whole rule_group\n      state = state.deleteIn(expandTreePath(parentPath));\n    }\n\n    // check ancestors for emptiness (and delete 'em if empty)\n    state = fixEmptyGroupsInTree(state);\n\n    if (isEmptyTree(state) && !canLeaveEmptyGroup) {\n      // if whole query is empty, add one empty rule to root\n      state = addItem(state, new Immutable.List(), \"rule\", uuid(), defaultRuleProperties(config), config);\n    }\n  }\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {bool} not\n */\nconst setNot = (state, path, not) =>\n  state.setIn(expandTreePath(path, \"properties\", \"not\"), not);\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {bool} lock\n */\nconst setLock = (state, path, lock) =>\n  removeIsLockedInTree(state.setIn(expandTreePath(path, \"properties\", \"isLocked\"), lock));\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} conjunction\n */\nconst setConjunction = (state, path, conjunction) =>\n  state.setIn(expandTreePath(path, \"properties\", \"conjunction\"), conjunction);\n\n// convert children deeply from JS to Immutable\nconst _addChildren1 = (config, item, children) => {\n  if (children && Array.isArray(children)) {\n    item.children1 = new Immutable.OrderedMap(\n      children.reduce((map, it) => {\n        const id1 = uuid();\n        const it1 = {\n          ...it,\n          properties: defaultItemProperties(config, it).merge(it.properties || {}),\n          id: id1\n        };\n        _addChildren1(config, it1, it1.children1);\n        //todo: guarantee order\n        return {\n          ...map,\n          [id1]: new Immutable.Map(it1)\n        };\n      }, {})\n    );\n  }\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} type\n * @param {string} id\n * @param {Immutable.OrderedMap} properties\n * @param {object} config\n */\nconst addItem = (state, path, type, id, properties, config, children = null) => {\n  if (type == \"switch_group\")\n    throw new Error(\"Can't add switch_group programmatically\");\n  const { maxNumberOfCases, maxNumberOfRules, maxNesting } = config.settings;\n  const rootType = state.get(\"type\");\n  const isTernary = rootType == \"switch_group\";\n  const targetItem = state.getIn(expandTreePath(path));\n  const caseGroup = isTernary ? state.getIn(expandTreePath(path.take(2))) : null;\n  const childrenPath = expandTreePath(path, \"children1\");\n  const targetChildren = state.getIn(childrenPath);\n  const hasChildren = !!targetChildren && targetChildren.size;\n  const targetChildrenSize = hasChildren ? targetChildren.size : null;\n  let currentNumber, maxNumber;\n  if (type == \"case_group\") {\n    currentNumber = targetChildrenSize;\n    maxNumber = maxNumberOfCases;\n  } else if (type == \"group\") {\n    currentNumber = path.size;\n    maxNumber = maxNesting;\n  } else if (targetItem?.get(\"type\") == \"rule_group\") {\n    // don't restrict\n  } else {\n    currentNumber = isTernary ? getTotalRulesCountInTree(caseGroup) : getTotalRulesCountInTree(state);\n    maxNumber = maxNumberOfRules;\n  }\n  const canAdd = maxNumber && currentNumber ? (currentNumber < maxNumber) : true;\n  \n  const item = {type, id, properties};\n  _addChildren1(config, item, children);\n\n  const isLastDefaultCase = type == \"case_group\" && hasChildren && targetChildren.last().get(\"children1\") == null;\n\n  if (canAdd) {\n    const newChildren = new Immutable.OrderedMap({\n      [id]: new Immutable.Map(item)\n    });\n    if (!hasChildren) {\n      state = state.setIn(childrenPath, newChildren);\n    } else if (isLastDefaultCase) {\n      const last = targetChildren.last();\n      const newChildrenWithLast = new Immutable.OrderedMap({\n        [id]: new Immutable.Map(item),\n        [last.get(\"id\")]: last\n      });\n      state = state.deleteIn(expandTreePath(childrenPath, \"children1\", last.get(\"id\")));\n      state = state.mergeIn(childrenPath, newChildrenWithLast);\n    } else {\n      state = state.mergeIn(childrenPath, newChildren);\n    }\n    state = fixPathsInTree(state);\n  }\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n */\nconst removeItem = (state, path) => {\n  state = state.deleteIn(expandTreePath(path));\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} fromPath\n * @param {Immutable.List} toPath\n * @param {string} placement, see constants PLACEMENT_*: PLACEMENT_AFTER, PLACEMENT_BEFORE, PLACEMENT_APPEND, PLACEMENT_PREPEND\n * @param {object} config\n */\nconst moveItem = (state, fromPath, toPath, placement, config) => {\n  const from = getItemByPath(state, fromPath);\n  const sourcePath = fromPath.pop();\n  const source = fromPath.size > 1 ? getItemByPath(state, sourcePath) : null;\n  const sourceChildren = source ? source.get(\"children1\") : null;\n\n  const to = getItemByPath(state, toPath);\n  const targetPath = (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND) ? toPath : toPath.pop();\n  const target = (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND) \n    ? to\n    : toPath.size > 1 ? getItemByPath(state, targetPath) : null;\n  const targetChildren = target ? target.get(\"children1\") : null;\n\n  if (!source || !target || !from)\n    return state;\n\n  const isSameParent = (source.get(\"id\") == target.get(\"id\"));\n  const isSourceInsideTarget = targetPath.size < sourcePath.size \n        && deepEqual(targetPath.toArray(), sourcePath.toArray().slice(0, targetPath.size));\n  const isTargetInsideSource = targetPath.size > sourcePath.size \n        && deepEqual(sourcePath.toArray(), targetPath.toArray().slice(0, sourcePath.size));\n  let sourceSubpathFromTarget = null;\n  let targetSubpathFromSource = null;\n  if (isSourceInsideTarget) {\n    sourceSubpathFromTarget = Immutable.List(sourcePath.toArray().slice(targetPath.size));\n  } else if (isTargetInsideSource) {\n    targetSubpathFromSource = Immutable.List(targetPath.toArray().slice(sourcePath.size));\n  }\n\n  let newTargetChildren = targetChildren, newSourceChildren = sourceChildren;\n  if (!isTargetInsideSource)\n    newSourceChildren = newSourceChildren.delete(from.get(\"id\"));\n  if (isSameParent) {\n    newTargetChildren = newSourceChildren;\n  } else if (isSourceInsideTarget) {\n    newTargetChildren = newTargetChildren.updateIn(expandTreeSubpath(sourceSubpathFromTarget, \"children1\"), (_oldChildren) => newSourceChildren);\n  }\n\n  if (placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER) {\n    newTargetChildren = Immutable.OrderedMap().withMutations(r => {\n      for (let [itemId, item] of newTargetChildren.entries()) {\n        if (itemId == to.get(\"id\") && placement == constants.PLACEMENT_BEFORE) {\n          r.set(from.get(\"id\"), from);\n        }\n                \n        r.set(itemId, item);\n\n        if (itemId == to.get(\"id\") && placement == constants.PLACEMENT_AFTER) {\n          r.set(from.get(\"id\"), from);\n        }\n      }\n    });\n  } else if (placement == constants.PLACEMENT_APPEND) {\n    newTargetChildren = newTargetChildren.merge({[from.get(\"id\")]: from});\n  } else if (placement == constants.PLACEMENT_PREPEND) {\n    newTargetChildren = Immutable.OrderedMap({[from.get(\"id\")]: from}).merge(newTargetChildren);\n  }\n\n  if (isTargetInsideSource) {\n    newSourceChildren = newSourceChildren.updateIn(expandTreeSubpath(targetSubpathFromSource, \"children1\"), (_oldChildren) => newTargetChildren);\n    newSourceChildren = newSourceChildren.delete(from.get(\"id\"));\n  }\n\n  if (!isSameParent && !isSourceInsideTarget)\n    state = state.updateIn(expandTreePath(sourcePath, \"children1\"), (_oldChildren) => newSourceChildren);\n  if (!isTargetInsideSource)\n    state = state.updateIn(expandTreePath(targetPath, \"children1\"), (_oldChildren) => newTargetChildren);\n\n  state = fixPathsInTree(state);\n  return state;\n};\n\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} field\n */\nconst setField = (state, path, newField, config) => {\n  if (!newField)\n    return removeItem(state, path);\n\n  const {fieldSeparator, setOpOnChangeField, showErrorMessage} = config.settings;\n  if (Array.isArray(newField))\n    newField = newField.join(fieldSeparator);\n\n  const currentType = state.getIn(expandTreePath(path, \"type\"));\n  const currentProperties = state.getIn(expandTreePath(path, \"properties\"));\n  const wasRuleGroup = currentType == \"rule_group\";\n  const newFieldConfig = getFieldConfig(config, newField);\n  const isRuleGroup = newFieldConfig.type == \"!group\";\n  const isRuleGroupExt = isRuleGroup && newFieldConfig.mode == \"array\";\n  const isChangeToAnotherType = wasRuleGroup != isRuleGroup;\n  \n  const currentOperator = currentProperties.get(\"operator\");\n  const currentOperatorOptions = currentProperties.get(\"operatorOptions\");\n  const _currentField = currentProperties.get(\"field\");\n  const _currentValue = currentProperties.get(\"value\");\n  const _currentValueSrc = currentProperties.get(\"valueSrc\", new Immutable.List());\n  const _currentValueType = currentProperties.get(\"valueType\", new Immutable.List());\n\n  // If the newly selected field supports the same operator the rule currently\n  // uses, keep it selected.\n  const lastOp = newFieldConfig && newFieldConfig.operators.indexOf(currentOperator) !== -1 ? currentOperator : null;\n  let newOperator = null;\n  const availOps = getOperatorsForField(config, newField);\n  if (availOps && availOps.length == 1)\n    newOperator = availOps[0];\n  else if (availOps && availOps.length > 1) {\n    for (let strategy of setOpOnChangeField || []) {\n      if (strategy == \"keep\" && !isChangeToAnotherType)\n        newOperator = lastOp;\n      else if (strategy == \"default\")\n        newOperator = defaultOperator(config, newField, false);\n      else if (strategy == \"first\")\n        newOperator = getFirstOperator(config, newField);\n      if (newOperator) //found op for strategy\n        break;\n    }\n  }\n\n  if (!isRuleGroup && !newFieldConfig.operators) {\n    console.warn(`Type ${newFieldConfig.type} is not supported`);\n    return state;\n  }\n\n  if (wasRuleGroup && !isRuleGroup) {\n    state = state.setIn(expandTreePath(path, \"type\"), \"rule\");\n    state = state.deleteIn(expandTreePath(path, \"children1\"));\n    state = state.setIn(expandTreePath(path, \"properties\"), new Immutable.OrderedMap());\n  }\n\n  if (isRuleGroup) {\n    state = state.setIn(expandTreePath(path, \"type\"), \"rule_group\");\n    const {canReuseValue, newValue, newValueSrc, newValueType, operatorCardinality} = getNewValueForFieldOp(\n      config, config, currentProperties, newField, newOperator, \"field\", true\n    );\n    let groupProperties = defaultGroupProperties(config, newFieldConfig).merge({\n      field: newField,\n      mode: newFieldConfig.mode,\n    });\n    if (isRuleGroupExt) {\n      groupProperties = groupProperties.merge({\n        operator: newOperator,\n        value: newValue,\n        valueSrc: newValueSrc,\n        valueType: newValueType,\n      });\n    }\n    state = state.setIn(expandTreePath(path, \"children1\"), new Immutable.OrderedMap());\n    state = state.setIn(expandTreePath(path, \"properties\"), groupProperties);\n    if (newFieldConfig.initialEmptyWhere && operatorCardinality == 1) { // just `COUNT(grp) > 1` without `HAVING ..`\n      // no childeren\n    } else {\n      state = addItem(state, path, \"rule\", uuid(), defaultRuleProperties(config, newField), config);\n    }\n    state = fixPathsInTree(state);\n\n    return state;\n  }\n\n  return state.updateIn(expandTreePath(path, \"properties\"), (map) => map.withMutations((current) => {\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      config, config, current, newField, newOperator, \"field\", true\n    );\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError);\n    }\n    const newOperatorOptions = canReuseValue ? currentOperatorOptions : defaultOperatorOptions(config, newOperator, newField);\n\n    return current\n      .set(\"field\", newField)\n      .set(\"operator\", newOperator)\n      .set(\"operatorOptions\", newOperatorOptions)\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType)\n      .delete(\"asyncListValues\");\n  }));\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} operator\n */\nconst setOperator = (state, path, newOperator, config) => {\n  const {showErrorMessage} = config.settings;\n\n  const properties = state.getIn(expandTreePath(path, \"properties\"));\n  const children = state.getIn(expandTreePath(path, \"children1\"));\n  const currentField = properties.get(\"field\");\n  const fieldConfig = getFieldConfig(config, currentField);\n  const isRuleGroup = fieldConfig.type == \"!group\";\n  const operatorConfig = getOperatorConfig(config, newOperator, currentField);\n  const operatorCardinality = operatorConfig ? defaultValue(operatorConfig.cardinality, 1) : null;\n\n  state = state.updateIn(expandTreePath(path, \"properties\"), (map) => map.withMutations((current) => {\n    const currentField = current.get(\"field\");\n    const currentOperatorOptions = current.get(\"operatorOptions\");\n    const _currentValue = current.get(\"value\", new Immutable.List());\n    const _currentValueSrc = current.get(\"valueSrc\", new Immutable.List());\n    const _currentOperator = current.get(\"operator\");\n\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      config, config, current, currentField, newOperator, \"operator\", true\n    );\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError);\n    }\n    const newOperatorOptions = canReuseValue ? currentOperatorOptions : defaultOperatorOptions(config, newOperator, currentField);\n\n    if (!canReuseValue) {\n      current = current\n        .delete(\"asyncListValues\");\n    }\n\n    return current\n      .set(\"operator\", newOperator)\n      .set(\"operatorOptions\", newOperatorOptions)\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType);\n  }));\n\n  if (isRuleGroup) {\n    if (operatorCardinality == 0 && children.size == 0) {\n      state = addItem(state, path, \"rule\", uuid(), defaultRuleProperties(config, currentField), config);\n    }\n  }\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} value\n * @param {string} valueType\n * @param {*} asyncListValues\n * @param {boolean} __isInternal\n */\nconst setValue = (state, path, delta, value, valueType, config, asyncListValues, __isInternal) => {\n  const {fieldSeparator, showErrorMessage} = config.settings;\n  let isInternalValueChange;\n  const valueSrc = state.getIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\")) || null;\n  if (valueSrc === \"field\" && Array.isArray(value))\n    value = value.join(fieldSeparator);\n\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? defaultValue(operatorConfig.cardinality, 1) : null;\n\n  const isEndValue = false;\n  const calculatedValueType = valueType || calculateValueType(value, valueSrc, config);\n  const canFix = false;\n  const [validateError, fixedValue] = validateValue(\n    config, field, field, operator, value, calculatedValueType, valueSrc, asyncListValues, canFix, isEndValue\n  );\n  const isValid = !validateError;\n  if (fixedValue !== value) {\n    // eg, get exact value from listValues (not string)\n    value = fixedValue;\n  }\n\n  // Additional validation for range values\n  if (showErrorMessage) {\n    const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDefinition = getFieldWidgetConfig(config, field, operator, w, valueSrc);\n    const valueSrcs = Array.from({length: operatorCardinality}, (_, i) => (state.getIn(expandTreePath(path, \"properties\", \"valueSrc\", i + \"\")) || null));\n        \n    if (operatorConfig && operatorConfig.validateValues && valueSrcs.filter(vs => vs == \"value\" || vs == null).length == operatorCardinality) {\n      const values = Array.from({length: operatorCardinality}, (_, i) => (i == delta ? value : state.getIn(expandTreePath(path, \"properties\", \"value\", i + \"\")) || null));\n      const jsValues = fieldWidgetDefinition && fieldWidgetDefinition.toJS ? values.map(v => fieldWidgetDefinition.toJS(v, fieldWidgetDefinition)) : values;\n      const rangeValidateError = operatorConfig.validateValues(jsValues);\n\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality), rangeValidateError);\n    }\n  }\n  \n  const lastValueArr = state.getIn(expandTreePath(path, \"properties\", \"value\"));\n  if (!lastValueArr) {\n    state = state\n      .setIn(expandTreePath(path, \"properties\", \"value\"), new Immutable.List(new Array(operatorCardinality)))\n      .setIn(expandTreePath(path, \"properties\", \"valueType\"), new Immutable.List(new Array(operatorCardinality)))\n      .setIn(expandTreePath(path, \"properties\", \"valueError\"), new Immutable.List(new Array(operatorCardinality)));\n  }\n\n  const lastValue = state.getIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"));\n  const lastError = state.getIn(expandTreePath(path, \"properties\", \"valueError\", delta));\n  const isLastEmpty = lastValue == undefined;\n  const isLastError = !!lastError;\n  if (isValid || showErrorMessage) {\n    state = state.deleteIn(expandTreePath(path, \"properties\", \"asyncListValues\"));\n    // set only good value\n    if (typeof value === \"undefined\") {\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), undefined);\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), null);\n    } else {\n      if (asyncListValues) {\n        state = state.setIn(expandTreePath(path, \"properties\", \"asyncListValues\"), asyncListValues);\n      }\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), value);\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), calculatedValueType);\n      isInternalValueChange = __isInternal && !isLastEmpty && !isLastError;\n    }\n  }\n  if (showErrorMessage) {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), validateError);\n  }\n  if (__isInternal && (isValid && isLastError || !isValid && !isLastError)) {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), validateError);\n    isInternalValueChange = false;\n  }\n  \n  return {tree: state, isInternalValueChange};\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nconst setValueSrc = (state, path, delta, srcKey, config) => {\n  const {showErrorMessage} = config.settings;\n\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n\n  state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), undefined);\n  state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), null);\n  state = state.deleteIn(expandTreePath(path, \"properties\", \"asyncListValues\"));\n\n  if (showErrorMessage) {\n    // clear value error\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), null);\n\n    // if current operator is range, clear possible range error\n    const operatorConfig = getOperatorConfig(config, operator, field);\n    const operatorCardinality = operator ? defaultValue(operatorConfig.cardinality, 1) : null;\n    if (operatorConfig.validateValues) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality), null);\n    }\n  }\n  \n  // set valueSrc\n  if (typeof srcKey === \"undefined\") {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\"), null);\n  } else {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\"), srcKey);\n  }\n\n  // maybe set default value\n  if (srcKey) {\n    const properties = state.getIn(expandTreePath(path, \"properties\"));\n    // this call should return canReuseValue = false and provide default value\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      config, config, properties, field, operator, \"valueSrc\", true\n    );\n    if (!canReuseValue && newValueSrc.get(delta) == srcKey) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), newValue.get(delta));\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), newValueType.get(delta));\n    }\n  }\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} name\n * @param {*} value\n */\nconst setOperatorOption = (state, path, name, value) => {\n  return state.setIn(expandTreePath(path, \"properties\", \"operatorOptions\", name), value);\n};\n\n/**\n * @param {Immutable.Map} state\n */\nconst checkEmptyGroups = (state, config) => {\n  const {canLeaveEmptyGroup} = config.settings;\n  if (!canLeaveEmptyGroup) {\n    state = fixEmptyGroupsInTree(state);\n  }\n  return state;\n};\n\n\n/**\n * \n */\nconst calculateValueType = (value, valueSrc, config) => {\n  let calculatedValueType = null;\n  if (value) {\n    if (valueSrc === \"field\") {\n      const fieldConfig = getFieldConfig(config, value);\n      if (fieldConfig) {\n        calculatedValueType = fieldConfig.type;\n      }\n    } else if (valueSrc === \"func\") {\n      const funcKey = value.get(\"func\");\n      if (funcKey) {\n        const funcConfig = getFuncConfig(config, funcKey);\n        if (funcConfig) {\n          calculatedValueType = funcConfig.returnType;\n        }\n      }\n    }\n  }\n  return calculatedValueType;\n};\n\nconst getField = (state, path) => {\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  return field;\n};\n\nconst emptyDrag = {\n  dragging: {\n    id: null,\n    x: null,\n    y: null,\n    w: null,\n    h: null\n  },\n  mousePos: {},\n  dragStart: {\n    id: null,\n  },\n};\n\nconst getActionMeta = (action, state) => {\n  const actionKeysToOmit = [\n    \"config\", \"asyncListValues\", \"__isInternal\"\n  ];\n  const actionTypesToIgnore = [\n    constants.SET_TREE,\n    constants.SET_DRAG_START,\n    constants.SET_DRAG_PROGRESS,\n    constants.SET_DRAG_END,\n  ];\n  let meta = mapValues(omit(action, actionKeysToOmit), applyToJS);\n  let affectedField = action.path && getField(state.tree, action.path) || action.field;\n  if (affectedField)\n    meta.affectedField = affectedField;\n  if (actionTypesToIgnore.includes(action.type) || action.type.indexOf(\"@@redux\") == 0)\n    meta = null;\n  return meta;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {object} action\n */\nexport default (config, tree, getMemoizedTree) => {\n  const emptyTree = defaultRoot(config);\n  const initTree = tree || emptyTree;\n  const emptyState = {\n    tree: initTree, \n    ...emptyDrag\n  };\n    \n  return (state = emptyState, action) => {\n    const unset = {__isInternalValueChange: undefined, __lastAction: undefined};\n    let set = {};\n    let actionMeta = getActionMeta(action, state);\n\n    switch (action.type) {\n    case constants.SET_TREE: {\n      const validatedTree = getMemoizedTree(action.config, action.tree);\n      set.tree = validatedTree;\n      break;\n    }\n\n    case constants.ADD_CASE_GROUP: {\n      set.tree = addNewGroup(state.tree, action.path, \"case_group\", action.id, action.properties, action.config,  action.children, action.meta);\n      break;\n    }\n\n    case constants.ADD_GROUP: {\n      set.tree = addNewGroup(state.tree, action.path, \"group\", action.id, action.properties, action.config,  action.children, action.meta);\n      break;\n    }\n\n    case constants.REMOVE_GROUP: {\n      set.tree = removeGroup(state.tree, action.path, action.config);\n      break;\n    }\n\n    case constants.ADD_RULE: {\n      set.tree = addItem(state.tree, action.path, action.ruleType, action.id, action.properties, action.config, action.children);\n      break;\n    }\n\n    case constants.REMOVE_RULE: {\n      set.tree = removeRule(state.tree, action.path, action.config);\n      break;\n    }\n\n    case constants.SET_CONJUNCTION: {\n      set.tree = setConjunction(state.tree, action.path, action.conjunction);\n      break;\n    }\n\n    case constants.SET_NOT: {\n      set.tree = setNot(state.tree, action.path, action.not);\n      break;\n    }\n\n    case constants.SET_FIELD: {\n      set.tree = setField(state.tree, action.path, action.field, action.config);\n      break;\n    }\n\n    case constants.SET_LOCK: {\n      set.tree = setLock(state.tree, action.path, action.lock);\n      break;\n    }\n\n    case constants.SET_OPERATOR: {\n      set.tree = setOperator(state.tree, action.path, action.operator, action.config);\n      break;\n    }\n\n    case constants.SET_VALUE: {\n      const {tree, isInternalValueChange} = setValue(\n        state.tree, action.path, action.delta, action.value, action.valueType, action.config, action.asyncListValues, action.__isInternal\n      );\n      set.__isInternalValueChange = isInternalValueChange;\n      set.tree = tree;\n      break;\n    }\n\n    case constants.SET_VALUE_SRC: {\n      set.tree = setValueSrc(state.tree, action.path, action.delta, action.srcKey, action.config);\n      break;\n    }\n\n    case constants.SET_OPERATOR_OPTION: {\n      set.tree = setOperatorOption(state.tree, action.path, action.name, action.value);\n      break;\n    }\n\n    case constants.MOVE_ITEM: {\n      set.tree = moveItem(state.tree, action.fromPath, action.toPath, action.placement, action.config);\n      break;\n    }\n\n    case constants.SET_DRAG_START: {\n      set.dragStart = action.dragStart;\n      set.dragging = action.dragging;\n      set.mousePos = action.mousePos;\n      break;\n    }\n\n    case constants.SET_DRAG_PROGRESS: {\n      set.mousePos = action.mousePos;\n      set.dragging = action.dragging;\n      break;\n    }\n\n    case constants.SET_DRAG_END: {\n      set.tree = checkEmptyGroups(state.tree, config);\n      set = { ...set, ...emptyDrag };\n      break;\n    }\n\n    default: {\n      break;\n    }\n    }\n\n    if (actionMeta) {\n      set.__lastAction = actionMeta;\n    }\n    \n    return {...state, ...unset, ...set};\n  };\n\n};\n","import React from \"react\";\n\nexport default React.createContext(); ","import uuid from \"../utils/uuid\";\nimport {toImmutableList} from \"../utils/stuff\";\nimport {defaultRuleProperties, defaultGroupProperties} from \"../utils/defaultUtils\";\nimport * as constants from \"../constants\";\nimport Immutable from \"immutable\";\n\n\n\n/**\n * @param {object} config\n * @param {Immutable.Map} tree\n */\nexport const setTree = (config, tree) => ({\n  type: constants.SET_TREE,\n  tree: tree,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addRule = (config, path, properties, ruleType = \"rule\", children = null) => ({\n  type: constants.ADD_RULE,\n  ruleType: ruleType,\n  children: children,\n  path: toImmutableList(path),\n  id: uuid(),\n  properties: defaultRuleProperties(config).merge(properties || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nexport const removeRule = (config, path) => ({\n  type: constants.REMOVE_RULE,\n  path: toImmutableList(path),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addDefaultCaseGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_CASE_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(properties || {}),\n  config: config,\n  meta: {\n    isDefaultCase: true\n  }\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addCaseGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_CASE_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(properties || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(properties || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nexport const removeGroup = (config, path) => ({\n  type: constants.REMOVE_GROUP,\n  path: toImmutableList(path),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Array} fromPath\n * @param {Array} toPath\n * @param {String} placement, see constants PLACEMENT_*\n */\nexport const moveItem = (config, fromPath, toPath, placement) => ({\n  type: constants.MOVE_ITEM,\n  fromPath: toImmutableList(fromPath),\n  toPath: toImmutableList(toPath),\n  placement: placement,\n  config: config,\n});\n","import * as constants from \"../constants\";\nimport {toImmutableList} from \"../utils/stuff\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} conjunction\n */\nexport const setConjunction = (config, path, conjunction) => ({\n  type: constants.SET_CONJUNCTION,\n  path: toImmutableList(path),\n  conjunction: conjunction\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {bool} not\n */\nexport const setNot = (config, path, not) => ({\n  type: constants.SET_NOT,\n  path: toImmutableList(path),\n  not: not\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {bool} lock\n */\nexport const setLock = (config, path, lock) => ({\n  type: constants.SET_LOCK,\n  path: toImmutableList(path),\n  lock: lock\n});","import * as constants from \"../constants\";\nimport {toImmutableList} from \"../utils/stuff\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} field\n */\nexport const setField = (config, path, field) => ({\n  type: constants.SET_FIELD,\n  path: toImmutableList(path),\n  field: field,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} operator\n */\nexport const setOperator = (config, path, operator) => ({\n  type: constants.SET_OPERATOR,\n  path: toImmutableList(path),\n  operator: operator,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} value\n * @param {string} valueType\n * @param {*} asyncListValues\n * @param {boolean} __isInternal\n */\nexport const setValue = (config, path, delta, value, valueType, asyncListValues, __isInternal) => ({\n  type: constants.SET_VALUE,\n  path: toImmutableList(path),\n  delta: delta,\n  value: value,\n  valueType: valueType,\n  asyncListValues: asyncListValues,\n  config: config,\n  __isInternal: __isInternal\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nexport const setValueSrc = (config, path, delta, srcKey) => ({\n  type: constants.SET_VALUE_SRC,\n  path: toImmutableList(path),\n  delta: delta,\n  srcKey: srcKey,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} name\n * @param {*} value\n */\nexport const setOperatorOption = (config, path, name, value) => ({\n  type: constants.SET_OPERATOR_OPTION,\n  path: toImmutableList(path),\n  name: name,\n  value: value,\n  config: config\n});\n","import * as constants from \"../constants\";\n\n\n/**\n * @param {Object} mousePos\n * @param {Object} dragging\n */\nexport const setDragProgress = (mousePos, dragging) => ({\n  type: constants.SET_DRAG_PROGRESS,\n  mousePos: mousePos,\n  dragging: dragging,\n});\n\n/**\n * @param {Object} dragStart\n * @param {Object} dragging\n * @param {Object} mousePos\n */\nexport const setDragStart = (dragStart, dragging, mousePos) => ({\n  type: constants.SET_DRAG_START,\n  dragStart: dragStart,\n  dragging: dragging,\n  mousePos: mousePos,\n});\n\n/**\n *\n */\nexport const setDragEnd = () => ({\n  type: constants.SET_DRAG_END,\n});\n","import React, { Component } from \"react\";\nimport {connect} from \"react-redux\";\nimport context from \"../stores/context\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../actions\";\nimport {immutableEqual} from \"../utils/stuff\";\nimport {useOnPropsChanged, liteShouldComponentUpdate, bindActionCreators} from \"../utils/reactUtils\";\n\n\nclass Query extends Component {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    onChange: PropTypes.func,\n    renderBuilder: PropTypes.func,\n    tree: PropTypes.any, //instanceOf(Immutable.Map)\n    //dispatch: PropTypes.func.isRequired,\n    //__isInternalValueChange\n    //__lastAction\n    //getMemoizedTree: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this._updateActions(props);\n\n    // For preventive validation (tree and config consistency)\n    // When config has chnaged from QueryContainer, \n    //  but new dispatched validated tree value is not in redux store yet (tree prop is old)\n    this.validatedTree = props.getMemoizedTree(props.config, props.tree);\n    this.oldValidatedTree = this.validatedTree;\n\n    //props.onChange && props.onChange(this.validatedTree, props.config);\n  }\n\n  _updateActions (props) {\n    const {config, dispatch} = props;\n    this.actions = bindActionCreators({...actions.tree, ...actions.group, ...actions.rule}, config, dispatch);\n  }\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    tree: (nextValue) => {\n      if (nextValue === this.oldValidatedTree && this.oldValidatedTree === this.validatedTree) {\n        // Got value dispatched from QueryContainer\n        // Ignore, because we've just rendered it\n        return false;\n      }\n      return true;\n    }\n  });\n\n  onPropsChanged(nextProps) {\n    const {onChange} = nextProps;\n    const oldConfig = this.props.config;\n    const newTree = nextProps.tree;\n    const oldTree = this.props.tree;\n    const newConfig = nextProps.config;\n\n    this.oldValidatedTree = this.validatedTree;\n    this.validatedTree = newTree;\n    if (oldConfig !== newConfig) {\n      this._updateActions(nextProps);\n      this.validatedTree = nextProps.getMemoizedTree(newConfig, newTree, oldConfig);\n    }\n\n    const validatedTreeChanged = !immutableEqual(this.validatedTree, this.oldValidatedTree);\n    if (validatedTreeChanged) {\n      onChange && onChange(this.validatedTree, newConfig, nextProps.__lastAction);\n    }\n  }\n\n  render() {\n    const {config, renderBuilder, dispatch, __isInternalValueChange} = this.props;\n    const builderProps = {\n      tree: this.validatedTree,\n      actions: this.actions,\n      config: config,\n      dispatch: dispatch,\n      __isInternalValueChange\n    };\n\n    return renderBuilder(builderProps);\n  }\n}\n\n\nconst ConnectedQuery = connect(\n  (state) => {\n    return {\n      tree: state.tree,\n      __isInternalValueChange: state.__isInternalValueChange,\n      __lastAction: state.__lastAction,\n    };\n  },\n  null,\n  null,\n  {\n    context\n  }\n)(Query);\nConnectedQuery.displayName = \"ConnectedQuery\";\n\n\nexport default ConnectedQuery;\n","import React, { Component, PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport treeStoreReducer from \"../stores/tree\";\nimport context from \"../stores/context\";\nimport {createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport * as actions from \"../actions\";\nimport {createConfigMemo} from \"../utils/configUtils\";\nimport {immutableEqual} from \"../utils/stuff\";\nimport {defaultRoot} from \"../utils/defaultUtils\";\nimport {createValidationMemo} from \"../utils/validation\";\nimport {liteShouldComponentUpdate, useOnPropsChanged} from \"../utils/reactUtils\";\nimport ConnectedQuery from \"./Query\";\n\n\nexport default class QueryContainer extends Component {\n  static propTypes = {\n    //config\n    conjunctions: PropTypes.object.isRequired,\n    fields: PropTypes.object.isRequired,\n    types: PropTypes.object.isRequired,\n    operators: PropTypes.object.isRequired,\n    widgets: PropTypes.object.isRequired,\n    settings: PropTypes.object.isRequired,\n\n    onChange: PropTypes.func,\n    renderBuilder: PropTypes.func,\n    value: PropTypes.any, //instanceOf(Immutable.Map)\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    useOnPropsChanged(this);\n\n    this.getMemoizedConfig = createConfigMemo();\n    this.getMemoizedTree = createValidationMemo();\n    \n    const config = this.getMemoizedConfig(props);\n    const tree = props.value;\n    const validatedTree = this.getMemoizedTree(config, tree);\n\n    const reducer = treeStoreReducer(config, validatedTree, this.getMemoizedTree);\n    const store = createStore(reducer);\n\n    this.state = {\n      store,\n      config\n    };\n  }\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    value: (nextValue, prevValue, state) => { return false; }\n  });\n\n  onPropsChanged(nextProps) {\n    // compare configs\n    const oldConfig = this.state.config;\n    const nextConfig = this.getMemoizedConfig(nextProps);\n    const isConfigChanged = oldConfig !== nextConfig;\n\n    // compare trees\n    const storeValue = this.state.store.getState().tree;\n    const isTreeChanged = !immutableEqual(nextProps.value, this.props.value) && !immutableEqual(nextProps.value, storeValue);\n    const currentTree = isTreeChanged ? nextProps.value || defaultRoot(nextProps) : storeValue;\n\n    if (isConfigChanged) {\n      this.setState({config: nextConfig});\n    }\n    \n    if (isTreeChanged || isConfigChanged) {\n      const validatedTree = this.getMemoizedTree(nextConfig, currentTree, oldConfig);\n      return Promise.resolve().then(() => {\n        this.state.store.dispatch(\n          actions.tree.setTree(nextConfig, validatedTree)\n        );\n      });\n    }\n  }\n\n  render() {\n    // `get_children` is deprecated!\n    const {renderBuilder, get_children, onChange, settings} = this.props;\n    const {config, store} = this.state;\n    const {renderProvider: QueryWrapper} = settings;\n\n    return (\n      <QueryWrapper config={config}>\n        <Provider store={store} context={context}>\n          <ConnectedQuery\n            config={config}\n            getMemoizedTree={this.getMemoizedTree}\n            onChange={onChange}\n            renderBuilder={renderBuilder || get_children}\n          />\n        </Provider>\n      </QueryWrapper>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport context from \"../../stores/context\";\nimport {getFieldConfig} from \"../../utils/configUtils\";\nimport {pureShouldComponentUpdate} from \"../../utils/reactUtils\";\nimport {connect} from \"react-redux\";\nconst classNames = require(\"classnames\");\n\n\nconst createRuleContainer = (Rule) => \n  class RuleContainer extends Component {\n    static propTypes = {\n      id: PropTypes.string.isRequired,\n      groupId: PropTypes.string,\n      config: PropTypes.object.isRequired,\n      path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n      operator: PropTypes.string,\n      field: PropTypes.string,\n      actions: PropTypes.object.isRequired, //{removeRule: Funciton, setField, setOperator, setOperatorOption, setValue, setValueSrc, ...}\n      onDragStart: PropTypes.func,\n      value: PropTypes.any, //depends on widget\n      valueSrc: PropTypes.any,\n      asyncListValues: PropTypes.array,\n      valueError: PropTypes.any,\n      operatorOptions: PropTypes.object,\n      reordableNodesCnt: PropTypes.number,\n      parentField: PropTypes.string, //from RuleGroup\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n      //connected:\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isDraggingTempo: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      \n      this.dummyFn.isDummyFn = true;\n    }\n\n    dummyFn = () => {};\n\n    removeSelf = () => {\n      this.props.actions.removeRule(this.props.path);\n    };\n\n    setLock = (lock = null) => {\n      this.props.actions.setLock(this.props.path, lock);\n    };\n\n    setField = (field) => {\n      this.props.actions.setField(this.props.path, field);\n    };\n\n    setOperator = (operator) => {\n      this.props.actions.setOperator(this.props.path, operator);\n    };\n\n    setOperatorOption = (name, value) => {\n      this.props.actions.setOperatorOption(this.props.path, name, value);\n    };\n\n    setValue = (delta, value, type, asyncListValues, __isInternal) => {\n      this.props.actions.setValue(this.props.path, delta, value, type, asyncListValues, __isInternal);\n    };\n\n    setValueSrc = (delta, srcKey) => {\n      this.props.actions.setValueSrc(this.props.path, delta, srcKey);\n    };\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = pureShouldComponentUpdate(this)(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          const draggingId = (nextProps.dragging.id || prevProps.dragging.id);\n          const isDraggingMe = draggingId == nextProps.id;\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (k == \"dragging\" && !isDraggingMe) {\n              changed = false; //dragging another item -> ignore\n            }\n            if (changed) {\n              chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    render() {\n      const isDraggingMe = this.props.dragging.id == this.props.id;\n      const fieldConfig = getFieldConfig(this.props.config, this.props.field);\n      const {showErrorMessage} = this.props.config.settings;\n      const _isGroup = fieldConfig && fieldConfig.type == \"!struct\";\n      const isInDraggingTempo = !isDraggingMe && this.props.isDraggingTempo;\n\n      const valueError = this.props.valueError;\n      const oneValueError = valueError && valueError.toArray().filter(e => !!e).shift() || null;\n      const hasError = oneValueError != null && showErrorMessage;\n\n      return (\n        <div\n          className={classNames(\"group-or-rule-container\", \"rule-container\", hasError ? \"rule-with-error\" : null)}\n          data-id={this.props.id}\n        >\n          {[\n            isDraggingMe ? <Rule\n              key={\"dragging\"}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={true}\n              isDraggingTempo={true}\n              dragging={this.props.dragging}\n              setField={this.dummyFn}\n              setOperator={this.dummyFn}\n              setOperatorOption={this.dummyFn}\n              setLock={this.dummyFn}\n              removeSelf={this.dummyFn}\n              setValue={this.dummyFn}\n              setValueSrc={this.dummyFn}\n              selectedField={this.props.field || null}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              value={this.props.value || null}\n              valueSrc={this.props.valueSrc || null}\n              valueError={this.props.valueError || null}\n              operatorOptions={this.props.operatorOptions}\n              config={this.props.config}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              asyncListValues={this.props.asyncListValues}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            /> : null\n            ,\n            <Rule\n              key={this.props.id}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={isDraggingMe}\n              isDraggingTempo={isInDraggingTempo}\n              onDragStart={this.props.onDragStart}\n              setLock={isInDraggingTempo ? this.dummyFn : this.setLock}\n              removeSelf={isInDraggingTempo ? this.dummyFn : this.removeSelf}\n              setField={isInDraggingTempo ? this.dummyFn : this.setField}\n              setOperator={isInDraggingTempo ? this.dummyFn : this.setOperator}\n              setOperatorOption={isInDraggingTempo ? this.dummyFn : this.setOperatorOption}\n              setValue={isInDraggingTempo ? this.dummyFn : this.setValue}\n              setValueSrc={isInDraggingTempo ? this.dummyFn : this.setValueSrc}\n              selectedField={this.props.field || null}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              value={this.props.value || null}\n              valueSrc={this.props.valueSrc || null}\n              valueError={this.props.valueError || null}\n              operatorOptions={this.props.operatorOptions}\n              config={this.props.config}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              asyncListValues={this.props.asyncListValues}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            />\n          ]}\n        </div>\n      );\n    }\n\n  };\n\n\nexport default (Rule) => {\n  const ConnectedRuleContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n      };\n    },\n    null,\n    null,\n    {\n      context\n    }\n  )(createRuleContainer(Rule));\n  ConnectedRuleContainer.displayName = \"ConnectedRuleContainer\";\n\n  return ConnectedRuleContainer;\n};\n","import React, { Component } from \"react\";\nimport {connect} from \"react-redux\";\nimport {getFlatTree} from \"../../utils/treeUtils\";\nimport {logger} from \"../../utils/stuff\";\nimport context from \"../../stores/context\";\nimport * as constants from \"../../constants\";\nimport clone from \"clone\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../../actions\";\nimport {pureShouldComponentUpdate, useOnPropsChanged, isUsingLegacyReactDomRender} from \"../../utils/reactUtils\";\n\nlet _isReorderingTree = false;\n\nconst createSortableContainer = (Builder, CanMoveFn = null) => \n  class SortableContainer extends Component {\n    static propTypes = {\n      tree: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n      actions: PropTypes.object.isRequired, // {moveItem: Function, ..}\n      //... see Builder\n    };\n\n    constructor(props) {\n      super(props);\n      useOnPropsChanged(this);\n\n      this.onPropsChanged(props);\n    }\n\n    onPropsChanged(nextProps) {\n      this.tree = getFlatTree(nextProps.tree);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = pureShouldComponentUpdate(this)(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (changed) {\n              //don't render <Builder> on dragging - appropriate redux-connected components will do it\n              if(k != \"dragging\" && k != \"mousePos\")\n                chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    componentDidUpdate(_prevProps, _prevState) {\n      let dragging = this.props.dragging;\n      let startDragging = this.props.dragStart;\n      _isReorderingTree = false;\n      if (startDragging && startDragging.id) {\n        dragging.itemInfo = this.tree.items[dragging.id];\n        if (dragging.itemInfo) {\n          if (dragging.itemInfo.index != startDragging.itemInfo.index || dragging.itemInfo.parent != startDragging.itemInfo.parent) {\n            const treeEl = startDragging.treeEl;\n            const treeElContainer = startDragging.treeElContainer;\n            const plhEl = this._getPlaceholderNodeEl(treeEl, true);\n            if (plhEl) {\n              const plX = plhEl.getBoundingClientRect().left + window.scrollX;\n              const plY = plhEl.getBoundingClientRect().top + window.scrollY;\n              const oldPlX = startDragging.plX;\n              const oldPlY = startDragging.plY;\n              const scrollTop = treeElContainer.scrollTop;\n              startDragging.plX = plX;\n              startDragging.plY = plY;\n              startDragging.itemInfo = clone(dragging.itemInfo);\n              startDragging.y = plhEl.offsetTop;\n              startDragging.x = plhEl.offsetLeft;\n              startDragging.clientY += (plY - oldPlY);\n              startDragging.clientX += (plX - oldPlX);\n              if (treeElContainer != document.body)\n                startDragging.scrollTop = scrollTop;\n\n              this.onDrag(this.props.mousePos, false);\n            }\n          }\n        }\n      }\n    }\n\n    _getNodeElById (treeEl, indexId, ignoreCache = false) {\n      if (indexId == null)\n        return null;\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[indexId];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      el = treeEl.querySelector('.group-or-rule-container[data-id=\"'+indexId+'\"]');\n      this._cacheEls[indexId] = el;\n      return el;\n    }\n\n    _getDraggableNodeEl (treeEl, ignoreCache = false) {\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[\"draggable\"];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      const els = treeEl.getElementsByClassName(\"qb-draggable\");\n      el = els.length ? els[0] : null;\n      this._cacheEls[\"draggable\"] = el;\n      return el;\n    }\n\n    _getPlaceholderNodeEl (treeEl, ignoreCache = false) {\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[\"placeholder\"];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      const els = treeEl.getElementsByClassName(\"qb-placeholder\");\n      el = els.length ? els[0] : null;\n      this._cacheEls[\"placeholder\"] = el;\n      return el;\n    }\n\n    _isScrollable(node) {\n      const overflowY = window.getComputedStyle(node)[\"overflow-y\"];\n      return (overflowY === \"scroll\" || overflowY === \"auto\") && (node.scrollHeight > node.offsetHeight);\n    }\n\n    _getScrollParent(node) {\n      if (node == null)\n        return null;\n    \n      if (node === document.body || this._isScrollable(node)) {\n        return node;\n      } else {\n        return this._getScrollParent(node.parentNode);\n      }\n    }\n\n    _getEventTarget = (e, dragStart) => {\n      return e && e.__mocked_window || document.body || window;\n    };\n\n    onDragStart = (id, dom, e) => {\n      let treeEl = dom.closest(\".query-builder\");\n      if (this._isUsingLegacyReactDomRender === undefined) {\n        this._isUsingLegacyReactDomRender = isUsingLegacyReactDomRender(treeEl);\n      }\n      document.body.classList.add(\"qb-dragging\");\n      treeEl.classList.add(\"qb-dragging\");\n      let treeElContainer = treeEl.closest(\".query-builder-container\") || treeEl;\n      treeElContainer = this._getScrollParent(treeElContainer) || document.body;\n      const scrollTop = treeElContainer.scrollTop;\n      \n      const _dragEl = this._getDraggableNodeEl(treeEl);\n      const _plhEl = this._getPlaceholderNodeEl(treeEl);\n\n      const tmpAllGroups = treeEl.querySelectorAll(\".group--children\");\n      const anyGroup = tmpAllGroups.length ? tmpAllGroups[0] : null;\n      let groupPadding;\n      if (anyGroup) {\n        groupPadding = window.getComputedStyle(anyGroup, null).getPropertyValue(\"padding-left\");\n        groupPadding = parseInt(groupPadding);\n      }\n\n      const dragging = {\n        id: id,\n        x: dom.offsetLeft,\n        y: dom.offsetTop,\n        w: dom.offsetWidth,\n        h: dom.offsetHeight,\n        itemInfo: this.tree.items[id],\n        paddingLeft: groupPadding,\n      };\n      const dragStart = {\n        id: id,\n        x: dom.offsetLeft,\n        y: dom.offsetTop,\n        scrollTop: scrollTop,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        itemInfo: clone(this.tree.items[id]),\n        treeEl: treeEl,\n        treeElContainer: treeElContainer,\n      };\n      const mousePos = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      };\n\n      const target = this._getEventTarget(e, dragStart);\n      this.eventTarget = target;\n      target.addEventListener(\"mousemove\", this.onDrag);\n      target.addEventListener(\"mouseup\", this.onDragEnd);\n\n      this.props.setDragStart(dragStart, dragging, mousePos);\n    };\n\n\n    onDrag = (e, doHandleDrag = true) => {\n      let dragging = Object.assign({}, this.props.dragging);\n      let startDragging = this.props.dragStart;\n      const paddingLeft = dragging.paddingLeft; //this.props.paddingLeft;\n      const treeElContainer = startDragging.treeElContainer;\n      const scrollTop = treeElContainer.scrollTop;\n      dragging.itemInfo = this.tree.items[dragging.id];\n      if (!dragging.itemInfo) {\n        return;\n      }\n\n      let mousePos = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      };\n      const startMousePos = {\n        clientX: startDragging.clientX,\n        clientY: startDragging.clientY,\n      };\n\n      if (e.__mock_dom) {\n        const treeEl = startDragging.treeEl;\n        const dragEl = this._getDraggableNodeEl(treeEl);\n        const plhEl = this._getPlaceholderNodeEl(treeEl);\n        e.__mock_dom({treeEl, dragEl, plhEl});\n      }\n\n      //first init plX/plY\n      if (!startDragging.plX) {\n        const treeEl = startDragging.treeEl;\n        const plhEl = this._getPlaceholderNodeEl(treeEl);\n        if (plhEl) {\n          startDragging.plX = plhEl.getBoundingClientRect().left + window.scrollX;\n          startDragging.plY = plhEl.getBoundingClientRect().top + window.scrollY;\n        }\n      }\n\n      const startX = startDragging.x;\n      const startY = startDragging.y;\n      const startClientX = startDragging.clientX;\n      const startClientY = startDragging.clientY;\n      const startScrollTop = startDragging.scrollTop;\n      const pos = {\n        x: startX + (e.clientX - startClientX),\n        y: startY + (e.clientY - startClientY) + (scrollTop - startScrollTop)\n      };\n      dragging.x = pos.x;\n      dragging.y = pos.y;\n      dragging.paddingLeft = paddingLeft;\n      dragging.mousePos = mousePos;\n      dragging.startMousePos = startMousePos;\n\n\n      this.props.setDragProgress(mousePos, dragging);\n\n      const moved = doHandleDrag ? this.handleDrag(dragging, e, CanMoveFn) : false;\n\n      if (!moved) {\n        if (e.preventDefault)\n          e.preventDefault();\n      }\n    };\n\n    onDragEnd = () => {\n      let treeEl = this.props.dragStart.treeEl;\n\n      this.props.setDragEnd();\n\n      treeEl.classList.remove(\"qb-dragging\");\n      document.body.classList.remove(\"qb-dragging\");\n      this._cacheEls = {};\n\n      const target = this.eventTarget || this._getEventTarget();\n      target.removeEventListener(\"mousemove\", this.onDrag);\n      target.removeEventListener(\"mouseup\", this.onDragEnd);\n    };\n    \n\n    handleDrag (dragInfo, e, canMoveFn) {\n      const canMoveBeforeAfterGroup = true;\n      const itemInfo = dragInfo.itemInfo;\n      const paddingLeft = dragInfo.paddingLeft;\n\n      let moveInfo = null;\n      const treeEl = this.props.dragStart.treeEl;\n      const dragId = dragInfo.id;\n      const dragEl = this._getDraggableNodeEl(treeEl);\n      const plhEl = this._getPlaceholderNodeEl(treeEl);\n      let dragRect, plhRect, hovRect, treeRect;\n      if (dragEl && plhEl) {\n        dragRect = dragEl.getBoundingClientRect();\n        plhRect = plhEl.getBoundingClientRect();\n        if (!plhRect.width) {\n          return;\n        }\n        let dragDirs = {hrz: 0, vrt: 0};\n        if (dragRect.top < plhRect.top)\n          dragDirs.vrt = -1; //up\n        else if (dragRect.bottom > plhRect.bottom)\n          dragDirs.vrt = +1; //down\n        if (dragRect.left > plhRect.left)\n          dragDirs.hrz = +1; //right\n        else if (dragRect.left < plhRect.left)\n          dragDirs.hrz = -1; //left\n\n        treeRect = treeEl.getBoundingClientRect();\n        const trgCoord = {\n          x: treeRect.left + (treeRect.right - treeRect.left) / 2,\n          y: dragDirs.vrt >= 0 ? dragRect.bottom : dragRect.top,\n        };\n        let hovCNodeEl;\n        if (e.__mocked_hov_container) {\n          hovCNodeEl = e.__mocked_hov_container;\n        } else {\n          const hovNodeEl = document.elementFromPoint(trgCoord.x, trgCoord.y-1);\n          hovCNodeEl = hovNodeEl ? hovNodeEl.closest(\".group-or-rule-container\") : null;\n          if (!hovCNodeEl && hovNodeEl && hovNodeEl.classList.contains(\"query-builder-container\")) {\n            // fix 2022-01-24 - get root .group-or-rule-container\n            const rootGroupContainer = hovNodeEl?.firstChild?.firstChild;\n            if (rootGroupContainer && rootGroupContainer.classList.contains(\"group-or-rule-container\")) {\n              hovCNodeEl = rootGroupContainer;\n            }\n          }\n        }\n        if (!hovCNodeEl) {\n          logger.log(\"out of tree bounds!\");\n        } else {\n          const isGroup = hovCNodeEl.classList.contains(\"group-container\");\n          const hovNodeId = hovCNodeEl.getAttribute(\"data-id\");\n          const hovEl = hovCNodeEl;\n          let doAppend = false;\n          let doPrepend = false;\n          if (hovEl) {\n            hovRect = hovEl.getBoundingClientRect();\n            const hovHeight = hovRect.bottom - hovRect.top;\n            const hovII = this.tree.items[hovNodeId];\n            let trgRect = null,\n              trgEl = null,\n              trgII = null,\n              altII = null; //for canMoveBeforeAfterGroup\n\n            if (dragDirs.vrt == 0) {\n              trgII = itemInfo;\n              trgEl = plhEl;\n              if (trgEl)\n                trgRect = trgEl.getBoundingClientRect();\n            } else {\n              if (isGroup) {\n                if (dragDirs.vrt > 0) { //down\n                  //take group header (for prepend only)\n                  const hovInnerEl = hovCNodeEl.getElementsByClassName(\"group--header\");\n                  const hovEl2 = hovInnerEl.length ? hovInnerEl[0] : null;\n                  if (hovEl2) {\n                    const hovRect2 = hovEl2.getBoundingClientRect();\n                    const hovHeight2 = hovRect2.bottom - hovRect2.top;\n                    const isOverHover = ((dragRect.bottom - hovRect2.top) > hovHeight2*3/4);\n                    if (isOverHover && hovII.top > dragInfo.itemInfo.top) {\n                      trgII = hovII;\n                      trgRect = hovRect2;\n                      trgEl = hovEl2;\n                      doPrepend = true;\n                    }\n                  }\n                } else if (dragDirs.vrt < 0) { //up\n                  if (hovII.lev >= itemInfo.lev) {\n                    //take whole group\n                    const isClimbToHover = ((hovRect.bottom - dragRect.top) >= 2);\n                    if (isClimbToHover && hovII.top < dragInfo.itemInfo.top) {\n                      trgII = hovII;\n                      trgRect = hovRect;\n                      trgEl = hovEl;\n                      doAppend = true;\n                    }\n                  }\n                }\n                if (!doPrepend && !doAppend || canMoveBeforeAfterGroup) {\n                  //take whole group and check if we can move before/after group\n                  const isOverHover = (dragDirs.vrt < 0 //up\n                    ? ((hovRect.bottom - dragRect.top) > (hovHeight-5))\n                    : ((dragRect.bottom - hovRect.top) > (hovHeight-5)));\n                  if (isOverHover) {\n                    if (!doPrepend && !doAppend) {\n                      trgII = hovII;\n                      trgRect = hovRect;\n                      trgEl = hovEl;\n                    }\n                    if (canMoveBeforeAfterGroup) {\n                      altII = hovII;\n                    }\n                  }\n                }\n              } else {\n                //check if we can move before/after group\n                const isOverHover = (dragDirs.vrt < 0 //up\n                  ? ((hovRect.bottom - dragRect.top) > hovHeight/2)\n                  : ((dragRect.bottom - hovRect.top) > hovHeight/2));\n                if (isOverHover) {\n                  trgII = hovII;\n                  trgRect = hovRect;\n                  trgEl = hovEl;\n                }\n              }\n            }\n\n            const isSamePos = (trgII && trgII.id == dragId);\n            if (trgRect) {\n              const dragLeftOffset = dragRect.left - treeRect.left;\n              const trgLeftOffset = trgRect.left - treeRect.left;\n              const _trgLev = trgLeftOffset / paddingLeft;\n              const dragLev = Math.max(0, Math.round(dragLeftOffset / paddingLeft));\n\n              //find all possible moves\n              let availMoves = [];\n              let altMoves = []; //alternatively can move after/before group, if can't move into it\n              if (isSamePos) {\n                //do nothing\n              } else {\n                if (isGroup) {\n                  if (doAppend) {\n                    availMoves.push([constants.PLACEMENT_APPEND, trgII, trgII.lev+1]);\n                  } else if (doPrepend) {\n                    availMoves.push([constants.PLACEMENT_PREPEND, trgII, trgII.lev+1]);\n                  }\n                  //alt\n                  if (canMoveBeforeAfterGroup && altII) {\n                    // fix 2022-01-24: do prepend/append instead of before/after for root\n                    const isToRoot = altII.lev == 0;\n                    // fix 2022-01-25: fix prepend/append instead of before/after for case_group\n                    const isToCase = altII.type == \"case_group\" && itemInfo.type != \"case_group\";\n                    let prevCaseId = altII.prev && this.tree.items[altII.prev].caseId;\n                    let nextCaseId = altII.next && this.tree.items[altII.next].caseId;\n                    if (itemInfo.caseId == prevCaseId)\n                      prevCaseId = null;\n                    if (itemInfo.caseId == nextCaseId)\n                      nextCaseId = null;\n                    const prevCase = prevCaseId && this.tree.items[prevCaseId];\n                    const nextCase = nextCaseId && this.tree.items[nextCaseId];\n\n                    if (dragDirs.vrt > 0) { //down\n                      if (isToRoot) {\n                        altMoves.push([constants.PLACEMENT_APPEND, altII, altII.lev+1]);\n                      } else if (isToCase && nextCase) {\n                        altMoves.push([constants.PLACEMENT_PREPEND, nextCase, nextCase.lev+1]);\n                      } else {\n                        altMoves.push([constants.PLACEMENT_AFTER, altII, altII.lev]);\n                      }\n                    } else if (dragDirs.vrt < 0) { //up\n                      if (isToRoot) {\n                        altMoves.push([constants.PLACEMENT_PREPEND, altII, altII.lev+1]);\n                      } else if (isToCase && prevCase) {\n                        altMoves.push([constants.PLACEMENT_APPEND, prevCase, prevCase.lev+1]);\n                      } else {\n                        altMoves.push([constants.PLACEMENT_BEFORE, altII, altII.lev]);\n                      }\n                    }\n                  }\n                }\n                if (!doAppend && !doPrepend) {\n                  if (dragDirs.vrt < 0) { //up\n                    availMoves.push([constants.PLACEMENT_BEFORE, trgII, trgII.lev]);\n                  } else if (dragDirs.vrt > 0) { //down\n                    availMoves.push([constants.PLACEMENT_AFTER, trgII, trgII.lev]);\n                  }\n                }\n              }\n              \n              //add case\n              const addCaseII = am => {\n                const toII = am[1];\n                const fromCaseII = itemInfo.caseId ? this.tree.items[itemInfo.caseId] : null;\n                const toCaseII = toII.caseId ? this.tree.items[toII.caseId] : null;\n                return [...am, fromCaseII, toCaseII];\n              };\n              availMoves = availMoves.map(addCaseII);\n              altMoves = altMoves.map(addCaseII);\n\n              //sanitize\n              availMoves = availMoves.filter(am => {\n                const placement = am[0];\n                const trg = am[1];\n                if ((placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER) && trg.parent == null)\n                  return false;\n                if (trg.collapsed && (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND))\n                  return false;\n\n                let isInside = (trg.id == itemInfo.id);\n                if (!isInside) {\n                  let tmp = trg;\n                  while (tmp.parent) {\n                    tmp = this.tree.items[tmp.parent];\n                    if (tmp.id == itemInfo.id) {\n                      isInside = true;\n                      break;\n                    }\n                  }\n                }\n                return !isInside;\n              }).map(am => {\n                const placement = am[0],\n                  toII = am[1],\n                  _lev = am[2],\n                  _fromCaseII = am[3],\n                  _toCaseII = am[4];\n                let toParentII = null;\n                if (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND)\n                  toParentII = toII;\n                else\n                  toParentII = this.tree.items[toII.parent];\n                if (toParentII && toParentII.parent == null)\n                  toParentII = null;\n                am[5] = toParentII;\n                return am;\n              });\n\n              let bestMode = null;\n              let filteredMoves = availMoves.filter(am => this.canMove(itemInfo, am[1], am[0], am[3], am[4], am[5], canMoveFn));\n              if (canMoveBeforeAfterGroup && filteredMoves.length == 0 && altMoves.length > 0) {\n                filteredMoves = altMoves.filter(am => this.canMove(itemInfo, am[1], am[0], am[3], am[4], am[5], canMoveFn));\n              }\n              const levs = filteredMoves.map(am => am[2]);\n              const curLev = itemInfo.lev;\n              const allLevs = levs.concat(curLev);\n              let closestDragLev = null;\n              if (allLevs.indexOf(dragLev) != -1)\n                closestDragLev = dragLev;\n              else if (dragLev > Math.max(...allLevs))\n                closestDragLev = Math.max(...allLevs);\n              else if (dragLev < Math.min(...allLevs))\n                closestDragLev = Math.min(...allLevs);\n              bestMode = filteredMoves.find(am => am[2] == closestDragLev);\n              if (!isSamePos && !bestMode && filteredMoves.length)\n                bestMode = filteredMoves[0];\n              moveInfo = bestMode;\n            }\n          }\n        }\n      }\n\n      if (moveInfo) {\n        this.move(itemInfo, moveInfo[1], moveInfo[0], moveInfo[3]);\n\n        // logger.log(\"DRAG-N-DROP\", JSON.stringify({\n        //   dragRect,\n        //   plhRect,\n        //   treeRect,\n        //   hovRect,\n        //   startMousePos: dragInfo.startMousePos,\n        //   mousePos: dragInfo.mousePos,\n        // }));\n        return true;\n      }\n\n      return false;\n    }\n\n    canMove (fromII, toII, placement, fromCaseII, toCaseII, toParentII, canMoveFn) {\n      if (!fromII || !toII)\n        return false;\n      if (fromII.id === toII.id)\n        return false;\n\n      const { canRegroup, canRegroupCases, maxNesting, maxNumberOfRules, canLeaveEmptyCase } = this.props.config.settings;\n      const newLev = toParentII ? toParentII.lev + 1 : toII.lev;\n      const isBeforeAfter = placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER;\n      const isPend = placement == constants.PLACEMENT_PREPEND || placement == constants.PLACEMENT_APPEND;\n      const isLev1 = isBeforeAfter && toII.lev == 1 || isPend && toII.lev == 0;\n      const isParentChange = fromII.parent != toII.parent;\n      const isStructChange = isPend || isParentChange;\n      // can't move `case_group` anywhere but before/after anoter `case_group`\n      const isForbiddenStructChange = fromII.type == \"case_group\" && !isLev1\n        // can't restruct `rule_group`\n        || fromII.parentType == \"rule_group\" || toII.type == \"rule_group\" || toII.parentType == \"rule_group\" \n        // only `case_group` can be placed under `switch_group`\n        || fromII.type != \"case_group\" && toII.type == \"case_group\" && isBeforeAfter\n        || fromII.type != \"case_group\" && toII.type == \"switch_group\"\n        // can't move rule/group to another case\n        || !canRegroupCases && fromII.caseId != toII.caseId;\n      const isLockedChange = toII.isLocked || fromII.isLocked || toParentII && toParentII.isLocked;\n\n      if (maxNesting && newLev > maxNesting)\n        return false;\n      \n      if (isStructChange && (!canRegroup || isForbiddenStructChange || isLockedChange))\n        return false;\n      \n      if (fromII.type != \"case_group\" && fromII.caseId != toII.caseId) {\n        const isLastFromCase = fromCaseII ? fromCaseII._height == 2 : false;\n        const newRulesInTargetCase = toCaseII ? toCaseII.leafsCount + 1 : 0;\n        if (maxNumberOfRules && newRulesInTargetCase > maxNumberOfRules)\n          return false;\n        if (isLastFromCase && !canLeaveEmptyCase)\n          return false;\n      }\n\n      if (fromII.type == \"case_group\" && (\n        fromII.isDefaultCase || toII.isDefaultCase\n        || toII.type == \"switch_group\" && placement == constants.PLACEMENT_APPEND\n      )) {\n        // leave default case alone\n        return false;\n      }\n\n      let res = true;\n      if (canMoveFn) {\n        res = canMoveFn(fromII.node.toJS(), toII.node.toJS(), placement, toParentII ? toParentII.node.toJS() : null);\n      }\n      return res;\n    }\n\n    move (fromII, toII, placement, toParentII) {\n      if (!this._isUsingLegacyReactDomRender) {\n        _isReorderingTree = true;\n      }\n      //logger.log(\"move\", fromII, toII, placement, toParentII);\n      this.props.actions.moveItem(fromII.path, toII.path, placement);\n    }\n\n    render() {\n      return <Builder\n        {...this.props}\n        onDragStart={this.onDragStart}\n      />;\n    }\n  };\n\n\nexport default (Builder, CanMoveFn = null) => {\n  const ConnectedSortableContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n        dragStart: state.dragStart,\n        mousePos: state.mousePos,\n      };\n    }, {\n      setDragStart: actions.drag.setDragStart,\n      setDragProgress: actions.drag.setDragProgress,\n      setDragEnd: actions.drag.setDragEnd,\n    },\n    null,\n    {\n      context\n    }\n  )(createSortableContainer(Builder, CanMoveFn));\n  ConnectedSortableContainer.displayName = \"ConnectedSortableContainer\";\n\n  return ConnectedSortableContainer;\n};\n\nexport { _isReorderingTree };\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { _isReorderingTree } from \"./SortableContainer\";\nconst classNames = require(\"classnames\");\n\n\nexport default (className) => (GroupOrRule) =>\n  class Draggable extends PureComponent {\n    static propTypes = {\n      isDraggingTempo: PropTypes.bool,\n      isDraggingMe: PropTypes.bool,\n      onDragStart: PropTypes.func,\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.wrapper = React.createRef();\n    }\n\n    handleDraggerMouseDown = (e) => {\n      var nodeId = this.props.id;\n      var dom = this.wrapper.current;\n        \n      if (this.props.onDragStart) {\n        this.props.onDragStart(nodeId, dom, e);\n      }\n    };\n\n    render () {\n      const {\n        isDraggingTempo,\n        isDraggingMe,\n        dragging,\n        ...otherProps\n      } = this.props;\n      const {\n        isTrueLocked,\n      } = otherProps;\n\n      let styles = {};\n      if (isDraggingMe && isDraggingTempo) {\n        if (_isReorderingTree) {\n          // don't apply old styles for dragging tempo during reorder\n        } else {\n          styles = {\n            top: dragging.y,\n            left: dragging.x,\n            width: dragging.w\n          };\n        }\n      }\n\n      const cn = classNames(className, \"group-or-rule\",\n        isDraggingMe && isDraggingTempo ? \"qb-draggable\" : null,\n        isDraggingMe && !isDraggingTempo ? \"qb-placeholder\" : null,\n        isTrueLocked ? \"locked\" : null\n      );\n\n      return (\n        <div\n          className={cn}\n          style={styles}\n          ref={this.wrapper}\n          data-id={this.props.id}\n        >\n          <GroupOrRule\n            handleDraggerMouseDown={this.handleDraggerMouseDown}\n            isDraggingMe={isDraggingMe}\n            isDraggingTempo={isDraggingTempo}\n            {...otherProps}\n          />\n        </div>\n      );\n    }\n\n  };\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {getFieldConfig, getOperatorConfig} from \"../../utils/configUtils\";\nimport keys from \"lodash/keys\";\nimport pickBy from \"lodash/pickBy\";\nimport mapValues from \"lodash/mapValues\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\n\n\nexport default class Operator extends PureComponent {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    selectedField: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    readonly: PropTypes.bool,\n    //actions\n    setOperator: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"config\", \"selectedField\", \"selectedOperator\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({config, selectedField, selectedOperator}) {\n    const fieldConfig = getFieldConfig(config, selectedField);\n    const operators = fieldConfig?.operators;\n    const operatorOptions \n      = mapValues(\n        pickBy(\n          config.operators, \n          (item, key) => operators?.indexOf(key) !== -1\n        ), \n        (_opts, op) => getOperatorConfig(config, op, selectedField)\n      );\n      \n    const items = this.buildOptions(config, operatorOptions, operators);\n\n    const isOpSelected = !!selectedOperator;\n    const currOp = isOpSelected ? operatorOptions[selectedOperator] : null;\n    const selectedOpts = currOp || {};\n    const placeholder = this.props.config.settings.operatorPlaceholder;\n    const selectedKey = selectedOperator;\n    const selectedKeys = isOpSelected ? [selectedKey] : null;\n    const selectedPath = selectedKeys;\n    const selectedLabel = selectedOpts.label;\n    \n    return {\n      placeholder, items,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, fieldConfig\n    };\n  }\n\n  buildOptions(config, fields, ops) {\n    if (!fields || !ops)\n      return null;\n\n    return keys(fields).sort((a, b) => (ops.indexOf(a) - ops.indexOf(b))).map(fieldKey => {\n      const field = fields[fieldKey];\n      const label = field.label;\n      return {\n        key: fieldKey,\n        path: fieldKey,\n        label,\n      };\n    });\n  }\n\n  render() {\n    const {config, customProps, setOperator, readonly, id, groupId} = this.props;\n    const {renderOperator} = config.settings;\n    const renderProps = {\n      id,\n      groupId,\n      config, \n      customProps, \n      readonly,\n      setField: setOperator,\n      ...this.meta\n    };\n    if (!renderProps.items)\n      return null;\n    return renderOperator(renderProps);\n  }\n\n\n}\n","import React, { PureComponent } from \"react\";\nimport Operator from \"./Operator\";\nimport {Col} from \"../utils\";\n\n\nexport default class OperatorWrapper extends PureComponent {\n  render() {\n    const {\n      config, selectedField, selectedOperator, setOperator, \n      selectedFieldPartsLabels, showOperator, showOperatorLabel, selectedFieldWidgetConfig, readonly, id, groupId\n    } = this.props;\n    const operator = showOperator\n            && <Col key={\"operators-for-\"+(selectedFieldPartsLabels || []).join(\"_\")} className=\"rule--operator\">\n              { config.settings.showLabels\n                    && <label className=\"rule--label\">{config.settings.operatorLabel}</label>\n              }\n              <Operator\n                key=\"operator\"\n                config={config}\n                selectedField={selectedField}\n                selectedOperator={selectedOperator}\n                setOperator={setOperator}\n                readonly={readonly}\n                id={id}\n                groupId={groupId}\n              />\n            </Col>;\n    const hiddenOperator = showOperatorLabel\n            && <Col key={\"operators-for-\"+(selectedFieldPartsLabels || []).join(\"_\")} className=\"rule--operator\">\n              <div className=\"rule--operator\">\n                {config.settings.showLabels\n                  ? <label className=\"rule--label\">&nbsp;</label>\n                  : null}\n                <span>{selectedFieldWidgetConfig.operatorInlineLabel}</span>\n              </div>\n            </Col>;\n    return [\n      operator,\n      hiddenOperator\n    ];\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {getFieldConfig} from \"../../utils/configUtils\";\nimport {getFieldPath, getFieldPathLabels} from \"../../utils/ruleUtils\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\n\n\nexport default class Field extends PureComponent {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    selectedField: PropTypes.string,\n    parentField: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    //actions\n    setField: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"selectedField\", \"config\", \"parentField\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({selectedField, config, parentField}) {\n    const selectedKey = selectedField;\n    const {maxLabelsLength, fieldSeparatorDisplay, fieldPlaceholder, fieldSeparator} = config.settings;\n    const isFieldSelected = !!selectedField;\n    const placeholder = !isFieldSelected ? truncateString(fieldPlaceholder, maxLabelsLength) : null;\n    const currField = isFieldSelected ? getFieldConfig(config, selectedKey) : null;\n    const selectedOpts = currField || {};\n\n    const selectedKeys = getFieldPath(selectedKey, config);\n    const selectedPath = getFieldPath(selectedKey, config, true);\n    const selectedLabel = this.getFieldLabel(currField, selectedKey, config);\n    const partsLabels = getFieldPathLabels(selectedKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel || parentField)\n      selectedFullLabel = null;\n    const selectedAltLabel = selectedOpts.label2;\n\n    const parentFieldPath = typeof parentField == \"string\" ? parentField.split(fieldSeparator) : parentField;\n    const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n    const sourceFields = parentField ? parentFieldConfig && parentFieldConfig.subfields : config.fields;\n    const items = this.buildOptions(parentFieldPath, config, sourceFields, parentFieldPath);\n\n    return {\n      placeholder, items, parentField,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n    };\n  }\n\n  getFieldLabel(fieldOpts, fieldKey, config) {\n    if (!fieldKey) return null;\n    let fieldSeparator = config.settings.fieldSeparator;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let fieldParts = Array.isArray(fieldKey) ? fieldKey : fieldKey.split(fieldSeparator);\n    let label = fieldOpts && fieldOpts.label || last(fieldParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  buildOptions(parentFieldPath, config, fields, path = null, optGroupLabel = null) {\n    if (!fields)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    return keys(fields).map(fieldKey => {\n      const field = fields[fieldKey];\n      const label = this.getFieldLabel(field, fieldKey, config);\n      const partsLabels = getFieldPathLabels(prefix+fieldKey, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label || parentFieldPath)\n        fullLabel = null;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n      const subpath = (path ? path : []).concat(fieldKey);\n      const disabled = field.disabled;\n            \n      if (field.hideForSelect)\n        return undefined;\n\n      if (field.type == \"!struct\") {\n        return {\n          disabled,\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          items: this.buildOptions(parentFieldPath, config, field.subfields, subpath, label)\n        };\n      } else {\n        return {\n          disabled,\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          grouplabel: optGroupLabel\n        };\n      }\n    }).filter(o => !!o);\n  }\n\n  render() {\n    const {config, customProps, setField, readonly, id, groupId} = this.props;\n    const {renderField} = config.settings;\n    const renderProps = {\n      id,\n      groupId,\n      config, \n      customProps, \n      readonly,\n      setField,\n      ...this.meta\n    };\n    return renderField(renderProps);\n  }\n\n}\n","import React, { PureComponent } from \"react\";\nimport Field from \"./Field\";\nimport {Col} from \"../utils\";\n\n\nexport default class FieldWrapper extends PureComponent {\n  render() {\n    const {config, selectedField, setField, parentField, classname, readonly, id, groupId} = this.props;\n    return (\n      <Col className={classname}>\n        { config.settings.showLabels\n                    && <label className=\"rule--label\">{config.settings.fieldLabel}</label>\n        }\n        <Field\n          config={config}\n          selectedField={selectedField}\n          parentField={parentField}\n          setField={setField}\n          customProps={config.settings.customFieldSelectProps}\n          readonly={readonly}\n          id={id}\n          groupId={groupId}\n        />\n      </Col>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {getOperatorConfig} from \"../../utils/configUtils\";\n\nexport default class OperatorOptions extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    operatorOptions: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    selectedField: PropTypes.string.isRequired,\n    selectedOperator: PropTypes.string.isRequired,\n    readonly: PropTypes.bool,\n    //actions\n    setOperatorOption: PropTypes.func.isRequired,\n  };\n\n  render() {\n    if (!this.props.selectedOperator)\n      return null;\n    const operatorDefinitions = getOperatorConfig(this.props.config, this.props.selectedOperator, this.props.selectedField);\n    if (typeof operatorDefinitions.options === \"undefined\") {\n      return null;\n    }\n\n    const { factory: optionsFactory, ...basicOptionsProps } = operatorDefinitions.options;\n    const optionsProps = Object.assign({}, basicOptionsProps, {\n      config: this.props.config,\n      field: this.props.selectedField,\n      operator: this.props.selectedOperator,\n      options: this.props.operatorOptions,\n      setOption: this.props.setOperatorOption,\n      readonly: this.props.readonly,\n    });\n    const optionsCmp = optionsFactory(optionsProps);\n    const name = this.props.selectedOperator;\n\n    return (\n      <div className={`rule--operator rule--operator--${name.toUpperCase()}`}>\n        {optionsCmp}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport RuleContainer from \"../containers/RuleContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport OperatorWrapper from \"../rule/OperatorWrapper\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport Widget from \"../rule/Widget\";\nimport OperatorOptions from \"../rule/OperatorOptions\";\nimport {getFieldConfig, getOperatorConfig, getFieldWidgetConfig} from \"../../utils/configUtils\";\nimport {getFieldPathLabels, getValueSourcesForFieldOp} from \"../../utils/ruleUtils\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, DragIcon, dummyFn, ConfirmFn} from \"../utils\";\nconst classNames = require(\"classnames\");\n\n\n@RuleContainer\n@Draggable(\"rule\")\n@ConfirmFn\nclass Rule extends PureComponent {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    selectedField: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    operatorOptions: PropTypes.object,\n    config: PropTypes.object.isRequired,\n    value: PropTypes.any, //depends on widget\n    valueSrc: PropTypes.any,\n    asyncListValues: PropTypes.array,\n    isDraggingMe: PropTypes.bool,\n    isDraggingTempo: PropTypes.bool,\n    parentField: PropTypes.string, //from RuleGroup\n    valueError: PropTypes.any,\n    isLocked: PropTypes.bool,\n    isTrueLocked: PropTypes.bool,\n    //path: PropTypes.instanceOf(Immutable.List),\n    //actions\n    handleDraggerMouseDown: PropTypes.func,\n    setField: PropTypes.func,\n    setOperator: PropTypes.func,\n    setOperatorOption: PropTypes.func,\n    setLock: PropTypes.func,\n    removeSelf: PropTypes.func,\n    setValue: PropTypes.func,\n    setValueSrc: PropTypes.func,\n    reordableNodesCnt: PropTypes.number,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.removeSelf = this.removeSelf.bind(this);\n    this.setLock = this.setLock.bind(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"selectedField\", \"selectedOperator\", \"config\", \"reordableNodesCnt\", \"isLocked\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({selectedField, selectedOperator, config, reordableNodesCnt, isLocked}) {\n    const selectedFieldPartsLabels = getFieldPathLabels(selectedField, config);\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    const isSelectedGroup = selectedFieldConfig && selectedFieldConfig.type == \"!struct\";\n    const isFieldAndOpSelected = selectedField && selectedOperator && !isSelectedGroup;\n    const selectedOperatorConfig = getOperatorConfig(config, selectedOperator, selectedField);\n    const selectedOperatorHasOptions = selectedOperatorConfig && selectedOperatorConfig.options != null;\n    const selectedFieldWidgetConfig = getFieldWidgetConfig(config, selectedField, selectedOperator) || {};\n    const hideOperator = selectedFieldWidgetConfig.hideOperator;\n\n    const showDragIcon = config.settings.canReorder && reordableNodesCnt > 1 && !isLocked;\n    const showOperator = selectedField && !hideOperator;\n    const showOperatorLabel = selectedField && hideOperator && selectedFieldWidgetConfig.operatorInlineLabel;\n    const showWidget = isFieldAndOpSelected;\n    const showOperatorOptions = isFieldAndOpSelected && selectedOperatorHasOptions;\n\n    return {\n      selectedFieldPartsLabels, selectedFieldWidgetConfig,\n      showDragIcon, showOperator, showOperatorLabel, showWidget, showOperatorOptions\n    };\n  }\n\n  setLock(lock) {\n    this.props.setLock(lock);\n  }\n\n  removeSelf() {\n    const {confirmFn} = this.props;\n    const {renderConfirm, removeRuleConfirmOptions: confirmOptions} = this.props.config.settings;\n    const doRemove = () => {\n      this.props.removeSelf();\n    };\n    if (confirmOptions && !this.isEmptyCurrentRule()) {\n      renderConfirm({...confirmOptions,\n        onOk: doRemove,\n        onCancel: null,\n        confirmFn: confirmFn\n      });\n    } else {\n      doRemove();\n    }\n  }\n\n  isEmptyCurrentRule() {\n    return !(\n      this.props.selectedField !== null\n            && this.props.selectedOperator !== null\n            && this.props.value.filter((val) => val !== undefined).size > 0\n    );\n  }\n\n  renderField() {\n    const {config, isLocked} = this.props;\n    const { immutableFieldsMode } = config.settings;\n\n    return <FieldWrapper\n      key=\"field\"\n      classname={\"rule--field\"}\n      config={config}\n      selectedField={this.props.selectedField}\n      setField={!immutableFieldsMode ? this.props.setField : dummyFn}\n      parentField={this.props.parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  renderOperator () {\n    const {config, isLocked} = this.props;\n    const {\n      selectedFieldPartsLabels, selectedFieldWidgetConfig, showOperator, showOperatorLabel\n    } = this.meta;\n    const { immutableOpsMode } = config.settings;\n\n    return <OperatorWrapper\n      key=\"operator\"\n      config={config}\n      selectedField={this.props.selectedField}\n      selectedOperator={this.props.selectedOperator}\n      setOperator={!immutableOpsMode ? this.props.setOperator : dummyFn}\n      selectedFieldPartsLabels={selectedFieldPartsLabels}\n      showOperator={showOperator}\n      showOperatorLabel={showOperatorLabel}\n      selectedFieldWidgetConfig={selectedFieldWidgetConfig}\n      readonly={immutableOpsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  renderWidget() {\n    const {config, valueError, isLocked} = this.props;\n    const { showWidget } = this.meta;\n    const { immutableValuesMode } = config.settings;\n    if (!showWidget) return null;\n\n    const widget = <Widget\n      key=\"values\"\n      field={this.props.selectedField}\n      parentField={this.props.parentField}\n      operator={this.props.selectedOperator}\n      value={this.props.value}\n      valueSrc={this.props.valueSrc}\n      asyncListValues={this.props.asyncListValues}\n      valueError={valueError}\n      config={config}\n      setValue={!immutableValuesMode ? this.props.setValue : dummyFn}\n      setValueSrc={!immutableValuesMode ? this.props.setValueSrc : dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n\n    return (\n      <Col key={\"widget-for-\"+this.props.selectedOperator} className=\"rule--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderOperatorOptions() {\n    const {config} = this.props;\n    const { showOperatorOptions } = this.meta;\n    const { immutableOpsMode, immutableValuesMode } = config.settings;\n    if (!showOperatorOptions) return null;\n\n    const opOpts = <OperatorOptions\n      key=\"operatorOptions\"\n      selectedField={this.props.selectedField}\n      selectedOperator={this.props.selectedOperator}\n      operatorOptions={this.props.operatorOptions}\n      setOperatorOption={!immutableOpsMode ? this.props.setOperatorOption : dummyFn}\n      config={config}\n      readonly={immutableValuesMode}\n    />;\n\n    return (\n      <Col key={\"op-options-for-\"+this.props.selectedOperator} className=\"rule--operator-options\">\n        {opOpts}\n      </Col>\n    );\n  }\n\n  renderBeforeWidget() {\n    const {config} = this.props;\n    const { renderBeforeWidget } = config.settings;\n    return renderBeforeWidget \n        && <Col key={\"before-widget-for-\" +this.props.selectedOperator} className=\"rule--before-widget\">\n          {typeof renderBeforeWidget === \"function\" ? renderBeforeWidget(this.props) : renderBeforeWidget}\n        </Col>;\n  }\n\n  renderAfterWidget() {\n    const {config} = this.props;\n    const { renderAfterWidget } = config.settings;\n    return renderAfterWidget \n        && <Col key={\"after-widget-for-\" +this.props.selectedOperator} className=\"rule--after-widget\">\n          {typeof renderAfterWidget === \"function\" ? renderAfterWidget(this.props) : renderAfterWidget}\n        </Col>;\n  }\n\n  renderError() {\n    const {config, valueError} = this.props;\n    const { renderRuleError, showErrorMessage } = config.settings;\n    const oneValueError = valueError && valueError.toArray().filter(e => !!e).shift() || null;\n    return showErrorMessage && oneValueError \n        && <div className=\"rule--error\">\n          {renderRuleError ? renderRuleError({error: oneValueError}) : oneValueError}\n        </div>;\n  }\n\n  renderDrag() {\n    const { showDragIcon } = this.meta;\n\n    return showDragIcon\n        && <span\n          key=\"rule-drag-icon\"\n          className={\"qb-drag-handler rule--drag-handler\"}\n          onMouseDown={this.props.handleDraggerMouseDown}\n        ><DragIcon /> </span>;\n  }\n\n  renderDel() {\n    const {config, isLocked} = this.props;\n    const {\n      deleteLabel, \n      immutableGroupsMode, \n      renderButton: Btn,\n      canDeleteLocked\n    } = config.settings;\n\n    return !immutableGroupsMode && (!isLocked || isLocked && canDeleteLocked) && (\n      <Btn \n        type=\"delRule\" onClick={this.removeSelf} label={deleteLabel} config={config}\n      />\n    );\n  }\n\n  renderLock() {\n    const {config, isLocked, isTrueLocked, id} = this.props;\n    const {\n      lockLabel, lockedLabel, showLock,\n      renderSwitch: Switch\n    } = config.settings;\n      \n    return showLock && !(isLocked && !isTrueLocked) && (\n      <Switch \n        type=\"lock\" id={id} value={isLocked} setValue={this.setLock} label={lockLabel} checkedLabel={lockedLabel} hideLabel={true} config={config}\n      />\n    );\n  }\n\n  render () {\n    const { showOperatorOptions, selectedFieldWidgetConfig } = this.meta;\n    const { valueSrc, value, config } = this.props;\n    const canShrinkValue = valueSrc.first() == \"value\" && !showOperatorOptions && value.size == 1 && selectedFieldWidgetConfig.fullWidth;\n    const { renderButtonGroup: BtnGrp } = config.settings;\n\n    const parts = [\n      this.renderField(),\n      this.renderOperator(),\n      this.renderBeforeWidget(),\n      this.renderWidget(),\n      this.renderAfterWidget(),\n      this.renderOperatorOptions(),\n    ];\n    const body = <div key=\"rule-body\" className={classNames(\"rule--body\", canShrinkValue && \"can--shrink--value\")}>{parts}</div>;\n\n    const error = this.renderError();\n    const drag = this.renderDrag();\n    const lock = this.renderLock();\n    const del = this.renderDel();\n      \n    return (\n      <>\n        {drag}\n        <div className=\"rule--body--wrapper\">\n          {body}{error}\n        </div>\n        <div className=\"rule--header\">\n          <BtnGrp config={config}>\n            {lock}\n            {del}\n          </BtnGrp>\n        </div>\n      </>\n    );\n  }\n\n}\n\n\nexport default Rule;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport mapValues from \"lodash/mapValues\";\nimport context from \"../../stores/context\";\nimport {pureShouldComponentUpdate, useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {connect} from \"react-redux\";\nimport {defaultGroupConjunction} from \"../../utils/defaultUtils\";\n\n\nconst createGroupContainer = (Group) => \n  class GroupContainer extends Component {\n    static propTypes = {\n      //tree: PropTypes.instanceOf(Immutable.Map).isRequired,\n      config: PropTypes.object.isRequired,\n      actions: PropTypes.object.isRequired, //{setConjunction: Funciton, removeGroup, addGroup, addRule, ...}\n      path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n      id: PropTypes.string.isRequired,\n      groupId: PropTypes.string,\n      not: PropTypes.bool,\n      conjunction: PropTypes.string,\n      children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n      onDragStart: PropTypes.func,\n      reordableNodesCnt: PropTypes.number,\n      field: PropTypes.string, // for RuleGroup\n      parentField: PropTypes.string, //from RuleGroup\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n      //connected:\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isDraggingTempo: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      useOnPropsChanged(this);\n\n      this.selectedConjunction = this._selectedConjunction(props);\n      this.conjunctionOptions = this._getConjunctionOptions(props);\n      this.dummyFn.isDummyFn = true;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = pureShouldComponentUpdate(this)(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          const draggingId = (nextProps.dragging.id || prevProps.dragging.id);\n          const isDraggingMe = draggingId == nextProps.id;\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (k == \"dragging\" && !isDraggingMe) {\n              changed = false; //dragging another item -> ignore\n            }\n            if (changed) {\n              chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    onPropsChanged(nextProps) {\n      const {config, id, conjunction} = nextProps;\n      const oldConfig = this.props.config;\n      const oldConjunction = this.props.conjunction;\n      if (oldConfig != config || oldConjunction != conjunction) {\n        this.selectedConjunction = this._selectedConjunction(nextProps);\n        this.conjunctionOptions = this._getConjunctionOptions(nextProps);\n      }\n    }\n\n    _getConjunctionOptions (props) {\n      return mapValues(props.config.conjunctions, (item, index) => ({\n        id: `conjunction-${props.id}-${index}`,\n        name: `conjunction[${props.id}]`,\n        key: index,\n        label: item.label,\n        checked: index === this._selectedConjunction(props),\n      }));\n    }\n\n    _selectedConjunction = (props) => {\n      props = props || this.props;\n      return props.conjunction || defaultGroupConjunction(props.config, props.field);\n    };\n\n    setConjunction = (conj = null) => {\n      this.props.actions.setConjunction(this.props.path, conj);\n    };\n\n    setNot = (not = null) => {\n      this.props.actions.setNot(this.props.path, not);\n    };\n\n    setLock = (lock = null) => {\n      this.props.actions.setLock(this.props.path, lock);\n    };\n\n    dummyFn = () => {};\n\n    removeSelf = () => {\n      this.props.actions.removeGroup(this.props.path);\n    };\n\n    addGroup = () => {\n      this.props.actions.addGroup(this.props.path);\n    };\n\n    addCaseGroup = () => {\n      this.props.actions.addCaseGroup(this.props.path);\n    };\n\n    addDefaultCaseGroup = () => {\n      this.props.actions.addDefaultCaseGroup(this.props.path);\n    };\n\n    addRule = () => {\n      this.props.actions.addRule(this.props.path);\n    };\n\n    // for RuleGroup\n    setField = (field) => {\n      this.props.actions.setField(this.props.path, field);\n    };\n\n    // for RuleGroupExt\n    setOperator = (operator) => {\n      this.props.actions.setOperator(this.props.path, operator);\n    };\n\n    setValue = (delta, value, type) => {\n      this.props.actions.setValue(this.props.path, delta, value, type);\n    };\n\n    render() {\n      const isDraggingMe = this.props.dragging.id == this.props.id;\n      const currentNesting = this.props.path.size;\n      const maxNesting = this.props.config.settings.maxNesting;\n      const isInDraggingTempo = !isDraggingMe && this.props.isDraggingTempo;\n\n      // Don't allow nesting further than the maximum configured depth and don't\n      // allow removal of the root group.\n      const allowFurtherNesting = typeof maxNesting === \"undefined\" || currentNesting < maxNesting;\n      const isRoot = currentNesting == 1;\n      return (\n        <div\n          className={\"group-or-rule-container group-container\"}\n          data-id={this.props.id}\n        >\n          {[\n            isDraggingMe ? <Group\n              key={\"dragging\"}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={true}\n              isDraggingTempo={true}\n              dragging={this.props.dragging}\n              isRoot={isRoot}\n              allowFurtherNesting={allowFurtherNesting}\n              conjunctionOptions={this.conjunctionOptions}\n              not={this.props.not}\n              selectedConjunction={this.selectedConjunction}\n              setConjunction={this.dummyFn}\n              setNot={this.dummyFn}\n              setLock={this.dummyFn}\n              removeSelf={this.dummyFn}\n              addGroup={this.dummyFn}\n              addCaseGroup={this.dummyFn}\n              addDefaultCaseGroup={this.dummyFn}\n              addRule={this.dummyFn}\n              setField={this.dummyFn}\n              setOperator={this.dummyFn}\n              setValue={this.dummyFn}\n              value={this.props.value || null}\n              config={this.props.config}\n              children1={this.props.children1}\n              actions={this.props.actions}\n              //tree={this.props.tree}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              selectedField={this.props.field || null}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            /> : null\n            ,\n            <Group\n              key={this.props.id}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={isDraggingMe}\n              isDraggingTempo={isInDraggingTempo}\n              onDragStart={this.props.onDragStart}\n              isRoot={isRoot}\n              allowFurtherNesting={allowFurtherNesting}\n              conjunctionOptions={this.conjunctionOptions}\n              not={this.props.not}\n              selectedConjunction={this.selectedConjunction}\n              setConjunction={isInDraggingTempo ? this.dummyFn : this.setConjunction}\n              setNot={isInDraggingTempo ? this.dummyFn : this.setNot}\n              setLock={isInDraggingTempo ? this.dummyFn : this.setLock}\n              removeSelf={isInDraggingTempo ? this.dummyFn : this.removeSelf}\n              addGroup={isInDraggingTempo ? this.dummyFn : this.addGroup}\n              addCaseGroup={isInDraggingTempo ? this.dummyFn : this.addCaseGroup}\n              addDefaultCaseGroup={isInDraggingTempo ? this.dummyFn : this.addDefaultCaseGroup}\n              addRule={isInDraggingTempo ? this.dummyFn : this.addRule}\n              setField={isInDraggingTempo ? this.dummyFn : this.setField}\n              setOperator={isInDraggingTempo ? this.dummyFn : this.setOperator}\n              setValue={isInDraggingTempo ? this.dummyFn : this.setValue}\n              value={this.props.value || null}\n              config={this.props.config}\n              children1={this.props.children1}\n              actions={this.props.actions}\n              //tree={this.props.tree}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              selectedField={this.props.field || null}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            />\n          ]}\n        </div>\n      );\n    }\n\n  };\n\n\nexport default (Group) => {\n  const ConnectedGroupContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n      };\n    },\n    null,\n    null,\n    {\n      context\n    }\n  )(createGroupContainer(Group));\n  ConnectedGroupContainer.displayName = \"ConnectedGroupContainer\";\n\n  return ConnectedGroupContainer;\n};\n","import React, { PureComponent } from \"react\";\n\nconst groupActionsPositionList = {\n  topLeft: \"group--actions--tl\",\n  topCenter: \"group--actions--tc\",\n  topRight: \"group--actions--tr\",\n  bottomLeft: \"group--actions--bl\",\n  bottomCenter: \"group--actions--bc\",\n  bottomRight: \"group--actions--br\"\n};\nconst defaultPosition = \"topRight\";\n\n\nexport class GroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, addGroup, removeSelf, setLock, isLocked, isTrueLocked, id,\n      canAddGroup, canAddRule, canDeleteGroup\n    } = this.props;\n    const {\n      immutableGroupsMode, addRuleLabel, addGroupLabel, delGroupLabel, groupActionsPosition, \n      renderButton: Btn, renderSwitch: Switch, renderButtonGroup: BtnGrp,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const position = groupActionsPositionList[groupActionsPosition || defaultPosition];\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn\n      type=\"addRule\" onClick={addRule} label={addRuleLabel} readonly={isLocked} config={config}\n    />;\n    const addGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type=\"addGroup\" onClick={addGroup} label={addGroupLabel} readonly={isLocked} config={config}\n    />;\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn\n      type=\"delGroup\" onClick={removeSelf} label={delGroupLabel} config={config}\n    />;\n\n    return (\n      <div className={`group--actions ${position}`}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {addGroupBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React, { Component, PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport startsWith from \"lodash/startsWith\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nconst classNames = require(\"classnames\");\nimport { Item } from \"./Item\";\nimport {GroupActions} from \"./GroupActions\";\nimport {ConfirmFn, DragIcon, dummyFn} from \"../utils\";\n\nconst defaultPosition = \"topRight\";\n\n\nexport class BasicGroup extends PureComponent {\n  static propTypes = {\n    //tree: PropTypes.instanceOf(Immutable.Map).isRequired,\n    reordableNodesCnt: PropTypes.number,\n    conjunctionOptions: PropTypes.object.isRequired,\n    allowFurtherNesting: PropTypes.bool.isRequired,\n    isRoot: PropTypes.bool.isRequired,\n    not: PropTypes.bool,\n    selectedConjunction: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    path: PropTypes.any, //instanceOf(Immutable.List)\n    children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n    isDraggingMe: PropTypes.bool,\n    isDraggingTempo: PropTypes.bool,\n    isLocked: PropTypes.bool,\n    isTrueLocked: PropTypes.bool,\n    //actions\n    handleDraggerMouseDown: PropTypes.func,\n    onDragStart: PropTypes.func,\n    addRule: PropTypes.func.isRequired,\n    addGroup: PropTypes.func.isRequired,\n    removeSelf: PropTypes.func.isRequired,\n    setConjunction: PropTypes.func.isRequired,\n    setNot: PropTypes.func.isRequired,\n    setLock: PropTypes.func.isRequired,\n    actions: PropTypes.object.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.removeSelf = this.removeSelf.bind(this);\n    this.setLock = this.setLock.bind(this);\n    this.renderItem = this.renderItem.bind(this);\n  }\n\n  isGroupTopPosition() {\n    return startsWith(this.props.config.settings.groupActionsPosition || defaultPosition, \"top\");\n  }\n\n  setLock(lock) {\n    this.props.setLock(lock);\n  }\n\n  removeSelf() {\n    const {confirmFn} = this.props;\n    const {renderConfirm, removeGroupConfirmOptions: confirmOptions} = this.props.config.settings;\n    const doRemove = () => {\n      this.props.removeSelf();\n    };\n    if (confirmOptions && !this.isEmptyCurrentGroup()) {\n      renderConfirm({...confirmOptions,\n        onOk: doRemove,\n        onCancel: null,\n        confirmFn: confirmFn\n      });\n    } else {\n      doRemove();\n    }\n  }\n\n  isEmptyCurrentGroup() {\n    const children = this.props.children1;\n    return !children || children.size == 0\n      || children.size == 1 && this.isEmpty(children.first());\n  }\n\n  isEmpty(item) {\n    const isGroup = (item.get(\"type\") == \"group\" || item.get(\"type\") == \"rule_group\");\n    return isGroup ? this.isEmptyGroup(item) : this.isEmptyRule(item);\n  }\n\n  isEmptyGroup(group) {\n    const children = group.get(\"children1\");\n    return !children || children.size == 0\n      || children.size == 1 && this.isEmpty(children.first());\n  }\n\n  isEmptyRule(rule) {\n    const properties = rule.get(\"properties\");\n    return !(\n      properties.get(\"field\") !== null\n          && properties.get(\"operator\") !== null\n          && properties.get(\"value\").filter((val) => val !== undefined).size > 0\n    );\n  }\n\n  render() {\n    return <>\n      {this.renderHeaderWrapper()}\n      {this.renderChildrenWrapper()}\n      {this.renderFooterWrapper()}\n    </>;\n  }\n\n  showNot() {\n    const {config} = this.props;\n    return config.settings.showNot;\n  }\n\n  // show conjs for 2+ children?\n  showConjs() {\n    const {conjunctionOptions, children1, config} = this.props;\n    const conjunctionCount = Object.keys(conjunctionOptions).length;\n    return conjunctionCount > 1 || this.showNot();\n  }\n\n  isOneChild() {\n    const {children1} = this.props;\n    return children1 ? children1.size < 2 : true;\n  }\n\n  renderChildrenWrapper() {\n    const {children1} = this.props;\n\n    return children1 && (\n      <div key=\"group-children\" className={classNames(\n        \"group--children\",\n        !this.showConjs() ? \"hide--conjs\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isOneChild() ? \"one--child\" : \"\",\n        this.childrenClassName()\n      )}>{this.renderChildren()}</div>\n    );\n  }\n\n  childrenClassName = () => \"\";\n\n  renderHeaderWrapper() {\n    const isGroupTopPosition = this.isGroupTopPosition();\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\",\n        this.isOneChild() ? \"one--child\" : \"\",\n      )}>\n        {this.renderHeader()}\n        {isGroupTopPosition && this.renderBeforeActions()}\n        {isGroupTopPosition && this.renderActions()}\n        {isGroupTopPosition && this.renderAfterActions()}\n      </div>\n    );\n  }\n\n  renderFooterWrapper() {\n    const isGroupTopPosition = this.isGroupTopPosition();\n    return !isGroupTopPosition && (\n      <div key=\"group-footer\" className='group--footer'>\n        {this.renderBeforeActions()}\n        {this.renderActions()}\n        {this.renderAfterActions()}\n      </div>\n    );\n  }\n\n  renderBeforeActions = () => {\n    const BeforeActions = this.props.config.settings.renderBeforeActions;\n    if (BeforeActions == undefined)\n      return null;\n\n    return typeof BeforeActions === \"function\" ? <BeforeActions {...this.props}/> : BeforeActions;\n  };\n\n  renderAfterActions = () => {\n    const AfterActions = this.props.config.settings.renderAfterActions;\n    if (AfterActions == undefined)\n      return null;\n\n    return typeof AfterActions === \"function\" ? <AfterActions {...this.props}/> : AfterActions;\n  };\n\n  renderActions() {\n    const {config, addRule, addGroup, isLocked, isTrueLocked, id} = this.props;\n\n    return <GroupActions\n      config={config}\n      addRule={addRule}\n      addGroup={addGroup}\n      canAddGroup={this.canAddGroup()}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  canAddGroup() {\n    return this.props.allowFurtherNesting;\n  }\n  canAddRule() {\n    const maxNumberOfRules = this.props.config.settings.maxNumberOfRules;\n    const totalRulesCnt = this.props.totalRulesCnt;\n    if (maxNumberOfRules) {\n      return totalRulesCnt < maxNumberOfRules;\n    }\n    return true;\n  }\n  canDeleteGroup() {\n    return !this.props.isRoot;\n  }\n\n  renderChildren() {\n    const {children1} = this.props;\n    return children1 ? children1.map(this.renderItem).toList() : null;\n  }\n\n  renderItem(item) {\n    const props = this.props;\n    const {config, actions, onDragStart, isLocked} = props;\n    const isRuleGroup = item.get(\"type\") == \"group\" && item.getIn([\"properties\", \"field\"]) != null;\n    const type = isRuleGroup ? \"rule_group\" : item.get(\"type\");\n    \n    return (\n      <Item\n        {...this.extraPropsForItem(item)}\n        key={item.get(\"id\")}\n        id={item.get(\"id\")}\n        groupId={props.id}\n        //path={props.path.push(item.get('id'))}\n        path={item.get(\"path\")}\n        type={type}\n        properties={item.get(\"properties\")}\n        config={config}\n        actions={actions}\n        children1={item.get(\"children1\")}\n        //tree={props.tree}\n        reordableNodesCnt={this.reordableNodesCntForItem(item)}\n        totalRulesCnt={this.totalRulesCntForItem(item)}\n        parentReordableNodesCnt={this.reordableNodesCnt()}\n        onDragStart={onDragStart}\n        isDraggingTempo={this.props.isDraggingTempo}\n        isParentLocked={isLocked}\n      />\n    );\n  }\n\n  extraPropsForItem(_item) {\n    return {};\n  }\n\n  reordableNodesCnt() {\n    if (this.props.isLocked)\n      return 0;\n    return this.props.reordableNodesCnt;\n  }\n\n  totalRulesCntForItem(_item) {\n    return this.props.totalRulesCnt;\n  }\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    return this.reordableNodesCnt();\n  }\n\n  showDragIcon() {\n    const { config, isRoot, isLocked } = this.props;\n    const reordableNodesCnt = this.reordableNodesCnt();\n    return config.settings.canReorder && !isRoot && reordableNodesCnt > 1 && !isLocked;\n  }\n\n  renderDrag() {\n    const { handleDraggerMouseDown } = this.props;\n    const drag = this.showDragIcon()\n      && <span\n        key=\"group-drag-icon\"\n        className={\"qb-drag-handler group--drag-handler\"}\n        onMouseDown={handleDraggerMouseDown}\n      ><DragIcon /> </span>;\n    return drag;\n  }\n\n  conjunctionOptions() {\n    const { conjunctionOptions } = this.props;\n    return conjunctionOptions;\n  }\n\n  renderConjs() {\n    const {\n      config, children1, id,\n      selectedConjunction, setConjunction, not, setNot, isLocked\n    } = this.props;\n\n    const {immutableGroupsMode, renderConjs: Conjs, showNot: _showNot, notLabel} = config.settings;\n    const conjunctionOptions = this.conjunctionOptions();\n    if (!this.showConjs())\n      return null;\n    if (!children1 || !children1.size)\n      return null;\n\n    const renderProps = {\n      disabled: this.isOneChild(),\n      readonly: immutableGroupsMode || isLocked,\n      selectedConjunction: selectedConjunction,\n      setConjunction: immutableGroupsMode ? dummyFn : setConjunction,\n      conjunctionOptions: conjunctionOptions,\n      config: config,\n      not: not || false,\n      id: id,\n      setNot: immutableGroupsMode ? dummyFn : setNot,\n      notLabel: notLabel,\n      showNot: this.showNot(),\n      isLocked: isLocked\n    };\n    return <Conjs {...renderProps} />;\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n}\n\nexport default GroupContainer(Draggable(\"group\")(ConfirmFn(BasicGroup)));\n","import React, { PureComponent } from \"react\";\n\nexport class RuleGroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, canAddRule, canDeleteGroup, removeSelf, \n      setLock, isLocked, isTrueLocked, id,\n    } = this.props;\n    const {\n      immutableGroupsMode, addRuleLabel, delGroupLabel,\n      renderButton: Btn, renderSwitch: Switch, renderButtonGroup: BtnGrp,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} hideLabel={true} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn \n      type=\"addRuleGroup\" onClick={addRule} label={addRuleLabel} readonly={isLocked} config={config}\n    />;\n\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn \n      type=\"delRuleGroup\" onClick={removeSelf} label={delGroupLabel} config={config}\n    />;\n\n    return (\n      <div className={\"group--actions\"}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {RuleGroupActions} from \"./RuleGroupActions\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {ConfirmFn} from \"../utils\";\n\n\n@GroupContainer\n@Draggable(\"group rule_group\")\n@ConfirmFn\nclass RuleGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    selectedField: PropTypes.string,\n    parentField: PropTypes.string,\n    setField: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n  }\n\n  childrenClassName = () => \"rule_group--children\";\n  \n  renderHeaderWrapper = () => null;\n  renderFooterWrapper = () => null;\n  renderConjs = () => null;\n  canAddGroup = () => false;\n  canAddRule = () => true;\n  canDeleteGroup = () => false;\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    const {children1} = this.props;\n    return children1.size;\n  }\n\n  renderChildrenWrapper() {\n    return (\n      <>\n        {this.renderDrag()}\n        {this.renderField()}\n        {this.renderActions()}\n        {super.renderChildrenWrapper()}\n      </>\n    );\n  }\n\n  renderField() {\n    const { config, selectedField, setField, parentField, id, groupId, isLocked } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    return <FieldWrapper\n      key=\"field\"\n      classname={\"group--field\"}\n      config={config}\n      selectedField={selectedField}\n      setField={setField}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderActions() {\n    const {config, addRule, isLocked, isTrueLocked, id} = this.props;\n\n    return <RuleGroupActions\n      config={config}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  extraPropsForItem(_item) {\n    return {\n      parentField: this.props.selectedField\n    };\n  }\n}\n\n\nexport default RuleGroup;\n","import React, { PureComponent } from \"react\";\n\nexport class RuleGroupExtActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, canAddRule, canDeleteGroup, removeSelf, \n      setLock, isLocked, isTrueLocked, id,\n    } = this.props;\n    const {\n      immutableGroupsMode, addSubRuleLabel, delGroupLabel,\n      renderButton: Btn, renderSwitch: Switch, renderButtonGroup: BtnGrp,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn \n      type=\"addRuleGroupExt\" onClick={addRule} label={addSubRuleLabel} readonly={isLocked} config={config}\n    />;\n\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn \n      type=\"delRuleGroup\" onClick={removeSelf} label={delGroupLabel} config={config}\n    />;\n\n    return (\n      <div className={\"group--actions group--actions--tr\"}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {RuleGroupExtActions} from \"./RuleGroupExtActions\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport OperatorWrapper from \"../rule/OperatorWrapper\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, ConfirmFn} from \"../utils\";\nimport {getFieldWidgetConfig, getFieldConfig} from \"../../utils/configUtils\";\nimport Widget from \"../rule/Widget\";\nconst classNames = require(\"classnames\");\n\n\n@GroupContainer\n@Draggable(\"group rule_group_ext\")\n@ConfirmFn\nclass RuleGroupExt extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    selectedField: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    value: PropTypes.any,\n    parentField: PropTypes.string,\n    setField: PropTypes.func,\n    setOperator: PropTypes.func,\n    setValue: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n  }\n\n  childrenClassName = () => \"rule_group_ext--children\";\n  \n  renderFooterWrapper = () => null;\n  canAddGroup = () => false;\n  canAddRule = () => true;\n  canDeleteGroup = () => true;\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeader()}\n        {this.renderGroupField()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderGroupField() {\n    return (\n      <div className={\"group--field--count--rule\"}>\n        {this.renderField()}\n        {this.renderOperator()}\n        {this.renderWidget()}\n      </div>\n    );\n  }\n\n  showNot() {\n    const {config, selectedField, selectedOperator} = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField) || {};\n    return selectedFieldConfig.showNot != undefined ? selectedFieldConfig.showNot : config.settings.showNot;\n  }\n\n  conjunctionOptions() {\n    const {config, selectedField, selectedOperator} = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField) || {};\n    let conjunctionOptions = super.conjunctionOptions();\n    if (selectedFieldConfig.conjunctions) {\n      let filtered = {};\n      for (let k of selectedFieldConfig.conjunctions) {\n        filtered[k] = conjunctionOptions[k];\n      }\n      conjunctionOptions = filtered;\n    }\n    return conjunctionOptions;\n  }\n\n  renderField() {\n    const { config, selectedField, setField, parentField, id, groupId, isLocked } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    return <FieldWrapper\n      key=\"field\"\n      classname={\"rule--field\"}\n      config={config}\n      selectedField={selectedField}\n      setField={setField}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderOperator() {\n    const {config, selectedField, selectedOperator, setField, setOperator, isLocked} = this.props;\n    const { immutableFieldsMode } = config.settings;\n    const selectedFieldWidgetConfig = getFieldWidgetConfig(config, selectedField, selectedOperator) || {};\n    const hideOperator = selectedFieldWidgetConfig.hideOperator;\n    const showOperatorLabel = selectedField && hideOperator && selectedFieldWidgetConfig.operatorInlineLabel;\n    const showOperator = selectedField && !hideOperator;\n\n    return <OperatorWrapper\n      key=\"operator\"\n      classname={\"group--operator\"}\n      config={config}\n      selectedField={selectedField}\n      selectedOperator={selectedOperator}\n      setField={setField}\n      setOperator={setOperator}\n      selectedFieldPartsLabels={[\"group\"]}\n      showOperator={showOperator}\n      showOperatorLabel={showOperatorLabel}\n      selectedFieldWidgetConfig={selectedFieldWidgetConfig}\n      readonly={immutableFieldsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  renderWidget() {\n    const {config, selectedField, selectedOperator, isLocked} = this.props;\n    const { immutableValuesMode } = config.settings;\n    const isFieldAndOpSelected = selectedField && selectedOperator;\n    const showWidget = isFieldAndOpSelected;\n    if (!showWidget) return null;\n\n    const widget = <Widget\n      key=\"values\"\n      isForRuleGruop={true}\n      field={this.props.selectedField}\n      operator={this.props.selectedOperator}\n      value={this.props.value}\n      valueSrc={\"value\"}\n      valueError={null}\n      config={config}\n      setValue={!immutableValuesMode ? this.props.setValue : dummyFn}\n      setValueSrc={dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n\n    return (\n      <Col key={\"widget-for-\"+this.props.selectedOperator} className=\"rule--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderActions() {\n    const {config, addRule, isLocked, isTrueLocked, id} = this.props;\n\n    return <RuleGroupExtActions\n      config={config}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    const {children1} = this.props;\n    return children1.size;\n  }\n\n  extraPropsForItem(_item) {\n    return {\n      parentField: this.props.selectedField\n    };\n  }\n}\n\n\nexport default RuleGroupExt;\n","import React, { PureComponent } from \"react\";\n\nconst groupActionsPositionList = {\n  topLeft: \"group--actions--tl\",\n  topCenter: \"group--actions--tc\",\n  topRight: \"group--actions--tr\",\n  bottomLeft: \"group--actions--bl\",\n  bottomCenter: \"group--actions--bc\",\n  bottomRight: \"group--actions--br\"\n};\nconst defaultPosition = \"topRight\";\n\n\nexport class SwitchGroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addCaseGroup, addDefaultCaseGroup, setLock, isLocked, isTrueLocked, id, canAddGroup, canAddDefault\n    } = this.props;\n    const {\n      immutableGroupsMode, addCaseLabel, addDefaultCaseLabel, groupActionsPosition, \n      renderButton: Btn, renderSwitch: Switch, renderButtonGroup: BtnGrp,\n      lockLabel, lockedLabel, showLock,\n    } = config.settings;\n    const position = groupActionsPositionList[groupActionsPosition || defaultPosition];\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addCaseGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type=\"addCaseGroup\" onClick={addCaseGroup} label={addCaseLabel} readonly={isLocked} config={config}\n    />;\n\n    const addDefaultCaseGroupBtn = !immutableGroupsMode && canAddDefault && !isLocked && <Btn\n      type=\"addDefaultCaseGroup\" onClick={addDefaultCaseGroup} label={addDefaultCaseLabel} readonly={isLocked} config={config}\n    />;\n\n    return (\n      <div className={`group--actions ${position}`}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addCaseGroupBtn}\n          {addDefaultCaseGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {SwitchGroupActions} from \"./SwitchGroupActions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, ConfirmFn} from \"../utils\";\nimport {getTotalReordableNodesCountInTree, getTotalRulesCountInTree} from \"../../utils/treeUtils\";\nconst classNames = require(\"classnames\");\n\n\n@GroupContainer\n@Draggable(\"group switch_group\")\n@ConfirmFn\nclass SwitchGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n  }\n\n  childrenClassName = () => \"switch_group--children\";\n  \n  renderFooterWrapper = () => null;\n  hasDefaultCase = () => {\n    return this.props.children1.size && this.props.children1.filter(c => c.get(\"children1\") == null).size > 0;\n  };\n  canAddGroup() {\n    const { maxNumberOfCases } = this.props.config.settings;\n    const totalCasesCnt = this.props.children1.size;\n    if (maxNumberOfCases) {\n      return totalCasesCnt < maxNumberOfCases;\n    }\n    return true;\n  }\n  canAddRule() {\n    return false;\n  }\n\n  reordableNodesCnt() {\n    // result will be passed to each case's `parentReordableNodesCnt` prop\n    const totalCasesCnt = this.props.children1.size;\n    let casesToReorder = totalCasesCnt;\n    if (this.hasDefaultCase()) {\n      casesToReorder--;\n    }\n    return casesToReorder;\n  }\n\n  totalRulesCntForItem(item) {\n    return getTotalRulesCountInTree(item);\n  }\n\n  reordableNodesCntForItem(item) {\n    if (this.props.isLocked)\n      return 0;\n    const { canLeaveEmptyCase, canRegroupCases } = this.props.config.settings;\n\n    const totalCasesCnt = this.props.children1.size;\n    let casesToReorder = totalCasesCnt;\n    if (this.hasDefaultCase()) {\n      casesToReorder--;\n    }\n\n    const nodesInCase = getTotalReordableNodesCountInTree(item);\n    let cnt = nodesInCase;\n    if (cnt == 1 && canRegroupCases && canLeaveEmptyCase && casesToReorder > 1)\n      cnt = 111;\n    return cnt;\n  }\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeader()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderConjs() {\n    const { renderSwitchPrefix } = this.props.config.settings;\n    return renderSwitchPrefix ? renderSwitchPrefix() : null;\n  }\n\n  showNot() {\n    return false;\n  }\n\n\n  renderActions() {\n    const {config, addCaseGroup, addDefaultCaseGroup, isLocked, isTrueLocked, id} = this.props;\n\n    return <SwitchGroupActions\n      config={config}\n      addCaseGroup={addCaseGroup}\n      addDefaultCaseGroup={addDefaultCaseGroup}\n      canAddDefault={!this.hasDefaultCase()}\n      canAddGroup={this.canAddGroup()}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n}\n\n\nexport default SwitchGroup;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {GroupActions} from \"./GroupActions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, ConfirmFn} from \"../utils\";\nimport Widget from \"../rule/Widget\";\nconst classNames = require(\"classnames\");\n\n\n@GroupContainer\n@Draggable(\"group case_group\")\n@ConfirmFn\nclass CaseGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    parentReordableNodesCnt: PropTypes.number,\n    value: PropTypes.any,\n    setValue: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n  }\n\n  isDefaultCase() {\n    return this.props.children1 == undefined;\n  }\n\n  reordableNodesCnt() {\n    // `parentReordableNodesCnt` is number of cases to reorder\n    return this.props.parentReordableNodesCnt;\n  }\n\n  reordableNodesCntForItem(_item) {\n    // `reordableNodesCnt` is number of nodes is current case\n    if (this.props.isLocked)\n      return 0;\n    return this.props.reordableNodesCnt;\n  }\n\n  totalRulesCntForItem(_item) {\n    // `totalRulesCnt` is number of nodes is current case\n    return this.props.totalRulesCnt;\n  }\n\n  showDragIcon() {\n    // default impl of `showDragIcon()` uses `this.reordableNodesCnt()`\n    if (this.isDefaultCase())\n      return false;\n    return super.showDragIcon();\n  }\n\n  childrenClassName = () => \"case_group--children\";\n  \n  renderFooterWrapper = () => null;\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeaderLeft()}\n        {this.renderHeaderCenter()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderChildrenWrapper() {\n    if (this.isDefaultCase())\n      return null;\n    // body has 2 columns: condition & value\n    return (\n      <div className={\"case_group--body\"}>\n        {this.renderCondition()}\n        {this.renderValue()}\n      </div>\n    );\n  }\n\n  renderHeaderLeft() {\n    if (this.isDefaultCase()) {\n      const { defaultCaseLabel } = this.props.config.settings;\n      return defaultCaseLabel || \"\";\n    }\n    // default impl:\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderCondition() {\n    if (this.isDefaultCase())\n      return null;\n    return super.renderChildrenWrapper();\n  }\n\n  renderHeaderCenter() {\n    if (this.isDefaultCase())\n      return this.renderValue();\n    else\n      return null;\n  }\n\n  canAddGroup() {\n    if (this.isDefaultCase())\n      return false;\n    return super.canAddGroup();\n  }\n\n  canAddRule() {\n    if (this.isDefaultCase())\n      return false;\n    return super.canAddRule();\n  }\n\n  renderValue() {\n    const { config, isLocked, value, setValue, id } = this.props;\n    const { immutableValuesMode } = config.settings;\n\n    const widget = <Widget\n      key=\"values\"\n      isCaseValue={true}\n      field={\"!case_value\"}\n      operator={null}\n      value={value}\n      valueSrc={\"value\"}\n      valueError={null}\n      config={config}\n      setValue={!immutableValuesMode ? setValue : dummyFn}\n      setValueSrc={dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={id}\n      groupId={null}\n    />;\n\n    return (\n      <Col className=\"case_group--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderActions() {\n    const {config, addGroup, addRule, isLocked, isTrueLocked, id} = this.props;\n    return <GroupActions\n      config={config}\n      addGroup={addGroup}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canAddGroup={this.canAddGroup()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  isEmptyCurrentGroup() {\n    // used to confirm self-deletion\n    const { value } = this.props;\n    const oneValue = value && value.size ? value.get(0) : null;\n    const hasValue = oneValue != null && (Array.isArray(oneValue) ? oneValue.length > 0 : true);\n    return super.isEmptyCurrentGroup() && !hasValue;\n  }\n\n}\n\n\nexport default CaseGroup;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Rule from \"./Rule\";\nimport Group from \"./Group\";\nimport RuleGroup from \"./RuleGroup\";\nimport RuleGroupExt from \"./RuleGroupExt\";\nimport SwitchGroup from \"./SwitchGroup\";\nimport CaseGroup from \"./CaseGroup\";\n\nconst types = [\n  \"rule\",\n  \"group\",\n  \"rule_group\",\n  \"switch_group\",\n  \"case_group\"\n];\n\nconst getProperties = (props) => {\n  const properties = props.properties.toObject();\n  const result = {...properties};\n  if (props.isParentLocked) {\n    result.isLocked = true;\n  }\n  if (properties.isLocked) {\n    result.isTrueLocked = true;\n  }\n  return result;\n};\n\nconst typeMap = {\n  rule: (props) => (\n    <Rule\n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      config={props.config}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      parentField={props.parentField}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  group: (props) => (\n    <Group \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      //tree={props.tree}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  rule_group: (props) => (\n    <RuleGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      //tree={props.tree}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  rule_group_ext: (props) => (\n    <RuleGroupExt \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      //tree={props.tree}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  switch_group: (props) => (\n    <SwitchGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      //tree={props.tree}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  case_group: (props) => (\n    <CaseGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      //tree={props.tree}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n};\n\n\nclass Item extends PureComponent {\n  static propTypes = {\n    //tree: PropTypes.instanceOf(Immutable.Map).isRequired,\n    config: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    type: PropTypes.oneOf(types).isRequired,\n    path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n    properties: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n    actions: PropTypes.object.isRequired,\n    reordableNodesCnt: PropTypes.number,\n    onDragStart: PropTypes.func,\n    parentField: PropTypes.string, //from RuleGroup\n    isDraggingTempo: PropTypes.bool,\n    isParentLocked: PropTypes.bool,\n  };\n\n  render() {\n    const { type, ...props } = this.props;\n    const mode = props.properties.get(\"mode\");\n    const postfix = mode == \"array\" ? \"_ext\" : \"\";    \n    const renderItem = props.config.settings.renderItem;\n    let Cmp = typeMap[type + postfix];\n    if (renderItem) {\n      return renderItem({...props, type, itemComponent: Cmp});\n    }\n    if (!Cmp) return null;\n    return Cmp(props);\n  }\n}\n\nexport { Item };\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Immutable, {Map} from \"immutable\";\nimport { Item } from \"./item/Item\";\nimport SortableContainer from \"./containers/SortableContainer\";\nimport {getTotalReordableNodesCountInTree, getTotalRulesCountInTree} from \"../utils/treeUtils\";\nimport uuid from \"../utils/uuid\";\nimport {pureShouldComponentUpdate} from \"../utils/reactUtils\";\n\n\n@SortableContainer\nexport default class Builder extends Component {\n  static propTypes = {\n    tree: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    config: PropTypes.object.isRequired,\n    actions: PropTypes.object.isRequired,\n    onDragStart: PropTypes.func,\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const prevProps = this.props;\n    let should = pureShouldComponentUpdate(this)(nextProps, nextState);\n    if (should) {\n      let chs = [];\n      for (let k in nextProps) {\n        let changed = (nextProps[k] !== prevProps[k]);\n        if (changed && k != \"__isInternalValueChange\") {\n          chs.push(k);\n        }\n      }\n      if (!chs.length)\n        should = false;\n      //optimize render\n      if (chs.length == 1 && chs[0] == \"tree\" && nextProps.__isInternalValueChange)\n        should = false;\n    }\n    return should;\n  }\n\n  constructor(props) {\n    super(props);\n\n    this._updPath(props);\n  }\n\n  _updPath (props) {\n    const id = props.tree.get(\"id\");\n    this.path = Immutable.List.of(id);\n  }\n\n  render() {\n    const tree = this.props.tree;\n    const rootType = tree.get(\"type\");\n    const isTernary = rootType == \"switch_group\";\n    const reordableNodesCnt = isTernary ? null : getTotalReordableNodesCountInTree(tree);\n    const totalRulesCnt = isTernary ? null : getTotalRulesCountInTree(tree);\n    const id = tree.get(\"id\");\n    return (\n      <Item \n        key={id}\n        id={id}\n        path={this.path}\n        type={rootType}\n        properties={tree.get(\"properties\") || new Map()}\n        config={this.props.config}\n        actions={this.props.actions}\n        children1={tree.get(\"children1\") || new Map()}\n        //tree={tree}\n        reordableNodesCnt={reordableNodesCnt}\n        totalRulesCnt={totalRulesCnt}\n        parentReordableNodesCnt={0}\n        onDragStart={this.props.onDragStart}\n      />\n    );\n  }\n}\n","import {defaultValue} from \"../utils/stuff\";\nimport {getFieldConfig, getOperatorConfig} from \"../utils/configUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {formatFieldName} from \"../utils/ruleUtils\";\nimport {completeValue} from \"../utils/funcUtils\";\nimport {Map} from \"immutable\";\n\n/*\n Build tree to http://querybuilder.js.org/ like format\n\n Example:\n {\n    \"condition\": \"AND\",\n    \"rules\": [\n        {\n            \"id\": \"price\",\n            \"field\": \"price\",\n            \"type\": \"double\",\n            \"input\": \"text\",\n            \"operator\": \"less\",\n            \"value\": \"10.25\"\n        },\n        {\n            \"condition\": \"OR\",\n            \"rules\": [\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"2\"\n                },\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"1\"\n                }\n            ]\n        }\n    ]\n }\n */\n\n\nexport const queryBuilderFormat = (item, config) => {\n  //meta is mutable\n  let meta = {\n    usedFields: []\n  };\n  const res = formatItem(item, config, meta);\n  if (!res)\n    return undefined;\n  return {\n    ...res, \n    ...meta\n  };\n};\n\n\nconst formatItem = (item, config, meta) => {\n  if (!item) return undefined;\n\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") && children && children.size) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  const id = item.get(\"id\");\n\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const not = properties.get(\"not\");\n\n  const resultQuery = {\n    id,\n    rules: list.toList(),\n    condition: conjunction.toUpperCase(),\n    not,\n  };\n  return resultQuery;\n};\n\n\nconst formatRule = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const id = item.get(\"id\");\n\n  const operator = properties.get(\"operator\");\n  const options = properties.get(\"operatorOptions\");\n  let field = properties.get(\"field\");\n  let value = properties.get(\"value\");\n  let valueSrc = properties.get(\"valueSrc\");\n  let valueType = properties.get(\"valueType\");\n  const hasUndefinedValues = value.filter(v => v === undefined).size > 0;\n\n  if (field == null || operator == null || hasUndefinedValues)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const fieldType = fieldDefinition.type || \"undefined\";\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  const typeConfig = config.types[fieldDefinition.type] || {};\n  const fieldName = formatFieldName(field, config, meta);\n\n  if (value.size < cardinality)\n    return undefined;\n\n  if (meta.usedFields.indexOf(field) == -1)\n    meta.usedFields.push(field);\n  value = value.toArray();\n  valueSrc = valueSrc.toArray();\n  valueType = valueType.toArray();\n  let values = [];\n  for (let i = 0 ; i < value.length ; i++) {\n    const val = {\n      type: valueType[i],\n      value: value[i],\n    };\n    values.push(val);\n    if (valueSrc[i] == \"field\") {\n      const secondField = value[i];\n      if (meta.usedFields.indexOf(secondField) == -1)\n        meta.usedFields.push(secondField);\n    }\n  }\n  let operatorOptions = options ? options.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length)\n    operatorOptions = null;\n      \n  let ruleQuery = {\n    id,\n    fieldName,\n    type: fieldType,\n    input: typeConfig.mainWidget,\n    operator,\n  };\n  if (operatorOptions)\n    ruleQuery.operatorOptions = operatorOptions;\n  ruleQuery.values = values;\n  return ruleQuery;\n};\n","import {defaultValue} from \"../utils/stuff\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig\n} from \"../utils/configUtils\";\nimport {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {completeValue} from \"../utils/funcUtils\";\nimport {Map} from \"immutable\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\n\n// http://jsonlogic.com/\n\n\nexport const jsonLogicFormat = (item, config) => {\n  //meta is mutable\n  let meta = {\n    usedFields: [],\n    errors: []\n  };\n  \n  const logic = formatItem(item, config, meta, true);\n  \n  // build empty data\n  const {errors, usedFields} = meta;\n  const {fieldSeparator} = config.settings;\n  let data = {};\n  for (let ff of usedFields) {\n    const def = getFieldConfig(config, ff) || {};\n    const parts = ff.split(fieldSeparator);\n    let tmp = data;\n    for (let i = 0 ; i < parts.length ; i++) {\n      const p = parts[i];\n      const pdef = getFieldConfig(config, parts.slice(0, i+1)) || {};\n      if (i != parts.length - 1) {\n        if (pdef.type == \"!group\" && pdef.mode != \"struct\") {\n          if (!tmp[p])\n            tmp[p] = [{}];\n          tmp = tmp[p][0];\n        } else {\n          if (!tmp[p])\n            tmp[p] = {};\n          tmp = tmp[p];\n        }\n      } else {\n        if (!tmp[p])\n          tmp[p] = null; // can use def.type for sample values\n      }\n    }\n  }\n    \n  return {\n    errors,\n    logic,\n    data,\n  };\n};\n\n\nconst formatItem = (item, config, meta, isRoot, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const isLocked = properties.get(\"isLocked\");\n  const {lockedOp} = config.settings.jsonLogic;\n  let ret;\n  if (type === \"group\" || type === \"rule_group\") {\n    ret = formatGroup(item, config, meta, isRoot, parentField);\n  } else if (type === \"rule\") {\n    ret = formatRule(item, config, meta, parentField);\n  }\n  if (isLocked && ret && lockedOp) {\n    ret = { [lockedOp] : ret };\n  }\n  return ret;\n};\n\n\nconst formatGroup = (item, config, meta, isRoot, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\");\n  const field = properties.get(\"field\");\n  if (!children) return undefined;\n  \n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n  const conj = conjunctionDefinition.jsonLogicConj || conjunction.toLowerCase();\n  const not = properties.get(\"not\");\n  if (conj != \"and\" && conj != \"or\") {\n    meta.errors.push(`Conjunction ${conj} is not supported`);\n    return undefined;\n  }\n\n  const isRuleGroup = (type === \"rule_group\" && !isRoot);\n  const groupField = isRuleGroup && mode != \"struct\" ? field : parentField;\n  const groupOperator = properties.get(\"operator\");\n  const groupOperatorDefinition = groupOperator && getOperatorConfig(config, groupOperator, field) || null;\n  const formattedValue = formatItemValue(config, properties, meta, groupOperator, parentField);\n  const isGroup0 = isRuleGroup && (!groupOperator || groupOperatorDefinition.cardinality == 0);\n\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, false, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  \n  if (isRuleGroup && mode != \"struct\" && !isGroup0) {\n    // \"count\" rule can have no \"having\" children, but should have number value\n    if (formattedValue == undefined)\n      return undefined;\n  } else {\n    if (!list.size)\n      return undefined;\n  }\n\n  let resultQuery = {};\n  if (list.size == 1 && !isRoot)\n    resultQuery = list.first();\n  else\n    resultQuery[conj] = list.toList().toJS();\n  \n  // revert\n  if (not) {\n    resultQuery = { \"!\": resultQuery };\n  }\n\n  // rule_group (issue #246)\n  if (isRuleGroup && mode != \"struct\") {\n    const formattedField = formatField(meta, config, field, parentField);\n    if (isGroup0) {\n      // config.settings.groupOperators\n      const op = groupOperator || \"some\";\n      resultQuery = {\n        [op]: [\n          formattedField,\n          resultQuery\n        ]\n      };\n    } else {\n      // there is rule for count\n      const filter = !list.size \n        ? formattedField\n        : {\n          \"filter\": [\n            formattedField,\n            resultQuery\n          ]\n        };\n      const count = {\n        \"reduce\": [\n          filter,\n          { \"+\": [1, { var: \"accumulator\" }] },\n          0\n        ]\n      };\n      resultQuery = formatLogic(config, properties, count, formattedValue, groupOperator);\n    }\n  }\n  \n  return resultQuery;\n};\n\n\nconst formatRule = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n\n  let operator = properties.get(\"operator\");\n  let operatorOptions = properties.get(\"operatorOptions\");\n  operatorOptions = operatorOptions ? operatorOptions.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length)\n    operatorOptions = null;\n\n  if (field == null || operator == null)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  let operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDefinition.reversedOp;\n  let revOperatorDefinition = getOperatorConfig(config, reversedOp, field) || {};\n\n  // check op\n  let isRev = false;\n  if (!operatorDefinition.jsonLogic && !revOperatorDefinition.jsonLogic) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  if (!operatorDefinition.jsonLogic && revOperatorDefinition.jsonLogic) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [operatorDefinition, revOperatorDefinition] = [revOperatorDefinition, operatorDefinition];\n  }\n\n  const formattedValue = formatItemValue(config, properties, meta, operator, parentField);\n  if (formattedValue === undefined)\n    return undefined;\n\n  const formattedField = formatField(meta, config, field, parentField);\n\n  return formatLogic(config, properties, formattedField, formattedValue, operator, operatorOptions, fieldDefinition, isRev);\n};\n\n\nconst formatItemValue = (config, properties, meta, operator, parentField) => {\n  const field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  if (iValue == undefined)\n    return undefined;\n  \n  let valueSrcs = [];\n  let valueTypes = [];\n  let oldUsedFields = meta.usedFields;\n  const fvalue = iValue.map((currentValue, ind) => {\n    const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n    const valueType = iValueType ? iValueType.get(ind) : null;\n    const cValue = completeValue(currentValue, valueSrc, config);\n    const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDef = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n    const fv = formatValue(\n      meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDefinition, operator, operatorDefinition, parentField, asyncListValues\n    );\n    if (fv !== undefined) {\n      valueSrcs.push(valueSrc);\n      valueTypes.push(valueType);\n    }\n    return fv;\n  });\n  const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n  if (fvalue.size < cardinality || hasUndefinedValues) {\n    meta.usedFields = oldUsedFields; // restore\n    return undefined;\n  }\n  return cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField = null, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue, parentField);\n  } else if (typeof fieldWidgetDef.jsonLogic === \"function\") {\n    const fn = fieldWidgetDef.jsonLogic;\n    const args = [\n      currentValue,\n      {\n        ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n        asyncListValues\n      },\n      //useful options: valueFormat for date/time\n      omit(fieldWidgetDef, [\"formatValue\", \"mongoFormatValue\", \"sqlFormatValue\", \"jsonLogic\", \"elasticSearchFormatValue\", \"spelFormatValue\"]),\n    ];\n    if (operator) {\n      args.push(operator);\n      args.push(operatorDef);\n    }\n    ret = fn(...args);\n  } else {\n    ret = currentValue;\n  }\n  return ret;\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentField = null) => {\n  const funcKey = currentValue.get(\"func\");\n  const args = currentValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig.jsonLogic) {\n    meta.errors.push(`Func ${funcKey} is not supported`);\n    return undefined;\n  }\n\n  let formattedArgs = {};\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldDef, argConfig, null, null, parentField\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    if (formattedArgVal !== undefined) { // skip optional in the end\n      formattedArgs[argKey] = formattedArgVal;\n    }\n  }\n  const formattedArgsArr = Object.values(formattedArgs);\n\n  let ret;\n  if (typeof funcConfig.jsonLogic === \"function\") {\n    const fn = funcConfig.jsonLogic;\n    const args = [\n      formattedArgs,\n    ];\n    ret = fn(...args);\n  } else {\n    const funcName = funcConfig.jsonLogic || funcKey;\n    const isMethod = !!funcConfig.jsonLogicIsMethod;\n    if (isMethod) {\n      const [obj, ...params] = formattedArgsArr;\n      if (params.length) {\n        ret = { \"method\": [ obj, funcName, params ] };\n      } else {\n        ret = { \"method\": [ obj, funcName ] };\n      }\n    } else {\n      ret = { [funcName]: formattedArgsArr };\n    }\n  }\n  return ret;\n};\n\n\nconst formatField = (meta, config, field, parentField = null) => {\n  const {fieldSeparator, jsonLogic} = config.settings;\n\n  let ret;\n  if (field) {\n    if (Array.isArray(field))\n      field = field.join(fieldSeparator);\n    const fieldDef = getFieldConfig(config, field) || {};\n    let fieldName = field;\n    if (fieldDef.fieldName) {\n      fieldName = fieldDef.fieldName;\n    }\n    if (parentField) {\n      const parentFieldDef = getFieldConfig(config, parentField) || {};\n      let parentFieldName = parentField;\n      if (parentFieldDef.fieldName) {\n        parentFieldName = parentFieldDef.fieldName;\n      }\n      if (fieldName.indexOf(parentFieldName + fieldSeparator) == 0) {\n        fieldName = fieldName.slice((parentFieldName + fieldSeparator).length);\n      } else {\n        meta.errors.push(`Can't cut group ${parentFieldName} from field ${fieldName}`);\n      }\n    }\n    let varName = fieldDef.jsonLogicVar || (fieldDef.type == \"!group\" ? jsonLogic.groupVarKey : \"var\");\n    ret = { [varName] : fieldName };\n    if (meta.usedFields.indexOf(field) == -1)\n      meta.usedFields.push(field);\n  }\n  return ret;\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, formattedField, formattedValue) => {\n  let formatteOp = operator;\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  const isReverseArgs = defaultValue(operatorDefinition._jsonLogicIsRevArgs, false);\n  if (typeof operatorDefinition.jsonLogic == \"string\")\n    formatteOp = operatorDefinition.jsonLogic;\n  const rangeOps = [\"<\", \"<=\", \">\", \">=\"];\n  const eqOps = [\"==\", \"!=\"];\n  const fn = (field, op, val, opDef, opOpts) => {\n    if (cardinality == 0 && eqOps.includes(formatteOp))\n      return { [formatteOp]: [formattedField, null] };\n    else if (cardinality == 0)\n      return { [formatteOp]: formattedField };\n    else if (cardinality == 1 && isReverseArgs)\n      return { [formatteOp]: [formattedValue, formattedField] };\n    else if (cardinality == 1)\n      return { [formatteOp]: [formattedField, formattedValue] };\n    else if (cardinality == 2 && rangeOps.includes(formatteOp))\n      return { [formatteOp]: [formattedValue[0], formattedField, formattedValue[1]] };\n    else\n      return { [formatteOp]: [formattedField, ...formattedValue] };\n  };\n  return fn;\n};\n\nconst formatLogic = (config, properties, formattedField, formattedValue, operator, operatorOptions = null, fieldDefinition = null, isRev = false) => {\n  const field = properties.get(\"field\");\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  let fn = typeof operatorDefinition.jsonLogic == \"function\" \n    ? operatorDefinition.jsonLogic \n    : buildFnToFormatOp(operator, operatorDefinition, formattedField, formattedValue);\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    omit(operatorDefinition, [\"formatOp\", \"mongoFormatOp\", \"sqlFormatOp\", \"jsonLogic\", \"spelFormatOp\"]),\n    operatorOptions,\n    fieldDefinition,\n  ];\n  let ruleQuery = fn(...args);\n\n  if (isRev) {\n    ruleQuery = { \"!\": ruleQuery };\n  }\n\n  return ruleQuery;\n};\n","import {defaultValue} from \"../utils/stuff\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig\n} from \"../utils/configUtils\";\nimport {getFieldPath, getFieldPathLabels, getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {completeValue} from \"../utils/funcUtils\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\nimport {Map} from \"immutable\";\nimport {settings as defaultSettings} from \"../config/default\";\n\n\n// helpers\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\nexport const mongodbFormat = (tree, config) => {\n  return _mongodbFormat(tree, config, false);\n};\n\nexport const _mongodbFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const res = formatItem([], tree, config, meta);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to MongoDb:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (parents, item, config, meta, _not = false, _canWrapExpr = true, _fieldName = undefined, _value = undefined) => {\n  if (!item) return undefined;\n\n  const type = item.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(parents, item, config, meta, _not, _canWrapExpr, _fieldName, _value);\n  } else if (type === \"rule\") {\n    return formatRule(parents, item, config, meta, _not, _canWrapExpr, _fieldName, _value);\n  }\n  return undefined;\n};\n\n\nconst formatGroup = (parents, item, config, meta, _not = false, _canWrapExpr = true, _fieldName = undefined, _value = undefined) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  const {canShortMongoQuery} = config.settings;\n  if (!children) return undefined;\n\n  const hasParentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\").length > 0;\n  const parentPath = parents\n    .filter(it => it.get(\"type\") == \"rule_group\")\n    .map(it => it.get(\"properties\").get(\"field\"))\n    .slice(-1).pop();\n  const realParentPath = hasParentRuleGroup && parentPath;\n\n  const groupField = type === \"rule_group\" ? properties.get(\"field\") : null;\n  const groupFieldName = formatFieldName(groupField, config, meta, realParentPath);\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const mode = groupFieldDef.mode; //properties.get(\"mode\");\n  const canHaveEmptyChildren = groupField && mode == \"array\";\n\n  const not = _not ? !(properties.get(\"not\")) : (properties.get(\"not\"));\n  const list = children\n    .map((currentChild) => formatItem(\n      [...parents, item], currentChild, config, meta, not, true, mode == \"array\" ? (f => `$$el.${f}`) : undefined)\n    )\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  let conjunctionDefinition = config.conjunctions[conjunction];\n  const reversedConj = conjunctionDefinition.reversedConj;\n  if (not && reversedConj) {\n    conjunction = reversedConj;\n    conjunctionDefinition = config.conjunctions[conjunction];\n  }\n  const mongoConj = conjunctionDefinition.mongoConj;\n\n  let resultQuery;\n  if (list.size == 1) {\n    resultQuery = list.first();\n  } else if (list.size > 1) {\n    const rules = list.toList().toJS();\n    const canShort = canShortMongoQuery && (mongoConj == \"$and\");\n    if (canShort) {\n      resultQuery = rules.reduce((acc, rule) => {\n        if (!acc) return undefined;\n        for (let k in rule) {\n          if (k[0] == \"$\") {\n            acc = undefined;\n            break;\n          }\n          if (acc[k] == undefined) {\n            acc[k] = rule[k];\n          } else {\n            // https://github.com/ukrbublik/react-awesome-query-builder/issues/182\n            let prev = acc[k], next = rule[k];\n            if (!isObject(prev)) {\n              prev = {\"$eq\": prev};\n            }\n            if (!isObject(next)) {\n              next = {\"$eq\": next};\n            }\n            const prevOp = Object.keys(prev)[0], nextOp = Object.keys(next)[0];\n            if (prevOp == nextOp) {\n              acc = undefined;\n              break;\n            }\n            acc[k] = Object.assign({}, prev, next);\n          }\n        }\n        return acc;\n      }, {});\n    }\n    if (!resultQuery) // can't be shorten\n      resultQuery = { [mongoConj] : rules };\n  }\n\n  if (groupField) {\n    if (mode == \"array\") {\n      const totalQuery = {\n        \"$size\": groupFieldName\n      };\n      const filterQuery = resultQuery ? {\n        \"$size\": {\n          \"$filter\": {\n            input: \"$\" + groupFieldName,\n            as: \"el\",\n            cond: resultQuery\n          }\n        }\n      } : totalQuery;\n      resultQuery = formatItem(\n        parents, item.set(\"type\", \"rule\"), config, meta, false, false, (_f => filterQuery), totalQuery\n      );\n      resultQuery = { \"$expr\": resultQuery };\n    } else {\n      resultQuery = { [groupFieldName]: {\"$elemMatch\": resultQuery} };\n    }\n  }\n  return resultQuery;\n};\n\n\nconst formatRule = (parents, item, config, meta, _not = false, _canWrapExpr = true, _fieldName = undefined, _value = undefined) => {\n  const properties = item.get(\"properties\") || new Map();\n\n  const hasParentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\").length > 0;\n  const parentPath = parents\n    .filter(it => it.get(\"type\") == \"rule_group\")\n    .map(it => it.get(\"properties\").get(\"field\"))\n    .slice(-1).pop();\n  const realParentPath = hasParentRuleGroup && parentPath;\n\n  let operator = properties.get(\"operator\");\n  const operatorOptions = properties.get(\"operatorOptions\");\n  const field = properties.get(\"field\");\n  const iValue = properties.get(\"value\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n\n  if (field == null || operator == null || iValue === undefined)\n    return undefined;\n\n  const fieldDef = getFieldConfig(config, field) || {};\n  let operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDefinition.reversedOp;\n  let revOperatorDefinition = getOperatorConfig(config, reversedOp, field) || {};\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n\n  let not = _not;\n  if (not && reversedOp) {\n    [operator, reversedOp] = [reversedOp, operator];\n    [operatorDefinition, revOperatorDefinition] = [revOperatorDefinition, operatorDefinition];\n    not = false;\n  }\n\n  const fieldName = formatFieldName(field, config, meta, realParentPath);\n\n  //format value\n  let valueSrcs = [];\n  let valueTypes = [];\n  let useExpr = false;\n  const fvalue = iValue.map((currentValue, ind) => {\n    const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n    const valueType = iValueType ? iValueType.get(ind) : null;\n    const cValue = completeValue(currentValue, valueSrc, config);\n    const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDef = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n    const [fv, fvUseExpr] = formatValue(\n      meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, realParentPath,  operator, operatorDefinition, asyncListValues\n    );\n    if (fv !== undefined) {\n      useExpr = useExpr || fvUseExpr;\n      valueSrcs.push(valueSrc);\n      valueTypes.push(valueType);\n    }\n    return fv;\n  });\n  if (_fieldName)\n    useExpr = true;\n  const wrapExpr = useExpr && _canWrapExpr;\n  const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n  if (fvalue.size < cardinality || hasUndefinedValues)\n    return undefined;\n  const formattedValue = cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n  \n  //build rule\n  const fn = operatorDefinition.mongoFormatOp;\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  const args = [\n    _fieldName ? _fieldName(fieldName) : fieldName,\n    operator,\n    _value !== undefined && formattedValue == null ? _value : formattedValue,\n    useExpr,\n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n    omit(operatorDefinition, [\"formatOp\", \"mongoFormatOp\", \"sqlFormatOp\", \"jsonLogic\", \"spelFormatOp\"]),\n    operatorOptions,\n    fieldDef,\n  ];\n  let ruleQuery = fn(...args);\n  if (wrapExpr) {\n    ruleQuery = { \"$expr\": ruleQuery };\n  }\n  if (not) {\n    ruleQuery = { \"$not\": ruleQuery };\n  }\n  return ruleQuery;\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, parentPath, operator, operatorDef, asyncListValues) => {\n  if (currentValue === undefined)\n    return [undefined, false];\n  \n  let ret;\n  let useExpr = false;\n\n  if (valueSrc == \"field\") {\n    [ret, useExpr] = formatRightField(meta, config, currentValue, parentPath);\n  } else if (valueSrc == \"func\") {\n    [ret, useExpr] = formatFunc(meta, config, currentValue, parentPath);\n  } else {\n    if (typeof fieldWidgetDef.mongoFormatValue === \"function\") {\n      const fn = fieldWidgetDef.mongoFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, [\"formatValue\", \"mongoFormatValue\", \"sqlFormatValue\", \"jsonLogic\", \"elasticSearchFormatValue\", \"spelFormatValue\"]),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      ret = fn(...args);\n    } else {\n      ret = currentValue;\n    }\n  }\n\n  return [ret, useExpr];\n};\n\n\n\nconst formatFieldName = (field, config, meta, parentPath) => {\n  if (!field) return;\n  const fieldDef = getFieldConfig(config, field) || {};\n  const {fieldSeparator} = config.settings;\n  const fieldParts = Array.isArray(field) ? field : field.split(fieldSeparator);\n  let fieldName = Array.isArray(field) ? field.join(fieldSeparator) : field;\n  // if (fieldDef.tableName) { // legacy\n  //     const fieldPartsCopy = [...fieldParts];\n  //     fieldPartsCopy[0] = fieldDef.tableName;\n  //     fieldName = fieldPartsCopy.join(fieldSeparator);\n  // }\n  if (fieldDef.fieldName) {\n    fieldName = fieldDef.fieldName;\n  }\n\n  if (parentPath) {\n    const parentFieldDef = getFieldConfig(config, parentPath) || {};\n    let parentFieldName = parentPath;\n    if (parentFieldDef.fieldName) {\n      parentFieldName = parentFieldDef.fieldName;\n    }\n    if (fieldName.indexOf(parentFieldName+\".\") == 0) {\n      fieldName = fieldName.slice((parentFieldName+\".\").length);\n    } else {\n      meta.errors.push(`Can't cut group ${parentFieldName} from field ${fieldName}`);\n    }\n  }\n  return fieldName;\n};\n\nconst formatRightField = (meta, config, rightField, parentPath) => {\n  const {fieldSeparator} = config.settings;\n  let ret;\n  const useExpr = true;\n\n  if (rightField) {\n    const rightFieldDefinition = getFieldConfig(config, rightField) || {};\n    const fieldParts = Array.isArray(rightField) ? rightField : rightField.split(fieldSeparator);\n    const _fieldKeys = getFieldPath(rightField, config);\n    const fieldPartsLabels = getFieldPathLabels(rightField, config);\n    const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparator) : null;\n    const formatFieldFn = config.settings.formatField || defaultSettings.formatField;\n    const rightFieldName = formatFieldName(rightField, config, meta, parentPath);\n    const formattedField = formatFieldFn(rightFieldName, fieldParts, fieldFullLabel, rightFieldDefinition, config, false);\n    ret = \"$\" + formattedField;\n  }\n\n  return [ret, useExpr];\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentPath) => {\n  const useExpr = true;\n  let ret;\n\n  const funcKey = currentValue.get(\"func\");\n  const args = currentValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  const funcName = funcConfig.mongoFunc || funcKey;\n  const mongoArgsAsObject = funcConfig.mongoArgsAsObject;\n\n  let formattedArgs = {};\n  let argsCnt = 0;\n  let lastArg = undefined;\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const widget = getWidgetForFieldOp(config, fieldDef, null, argValueSrc);\n    const fieldWidgetDef = omit(getFieldWidgetConfig(config, fieldDef, null, widget, argValueSrc), [\"factory\"]);\n    const [formattedArgVal, _argUseExpr] = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, parentPath, null, null, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return [undefined, false];\n    }\n    argsCnt++;\n    if (formattedArgVal !== undefined) { // skip optional in the end\n      formattedArgs[argKey] = formattedArgVal;\n      lastArg = formattedArgVal;\n    }\n  }\n\n  if (typeof funcConfig.mongoFormatFunc === \"function\") {\n    const fn = funcConfig.mongoFormatFunc;\n    const args = [\n      formattedArgs,\n    ];\n    ret = fn(...args);\n  } else if (funcConfig.mongoFormatFunc === null) {\n    meta.errors.push(`Functon ${funcName} is not supported`);\n    return [undefined, false];\n  } else {\n    if (mongoArgsAsObject)\n      ret = { [funcName]: formattedArgs };\n    else if (argsCnt == 1 && lastArg !== undefined)\n      ret = { [funcName]: lastArg };\n    else\n      ret = { [funcName]: Object.values(formattedArgs) };\n  }\n\n  return [ret, useExpr];\n};\n\n\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig\n} from \"../utils/configUtils\";\nimport {\n  getFieldPath, getFieldPathLabels, getWidgetForFieldOp, formatFieldName\n} from \"../utils/ruleUtils\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\nimport {defaultValue} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {settings as defaultSettings} from \"../config/default\";\nimport {completeValue} from \"../utils/funcUtils\";\nimport {Map} from \"immutable\";\nimport {SqlString} from \"../utils/export\";\n\nexport const sqlFormat = (tree, config) => {\n  return _sqlFormat(tree, config, false);\n};\n\nexport const _sqlFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const res = formatItem(tree, config, meta);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to SQL:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (item, config, meta) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") && children && children.size) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n\n  const groupField = type === \"rule_group\" ? properties.get(\"field\") : null;\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  if (groupFieldDef.mode == \"array\") {\n    meta.errors.push(`Aggregation is not supported for ${groupField}`);\n  }\n\n  const not = properties.get(\"not\");\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n\n  return conjunctionDefinition.sqlFormatConj(list, conjunction, not);\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition) => {\n  const sqlOp = operatorDefinition.sqlOp || operator;\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  let fn;\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sqlOp}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, value, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sqlOp} ${value}`;\n    };\n  } else if (cardinality == 2) {\n    // between\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values.first();\n      const valTo = values.get(1);\n      return `${field} ${sqlOp} ${valFrom} AND ${valTo}`;\n    };\n  }\n  return fn;\n};\n\nconst formatRule = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  let operator = properties.get(\"operator\");\n  const operatorOptions = properties.get(\"operatorOptions\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  if (field == null || operator == null)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  let opDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = opDef.reversedOp;\n  let revOpDef = getOperatorConfig(config, reversedOp, field) || {};\n  const cardinality = defaultValue(opDef.cardinality, 1);\n\n  // check op\n  let isRev = false;\n  const canFormatOp = opDef.sqlOp || opDef.sqlFormatOp;\n  const canFormatRevOp = revOpDef.sqlOp || revOpDef.sqlFormatOp;\n  if (!canFormatOp && !canFormatRevOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  if (!canFormatRevOp && canFormatRevOp) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [opDef, revOpDef] = [revOpDef, opDef];\n  }\n\n  //format value\n  let valueSrcs = [];\n  let valueTypes = [];\n  const fvalue = iValue.map((currentValue, ind) => {\n    const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n    const valueType = iValueType ? iValueType.get(ind) : null;\n    const cValue = completeValue(currentValue, valueSrc, config);\n    const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDefinition = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n    let fv = formatValue(\n      meta, config, cValue, valueSrc, valueType, fieldWidgetDefinition, fieldDefinition, operator, opDef, asyncListValues\n    );\n    if (fv !== undefined) {\n      valueSrcs.push(valueSrc);\n      valueTypes.push(valueType);\n    }\n    return fv;\n  });\n  const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n  if (hasUndefinedValues || fvalue.size < cardinality)\n    return undefined;\n  const formattedValue = (cardinality == 1 ? fvalue.first() : fvalue);\n\n  //find fn to format expr\n  const fn = opDef.sqlFormatOp || buildFnToFormatOp(operator, opDef);\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n      \n  //format field\n  const formattedField = formatField(meta, config, field);\n      \n  //format expr\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n    omit(opDef, [\"formatOp\", \"mongoFormatOp\", \"sqlFormatOp\", \"jsonLogic\", \"spelFormatOp\"]),\n    operatorOptions,\n    fieldDefinition,\n  ];\n\n  let ret;\n  ret = fn(...args);\n  if (isRev) {\n    ret = config.settings.sqlFormatReverse(ret);\n  }\n  if (ret === undefined) {\n    meta.errors.push(`Operator ${operator} is not supported for value source ${valueSrcs.join(\", \")}`);\n    return undefined;\n  }\n  return ret;\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue);\n  } else {\n    if (typeof fieldWidgetDef.sqlFormatValue === \"function\") {\n      const fn = fieldWidgetDef.sqlFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, [\"formatValue\", \"mongoFormatValue\", \"sqlFormatValue\", \"jsonLogic\", \"elasticSearchFormatValue\", \"spelFormatValue\"]),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, currentValue) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn(...args);\n    } else {\n      if (Array.isArray(currentValue)) {\n        ret = currentValue.map(v => SqlString.escape(v));\n      } else {\n        ret = SqlString.escape(currentValue);\n      }\n    }\n  }\n  return ret;\n};\n\nconst formatField = (meta, config, field) => {\n  if (!field) return;\n  const {fieldSeparator} = config.settings;\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const fieldParts = Array.isArray(field) ? field : field.split(fieldSeparator);\n  const _fieldKeys = getFieldPath(field, config);\n  const fieldPartsLabels = getFieldPathLabels(field, config);\n  const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparator) : null;\n  const formatFieldFn = config.settings.formatField || defaultSettings.formatField;\n  const fieldName = formatFieldName(field, config, meta);\n  const formattedField = formatFieldFn(fieldName, fieldParts, fieldFullLabel, fieldDefinition, config);\n  return formattedField;\n};\n\n\nconst formatFunc = (meta, config, currentValue) => {\n  const funcKey = currentValue.get(\"func\");\n  const args = currentValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  const funcName = funcConfig.sqlFunc || funcKey;\n\n  let formattedArgs = {};\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldDef, argConfig, null, null, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    if (formattedArgVal !== undefined) { // skip optional in the end\n      formattedArgs[argKey] = formattedArgVal;\n    }\n  }\n\n  let ret;\n  if (typeof funcConfig.sqlFormatFunc === \"function\") {\n    const fn = funcConfig.sqlFormatFunc;\n    const args = [\n      formattedArgs\n    ];\n    ret = fn(...args);\n  } else {\n    const argsStr = Object.entries(formattedArgs)\n      .map(([k, v]) => v)\n      .join(\", \");\n    ret = `${funcName}(${argsStr})`;\n  }\n  return ret;\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig\n} from \"../utils/configUtils\";\nimport {\n  getFieldPath, getWidgetForFieldOp, formatFieldName, getFieldPartsConfigs\n} from \"../utils/ruleUtils\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\nimport {defaultValue, logger} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {settings as defaultSettings} from \"../config/default\";\nimport {completeValue} from \"../utils/funcUtils\";\nimport {Map} from \"immutable\";\nimport {spelEscape} from \"../utils/export\";\n\nexport const spelFormat = (tree, config) => {\n  return _spelFormat(tree, config, false);\n};\n\nexport const _spelFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const res = formatItem(tree, config, meta, null);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to SpEL:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (item, config, meta, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(item, config, meta, parentField);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta, parentField);\n  } else if (type == \"switch_group\") {\n    return formatSwitch(item, config, meta, parentField);\n  } else if (type == \"case_group\") {\n    return formatCase(item, config, meta, parentField);\n  }\n\n  return undefined;\n};\n\nconst formatCase = (item, config, meta, parentField = null) => {\n  const type = item.get(\"type\");\n  if (type != \"case_group\") {\n    meta.errors.push(`Unexpected child of type ${type} inside switch`);\n    return undefined;\n  }\n  const properties = item.get(\"properties\") || new Map();\n  \n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, null, parentField, \"!case_value\"\n  );\n\n  const cond = formatGroup(item, config, meta, parentField);\n  return [cond, formattedValue];\n};\n\nconst formatSwitch = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  if (!children) return undefined;\n  const cases = children\n    .map((currentChild) => formatCase(currentChild, config, meta, null))\n    .filter((currentChild) => typeof currentChild !== \"undefined\")\n    .toArray();\n  \n  if (!cases.length) return undefined;\n\n  if (cases.length == 1 && !cases[0][0]) {\n    // only 1 case without condition\n    return cases[0][1];\n  }\n\n  let filteredCases = [];\n  for (let i = 0 ; i < cases.length ; i++) {\n    if (i != (cases.length - 1) && !cases[i][0]) {\n      meta.errors.push(`No condition for case ${i}`);\n    } else {\n      filteredCases.push(cases[i]);\n      if (i == (cases.length - 1) && cases[i][0]) {\n        // no default - add null as default\n        filteredCases.push([undefined, null]);\n      }\n    }\n  }\n\n  let left = \"\", right = \"\";\n  for (let i = 0 ; i < filteredCases.length ; i++) {\n    let [cond, value] = filteredCases[i];\n    if (value == undefined)\n      value = \"null\";\n    if (cond == undefined)\n      cond = \"true\";\n    if (i != (filteredCases.length - 1)) {\n      left += `(${cond} ? ${value} : `;\n      right += \")\";\n    } else {\n      left += `${value}`;\n    }\n  }\n  return left + right;\n};\n\nconst formatGroup = (item, config, meta, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\");\n  const field = properties.get(\"field\");\n  if (!children) return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n  const not = properties.get(\"not\");\n\n  const isRuleGroup = type === \"rule_group\";\n  const isRuleGroupArray = isRuleGroup && mode != \"struct\";\n  const groupField = isRuleGroupArray ? field : parentField;\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const isSpelArray = groupFieldDef.isSpelArray;\n  \n  // check op for reverse\n  let groupOperator = properties.get(\"operator\");\n  if (!groupOperator && (!mode || mode == \"some\")) {\n    groupOperator = \"some\";\n  }\n  const realGroupOperator = checkOp(config, groupOperator, field);\n  const isGroupOpRev = realGroupOperator != groupOperator;\n  const realGroupOperatorDefinition = groupOperator && getOperatorConfig(config, realGroupOperator, field) || null;\n  const isGroup0 = isRuleGroup && (!realGroupOperator || realGroupOperatorDefinition.cardinality == 0);\n  \n  // build value for aggregation op\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, realGroupOperator, parentField, null\n  );\n  \n  // build filter in aggregation\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n\n  if (isRuleGroupArray && !isGroup0) {\n    // \"count\" rule can have no \"having\" children, but should have number value\n    if (formattedValue == undefined)\n      return undefined;\n  } else {\n    if (!list.size)\n      return undefined;\n  }\n\n  const omitBrackets = isRuleGroup;\n  const filter = list.size ? conjunctionDefinition.spelFormatConj(list, conjunction, not, omitBrackets) : null;\n\n  // build result\n  let ret;\n  if (isRuleGroupArray) {\n    const formattedField = formatField(meta, config, field, parentField);\n    const getSize = isSpelArray ? \".length\" : \".size()\";\n    const fullSize = `${formattedField}${getSize}`;\n    // https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions-collection-selection\n    const filteredSize = filter ? `${formattedField}.?[${filter}]${getSize}` : fullSize;\n    const groupValue = isGroup0 ? fullSize : formattedValue;\n    // format expression\n    ret = formatExpression(\n      meta, config, properties, filteredSize, groupValue, realGroupOperator, valueSrc, valueType, isGroupOpRev\n    );\n  } else {\n    ret = filter;\n  }\n  \n  return ret;\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition) => {\n  const spelOp = operatorDefinition.spelOp;\n  if (!spelOp) return undefined;\n  const objectIsFirstArg = spelOp[0] == \"$\";\n  const isMethod = spelOp[0] == \".\" || objectIsFirstArg;\n  const isFunction = spelOp.substring(spelOp.length - 2) == \"()\";\n  const sop = isMethod ? spelOp.slice(1) : (isFunction ? spelOp.substring(0, spelOp.length - 2) : spelOp);\n  let fn;\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (isMethod)\n        return `${field}.${sop}()`;\n      else\n        return `${field} ${sop}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (objectIsFirstArg)\n        return `${values}.${sop}(${field})`;\n      else if (isFunction)\n        return `${sop}(${field}, ${values})`;\n      else if (isMethod)\n        return `${field}.${sop}(${values})`;\n      else\n        return `${field} ${sop} ${values}`;\n    };\n  }\n  return fn;\n};\n\nconst formatExpression = (meta, config, properties, formattedField, formattedValue, operator, valueSrc, valueType, isRev = false) => {\n  const field = properties.get(\"field\");\n  const opDef = getOperatorConfig(config, operator, field) || {};\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operatorOptions = properties.get(\"operatorOptions\");\n\n  //find fn to format expr\n  const fn = opDef.spelFormatOp || buildFnToFormatOp(operator, opDef);\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n\n  //format expr\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    valueSrc,\n    valueType,\n    omit(opDef, [\"formatOp\", \"mongoFormatOp\", \"sqlFormatOp\", \"jsonLogic\", \"spelFormatOp\"]),\n    operatorOptions,\n    fieldDef,\n  ];\n  let ret;\n  ret = fn(...args);\n\n  //rev\n  if (isRev) {\n    ret = config.settings.spelFormatReverse(ret);\n  }\n\n  if (ret === undefined) {\n    meta.errors.push(`Operator ${operator} is not supported for value source ${valueSrc}`);\n  }\n\n  return ret;\n};\n\nconst checkOp = (config, operator, field) => {\n  if (!operator) return undefined;\n  let opDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = opDef.reversedOp;\n  let revOpDef = getOperatorConfig(config, reversedOp, field) || {};\n\n  let isRev = false;\n  const canFormatOp = opDef.spelOp || opDef.spelFormatOp;\n  const canFormatRevOp = revOpDef.spelOp || revOpDef.spelFormatOp;\n  if (!canFormatOp && !canFormatRevOp) {\n    return undefined;\n  }\n  if (!canFormatOp && canFormatRevOp) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [opDef, revOpDef] = [revOpDef, opDef];\n  }\n  return operator;\n};\n\nconst formatRule = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  let operator = properties.get(\"operator\");\n  if (field == null || operator == null)\n    return undefined;\n\n  // check op for reverse\n  const realOp = checkOp(config, operator, field);\n  if (!realOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  const isRev = realOp != operator;\n\n  //format value\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, realOp, parentField, null\n  );\n  if (formattedValue === undefined)\n    return undefined;\n      \n  //format field\n  const formattedField = formatField(meta, config, field, parentField);\n  \n  // format expression\n  let res = formatExpression(\n    meta, config, properties, formattedField, formattedValue, realOp, valueSrc, valueType, isRev\n  );\n  return res;\n};\n\nconst formatItemValue = (config, properties, meta, operator, parentField, expectedValueType = null) => {\n  let field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  if (expectedValueType == \"!case_value\" || iValueType && iValueType.get(0) == \"case_value\") {\n    field = \"!case_value\";\n  }\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  \n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  \n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n      const fv = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDefinition, parentField, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (!( fvalue.size < cardinality || hasUndefinedValues )) {\n      formattedValue = cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n    }\n  }\n  \n  return [\n    formattedValue, \n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n  ];\n};\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField = null, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue, parentField);\n  } else {\n    if (typeof fieldWidgetDef.spelFormatValue === \"function\") {\n      const fn = fieldWidgetDef.spelFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, [\"formatValue\", \"mongoFormatValue\", \"sqlFormatValue\", \"jsonLogic\", \"elasticSearchFormatValue\", \"spelFormatValue\"]),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, currentValue) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn(...args);\n    } else {\n      ret = spelEscape(currentValue);\n    }\n  }\n  return ret;\n};\n\nconst formatField = (meta, config, field, parentField = null) => {\n  if (!field) return;\n  const {fieldSeparator} = config.settings;\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const fieldParts = Array.isArray(field) ? field : field.split(fieldSeparator);\n  const _fieldKeys = getFieldPath(field, config, parentField);\n  const fieldPartsConfigs = getFieldPartsConfigs(field, config, parentField);\n  const formatFieldFn = config.settings.formatSpelField;\n  let fieldName = formatFieldName(field, config, meta);\n  if (parentField) {\n    const parentFieldDef = getFieldConfig(config, parentField) || {};\n    let parentFieldName = parentField;\n    if (parentFieldDef.fieldName) {\n      parentFieldName = parentFieldDef.fieldName;\n    }\n    if (fieldName.indexOf(parentFieldName + fieldSeparator) == 0) {\n      fieldName = fieldName.slice((parentFieldName + fieldSeparator).length);\n      // fieldName = \"#this.\" + fieldName;\n    } else {\n      meta.errors.push(`Can't cut group ${parentFieldName} from field ${fieldName}`);\n    }\n  }\n  const fieldPartsMeta = fieldPartsConfigs.map(([key, cnf, parentCnf]) => {\n    let parent;\n    if (parentCnf) {\n      if (parentCnf.type == \"!struct\" || parentCnf.type == \"!group\" && parentCnf.mode == \"struct\")\n        parent = cnf.isSpelMap ? \"map\" : \"class\";\n      else if (parentCnf.type == \"!group\")\n        parent = cnf.isSpelItemMap ? \"[map]\" : \"[class]\";\n      else\n        parent = \"class\";\n    }\n    const isSpelVariable = cnf?.isSpelVariable;\n    return {\n      key,\n      parent,\n      isSpelVariable\n    };\n  });\n  const formattedField = formatFieldFn(fieldName, parentField, fieldParts, fieldPartsMeta, fieldDefinition, config);\n  return formattedField;\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentField = null) => {\n  const funcKey = currentValue.get(\"func\");\n  const args = currentValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  const funcName = funcConfig.spelFunc || funcKey;\n\n  let formattedArgs = {};\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldDef, argConfig, null, null, parentField, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    if (formattedArgVal !== undefined) { // skip optional in the end\n      formattedArgs[argKey] = formattedArgVal;\n    }\n  }\n\n  let ret;\n  if (typeof funcConfig.spelFormatFunc === \"function\") {\n    const fn = funcConfig.spelFormatFunc;\n    const args = [\n      formattedArgs\n    ];\n    ret = fn(...args);\n  } else {\n    const args = Object.entries(formattedArgs).map(([k, v]) => v);\n    if (funcName[0] == \".\" && args.length) {\n      const [obj, ...params] = args;\n      ret = `${obj}${funcName}(${params.join(\", \")})`;\n    } else {\n      ret = `${funcName}(${args.join(\", \")})`;\n    }\n  }\n  return ret;\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig\n} from \"../utils/configUtils\";\nimport {\n  getFieldPath, getFieldPathLabels, getWidgetForFieldOp, formatFieldName\n} from \"../utils/ruleUtils\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\nimport {defaultValue} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {settings as defaultSettings} from \"../config/default\";\nimport {completeValue} from \"../utils/funcUtils\";\nimport {Map} from \"immutable\";\n\n\nexport const queryString = (item, config, isForDisplay = false) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const res = formatItem(item, config, meta, isForDisplay, null);\n\n  if (meta.errors.length)\n    console.warn(\"Errors while exporting to string:\", meta.errors);\n  return res;\n};\n\n\nconst formatItem = (item, config, meta, isForDisplay = false, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") ) {\n    return formatGroup(item, config, meta, isForDisplay, parentField);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta, isForDisplay, parentField);\n  }\n\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta, isForDisplay = false, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\");\n  if (!children) return undefined;\n\n  const isRuleGroup = (type === \"rule_group\");\n  // TIP: don't cut group for mode == 'struct' and don't do aggr format (maybe later)\n  const groupField = isRuleGroup && mode == \"array\" ? properties.get(\"field\") : null;\n  const canHaveEmptyChildren = isRuleGroup && mode == \"array\";\n  const not = properties.get(\"not\");\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, isForDisplay, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n\n  const conjStr = list.size ? conjunctionDefinition.formatConj(list, conjunction, not, isForDisplay) : null;\n  \n  let ret;\n  if (groupField) {\n    const aggrArgs = formatRule(item, config, meta, isForDisplay, parentField, true);\n    if (aggrArgs) {\n      const isRev = aggrArgs.pop();\n      const args = [\n        conjStr,\n        ...aggrArgs\n      ];\n      ret = config.settings.formatAggr(...args);\n      if (isRev) {\n        ret = config.settings.formatReverse(ret, null, null, null, null, isForDisplay);\n      }\n    }\n  } else {\n    ret = conjStr;\n  }\n\n  return ret;\n};\n\n\nconst formatItemValue = (config, properties, meta, _operator, isForDisplay, parentField) => {\n  const field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operator = _operator || properties.get(\"operator\");\n  const operatorDef = getOperatorConfig(config, operator, field) || {};\n  const cardinality = defaultValue(operatorDef.cardinality, 1);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n\n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n      let fv = formatValue(\n        config, meta, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, isForDisplay, parentField, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (!( hasUndefinedValues || fvalue.size < cardinality )) {\n      formattedValue = (cardinality == 1 ? fvalue.first() : fvalue);\n    }\n  }\n\n  return [\n    formattedValue, \n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n  ];\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition) => {\n  const fop = operatorDefinition.labelForFormat || operator;\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  let fn;\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} ${fop}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} ${fop} ${values}`;\n    };\n  } else if (cardinality == 2) {\n    // between\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const valFrom = values.first();\n      const valTo = values.get(1);\n      return `${field} ${fop} ${valFrom} AND ${valTo}`;\n    };\n  }\n  return fn;\n};\n\nconst formatRule = (item, config, meta, isForDisplay = false, parentField = null, returnArgs = false) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  let operator = properties.get(\"operator\");\n  let operatorOptions = properties.get(\"operatorOptions\");\n  if (field == null || operator == null)\n    return undefined;\n  \n  const fieldDef = getFieldConfig(config, field) || {};\n  let operatorDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDef.reversedOp;\n  let revOperatorDef = getOperatorConfig(config, reversedOp, field) || {};\n  \n  //check op\n  let isRev = false;\n  let fn = operatorDef.formatOp;\n  if (!fn && reversedOp) {\n    fn = revOperatorDef.formatOp;\n    if (fn) {\n      isRev = true;\n      [operator, reversedOp] = [reversedOp, operator];\n      [operatorDef, revOperatorDef] = [revOperatorDef, operatorDef];\n    }\n  }\n\n  //find fn to format expr\n  if (!fn)\n    fn = buildFnToFormatOp(operator, operatorDef);\n  if (!fn)\n    return undefined;\n\n  //format field\n  const formattedField = formatField(config, meta, field, isForDisplay, parentField);\n\n  //format value\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, operator, isForDisplay, parentField\n  );\n  if (formattedValue === undefined)\n    return undefined;\n\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    valueSrc,\n    valueType,\n    omit(operatorDef, [\"formatOp\", \"mongoFormatOp\", \"sqlFormatOp\", \"jsonLogic\", \"spelFormatOp\"]),\n    operatorOptions,\n    isForDisplay,\n    fieldDef,\n    isRev,\n  ];\n\n  if (returnArgs) {\n    return args;\n  } else {\n    //format expr\n    let ret = fn(...args);\n\n    //rev\n    if (isRev) {\n      ret = config.settings.formatReverse(ret, operator, reversedOp, operatorDef, revOperatorDef, isForDisplay);\n    }\n\n    return ret;\n  }\n};\n\n\nconst formatValue = (config, meta, value, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, opDef, isForDisplay, parentField = null, asyncListValues) => {\n  if (value === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(config, meta, value, isForDisplay, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(config, meta, value, isForDisplay, parentField);\n  } else {\n    if (typeof fieldWidgetDef.formatValue === \"function\") {\n      const fn = fieldWidgetDef.formatValue;\n      const args = [\n        value,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, [\"formatValue\", \"mongoFormatValue\", \"sqlFormatValue\", \"jsonLogic\", \"elasticSearchFormatValue\", \"spelFormatValue\"]),\n        isForDisplay\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(opDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, value) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn(...args);\n    } else {\n      ret = value;\n    }\n  }\n  return ret;\n};\n\n\nconst formatField = (config, meta, field, isForDisplay, parentField = null, cutParentField = true) => {\n  const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n  let ret = null;\n  if (field) {\n    const fieldDefinition = getFieldConfig(config, field) || {};\n    const fieldParts = Array.isArray(field) ? field : field.split(fieldSeparator);\n    const _fieldKeys = getFieldPath(field, config);\n    const fieldPartsLabels = getFieldPathLabels(field, config, cutParentField ? parentField : null);\n    const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparatorDisplay) : null;\n    const fieldLabel2 = fieldDefinition.label2 || fieldFullLabel;\n    const formatFieldFn = config.settings.formatField || defaultSettings.formatField;\n    const fieldName = formatFieldName(field, config, meta, cutParentField ? parentField : null);\n    ret = formatFieldFn(fieldName, fieldParts, fieldLabel2, fieldDefinition, config, isForDisplay);\n  }\n  return ret;\n};\n\n\nconst formatFunc = (config, meta, funcValue, isForDisplay, parentField = null) => {\n  const funcKey = funcValue.get(\"func\");\n  const args = funcValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  const funcName = isForDisplay && funcConfig.label || funcKey;\n\n  let formattedArgs = {};\n  let formattedArgsWithNames = {};\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      config, meta, argValue, argValueSrc, argConfig.type, fieldDef, argConfig, null, null, isForDisplay, parentField, argAsyncListValues\n    );\n    const argName = isForDisplay && argConfig.label || argKey;\n    if (formattedArgVal !== undefined) { // skip optional in the end\n      formattedArgs[argKey] = formattedArgVal;\n      formattedArgsWithNames[argName] = formattedArgVal;\n    }\n  }\n\n  let ret = null;\n  if (typeof funcConfig.formatFunc === \"function\") {\n    const fn = funcConfig.formatFunc;\n    const args = [\n      formattedArgs,\n      isForDisplay\n    ];\n    ret = fn(...args);\n  } else {\n    const argsStr = Object.entries(formattedArgsWithNames)\n      .map(([k, v]) => (isForDisplay ? `${k}: ${v}` : `${v}`))\n      .join(\", \");\n    ret = `${funcName}(${argsStr})`;\n  }\n  return ret;\n};\n","import {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\n\n\n/**\n * Converts a string representation of top_left and bottom_right cords to\n * a ES geo_point required for query\n *\n * @param {string} geoPointString - comma separated string of lat/lon coods\n * @returns {{top_left: {lon: number, lat: number}, bottom_right: {lon: number, lat: number}}} - ES geoPoint formatted object\n * @private\n */\nfunction buildEsGeoPoint(geoPointString) {\n  if (geoPointString == null) {\n    return null;\n  }\n\n  const coordsNumberArray = geoPointString.split(\",\").map(Number);\n  return {\n    top_left: {\n      lat: coordsNumberArray[0],\n      lon: coordsNumberArray[1]\n    },\n    bottom_right: {\n      lat: coordsNumberArray[2],\n      lon: coordsNumberArray[3]\n    }\n  };\n}\n\n/**\n * Converts a dateTime string from the query builder to a ES range formatted object\n *\n * @param {string} dateTime - dateTime formatted string\n * @param {string} operator - query builder operator type, see constants.js and query builder docs\n * @returns {{lt: string}|{lte: string}|{gte: string}|{gte: string, lte: string}|undefined} - ES range query parameter\n *\n * @private\n */\nfunction buildEsRangeParameters(value, operator) {\n  // -- if value is greater than 1 then we assume this is a between operator : BUG this is wrong, a selectable list can have multiple values\n  if (value.length > 1) {\n    return {\n      gte: \"\".concat(value[0]),\n      lte: \"\".concat(value[1])\n    };\n  } // -- if value is only one we assume this is a date time query for a specific day\n\n  const dateTime = value[0]; //TODO: Rethink about this part, what if someone adds a new type of opperator\n\n  //todo: move this logic into config\n  switch (operator) {\n  case \"on_date\": //todo: not used\n  case \"not_on_date\":\n  case \"equal\":\n  case \"select_equals\":\n  case \"not_equal\":\n    return {\n      gte: \"\".concat(dateTime, \"||/d\"),\n      lte: \"\".concat(dateTime, \"||+1d\")\n    };\n\n  case \"less_or_equal\":\n    return {\n      lte: \"\".concat(dateTime)\n    };\n\n  case \"greater_or_equal\":\n    return {\n      gte: \"\".concat(dateTime)\n    };\n\n  case \"less\":\n    return {\n      lt: \"\".concat(dateTime)\n    };\n\n  case \"greater\":\n    return {\n      gt: \"\".concat(dateTime)\n    };\n\n  default:\n    return undefined;\n  }\n}\n\n/**\n * Builds the DSL parameters for a Wildcard query\n *\n * @param {string} value - The match value\n * @returns {{value: string}} - The value = value parameter surrounded with * on each end\n * @private\n */\nfunction buildEsWildcardParameters(value) {\n  return {\n    value: \"*\" + value + \"*\"\n  };\n}\n\n/**\n * Takes the match type string from awesome query builder like 'greater_or_equal' and\n * returns the ES occurrence required for bool queries\n *\n * @param {string} combinator - query group type or rule condition\n * @param {bool} not\n * @returns {string} - ES occurrence type. See constants.js\n * @private\n */\nfunction determineOccurrence(combinator, not) {\n  //todo: move into config, like mongoConj\n  switch (combinator) {\n  case \"AND\":\n    return not ? \"must_not\" : \"must\";\n    // -- AND\n\n  case \"OR\":\n    return not ? \"should_not\" : \"should\";\n    // -- OR\n\n  case \"NOT\":\n    return not ? \"must\" : \"must_not\";\n    // -- NOT AND\n\n  default:\n    return undefined;\n  }\n}\n\n/**\n * Determines what field to query off of given the operator type\n *\n * @param {string} fieldDataType - The type of data\n * @param {string} fullFieldName - A '.' separated string containing the property lineage (including self)\n * @param {string} queryType - The query type\n * @returns {string|*} - will be either the fullFieldName or fullFieldName.keyword\n * @private\n */\n//todo: not used\nfunction determineQueryField(fieldDataType, fullFieldName, queryType) {\n  if (fieldDataType === \"boolean\") {\n    return fullFieldName;\n  }\n\n  switch (queryType) {\n  case \"term\":\n  case \"wildcard\":\n    return \"\".concat(fullFieldName, \".keyword\");\n\n  case \"geo_bounding_box\":\n  case \"range\":\n  case \"match\":\n    return fullFieldName;\n\n  default:\n    console.error(\"Can't determine query field for query type \".concat(queryType));\n    return null;\n  }\n}\n\nfunction buildRegexpParameters(value) {\n  return {\n    value: value\n  };\n}\n\nfunction determineField(fieldName, config) {\n  //todo: ElasticSearchTextField - not used\n  //return config.fields[fieldName].ElasticSearchTextField || fieldName;\n  return fieldName;\n}\n\nfunction buildParameters(queryType, value, operator, fieldName, config) {\n  const textField = determineField(fieldName, config);\n  switch (queryType) {\n  case \"filter\":\n    //todo: elasticSearchScript - not used\n    return {\n      script: config.operators[operator].elasticSearchScript(fieldName, value)\n    };\n\n  case \"exists\":\n    return { field: fieldName };\n\n  case \"match\":\n    return { [textField]: value[0] };\n\n  case \"term\":\n    return { [fieldName]: value[0] };\n\n  //todo: not used\n  // need to add geo type into RAQB or remove this code\n  case \"geo_bounding_box\":\n    return { [fieldName]: buildEsGeoPoint(value[0]) };\n\n  case \"range\":\n    return { [fieldName]: buildEsRangeParameters(value, operator) };\n\n  case \"wildcard\":\n    return { [fieldName]: buildEsWildcardParameters(value[0]) };\n\n  case \"regexp\":\n    return { [fieldName]: buildRegexpParameters(value[0]) };\n\n  default:\n    return undefined;\n  }\n}\n/**\n * Handles the building of the group portion of the DSL\n *\n * @param {string} fieldName - The name of the field you are building a rule for\n * @param {string} fieldDataType - The type of data this field holds\n * @param {string} value - The value of this rule\n * @param {string} operator - The condition on how the value is matched\n * @returns {object} - The ES rule\n * @private\n */\nfunction buildEsRule(fieldName, value, operator, config, valueSrc) {\n  if (!fieldName || !operator || value == undefined)\n    return undefined; // rule is not fully entered\n  let op = operator;\n  let opConfig = config.operators[op];\n  if (!opConfig)\n    return undefined; // unknown operator\n  let { elasticSearchQueryType } = opConfig;\n\n  // not\n  let not = false;\n  if (!elasticSearchQueryType && opConfig.reversedOp) {\n    not = true;\n    op = opConfig.reversedOp;\n    opConfig = config.operators[op];\n    ({ elasticSearchQueryType } = opConfig);\n  }\n  \n  // handle if value 0 has multiple values like a select in a array\n  const widget = getWidgetForFieldOp(config, fieldName, op, valueSrc);\n  const widgetConfig = config.widgets[widget];\n  if (!widgetConfig)\n    return undefined; // unknown widget\n  const { elasticSearchFormatValue } = widgetConfig;\n\n  /** In most cases the queryType will be static however in some casese (like between) the query type will change\n   * based on the data type. i.e. a between time will be different than between number, date, letters etc... */\n  let queryType;\n  if (typeof elasticSearchQueryType === \"function\") {\n    queryType = elasticSearchQueryType(widget);\n  } else {\n    queryType = elasticSearchQueryType;\n  }\n\n  if (!queryType) {\n    // Not supported\n    return undefined;\n  }\n\n  /** If a widget has a rule on how to format that data then use that otherwise use default way of determineing search parameters\n   * */\n  let parameters;\n  if (typeof elasticSearchFormatValue === \"function\") {\n    parameters = elasticSearchFormatValue(queryType, value, op, fieldName, config);\n  } else {\n    parameters = buildParameters(queryType, value, op, fieldName, config);\n  }\n\n  if (not) {\n    return {\n      bool: {\n        must_not: {\n          [queryType]: {...parameters}\n        }\n      }\n    };\n  } else {\n    return {\n      [queryType]: {...parameters}\n    };\n  }\n}\n\n/**\n * Handles the building of the group portion of the DSL\n *\n * @param {object} children - The contents of the group\n * @param {string} conjunction - The way the contents of the group are joined together i.e. AND OR\n * @param {bool} not\n * @param {Function} recursiveFxn - The recursive fxn to build the contents of the groups children\n * @private\n * @returns {object} - The ES group\n */\nfunction buildEsGroup(children, conjunction, not, recursiveFxn, config) {\n  if (!children || !children.size)\n    return undefined;\n  const childrenArray = children.valueSeq().toArray();\n  const occurrence = determineOccurrence(conjunction, not);\n  const result = childrenArray.map((c) => recursiveFxn(c, config)).filter(v => v !== undefined);\n  if (!result.length)\n    return undefined;\n  const resultFlat = result.flat(Infinity);\n  return {\n    bool: {\n      [occurrence]: resultFlat\n    }\n  };\n}\n\nexport function elasticSearchFormat(tree, config) {\n  // -- format the es dsl here\n  if (!tree) return undefined;\n  const type = tree.get(\"type\");\n  const properties = tree.get(\"properties\") || new Map();\n\n  if (type === \"rule\" && properties.get(\"field\")) {\n    // -- field is null when a new blank rule is added\n    const operator = properties.get(\"operator\");\n    const field = properties.get(\"field\");\n    const value = properties.get(\"value\").toJS();\n    const _valueType = properties.get(\"valueType\")?.get(0);\n    const valueSrc = properties.get(\"valueSrc\")?.get(0);\n\n    if (valueSrc === \"func\") {\n      // -- elastic search doesn't support functions (that is post processing)\n      return;\n    }\n\n    if (value && Array.isArray(value[0])) {\n      //TODO : Handle case where the value has multiple values such as in the case of a list\n      return value[0].map((val) => \n        buildEsRule(field, [val], operator, config, valueSrc)\n      );\n    } else {\n      return buildEsRule(field, value, operator, config, valueSrc);\n    }\n  }\n\n  if (type === \"group\" || type === \"rule_group\") {\n    const not = properties.get(\"not\");\n    let conjunction = properties.get(\"conjunction\");\n    if (!conjunction)\n      conjunction = defaultConjunction(config);\n    const children = tree.get(\"children1\");\n    return buildEsGroup(children, conjunction, not, elasticSearchFormat, config);\n  }\n}\n","import Immutable, { fromJS, Map } from \"immutable\";\nimport {validateTree} from \"../utils/validation\";\nimport {extendConfig} from \"../utils/configUtils\";\nimport {getTreeBadFields, getLightTree} from \"../utils/treeUtils\";\nimport {isJsonLogic} from \"../utils/stuff\";\n\nexport const getTree = (immutableTree, light = true, children1AsArray = true) => {\n  if (!immutableTree) return undefined;\n  let tree = immutableTree;\n  tree = tree.toJS();\n  if (light)\n    tree = getLightTree(tree, children1AsArray);\n  return tree;\n};\n\nexport const loadTree = (serTree) => {\n  if (isImmutableTree(serTree)) {\n    return serTree;\n  } else if (isTree(serTree)) {\n    return jsTreeToImmutable(serTree);\n  } else if (typeof serTree == \"string\" && serTree.startsWith('[\"~#iM\"')) {\n    //tip: old versions of RAQB were saving tree with `transit.toJSON()`\n    // https://github.com/ukrbublik/react-awesome-query-builder/issues/69\n    throw \"You are trying to load query in obsolete serialization format (Immutable string) which is not supported in versions starting from 2.1.17\";\n  } else if (typeof serTree == \"string\") {\n    return jsTreeToImmutable(JSON.parse(serTree));\n  } else throw \"Can't load tree!\";\n};\n\nexport const checkTree = (tree, config) => {\n  if (!tree) return undefined;\n  const extendedConfig = extendConfig(config);\n  return validateTree(tree, null, extendedConfig, extendedConfig);\n};\n\nexport const isValidTree = (tree) => {\n  return getTreeBadFields(tree).length == 0;\n};\n\nexport const isImmutableTree = (tree) => {\n  return Map.isMap(tree);\n};\n\nexport const isTree = (tree) => {\n  return typeof tree == \"object\" && (tree.type == \"group\" || tree.type == \"switch_group\");\n};\n\nexport {isJsonLogic};\n\nfunction jsTreeToImmutable(tree) {\n  return fromJS(tree, function (key, value) {\n    let outValue;\n    if (key == \"properties\") {\n      outValue = value.toOrderedMap();\n\n      // `value` should be undefined instead of null\n      // JSON doesn't support undefined and replaces undefined -> null\n      // So fix: null -> undefined\n      for (let i = 0 ; i < 2 ; i++) {\n        if (outValue.get(\"value\")?.get(i) === null) {\n          outValue = outValue.setIn([\"value\", i], undefined);\n        }\n      }\n    } else if (key == \"value\" && value.get(0) && value.get(0).toJS !== undefined) {\n      const valueJs = value.get(0).toJS();\n      if (valueJs.func) {\n        outValue = value.toOrderedMap();\n      } else {\n        // only for raw values keep JS representation\n        outValue = Immutable.List.of(valueJs);\n      }\n    } else if (key == \"asyncListValues\") {\n      // keep in JS format\n      outValue = value.toJS();\n    } else if (key == \"children1\" && Immutable.Iterable.isIndexed(value)) {\n      outValue = new Immutable.OrderedMap(value.map(child => [child.get(\"id\"), child]));\n    } else {\n      outValue = Immutable.Iterable.isIndexed(value) ? value.toList() : value.toOrderedMap();\n    }\n    return outValue;\n  });\n}\n\n","import uuid from \"../utils/uuid\";\nimport {defaultValue, isJsonLogic, shallowEqual, logger} from \"../utils/stuff\";\nimport {getFieldConfig, extendConfig, normalizeField} from \"../utils/configUtils\";\nimport {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {loadTree} from \"./tree\";\nimport {defaultConjunction, defaultGroupConjunction} from \"../utils/defaultUtils\";\n\nimport moment from \"moment\";\n\n// http://jsonlogic.com/\n\n// helpers\nconst arrayUniq = (arr) => Array.from(new Set(arr));\nconst arrayToObject = (arr) => arr.reduce((acc, [f, fc]) => ({ ...acc, [f]: fc }), {});\n\nexport const loadFromJsonLogic = (logicTree, config) => {\n  return _loadFromJsonLogic(logicTree, config, false);\n};\n\nexport const _loadFromJsonLogic = (logicTree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n  const extendedConfig = extendConfig(config);\n  const conv = buildConv(extendedConfig);\n  let jsTree = logicTree ? convertFromLogic(logicTree, conv, extendedConfig, \"rule\", meta) : undefined;\n  if (jsTree && jsTree.type != \"group\") {\n    jsTree = wrapInDefaultConj(jsTree, extendedConfig);\n  }\n  const immTree = jsTree ? loadTree(jsTree) : undefined;\n\n  if (returnErrors) {\n    return [immTree, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while importing from JsonLogic:\", meta.errors);\n    return immTree;\n  }\n};\n\n\nconst buildConv = (config) => {\n  let operators = {};\n  for (let opKey in config.operators) {\n    const opConfig = config.operators[opKey];\n    if (typeof opConfig.jsonLogic == \"string\") {\n      // example: \"</2\", \"#in/1\"\n      const opk = (opConfig._jsonLogicIsRevArgs ? \"#\" : \"\") + opConfig.jsonLogic + \"/\" + defaultValue(opConfig.cardinality, 1);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    } else if(typeof opConfig.jsonLogic2 == \"string\") {\n      // example: all-in/1\"\n      const opk = opConfig.jsonLogic2 + \"/\" + defaultValue(opConfig.cardinality, 1);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    }\n  }\n\n  let conjunctions = {};\n  for (let conjKey in config.conjunctions) {\n    const conjunctionDefinition = config.conjunctions[conjKey];\n    const ck = conjunctionDefinition.jsonLogicConj || conjKey.toLowerCase();\n    conjunctions[ck] = conjKey;\n  }\n\n  let funcs = {};\n  for (let funcKey in config.funcs) {\n    const funcConfig = config.funcs[funcKey];\n    let fk;\n    if (funcConfig.jsonLogicIsMethod) {\n      fk = \"#\" + funcConfig.jsonLogic;\n    } else if (typeof funcConfig.jsonLogic == \"string\") {\n      fk = funcConfig.jsonLogic;\n    }\n    if (fk) {\n      if (!funcs[fk])\n        funcs[fk] = [];\n      funcs[fk].push(funcKey);\n    }\n  }\n\n  const {groupVarKey, altVarKey} = config.settings.jsonLogic;\n\n  return {\n    operators,\n    conjunctions,\n    funcs,\n    varKeys: [\"var\", groupVarKey, altVarKey],\n  };\n};\n\n\nconst convertFromLogic = (logic, conv, config, expectedType, meta, not = false, fieldConfig, widget, parentField = null, _isLockedLogic = false) => {\n  let op, vals;\n  if (isJsonLogic(logic)) {\n    op = Object.keys(logic)[0];\n    vals = logic[op];\n    if (!Array.isArray(vals))\n      vals = [ vals ];\n  }\n  \n  let ret;\n  let beforeErrorsCnt = meta.errors.length;\n\n  const {lockedOp} = config.settings.jsonLogic;\n  const isEmptyOp = op == \"!\" && (vals.length == 1 && vals[0] && isJsonLogic(vals[0]) && conv.varKeys.includes(Object.keys(vals[0])[0]));\n  const isRev = op == \"!\" && !isEmptyOp;\n  const isLocked = lockedOp && op == lockedOp;\n  if (isLocked) {\n    ret = convertFromLogic(vals[0], conv, config, expectedType, meta, not, fieldConfig, widget, parentField, true);\n  } else if (isRev) {\n    // reverse with not\n    ret = convertFromLogic(vals[0], conv, config, expectedType, meta, !not, fieldConfig, widget, parentField);\n  } else if(expectedType == \"val\") {\n    // not is not used here\n    ret = convertField(op, vals, conv, config, not, meta, parentField) \n      || convertFunc(op, vals, conv, config, not, fieldConfig, meta, parentField) \n      || convertVal(logic, fieldConfig, widget, config, meta);\n  } else if(expectedType == \"rule\") {\n    ret = convertConj(op, vals, conv, config, not, meta, parentField, false) \n    || convertOp(op, vals, conv, config, not, meta, parentField);\n  }\n\n  let afterErrorsCnt = meta.errors.length;\n  if (op != \"!\" && ret === undefined && afterErrorsCnt == beforeErrorsCnt) {\n    meta.errors.push(`Can't parse logic ${JSON.stringify(logic)}`);\n  }\n\n  if (isLocked) {\n    ret.properties.isLocked = true;\n  }\n\n  return ret;\n};\n\n\nconst convertVal = (val, fieldConfig, widget, config, meta) => {\n  if (val === undefined) return undefined;\n  const widgetConfig = config.widgets[widget || fieldConfig.mainWidget];\n\n  if (!widgetConfig) {\n    meta.errors.push(`No widget for type ${fieldConfig.type}`);\n    return undefined;\n  }\n\n  if (isJsonLogic(val)) {\n    meta.errors.push(`Unexpected logic in value: ${JSON.stringify(val)}`);\n    return undefined;\n  }\n\n  // number of seconds -> time string\n  if (fieldConfig && fieldConfig.type == \"time\" && typeof val == \"number\") {\n    const [h, m, s] = [Math.floor(val / 60 / 60) % 24, Math.floor(val / 60) % 60, val % 60];\n    const valueFormat = widgetConfig.valueFormat;\n    if (valueFormat) {\n      const dateVal = new Date(val);\n      dateVal.setMilliseconds(0);\n      dateVal.setHours(h);\n      dateVal.setMinutes(m);\n      dateVal.setSeconds(s);\n      val = moment(dateVal).format(valueFormat);\n    } else {\n      val = `${h}:${m}:${s}`;\n    }\n  }\n\n  // \"2020-01-08T22:00:00.000Z\" -> Date object\n  if (fieldConfig && [\"date\", \"datetime\"].includes(fieldConfig.type) && val && !(val instanceof Date)) {\n    try {\n      const dateVal = new Date(val);\n      if (dateVal instanceof Date && dateVal.toISOString() === val) {\n        val = dateVal;\n      }\n    } catch(e) {\n      meta.errors.push(`Can't convert value ${val} as Date`);\n      val = undefined;\n    }\n  }\n\n  // Date object -> formatted string\n  if (val instanceof Date && fieldConfig) {\n    const valueFormat = widgetConfig.valueFormat;\n    if (valueFormat) {\n      val = moment(val).format(valueFormat);\n    }\n  }\n\n  let asyncListValues;\n  if (val && fieldConfig.fieldSettings && fieldConfig.fieldSettings.asyncFetch) {\n    const vals = Array.isArray(val) ? val : [val];\n    asyncListValues = vals;\n  }\n\n  return {\n    valueSrc: \"value\",\n    value: val,\n    valueType: widgetConfig.type,\n    asyncListValues\n  };\n};\n\n\nconst convertField = (op, vals, conv, config, not, meta, parentField = null) => {\n  const {fieldSeparator} = config.settings;\n  if (conv.varKeys.includes(op) && typeof vals[0] == \"string\") {\n    let field = vals[0];\n    if (parentField)\n      field = [parentField, field].join(fieldSeparator);\n    field = normalizeField(config, field);\n    const fieldConfig = getFieldConfig(config, field);\n    if (!fieldConfig) {\n      meta.errors.push(`No config for field ${field}`);\n      return undefined;\n    }\n\n    return {\n      valueSrc: \"field\",\n      value: field,\n      valueType: fieldConfig.type,\n    };\n  }\n\n  return undefined;\n};\n\n\nconst convertFunc = (op, vals, conv, config, not, fieldConfig, meta, parentField = null) => {\n  if (!op) return undefined;\n  let func, argsArr, funcKey;\n  const jsonLogicIsMethod = (op == \"method\");\n  if (jsonLogicIsMethod) {\n    let obj, opts;\n    [obj, func, ...opts] = vals;\n    argsArr = [obj, ...opts];\n  } else {\n    func = op;\n    argsArr = vals;\n  }\n\n  const fk = (jsonLogicIsMethod ? \"#\" : \"\") + func;\n  const funcKeys = (conv.funcs[fk] || []).filter(k => \n    (fieldConfig ? config.funcs[k].returnType == fieldConfig.type : true)\n  );\n  if (funcKeys.length) {\n    funcKey = funcKeys[0];\n  } else {\n    const v = {[op]: vals};\n    for (const [f, fc] of Object.entries(config.funcs || {})) {\n      if (fc.jsonLogicImport && fc.returnType == fieldConfig.type) {\n        let parsed;\n        try {\n          parsed = fc.jsonLogicImport(v);\n        } catch(_e) {\n          // given expression `v` can't be parsed into function\n        }\n        if (parsed) {\n          funcKey = f;\n          argsArr = parsed;\n        }\n      }\n    }\n  }\n  if (!funcKey)\n    return undefined;\n\n  if (funcKey) {\n    const funcConfig = config.funcs[funcKey];\n    const argKeys = Object.keys(funcConfig.args || {});\n    let args = argsArr.reduce((acc, val, ind) => {\n      const argKey = argKeys[ind];\n      const argConfig = funcConfig.args[argKey];\n      let argVal = convertFromLogic(val, conv, config, \"val\", meta, false, argConfig, null, parentField);\n      if (argVal === undefined) {\n        argVal = argConfig.defaultValue;\n        if (argVal === undefined) {\n          meta.errors.push(`No value for arg ${argKey} of func ${funcKey}`);\n          return undefined;\n        }\n      }\n      return {...acc, [argKey]: argVal};\n    }, {});\n\n    return {\n      valueSrc: \"func\",\n      value: {\n        func: funcKey,\n        args: args\n      },\n      valueType: funcConfig.returnType,\n    };\n  }\n\n  return undefined;\n};\n\n\nconst convertConj = (op, vals, conv, config, not, meta, parentField = null, isRuleGroup = false) => {\n  const conjKey = conv.conjunctions[op];\n  const {fieldSeparator} = config.settings;\n  const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n  const isParentGroup = parentFieldConfig?.type == \"!group\";\n  if (conjKey) {\n    let type = \"group\";\n    const children = vals\n      .map(v => convertFromLogic(v, conv, config, \"rule\", meta, false, null, null, parentField))\n      .filter(r => r !== undefined)\n      .reduce((acc, r) => ({...acc, [r.id] : r}), {});\n    const complexFields = Object.values(children)\n      .map(v => v?.properties?.field)\n      .filter(f => f && f.includes(fieldSeparator));\n    const complexFieldsGroupAncestors = Object.fromEntries(\n      arrayUniq(complexFields).map(f => {\n        const parts = f.split(fieldSeparator);\n        const ancs = Object.fromEntries(\n          parts.slice(0, -1)\n            .map((f, i, parts) => [...parts.slice(0, i), f])\n            .map(fp => [fp.join(fieldSeparator), getFieldConfig(config, fp)])\n            .filter(([_f, fc]) => fc.type == \"!group\")\n        );\n        return [f, Object.keys(ancs)];\n      })\n    );\n    const childrenInRuleGroup = Object.values(children)\n      .map(v => v?.properties?.field)\n      .map(f => complexFieldsGroupAncestors[f])\n      .filter(ancs => ancs && ancs.length);\n    const usedRuleGroups = arrayUniq(Object.values(complexFieldsGroupAncestors).flat());\n    const usedTopRuleGroups = topLevelFieldsFilter(usedRuleGroups);\n    \n    let properties = {\n      conjunction: conjKey,\n      not: not\n    };\n    const id = uuid();\n\n    let children1 = {};\n    let groupToId = {};\n    Object.entries(children).map(([k, v]) => {\n      if (v.type == \"group\" || v.type == \"rule_group\") {\n        // put as-is\n        children1[k] = v;\n      } else {\n        const field = v?.properties?.field;\n        const groupAncestors = complexFieldsGroupAncestors[field];\n        const groupField = groupAncestors?.at(-1);\n        if (!groupField) {\n          // not in rule_group (can be simple field or in struct) - put as-is\n          children1[k] = v;\n        } else {\n          // wrap field in rule_group (with creating hierarchy if need)\n          let ch = children1;\n          let parentFieldParts = parentField ? parentField.split(fieldSeparator) : [];\n          const isInParent = shallowEqual(parentFieldParts, groupField.split(fieldSeparator).slice(0, parentFieldParts.length));\n          if (!isInParent)\n            parentFieldParts = []; // should not be\n          const traverseGroupFields = groupField\n            .split(fieldSeparator)\n            .slice(parentFieldParts.length)\n            .map((f, i, parts) => [...parentFieldParts, ...parts.slice(0, i), f].join(fieldSeparator))\n            .map(f => normalizeField(config, f))\n            .map((f) => ({f, fc: getFieldConfig(config, f) || {}}))\n            .filter(({fc}) => (fc.type != \"!struct\"));\n          traverseGroupFields.map(({f: gf, fc: gfc}, i) => {\n            let groupId = groupToId[gf];\n            if (!groupId) {\n              groupId = uuid();\n              groupToId[gf] = groupId;\n              ch[groupId] = {\n                type: \"rule_group\",\n                id: groupId,\n                children1: {},\n                properties: {\n                  conjunction: conjKey,\n                  not: false,\n                  field: gf,\n                  mode: gfc.mode,\n                }\n              };\n            }\n            ch = ch[groupId].children1;\n          });\n          ch[k] = v;\n        }\n      }\n    });\n\n    // tip: for isRuleGroup=true correct type and properties will be set out of this func\n\n    return {\n      type: type,\n      id: id,\n      children1: children1,\n      properties: properties\n    };\n  }\n\n  return undefined;\n};\n\n\nconst topLevelFieldsFilter = (fields) => {\n  let arr = [...fields].sort((a, b) => (a.length - b.length));\n  for (let i = 0 ; i < arr.length ; i++) {\n    for (let j = i + 1 ; j < arr.length ; j++) {\n      if (arr[j].indexOf(arr[i]) == 0) {\n        // arr[j] is inside arr[i] (eg. \"a.b\" inside \"a\")\n        arr.splice(j, 1);\n        j--;\n      }\n    }\n  }\n  return arr;\n};\n\nconst wrapInDefaultConjRuleGroup = (rule, parentField, parentFieldConfig, config, conj) => {\n  if (!rule) return undefined;\n  return {\n    type: \"rule_group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: conj || defaultGroupConjunction(config, parentFieldConfig),\n      not: false,\n      field: parentField,\n    }\n  };\n};\n\nconst wrapInDefaultConj = (rule, config, not = false) => {\n  return {\n    type: \"group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: defaultConjunction(config),\n      not: not\n    }\n  };\n};\n\nconst parseRule = (op, arity, vals, parentField, conv, config, meta) => {\n  let errors = [];\n  let res = _parseRule(op, arity, vals, parentField, conv, config, errors, false) \n         || _parseRule(op, arity, vals, parentField, conv, config, errors, true) ;\n\n  if (!res) {\n    meta.errors.push(errors.join(\"; \") || `Unknown op ${op}/${arity}`);\n    return undefined;\n  }\n  \n  return res;\n};\n\nconst _parseRule = (op, arity, vals, parentField, conv, config, errors, isRevArgs) => {\n  // config.settings.groupOperators are used for group count (cardinality = 0 is exception)\n  // but don't confuse with \"all-in\" or \"some-in\" for multiselect\n  const isAllOrSomeInForMultiselect = (op == \"all\" || op == \"some\") && isJsonLogic(vals[1]) && Object.keys(vals[1])[0] == \"in\";\n  const isGroup0 = !isAllOrSomeInForMultiselect && config.settings.groupOperators.includes(op);\n  const eqOps = [\"==\", \"!=\"];\n  let cardinality = isGroup0 ? 0 : arity - 1;\n  if (isGroup0)\n    cardinality = 0;\n  else if (eqOps.includes(op) && cardinality == 1 && vals[1] === null)\n    cardinality = 0;\n\n  const opk = op + \"/\" + cardinality;\n  const {fieldSeparator} = config.settings;\n  let opKeys = conv.operators[(isRevArgs ? \"#\" : \"\") + opk];\n  if (!opKeys)\n    return;\n  \n  let jlField, args = [];\n  const rangeOps = [\"<\", \"<=\", \">\", \">=\"];\n  if (rangeOps.includes(op) && arity == 3) {\n    jlField = vals[1];\n    args = [ vals[0], vals[2] ];\n  } else if (isRevArgs) {\n    jlField = vals[1];\n    args = [ vals[0] ];\n  } else {\n    [jlField, ...args] = vals;\n  }\n\n  if (!isJsonLogic(jlField)) {\n    errors.push(`Incorrect operands for ${op}: ${JSON.stringify(vals)}`);\n    return;\n  }\n  let k = Object.keys(jlField)[0];\n  let v = Object.values(jlField)[0];\n  \n  let field, having, isGroup;\n  if (conv.varKeys.includes(k) && typeof v == \"string\") {\n    field = v;\n  }\n  if (isGroup0) {\n    isGroup = true;\n    having = args[0];\n    args = [];\n  }\n  // reduce/filter for group ext\n  if (k == \"reduce\" && Array.isArray(v) && v.length == 3) {\n    let [filter, acc, init] = v;\n    if (isJsonLogic(filter) && init == 0 && isJsonLogic(acc) && Array.isArray(acc[\"+\"]) && acc[\"+\"][0] == 1 && isJsonLogic(acc[\"+\"][1]) && acc[\"+\"][1][\"var\"] == \"accumulator\") {\n      k = Object.keys(filter)[0];\n      v = Object.values(filter)[0];\n      if (k == \"filter\") {\n        let [group, filter] = v;\n        if (isJsonLogic(group)) {\n          k = Object.keys(group)[0];\n          v = Object.values(group)[0];\n          if (conv.varKeys.includes(k) && typeof v == \"string\") {\n            field = v;\n            having = filter;\n            isGroup = true;\n          }\n        }\n      } else if (conv.varKeys.includes(k) && typeof v == \"string\") {\n        field = v;\n        isGroup = true;\n      }\n    }\n  }\n  \n  if (!field) {\n    errors.push(`Unknown field ${JSON.stringify(jlField)}`);\n    return;\n  }\n  if (parentField)\n    field = [parentField, field].join(fieldSeparator);\n  field = normalizeField(config, field);\n\n  const fieldConfig = getFieldConfig(config, field);\n  if (!fieldConfig) {\n    errors.push(`No config for field ${field}`);\n    return;\n  }\n\n  let opKey = opKeys[0];\n  if (opKeys.length > 1 && fieldConfig && fieldConfig.operators) {\n    // eg. for \"equal\" and \"select_equals\"\n    opKeys = opKeys\n      .filter(k => fieldConfig.operators.includes(k));\n    if (opKeys.length == 0) {\n      errors.push(`No corresponding ops for field ${field}`);\n      return;\n    }\n    opKey = opKeys[0];\n  }\n  \n  return {\n    field, fieldConfig, opKey, args, having\n  };\n};\n\nconst convertOp = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (!op) return undefined;\n\n  const arity = vals.length;\n  if ((op == \"all\" || op == \"some\") && isJsonLogic(vals[1])) {\n    // special case for \"all-in\" and \"some-in\"\n    const op2 = Object.keys(vals[1])[0];\n    if (op2 == \"in\") {\n      vals = [\n        vals[0],\n        vals[1][op2][1]\n      ];\n      op = op + \"-\" + op2; // \"all-in\" and \"some-in\"\n    }\n  }\n\n  const parseRes = parseRule(op, arity, vals, parentField, conv, config, meta);\n  if (!parseRes) return undefined;\n  let {field, fieldConfig, opKey, args, having} = parseRes;\n  let opConfig = config.operators[opKey];\n\n  // Group component in array mode can show NOT checkbox, so do nothing in this case\n  // Otherwise try to revert\n  const showNot = fieldConfig.showNot !== undefined ? fieldConfig.showNot : config.settings.showNot; \n  let canRev = true;\n  // if (fieldConfig.type == \"!group\" && fieldConfig.mode == \"array\" && showNot)\n  //   canRev = false;\n\n  let conj;\n  let havingVals;\n  if (fieldConfig.type == \"!group\" && having) {\n    conj = Object.keys(having)[0];\n    havingVals = having[conj];\n    if (!Array.isArray(havingVals))\n      havingVals = [ havingVals ];\n\n    // Preprocess \"!\": Try to reverse op in single rule in having\n    // Eg. use `not_equal` instead of `not` `equal`\n    const isEmptyOp = conj == \"!\" && (havingVals.length == 1 && havingVals[0] && isJsonLogic(havingVals[0]) && conv.varKeys.includes(Object.keys(havingVals[0])[0]));\n    if (conj == \"!\" && !isEmptyOp) {\n      not = !not;\n      having = having[\"!\"];\n      conj = Object.keys(having)[0];\n      havingVals = having[conj];\n      if (!Array.isArray(havingVals))\n        havingVals = [ havingVals ];\n    }\n  }\n\n  // Use reversed op\n  if (not && canRev && opConfig.reversedOp) {\n    not = false;\n    opKey = opConfig.reversedOp;\n    opConfig = config.operators[opKey];\n  }\n\n  const widget = getWidgetForFieldOp(config, field, opKey);\n\n  const convertedArgs = args\n    .map(v => convertFromLogic(v, conv, config, \"val\", meta, false, fieldConfig, widget, parentField));\n  if (convertedArgs.filter(v => v === undefined).length) {\n    //meta.errors.push(`Undefined arg for field ${field} and op ${opKey}`);\n    return undefined;\n  }\n\n  let res;\n\n  if (fieldConfig.type == \"!group\" && having) {\n    if (conv.conjunctions[conj] !== undefined) {\n      res = convertConj(conj, havingVals, conv, config, not, meta, field, true);\n      not = false; // not was applied to group\n    } else {\n      // need to be wrapped in `rule_group`\n      const rule = convertOp(conj, havingVals, conv, config, not && canRev, meta, field);\n      if (not && canRev && !rule?.properties?.not) {\n        not = false; // op was reversed in rule\n      }\n      res = wrapInDefaultConjRuleGroup(rule, field, fieldConfig, config, conv.conjunctions[\"and\"]);\n    }\n    if (!res)\n      return undefined;\n    \n    res.type = \"rule_group\";\n    if (not) {\n      Object.assign(res.properties, {\n        not: not,\n      });\n    }\n    Object.assign(res.properties, {\n      field: field,\n      mode: fieldConfig.mode,\n      operator: opKey,\n    });\n    if (fieldConfig.mode == \"array\") {\n      Object.assign(res.properties, {\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n      });\n    }\n  } else if (fieldConfig.type == \"!group\" && !having) {\n    res = {\n      type: \"rule_group\",\n      id: uuid(),\n      children1: {},\n      properties: {\n        conjunction: defaultGroupConjunction(config, fieldConfig),\n        not: not,\n        mode: fieldConfig.mode,\n        field: field,\n        operator: opKey,\n      }\n    };\n    if (fieldConfig.mode == \"array\") {\n      Object.assign(res.properties, {\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n      });\n    }\n  } else {\n    const asyncListValuesArr = convertedArgs.map(v => v.asyncListValues).filter(v => v != undefined);\n    const asyncListValues = asyncListValuesArr.length ? asyncListValuesArr[0] : undefined;\n    res = {\n      type: \"rule\",\n      id: uuid(),\n      properties: {\n        field: field,\n        operator: opKey,\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n        asyncListValues,\n      }\n    };\n    if (not) {\n      //meta.errors.push(`No rev op for ${opKey}`);\n      res = wrapInDefaultConj(res, config, not);\n    }\n  }\n\n  return res;\n};\n\n","import { SpelExpressionEvaluator } from \"spel2js\";\nimport uuid from \"../utils/uuid\";\nimport {getFieldConfig, extendConfig, normalizeField} from \"../utils/configUtils\";\nimport {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {loadTree} from \"./tree\";\nimport {defaultConjunction, defaultGroupConjunction} from \"../utils/defaultUtils\";\nimport {logger} from \"../utils/stuff\";\nimport moment from \"moment\";\n\nexport const loadFromSpel = (logicTree, config) => {\n  return _loadFromSpel(logicTree, config, true);\n};\n\nexport const _loadFromSpel = (spelStr, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n  const extendedConfig = extendConfig(config);\n  const conv = buildConv(extendedConfig);\n  \n  let compiledExpression;\n  let convertedObj;\n  let jsTree = undefined;\n  try {\n    const compileRes = SpelExpressionEvaluator.compile(spelStr);\n    compiledExpression = compileRes._compiledExpression;\n  } catch (e) {\n    meta.errors.push(e);\n  }\n  \n  if (compiledExpression) {\n    logger.debug(\"compiledExpression:\", compiledExpression);\n    convertedObj = convertCompiled(compiledExpression, meta);\n    logger.debug(\"convertedObj:\", convertedObj, meta);\n\n    jsTree = convertToTree(convertedObj, conv, extendedConfig, meta);\n    if (jsTree && jsTree.type != \"group\" && jsTree.type != \"switch_group\") {\n      jsTree = wrapInDefaultConj(jsTree, extendedConfig, convertedObj[\"not\"]);\n    }\n    logger.debug(\"jsTree:\", jsTree);\n  }\n\n  const immTree = jsTree ? loadTree(jsTree) : undefined;\n\n  if (returnErrors) {\n    return [immTree, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while importing from SpEL:\", meta.errors);\n    return immTree;\n  }\n};\n\nconst convertCompiled = (expr, meta, parentExpr = null) => {\n  const type = expr.getType();\n  let children = expr.getChildren().map(child => convertCompiled(child, meta, expr));\n\n  // flatize OR/AND\n  if (type == \"op-or\" || type == \"op-and\") {\n    children = children.reduce((acc, child) => {\n      const canFlatize = child.type == type && !child.not;\n      const flat = canFlatize ? child.children : [child];\n      return [...acc, ...flat];\n    }, []);\n  }\n\n  // unwrap NOT\n  if (type == \"op-not\") {\n    if (children.length != 1) {\n      meta.errors.push(`Operator NOT should have 1 child, but got ${children.length}}`);\n    }\n    return {\n      ...children[0],\n      not: !(children[0].not || false)\n    };\n  }\n\n  if (type == \"compound\") {\n    // remove `.?[true]`\n    children = children.filter(child => {\n      const isListFix = child.type == \"selection\" && child.children.length == 1 && child.children[0].type == \"boolean\" && child.children[0].val == true;\n      return !isListFix;\n    });\n    // aggregation\n    // eg. `results.?[product == 'abc'].length`\n    const selection = children.find(child => \n      child.type == \"selection\"\n    );\n    if (selection && selection.children.length != 1) {\n      meta.errors.push(`Selection should have 1 child, but got ${selection.children.length}`);\n    }\n    const filter = selection ? selection.children[0] : null;\n    const lastChild = children[children.length - 1];\n    const isSize = lastChild.type == \"method\" && lastChild.val.methodName == \"size\" \n      || lastChild.type == \"!func\" && lastChild.methodName == \"size\" ;\n    const isLength = lastChild.type == \"property\" && lastChild.val == \"length\";\n    const sourceParts = children.filter(child => \n      child !== selection && child !== lastChild\n    );\n    const source = {\n      type: \"compound\",\n      children: sourceParts\n    };\n    if (isSize || isLength) {\n      return {\n        type: \"!aggr\",\n        filter,\n        source\n      };\n    }\n    // remove `#this`, `#root`\n    children = children.filter(child => {\n      const isThis = child.type == \"variable\" && child.val == \"this\";\n      const isRoot = child.type == \"variable\" && child.val == \"root\";\n      return !(isThis || isRoot);\n    });\n    // indexer\n    children = children.map(child => {\n      if (child.type == \"indexer\" && child.children.length == 1) {\n        return {\n          type: \"indexer\", \n          val: child.children[0].val,\n          itype: child.children[0].type\n        };\n      } else {\n        return child;\n      }\n    });\n    // method\n    if (lastChild.type == \"method\") {\n      const obj = children.filter(child => \n        child !== lastChild\n      );\n      return {\n        type: \"!func\",\n        obj,\n        methodName: lastChild.val.methodName,\n        args: lastChild.val.args\n      };\n    }\n    // !func\n    if (lastChild.type == \"!func\") {\n      const obj = children.filter(child => \n        child !== lastChild\n      );\n      return {\n        ...lastChild,\n        obj,\n      };\n    }\n  }\n\n  // getRaw || getValue\n  let val;\n  try {\n    if (expr.getRaw) { // use my fork\n      val = expr.getRaw();\n    } else if (expr.getValue.length == 0) { // getValue not requires context arg -> can use\n      val = expr.getValue();\n    }\n  } catch(e) {\n    logger.error(\"[spel2js] Error in getValue()\", e);\n  }\n\n  // ternary\n  if (type == \"ternary\") {\n    val = flatizeTernary(children);\n  }\n\n  // convert method/function args\n  if (typeof val === \"object\" && val !== null) {\n    if (val.methodName || val.functionName) {\n      val.args = val.args.map(child => convertCompiled(child, meta, expr));\n    }\n  }\n  // convert list\n  if (type == \"list\") {\n    val = val.map(item => convertCompiled(item, meta, expr));\n\n    // fix whole expression wrapped in `{}`\n    if (!parentExpr && val.length == 1) {\n      return val[0];\n    }\n  }\n  // convert constructor\n  if (type == \"constructorref\") {\n    const qid = children.find(child => child.type == \"qualifiedidentifier\");\n    const cls = qid?.val;\n    if (!cls) {\n      meta.errors.push(`Can't find qualifiedidentifier in constructorref children: ${JSON.stringify(children)}`);\n      return undefined;\n    }\n    const args = children.filter(child => child.type != \"qualifiedidentifier\");\n    return {\n      type: \"!new\",\n      cls,\n      args\n    };\n  }\n  // convert type\n  if (type == \"typeref\") {\n    const qid = children.find(child => child.type == \"qualifiedidentifier\");\n    const cls = qid?.val;\n    if (!cls) {\n      meta.errors.push(`Can't find qualifiedidentifier in typeref children: ${JSON.stringify(children)}`);\n      return undefined;\n    }\n    const _args = children.filter(child => child.type != \"qualifiedidentifier\");\n    return {\n      type: \"!type\",\n      cls\n    };\n  }\n  // convert function/method\n  if (type == \"function\" || type == \"method\") {\n    // `foo()` is method, `#foo()` is function\n    // let's use common property `methodName` and just add `isVar` for function\n    const {functionName, methodName, args} = val;\n    return {\n      type: \"!func\",\n      methodName: functionName || methodName,\n      isVar: type == \"function\",\n      args\n    };\n  }\n\n  return {\n    type,\n    children,\n    val,\n  };\n};\n\nconst flatizeTernary = (children) => {\n  let flat = [];\n  function _processTernaryChildren(tern) {\n    let [cond, if_val, else_val] = tern;\n    flat.push([cond, if_val]);\n    if (else_val?.type == \"ternary\") {\n      _processTernaryChildren(else_val.children);\n    } else {\n      flat.push([undefined, else_val]);\n    }\n  }\n  _processTernaryChildren(children);\n  return flat;\n};\n\nconst buildConv = (config) => {\n  let operators = {};\n  for (let opKey in config.operators) {\n    const opConfig = config.operators[opKey];\n    if (opConfig.spelOps) {\n      // examples: \"==\", \"eq\", \".contains\", \"matches\" (can be used for starts_with, ends_with)\n      opConfig.spelOps.forEach(spelOp => {\n        const opk = spelOp; // + \"/\" + defaultValue(opConfig.cardinality, 1);\n        if (!operators[opk])\n          operators[opk] = [];\n        operators[opk].push(opKey);\n      });\n    } else if (opConfig.spelOp) {\n      const opk = opConfig.spelOp; // + \"/\" + defaultValue(opConfig.cardinality, 1);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    } else {\n      logger.log(`[spel] No spelOp for operator ${opKey}`);\n    }\n  }\n\n  let conjunctions = {};\n  for (let conjKey in config.conjunctions) {\n    const conjunctionDefinition = config.conjunctions[conjKey];\n    const ck = conjunctionDefinition.spelConj || conjKey.toLowerCase();\n    conjunctions[ck] = conjKey;\n  }\n\n  let funcs = {};\n  for (let funcKey in config.funcs) {\n    const funcConfig = config.funcs[funcKey];\n    let fk;\n    if (typeof funcConfig.spelFunc == \"string\") {\n      fk = funcConfig.spelFunc;\n    }\n    if (fk) {\n      if (!funcs[fk])\n        funcs[fk] = [];\n      funcs[fk].push(funcKey);\n    }\n  }\n\n  return {\n    operators,\n    conjunctions,\n    funcs,\n  };\n};\n\nconst convertPath = (parts, meta) => {\n  let isError = false;\n  const res = parts.map(c => {\n    if (c.type == \"variable\" || c.type == \"property\" || c.type == \"indexer\" && c.itype == \"string\") {\n      return c.val;\n    } else {\n      isError = true;\n      meta.errors.push(`Unexpected item in compound: ${JSON.stringify(c)}`);\n    }\n  });\n  return !isError ? res : undefined;\n};\n\nconst convertArg = (spel, conv, config, meta, parentSpel) => {\n  if (spel == undefined)\n    return undefined;\n  const {fieldSeparator} = config.settings;\n  const literalTypes = {\n    number: \"number\",\n    string: \"text\",\n    boolean: \"boolean\",\n    null: \"null\" // should not be\n  };\n  \n  const groupFieldParts = parentSpel?._groupField ? [parentSpel?._groupField] : [];\n  if (spel.type == \"compound\") {\n    // complex field\n    const parts = convertPath(spel.children, meta);\n    if (!parts) {\n      return undefined;\n    }\n    const fullParts = [...groupFieldParts, ...parts];\n    const isVariable = spel.children?.[0]?.type == \"variable\";\n    return {\n      valueSrc: \"field\",\n      //valueType: todo\n      isVariable,\n      value: fullParts.join(fieldSeparator),\n    };\n  } else if (spel.type == \"variable\" || spel.type == \"property\") {\n    // normal field\n    const fullParts = [...groupFieldParts, spel.val];\n    const isVariable = spel.type == \"variable\";\n    return {\n      valueSrc: \"field\",\n      //valueType: todo\n      isVariable,\n      value: fullParts.join(fieldSeparator),\n    };\n  } else if (literalTypes[spel.type]) {\n    let value = spel.val;\n    let valueType = literalTypes[spel.type];\n    if (parentSpel?.isUnary) {\n      value = -value;\n    }\n    return {\n      valueSrc: \"value\",\n      valueType,\n      value,\n    };\n  } else if (spel.type == \"list\") {\n    const values = spel.val.map(v => convertArg(v, conv, config, meta, spel));\n    const _itemType = values.length ? values[0]?.valueType : null;\n    const value = values.map(v => v?.value);\n    const valueType = \"multiselect\";\n    return {\n      valueSrc: \"value\",\n      valueType,\n      value,\n    };\n  } else if (spel.type == \"!func\") {\n    const {obj, methodName, args, isVar} = spel;\n    \n    // todo: get from conv\n    const funcToOpMap = {\n      [\".contains\"]: \"like\",\n      [\".startsWith\"]: \"starts_with\",\n      [\".endsWith\"]: \"ends_with\",\n      [\"$contains\"]: \"select_any_in\",\n      [\".equals\"]: \"multiselect_equals\",\n      //[\".containsAll\"]: \"multiselect_contains\",\n      [\"CollectionUtils.containsAny()\"]: \"multiselect_contains\"\n    };\n\n    const convertedArgs = args.map(v => convertArg(v, conv, config, meta, {\n      ...spel,\n      _groupField: parentSpel?._groupField\n    }));\n    \n    //todo: make dynamic: use funcToOpMap and check obj type in basic config\n    if (methodName == \"contains\" && obj && obj[0].type == \"list\") {\n      const convertedObj = obj.map(v => convertArg(v, conv, config, meta, spel));\n      // {'yellow', 'green'}.?[true].contains(color)\n      if (!( convertedArgs.length == 1 && convertedArgs[0].valueSrc == \"field\" )) {\n        meta.errors.push(`Expected arg to method ${methodName} to be field but got: ${JSON.stringify(convertedArgs)}`);\n        return undefined;\n      }\n      const field = convertedArgs[0].value;\n      if (!( convertedObj.length == 1 && convertedObj[0].valueType == \"multiselect\" )) {\n        meta.errors.push(`Expected object of method ${methodName} to be inline list but got: ${JSON.stringify(convertedObj)}`);\n        return undefined;\n      }\n      const opKey = funcToOpMap[\"$\"+methodName];\n      const list = convertedObj[0];\n      return buildRule(config, meta, field, opKey, [list]);\n    } else if (obj && obj[0].type == \"property\" && funcToOpMap[obj[0].val + \".\" + methodName + \"()\"]) {\n      // CollectionUtils.containsAny(multicolor, {'yellow', 'green'})\n      const opKey = funcToOpMap[obj[0].val + \".\" + methodName + \"()\"];\n      const field = convertedArgs[0].value;\n      const args = convertedArgs.slice(1);\n      return buildRule(config, meta, field, opKey, args);\n    } else if (funcToOpMap[\".\"+methodName]) {\n      // user.login.startsWith('gg')\n      const opKey = funcToOpMap[\".\"+methodName];\n      const parts = convertPath(obj, meta);\n      if (parts && convertedArgs.length == 1) {\n        const fullParts = [...groupFieldParts, ...parts];\n        const field = fullParts.join(fieldSeparator);\n        return buildRule(config, meta, field, opKey, convertedArgs);\n      }\n    } else if (methodName == \"parse\" && obj && obj[0].type == \"!new\" && obj[0].cls.at(-1) == \"SimpleDateFormat\") {\n      // new java.text.SimpleDateFormat('yyyy-MM-dd').parse('2022-01-15')\n      const args = obj[0].args.map(v => convertArg(v, conv, config, meta, {\n        ...spel,\n        _groupField: parentSpel?._groupField\n      }));\n      if (!( args.length == 1 && args[0].valueType == \"text\" )) {\n        meta.errors.push(`Expected args of ${obj[0].cls.join(\".\")}.${methodName} to be 1 string but got: ${JSON.stringify(args)}`);\n        return undefined;\n      }\n      if (!( convertedArgs.length == 1 && convertedArgs[0].valueType == \"text\" )) {\n        meta.errors.push(`Expected args of ${obj[0].cls.join(\".\")} to be 1 string but got: ${JSON.stringify(convertedArgs)}`);\n        return undefined;\n      }\n      const dateFormat = args[0].value;\n      const dateString = convertedArgs[0].value;\n      const valueType = dateFormat.includes(\" \") ? \"datetime\" : \"date\";\n      const field = null; // todo\n      const widget = valueType;\n      const fieldConfig = getFieldConfig(config, field);\n      const widgetConfig = config.widgets[widget || fieldConfig?.mainWidget];\n      const valueFormat = widgetConfig.valueFormat;\n      const dateVal = moment(dateString, moment.ISO_8601);\n      const value = dateVal.isValid() ? dateVal.format(valueFormat) : undefined;\n      return {\n        valueSrc: \"value\",\n        valueType,\n        value,\n      };\n    } else if (methodName == \"parse\" && obj && obj[0].type == \"!type\" && obj[0].cls.at(-1) == \"LocalTime\") {\n      // time == T(java.time.LocalTime).parse('02:03:00')\n      if (!( convertedArgs.length == 1 && convertedArgs[0].valueType == \"text\" )) {\n        meta.errors.push(`Expected args of ${obj[0].cls.join(\".\")} to be 1 string but got: ${JSON.stringify(convertedArgs)}`);\n        return undefined;\n      }\n      const timeString = convertedArgs[0].value;\n      const valueType = \"time\";\n      const field = null; // todo\n      const widget = valueType;\n      const fieldConfig = getFieldConfig(config, field);\n      const widgetConfig = config.widgets[widget || fieldConfig?.mainWidget];\n      const valueFormat = widgetConfig.valueFormat;\n      const dateVal = moment(timeString, \"HH:mm:ss\");\n      const value = dateVal.isValid() ? dateVal.format(valueFormat) : undefined;\n      return {\n        valueSrc: \"value\",\n        valueType,\n        value,\n      };\n    } else {\n      // todo: conv.funcs\n      meta.errors.push(`Unsupported method ${methodName}`);\n    }\n  } else if (spel.type == \"op-plus\" && parentSpel?.type == \"ternary\") {\n    return buildCaseValueConcat(spel, conv, config, meta);\n  } else {\n    meta.errors.push(`Can't convert arg of type ${spel.type}`);\n  }\n  return undefined;\n};\n\nconst buildRule = (config, meta, field, opKey, convertedArgs) => {\n  if (convertedArgs.filter(v => v === undefined).length) {\n    return undefined;\n  }\n  const fieldConfig = getFieldConfig(config, field);\n  if (!fieldConfig) {\n    meta.errors.push(`No config for field ${field}`);\n    return undefined;\n  }\n  const widget = getWidgetForFieldOp(config, field, opKey);\n  const widgetConfig = config.widgets[widget || fieldConfig.mainWidget];\n  const asyncListValuesArr = convertedArgs.map(v => v.asyncListValues).filter(v => v != undefined);\n  const asyncListValues = asyncListValuesArr.length ? asyncListValuesArr[0] : undefined;\n  let res = {\n    type: \"rule\",\n    id: uuid(),\n    properties: {\n      field: field,\n      operator: opKey,\n      value: convertedArgs.map(v => v.value),\n      valueSrc: convertedArgs.map(v => v.valueSrc),\n      valueType: convertedArgs.map(v => {\n        if (v.valueSrc == \"value\") {\n          return widgetConfig?.type || fieldConfig?.type || v.valueType;\n        }\n        return v.valueType;\n      }),\n      asyncListValues,\n    }\n  };\n  return res;\n};\n\nconst buildRuleGroup = ({groupFilter, groupFieldValue}, opKey, convertedArgs, config, meta) => {\n  if (groupFieldValue.valueSrc != \"field\")\n    throw `Bad groupFieldValue: ${JSON.stringify(groupFieldValue)}`;\n  const groupField = groupFieldValue.value;\n  let groupOpRule = buildRule(config, meta, groupField, opKey, convertedArgs);\n  if (!groupOpRule)\n    return undefined;\n  const fieldConfig = getFieldConfig(config, groupField);\n  const mode = fieldConfig?.mode;\n  let res = {\n    ...(groupFilter || {}),\n    type: \"rule_group\",\n    properties: {\n      ...groupOpRule.properties,\n      ...(groupFilter?.properties || {}),\n      mode\n    }\n  };\n  if (!res.id)\n    res.id = uuid();\n  return res;\n};\n\n\nconst compareArgs = (left, right,  spel, conv, config, meta, parentSpel = null) => {\n  if (left.type == right.type) {\n    if (left.type == \"!aggr\") {\n      const [leftSource, rightSource] = [left.source, right.source].map(v => convertArg(v, conv, config, meta, {\n        ...spel,\n        _groupField: parentSpel?._groupField\n      }));\n      //todo: check same filter\n      return leftSource.value == rightSource.value;\n    } else {\n      const [leftVal, rightVal] = [left, right].map(v => convertArg(v, conv, config, meta, {\n        ...spel,\n        _groupField: parentSpel?._groupField\n      }));\n      return leftVal.value == rightVal.value;\n    }\n  }\n  return false;\n};\n\nconst convertToTree = (spel, conv, config, meta, parentSpel = null) => {\n  if(!spel) return undefined;\n  let res;\n  if (spel.type.indexOf(\"op-\") == 0) {\n    let op = spel.type.slice(\"op-\".length);\n\n    // unary\n    const isUnary = (op == \"minus\" || op == \"plus\") && spel.children.length == 1;\n    if (isUnary) {\n      spel.isUnary = true;\n      return convertToTree(spel.children[0], conv, config, meta, spel);\n    }\n\n    // between\n    let isBetweenNormal = (op == \"and\" && spel.children.length == 2 && spel.children[0].type == \"op-ge\" && spel.children[1].type == \"op-le\");\n    let isBetweenRev = (op == \"or\" && spel.children.length == 2 && spel.children[0].type == \"op-lt\" && spel.children[1].type == \"op-gt\");\n    let isBetween = isBetweenNormal || isBetweenRev;\n    if (isBetween) {\n      const [left, from] = spel.children[0].children;\n      const [right, to] = spel.children[1].children;\n      const isNumbers = from.type == \"number\" && to.type == \"number\";\n      const isSameSource = compareArgs(left, right,  spel, conv, config, meta, parentSpel);\n      if (isNumbers && isSameSource) {\n        const _fromValue = from.val;\n        const _toValue = to.val;\n        const oneSpel = {\n          type: \"op-between\",\n          children: [\n            left,\n            from,\n            to\n          ]\n        };\n        return convertToTree(oneSpel, conv, config, meta, parentSpel);\n      }\n    }\n\n    // find op\n    let opKeys = conv.operators[op];\n    let opKey;\n    // todo: make dynamic, use basic config\n    if (op == \"eq\" && spel.children[1].type == \"null\") {\n      opKey = \"is_null\";\n    } else if (op == \"ne\" && spel.children[1].type == \"null\") {\n      opKey = \"is_not_null\";\n    } else if (op == \"le\" && spel.children[1].type == \"string\" && spel.children[1].val == \"\") {\n      opKey = \"is_empty\";\n      opKeys = [\"is_empty\"];\n    } else if (op == \"gt\" && spel.children[1].type == \"string\" && spel.children[1].val == \"\") {\n      opKey = \"is_not_empty\";\n      opKeys = [\"is_not_empty\"];\n    } else if (op == \"between\") {\n      opKey = \"between\";\n      opKeys = [\"between\"];\n    }\n\n    // convert children\n    const convertChildren = () => spel.children.map(child => \n      convertToTree(child, conv, config, meta, {\n        ...spel,\n        _groupField: parentSpel?._groupField\n      })\n    );\n    \n    if (op == \"and\" || op == \"or\") {\n      const children1 = {};\n      const vals = convertChildren();\n      vals.forEach(v => {\n        if (v) {\n          const id = uuid();\n          v.id = id;\n          if (v.type != undefined) {\n            children1[id] = v;\n          } else {\n            meta.errors.push(`Bad item in AND/OR: ${JSON.stringify(v)}`);\n          }\n        }\n      });\n      res = {\n        type: \"group\",\n        id: uuid(),\n        children1,\n        properties: {\n          conjunction: conv.conjunctions[op],\n          not: spel.not\n        }\n      };\n    } else if (opKeys) {\n      const vals = convertChildren();\n      const fieldObj = vals[0];\n      let convertedArgs = vals.slice(1);\n      opKey = opKeys[0];\n      \n      if (!fieldObj) {\n        // LHS can't be parsed\n      } else if (fieldObj.groupFieldValue) {\n        // 1. group\n        if (fieldObj.groupFieldValue.valueSrc != \"field\") {\n          meta.errors.push(`Expected group field ${JSON.stringify(fieldObj)}`);\n        }\n        const groupField = fieldObj.groupFieldValue.value;\n        \n        // some/all/none\n        const opArg = convertedArgs[0];\n        if (opArg && opArg.groupFieldValue && opArg.groupFieldValue.valueSrc == \"field\" && opArg.groupFieldValue.value == groupField) {\n          // group.?[...].size() == group.size()\n          opKey = \"all\";\n          convertedArgs = [];\n        } else if (opKey == \"equal\" && opArg.valueSrc == \"value\" && opArg.valueType == \"number\" && opArg.value == 0) {\n          opKey = \"none\";\n          convertedArgs = [];\n        } else if (opKey == \"greater\" && opArg.valueSrc == \"value\" && opArg.valueType == \"number\" && opArg.value == 0) {\n          opKey = \"some\";\n          convertedArgs = [];\n        }\n\n        res = buildRuleGroup(fieldObj, opKey, convertedArgs, config, meta);\n      } else {\n        // 2. not group\n        if (fieldObj.valueSrc != \"field\") {\n          meta.errors.push(`Expected field ${JSON.stringify(fieldObj)}`);\n        }\n        const field = fieldObj.value;\n\n        if (opKeys.length > 1) {\n          logger.warn(`[spel] Spel operator ${op} can be mapped to ${opKeys}`);\n\n          //todo: it's naive\n          const widgets = opKeys.map(op => ({op, widget: getWidgetForFieldOp(config, field, op)}));\n          \n          if (op == \"eq\" || op == \"ne\") {\n            const ws = widgets.find(({ op, widget }) => (widget && widget != \"field\"));\n            opKey = ws.op;\n          }\n        }\n        res = buildRule(config, meta, field, opKey, convertedArgs);\n      }\n    } else {\n      if (!parentSpel) {\n        // try to parse whole `\"str\" + prop + #var` as ternary\n        res = buildSimpleSwitch(spel, conv, config, meta);\n      }\n      if (!res) {\n        meta.errors.push(`Can't convert op ${op}`);\n      }\n    }\n  } else if (spel.type == \"!aggr\") {\n    const groupFieldValue = convertToTree(spel.source, conv, config, meta, {\n      ...spel, \n      _groupField: parentSpel?._groupField\n    });\n    let groupFilter = convertToTree(spel.filter, conv, config, meta, {\n      ...spel, \n      _groupField: groupFieldValue?.value\n    });\n    if (groupFilter?.type == \"rule\") {\n      groupFilter = wrapInDefaultConj(groupFilter, config);\n    }\n    res = {\n      groupFilter,\n      groupFieldValue\n    };\n    if (!parentSpel) {\n      // !aggr can't be in root, it should be compared with something\n      res = undefined;\n      meta.errors.push(\"Unexpected !aggr in root\");\n    }\n  } else if (spel.type == \"ternary\") {\n    const children1 = {};\n    spel.val.forEach(v => {\n      const [cond, val] = v;\n      const caseI = buildCase(cond, val, conv, config, meta, spel);\n      if (caseI) {\n        children1[caseI.id] = caseI;\n      }\n    });\n    res = {\n      type: \"switch_group\",\n      id: uuid(),\n      children1,\n      properties: {}\n    };\n  } else {\n    res = convertArg(spel, conv, config, meta, parentSpel);\n    if (res && !res.type && !parentSpel) {\n      // try to parse whole `\"1\"` as ternary\n      const sw = buildSimpleSwitch(spel, conv, config, meta);\n      if (sw) {\n        res = sw;\n      } else {\n        res = undefined;\n        meta.errors.push(`Can't convert rule of type ${spel.type}, it looks like var/literal`);\n      }\n    }\n  }\n  return res;\n};\n\nconst buildSimpleSwitch = (val, conv, config, meta) => {\n  let children1 = {};\n  const cond = null;\n  const caseI = buildCase(cond, val, conv, config, meta);\n  if (caseI) {\n    children1[caseI.id] = caseI;\n  }\n  let res = {\n    type: \"switch_group\",\n    id: uuid(),\n    children1,\n    properties: {}\n  };\n  return res;\n};\n\nconst buildCase = (cond, val, conv, config, meta, spel = null) => {\n  const valProperties = buildCaseValProperties(config, meta, conv, val, spel);\n\n  let caseI;\n  if (cond) {\n    caseI = convertToTree(cond, conv, config, meta, spel);\n    if (caseI && caseI.type) {\n      if (caseI.type != \"group\") {\n        caseI = wrapInDefaultConj(caseI, config);\n      }\n      caseI.type = \"case_group\";\n    } else {\n      meta.errors.push(`Unexpected case: ${JSON.stringify(caseI)}`);\n      caseI = undefined;\n    }\n  } else {\n    caseI = {\n      id: uuid(),\n      type: \"case_group\",\n      properties: {}\n    };\n  }\n\n  if (caseI) {\n    caseI.properties = {\n      ...caseI.properties,\n      ...valProperties\n    };\n  }\n\n  return caseI;\n};\n\nconst buildCaseValueConcat = (spel, conv, config, meta) => {\n  let flat = [];\n  function _processConcatChildren(children) {\n    children.map(child => {\n      if (child.type == \"op-plus\") {\n        _processConcatChildren(child.children);\n      } else {\n        const convertedChild = convertArg(child, conv, config, meta, spel);\n        if (convertedChild) {\n          flat.push(convertedChild);\n        } else {\n          meta.errors.push(`Can't convert ${child.type} in concatenation`);\n        }\n      }\n    });\n  }\n  _processConcatChildren(spel.children);\n  return {\n    valueSrc: \"value\",\n    valueType: \"case_value\",\n    value: flat,\n  };\n};\n\nconst buildCaseValProperties = (config, meta, conv, val, spel = null) => {\n  let valProperties = {};\n  let convVal;\n  if (val?.type == \"op-plus\") {\n    convVal = buildCaseValueConcat(val, conv, config, meta);\n  } else {\n    convVal = convertArg(val, conv, config, meta, spel);\n  }\n  const widgetDef = config.widgets[\"case_value\"];\n  const importCaseValue = widgetDef?.spelImportValue;\n  if (importCaseValue) {\n    const [normVal, normErrors] = importCaseValue(convVal);\n    normErrors.map(e => meta.errors.push(e));\n    if (normVal) {\n      valProperties = {\n        value: [normVal],\n        valueSrc: [\"value\"],\n        valueType: [\"case_value\"]\n      };\n    }\n  } else {\n    meta.errors.push(\"No fucntion to import case value\");\n  }\n  return valProperties;\n};\n\nconst wrapInDefaultConjRuleGroup = (rule, parentField, parentFieldConfig, config, conj) => {\n  if (!rule) return undefined;\n  return {\n    type: \"rule_group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: conj || defaultGroupConjunction(config, parentFieldConfig),\n      not: false,\n      field: parentField,\n    }\n  };\n};\n\nconst wrapInDefaultConj = (rule, config, not = false) => {\n  return {\n    type: \"group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: defaultConjunction(config),\n      not: not || false\n    }\n  };\n};\n","import moment from \"moment\";\n\nconst NOW = {\n  label: \"Now\",\n  returnType: \"datetime\",\n  jsonLogic: \"now\",\n  //todo: document option `jsonLogicCustomOps`\n  //todo: add util to return all used custom ops to be added by user with `jsonLogic.add_operation`\n  jsonLogicCustomOps: {\n    now: () => new Date(),\n  },\n  spelFunc: \"new java.util.Date()\",\n  sqlFormatFunc: () => \"NOW()\",\n  mongoFormatFunc: () => new Date(),\n  formatFunc: () => \"NOW\",\n};\n\nconst RELATIVE_DATETIME = {\n  label: \"Relative\",\n  returnType: \"datetime\",\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\"\", \"\", \"\"],\n  jsonLogic: ({date, op, val, dim}) => ({\n    \"date_add\": [\n      date,\n      val * (op == \"minus\" ? -1 : +1),\n      dim\n    ]\n  }),\n  jsonLogicImport: (v) => {\n    const date = v[\"date_add\"][0];\n    const val = Math.abs(v[\"date_add\"][1]);\n    const op = v[\"date_add\"][1] >= 0 ? \"plus\" : \"minus\";\n    const dim = v[\"date_add\"][2];\n    return [date, op, val, dim];\n  },\n  jsonLogicCustomOps: {\n    date_add: (date, val, dim) => moment(date).add(val, dim).toDate()\n  },\n  // MySQL\n  //todo: other SQL dialects?\n  sqlFormatFunc: ({date, op, val, dim}) => `DATE_ADD(${date}, INTERVAL ${parseInt(val) * (op == \"minus\" ? -1 : +1)} ${dim.replace(/^'|'$/g, \"\")})`,\n  mongoFormatFunc: null, //todo: support?\n  //todo: spel\n  formatFunc: ({date, op, val, dim}) => (!val ? date : `${date} ${op == \"minus\" ? \"-\" : \"+\"} ${val} ${dim}`),\n  args: {\n    date: {\n      label: \"Date\",\n      type: \"datetime\",\n      defaultValue: {func: \"NOW\", args: []},\n      valueSources: [\"func\", \"field\"],\n    },\n    op: {\n      label: \"Op\",\n      type: \"select\",\n      defaultValue: \"plus\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: {\n          plus: \"+\",\n          minus: \"-\",\n        },\n      }\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      fieldSettings: {\n        min: 0,\n      },\n      defaultValue: 0,\n      valueSources: [\"value\"],\n    },\n    dim: {\n      label: \"Dimension\",\n      type: \"select\",\n      defaultValue: \"day\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: {\n          day: \"day\",\n          week: \"week\",\n          month: \"month\",\n          year: \"year\",\n        },\n      }\n    },\n  }\n};\n\nconst LOWER = {\n  label: \"Lowercase\",\n  mongoFunc: \"$toLower\",\n  jsonLogic: \"toLowerCase\",\n  spelFunc: \".toLowerCase\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toLowerCase: (str) => str.toLowerCase(),\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\"],\n    },\n  }\n};\n\nconst UPPER = {\n  label: \"Uppercase\",\n  mongoFunc: \"$toUpper\",\n  jsonLogic: \"toUpperCase\",\n  spelFunc: \".toUpperCase\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toUpperCase: (str) => str.toUpperCase(),\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\"],\n    },\n  }\n};\n\nconst LINEAR_REGRESSION = {\n  label: \"Linear regression\",\n  returnType: \"number\",\n  formatFunc: ({coef, bias, val}, _) => `(${coef} * ${val} + ${bias})`,\n  sqlFormatFunc: ({coef, bias, val}) => `(${coef} * ${val} + ${bias})`,\n  spelFormatFunc: ({coef, bias, val}) => `(${coef} * ${val} + ${bias})`,\n  mongoFormatFunc: ({coef, bias, val}) => ({\"$sum\": [{\"$multiply\": [coef, val]}, bias]}),\n  jsonLogic: ({coef, bias, val}) => ({ \"+\": [ {\"*\": [coef, val]}, bias ] }),\n  jsonLogicImport: (v) => {\n    const coef = v[\"+\"][0][\"*\"][0];\n    const val = v[\"+\"][0][\"*\"][1];\n    const bias = v[\"+\"][1];\n    return [coef, val, bias];\n  },\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\" * \", \" + \"],\n  args: {\n    coef: {\n      label: \"Coef\",\n      type: \"number\",\n      defaultValue: 1,\n      valueSources: [\"value\"],\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      valueSources: [\"value\", \"field\"],\n    },\n    bias: {\n      label: \"Bias\",\n      type: \"number\",\n      defaultValue: 0,\n      valueSources: [\"value\"],\n    }\n  }\n};\n\nexport {\n  LOWER,\n  UPPER,\n  NOW,\n  RELATIVE_DATETIME,\n  LINEAR_REGRESSION,\n};\n","export { default as Query } from \"./components/QueryContainer\";\nexport { default as Builder } from \"./components/Builder\";\n\nimport * as Export from \"./export\";\nimport * as Import from \"./import\";\nimport * as Widgets from \"./components/widgets/index\";\nimport * as Operators from \"./components/operators\";\nimport * as BasicUtils from \"./utils\";\nimport * as BasicFuncs from \"./config/funcs\";\nconst Utils = {...BasicUtils, ...Export, ...Import};\nexport {Widgets, Operators, Utils, Export, Import, BasicFuncs};\n\nexport {default as BasicConfig} from \"./config/basic\";\n\n","import {listValuesToArray, sleep, mapListValues} from \"./stuff\";\n\nexport const simulateAsyncFetch = (all, cPageSize = 0, delay = 1000) => async (search, offset, meta) => {\n  const pageSize = meta.pageSize != undefined ? meta.pageSize : cPageSize;\n  const filtered = listValuesToArray(all)\n    .filter(({title}) => search == null ? true : title.toUpperCase().indexOf(search.toUpperCase()) != -1);\n  const pages = pageSize ? Math.ceil(filtered.length / pageSize) : 0;\n  const currentOffset = offset || 0;\n  const currentPage = pageSize ? Math.ceil(currentOffset / pageSize) : null;\n  const values = pageSize ? filtered.slice(currentOffset, currentOffset + pageSize) : filtered;\n  const newOffset = pageSize ? currentOffset + values.length : null;\n  const hasMore = pageSize ? (newOffset < filtered.length) : false;\n  console.debug(\"simulateAsyncFetch\", {\n    search, offset, values, hasMore, filtered\n  });\n  await sleep(delay);\n  return {\n    values,\n    hasMore\n  };\n};\n\nexport const mergeListValues = (values, newValues, toStart = false) => {\n  if (!newValues)\n    return values;\n  const old = values || [];\n  const newFiltered = newValues.filter(v => old.find(av => av.value == v.value) == undefined);\n  const merged = toStart ? [...newFiltered, ...old] : [...old, ...newFiltered];\n  return merged;\n};\n\nexport const listValueToOption = (lv) => {\n  if (lv == null) return null;\n  const {title, value, disabled, groupTitle, renderTitle} = lv;\n  let option = {title, value};\n  if (disabled)\n    option.disabled = disabled;\n  if (groupTitle)\n    option.groupTitle = groupTitle;\n  if (renderTitle)\n    option.renderTitle = renderTitle;\n  return option;\n};\n\nexport const getListValue = (selectedValue, listValues) => \n  mapListValues(listValues, (lv) => (lv.value === selectedValue ? lv : null))\n    .filter(v => v !== null)\n    .shift();\n","import merge from \"lodash/merge\";\nimport uuid from \"../utils/uuid\";\nimport mergeWith from \"lodash/mergeWith\";\nimport {settings as defaultSettings} from \"../config/default\";\nimport moment from \"moment\";\nimport {normalizeListValues, mergeArraysSmart} from \"./stuff\";\nimport {getWidgetForFieldOp} from \"./ruleUtils\";\nimport clone from \"clone\";\nimport pick from \"lodash/pick\";\n\n\nconst configKeys = [\"conjunctions\", \"fields\", \"types\", \"operators\", \"widgets\", \"settings\", \"funcs\"];\n\nconst pickConfig = (props) => {\n  return pick(props, configKeys);\n};\n\nexport const createConfigMemo = () => {\n  const configStore = new Map();\n  const maxSize = 2; // current and prev\n  let configId = 0;\n\n  const extendAndStore = (config) => {\n    const extendedConfig = extendConfig(config, ++configId);\n    if ((configStore.size + 1) > maxSize) {\n      configStore.delete(configStore.keys()[0]);\n    }\n    configStore.set(config, extendedConfig);\n    return extendedConfig;\n  };\n\n  const findExtended = (findConfig) => {\n    // strict find:\n    // return configStore.get(findConfig) || configStore.values().find(ec => ec === findConfig);\n\n    for (const savedConfig of configStore.keys()) {\n      const found = configKeys.map(k => savedConfig[k] === findConfig[k]).filter(v => !v).length === 0;\n      if (found) {\n        return configStore.get(savedConfig);\n      }\n    }\n\n    for (const extendedConfig of configStore.values()) {\n      const found = configKeys.map(k => extendedConfig[k] === findConfig[k]).filter(v => !v).length === 0;\n      if (found) {\n        return extendedConfig;\n      }\n    }\n\n    return null;\n  };\n\n  const findOrExtend = (config) => {\n    return findExtended(config) || extendAndStore(config);\n  };\n  \n  return (props) => findOrExtend(pickConfig(props));\n};\n\n\n\nexport const extendConfig = (config, configId) => {\n  //operators, defaultOperator - merge\n  //widgetProps (including valueLabel, valuePlaceholder, hideOperator, operatorInlineLabel) - concrete by widget\n\n  if (config.__configId) {\n    return config;\n  }\n  \n  config = {...config};\n  config.settings = merge({}, defaultSettings, config.settings);\n  config._fieldsCntByType = {};\n  config._funcsCntByType = {};\n\n  config.types = clone(config.types);\n  _extendTypesConfig(config.types, config);\n\n  config.fields = clone(config.fields);\n  config.__fieldNames = {};\n  _extendFieldsConfig(config.fields, config);\n\n  config.funcs = clone(config.funcs);\n  _extendFuncArgsConfig(config.funcs, config);\n\n  moment.locale(config.settings.locale.moment);\n\n  Object.defineProperty(config, \"__configId\", {\n    enumerable: false,\n    writable: false,\n    value: configId || uuid()\n  });\n\n  return config;\n};\n\nfunction _extendTypesConfig(typesConfig, config) {\n  for (let type in typesConfig) {\n    let typeConfig = typesConfig[type];\n    _extendTypeConfig(type, typeConfig, config);\n  }\n}\n\nfunction _extendTypeConfig(type, typeConfig, config) {\n  let operators = null, defaultOperator = null;\n  typeConfig.mainWidget = typeConfig.mainWidget || Object.keys(typeConfig.widgets).filter(w => w != \"field\" && w != \"func\")[0];\n  for (let widget in typeConfig.widgets) {\n    let typeWidgetConfig = typeConfig.widgets[widget];\n    if (typeWidgetConfig.operators) {\n      let typeWidgetOperators = typeWidgetConfig.operators;\n      if (typeConfig.excludeOperators) {\n        typeWidgetOperators = typeWidgetOperators.filter(op => !typeConfig.excludeOperators.includes(op));\n      }\n      operators = mergeArraysSmart(operators, typeWidgetOperators);\n    }\n    if (typeWidgetConfig.defaultOperator)\n      defaultOperator = typeWidgetConfig.defaultOperator;\n    if (widget == typeConfig.mainWidget) {\n      typeWidgetConfig = merge({}, {widgetProps: typeConfig.mainWidgetProps || {}}, typeWidgetConfig);\n    }\n    typeConfig.widgets[widget] = typeWidgetConfig;\n  }\n  if (!typeConfig.valueSources)\n    typeConfig.valueSources = Object.keys(config.settings.valueSourcesInfo);\n  for (let valueSrc of typeConfig.valueSources) {\n    if (valueSrc != \"value\" && !typeConfig.widgets[valueSrc]) {\n      typeConfig.widgets[valueSrc] = {\n      };\n    }\n  }\n  if (!typeConfig.operators && operators)\n    typeConfig.operators = Array.from(new Set(operators)); //unique\n  if (!typeConfig.defaultOperator && defaultOperator)\n    typeConfig.defaultOperator = defaultOperator;\n}\n\nfunction _extendFieldsConfig(subconfig, config, path = []) {\n  for (let field in subconfig) {\n    _extendFieldConfig(subconfig[field], config, [...path, field]);\n    if (subconfig[field].subfields) {\n      _extendFieldsConfig(subconfig[field].subfields, config, [...path, field]);\n    }\n  }\n}\n\nfunction _extendFuncArgsConfig(subconfig, config) {\n  if (!subconfig) return;\n  for (let funcKey in subconfig) {\n    const funcDef = subconfig[funcKey];\n    if (funcDef.returnType) {\n      if (!config._funcsCntByType[funcDef.returnType])\n        config._funcsCntByType[funcDef.returnType] = 0;\n      config._funcsCntByType[funcDef.returnType]++;\n    }\n    for (let argKey in funcDef.args) {\n      _extendFieldConfig(funcDef.args[argKey], config, null, true);\n    }\n\n    // isOptional can be only in the end\n    if (funcDef.args) {\n      const argKeys = Object.keys(funcDef.args);\n      let tmpIsOptional = true;\n      for (const argKey of argKeys.reverse()) {\n        const argDef = funcDef.args[argKey];\n        if (!tmpIsOptional && argDef.isOptional) {\n          delete argDef.isOptional;\n        }\n        if (!argDef.isOptional)\n          tmpIsOptional = false;\n      }\n    }\n\n    if (funcDef.subfields) {\n      _extendFuncArgsConfig(funcDef.subfields, config);\n    }\n  }\n}\n\nfunction _extendFieldConfig(fieldConfig, config, path = null, isFuncArg = false) {\n  let operators = null, defaultOperator = null;\n  const typeConfig = config.types[fieldConfig.type];\n  const excludeOperatorsForField = fieldConfig.excludeOperators || [];\n  if (fieldConfig.type != \"!struct\" && fieldConfig.type != \"!group\") {\n    const keysToPutInFieldSettings = [\"listValues\", \"allowCustomValues\", \"validateValue\"];\n    if (!fieldConfig.fieldSettings)\n      fieldConfig.fieldSettings = {};\n    for (const k of keysToPutInFieldSettings) {\n      if (fieldConfig[k]) {\n        fieldConfig.fieldSettings[k] = fieldConfig[k];\n        delete fieldConfig[k];\n      }\n    }\n\n    if (fieldConfig.fieldSettings.listValues) {\n      fieldConfig.fieldSettings.listValues = normalizeListValues(fieldConfig.fieldSettings.listValues, fieldConfig.type, fieldConfig.fieldSettings);\n    }\n\n    if (!typeConfig) {\n      //console.warn(`No type config for ${fieldConfig.type}`);\n      fieldConfig.disabled = true;\n      return;\n    }\n    if (!isFuncArg) {\n      if (!config._fieldsCntByType[fieldConfig.type])\n        config._fieldsCntByType[fieldConfig.type] = 0;\n      config._fieldsCntByType[fieldConfig.type]++;\n    }\n\n    if (!fieldConfig.widgets)\n      fieldConfig.widgets = {};\n    if (isFuncArg)\n      fieldConfig._isFuncArg = true;\n    fieldConfig.mainWidget = fieldConfig.mainWidget || typeConfig.mainWidget;\n    fieldConfig.valueSources = fieldConfig.valueSources || typeConfig.valueSources;\n    const excludeOperatorsForType = typeConfig.excludeOperators || [];\n    for (let widget in typeConfig.widgets) {\n      let fieldWidgetConfig = fieldConfig.widgets[widget] || {};\n      const typeWidgetConfig = typeConfig.widgets[widget] || {};\n      if (!isFuncArg) {\n        //todo: why I've excluded isFuncArg ?\n        const excludeOperators = [...excludeOperatorsForField, ...excludeOperatorsForType];\n        const shouldIncludeOperators = fieldConfig.preferWidgets\n          && (widget == \"field\" || fieldConfig.preferWidgets.includes(widget))\n          || excludeOperators.length > 0;\n        if (fieldWidgetConfig.operators) {\n          const addOperators = fieldWidgetConfig.operators.filter(o => !excludeOperators.includes(o));\n          operators = [...(operators || []), ...addOperators];\n        } else if (shouldIncludeOperators && typeWidgetConfig.operators) {\n          const addOperators = typeWidgetConfig.operators.filter(o => !excludeOperators.includes(o));\n          operators = [...(operators || []), ...addOperators];\n        }\n        if (fieldWidgetConfig.defaultOperator)\n          defaultOperator = fieldWidgetConfig.defaultOperator;\n      }\n\n      if (widget == fieldConfig.mainWidget) {\n        fieldWidgetConfig = merge({}, {widgetProps: fieldConfig.mainWidgetProps || {}}, fieldWidgetConfig);\n      }\n      fieldConfig.widgets[widget] = fieldWidgetConfig;\n    }\n    if (!isFuncArg) {\n      if (!fieldConfig.operators && operators)\n        fieldConfig.operators = Array.from(new Set(operators));\n      if (!fieldConfig.defaultOperator && defaultOperator)\n        fieldConfig.defaultOperator = defaultOperator;\n    }\n  }\n\n  const computedFieldName = computeFieldName(config, path);\n  if (computedFieldName) {\n    fieldConfig.fieldName = computedFieldName;\n  }\n\n  if (path && fieldConfig.fieldName) {\n    config.__fieldNames[fieldConfig.fieldName] = path;\n  }\n}\n\nexport const getFieldRawConfig = (config, field, fieldsKey = \"fields\", subfieldsKey = \"subfields\") => {\n  if (!field)\n    return null;\n  if (field == \"!case_value\") {\n    return {\n      type: \"case_value\",\n      mainWidget: \"case_value\",\n      widgets: {\n        \"case_value\": config.widgets[\"case_value\"]\n      }\n    };\n  }\n  const fieldSeparator = config.settings.fieldSeparator;\n  //field = normalizeField(config, field);\n  const parts = Array.isArray(field) ? field : field.split(fieldSeparator);\n  const targetFields = config[fieldsKey];\n  if (!targetFields)\n    return null;\n\n  let fields = targetFields;\n  let fieldConfig = null;\n  let path = [];\n  for (let i = 0 ; i < parts.length ; i++) {\n    const part = parts[i];\n    path.push(part);\n    const pathKey = path.join(fieldSeparator);\n    fieldConfig = fields[pathKey];\n    if (i < parts.length-1) {\n      if (fieldConfig && fieldConfig[subfieldsKey]) {\n        fields = fieldConfig[subfieldsKey];\n        path = [];\n      } else {\n        fieldConfig = null;\n      }\n    }\n  }\n\n  return fieldConfig;\n};\n\nconst computeFieldName = (config, path) => {\n  if (!path)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  let l = [...path], r = [], f, fConfig;\n  while ((f = l.pop()) !== undefined && l.length > 0) {\n    r.unshift(f);\n    fConfig = getFieldRawConfig(config, l);\n    if (fConfig.fieldName) {\n      return [fConfig.fieldName, ...r].join(fieldSeparator);\n    }\n  }\n  return null;\n};\n\nexport const normalizeField = (config, field) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  const fieldStr = Array.isArray(field) ? field.join(fieldSeparator) : field;\n  if (config.__fieldNames[fieldStr]) {\n    return config.__fieldNames[fieldStr].join(fieldSeparator);\n  }\n  return fieldStr;\n};\n\nexport const getFuncConfig = (config, func) => {\n  if (!func)\n    return null;\n  const funcConfig = getFieldRawConfig(config, func, \"funcs\", \"subfields\");\n  if (!funcConfig)\n    return null; //throw new Error(\"Can't find func \" + func + \", please check your config\");\n  return funcConfig;\n};\n\nexport const getFuncArgConfig = (config, funcKey, argKey) => {\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig)\n    return null; //throw new Error(`Can't find func ${funcKey}, please check your config`);\n  const argConfig = funcConfig.args && funcConfig.args[argKey] || null;\n  if (!argConfig)\n    return null; //throw new Error(`Can't find arg ${argKey} for func ${funcKey}, please check your config`);\n\n  //merge, but don't merge operators (rewrite instead)\n  const typeConfig = config.types[argConfig.type] || {};\n  let ret = mergeWith({}, typeConfig, argConfig || {}, (objValue, srcValue, _key, _object, _source, _stack) => {\n    if (Array.isArray(objValue)) {\n      return srcValue;\n    }\n  });\n\n  return ret;\n};\n\nexport const getFieldConfig = (config, field) => {\n  if (!field)\n    return null;\n  if (typeof field == \"object\" && !field.func && !!field.type)\n    return field;\n  if (typeof field == \"object\" && field.func && field.arg)\n    return getFuncArgConfig(config, field.func, field.arg);\n  const fieldConfig = getFieldRawConfig(config, field);\n  if (!fieldConfig)\n    return null; //throw new Error(\"Can't find field \" + field + \", please check your config\");\n\n  //merge, but don't merge operators (rewrite instead)\n  const typeConfig = config.types[fieldConfig.type] || {};\n  let ret = mergeWith({}, typeConfig, fieldConfig || {}, (objValue, srcValue, _key, _object, _source, _stack) => {\n    if (Array.isArray(objValue)) {\n      return srcValue;\n    }\n  });\n\n  return ret;\n};\n\nexport const getOperatorConfig = (config, operator, field = null) => {\n  if (!operator)\n    return null;\n  const opConfig = config.operators[operator];\n  if (field) {\n    const fieldConfig = getFieldConfig(config, field);\n    const widget = getWidgetForFieldOp(config, field, operator);\n    const widgetConfig = config.widgets[widget] || {};\n    const fieldWidgetConfig = (fieldConfig && fieldConfig.widgets ? fieldConfig.widgets[widget] : {}) || {};\n    const widgetOpProps = (widgetConfig.opProps || {})[operator];\n    const fieldWidgetOpProps = (fieldWidgetConfig.opProps || {})[operator];\n    const mergedOpConfig = merge({}, opConfig, widgetOpProps, fieldWidgetOpProps);\n    return mergedOpConfig;\n  } else {\n    return opConfig;\n  }\n};\n\nexport const getFieldWidgetConfig = (config, field, operator, widget = null, valueSrc = null) => {\n  if (!field)\n    return null;\n  if (!(operator || widget) && valueSrc != \"const\" && field != \"!case_value\")\n    return null;\n  const fieldConfig = getFieldConfig(config, field);\n  if (!widget)\n    widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n  const widgetConfig = config.widgets[widget] || {};\n  const fieldWidgetConfig = (fieldConfig && fieldConfig.widgets ? fieldConfig.widgets[widget] : {}) || {};\n  const fieldWidgetProps = (fieldWidgetConfig.widgetProps || {});\n  const valueFieldSettings = (valueSrc == \"value\" || !valueSrc) && fieldConfig && fieldConfig.fieldSettings || {}; // useful to take 'validateValue'\n  const mergedConfig = merge({}, widgetConfig, fieldWidgetProps, valueFieldSettings);\n  return mergedConfig;\n};\n","import Immutable from \"immutable\";\nimport uuid from \"./uuid\";\nimport {getFieldConfig, getOperatorConfig} from \"./configUtils\";\nimport {getNewValueForFieldOp, getFirstField, getFirstOperator} from \"../utils/ruleUtils\";\n\n\nexport const defaultField = (config, canGetFirst = true, parentRuleGroupPath = null) => {\n  return typeof config.settings.defaultField === \"function\"\n    ? config.settings.defaultField(parentRuleGroupPath) \n    : (config.settings.defaultField || (canGetFirst ? getFirstField(config, parentRuleGroupPath) : null));\n};\n\nexport const defaultOperator = (config, field, canGetFirst = true) => {\n  let fieldConfig = getFieldConfig(config, field);\n  let fieldOperators = fieldConfig && fieldConfig.operators || [];\n  let fieldDefaultOperator = fieldConfig && fieldConfig.defaultOperator;\n  if (!fieldOperators.includes(fieldDefaultOperator))\n    fieldDefaultOperator = null;\n  if (!fieldDefaultOperator && canGetFirst)\n    fieldDefaultOperator = getFirstOperator(config, field);\n  let op = typeof config.settings.defaultOperator === \"function\"\n    ? config.settings.defaultOperator(field, fieldConfig) : fieldDefaultOperator;\n  return op;\n};\n\n//used for complex operators like proximity\nexport const defaultOperatorOptions = (config, operator, field) => {\n  let operatorConfig = operator ? getOperatorConfig(config, operator, field) : null;\n  if (!operatorConfig)\n    return null; //new Immutable.Map();\n  return operatorConfig.options ? new Immutable.Map(\n    operatorConfig.options\n    && operatorConfig.options.defaults || {}\n  ) : null;\n};\n\nexport const defaultRuleProperties = (config, parentRuleGroupPath = null, item = null) => {\n  let field = null, operator = null;\n  const {setDefaultFieldAndOp, showErrorMessage} = config.settings;\n  if (item) {\n    field = item?.properties?.field;\n    operator = item?.properties?.operator;\n  } else if (setDefaultFieldAndOp) {\n    field = defaultField(config, true, parentRuleGroupPath);\n    operator = defaultOperator(config, field);\n  }\n  let current = new Immutable.Map({\n    field: field,\n    operator: operator,\n    value: new Immutable.List(),\n    valueSrc: new Immutable.List(),\n    //used for complex operators like proximity\n    operatorOptions: defaultOperatorOptions(config, operator, field),\n  });\n  if (showErrorMessage) {\n    current = current.set(\"valueError\", new Immutable.List());\n  }\n  \n  if (field && operator) {\n    let {newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      config, config, current, field, operator, \"operator\", false\n    );\n    current = current\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType);\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError);\n    }\n  }\n  return current; \n};\n\n\nexport const defaultGroupConjunction = (config, fieldConfig = null) => {\n  fieldConfig = getFieldConfig(config, fieldConfig); // if `fieldConfig` is field name, not config\n  const conjs = fieldConfig && fieldConfig.conjunctions || Object.keys(config.conjunctions);\n  if (conjs.length == 1)\n    return conjs[0];\n  return config.settings.defaultGroupConjunction || config.settings.defaultConjunction || conjs[0];\n};\n\nexport const defaultConjunction = (config) =>\n  config.settings.defaultConjunction || Object.keys(config.conjunctions)[0];\n\nexport const defaultGroupProperties = (config, fieldConfig = null) => new Immutable.Map({\n  conjunction: defaultGroupConjunction(config, fieldConfig),\n  not: false\n});\n\nexport const defaultItemProperties = (config, item) => {\n  return item && item.type == \"group\" \n    ? defaultGroupProperties(config, item?.properties?.field) \n    : defaultRuleProperties(config, null, item);\n};\n\nexport const defaultRule = (id, config) => ({\n  [id]: new Immutable.Map({\n    type: \"rule\",\n    id: id,\n    properties: defaultRuleProperties(config)\n  })\n});\n\nexport const defaultRoot = (config) => {\n  return new Immutable.Map({\n    type: \"group\",\n    id: uuid(),\n    children1: new Immutable.OrderedMap({ ...defaultRule(uuid(), config) }),\n    properties: defaultGroupProperties(config)\n  });\n};\n","let SqlString = require(\"sqlstring\");\n\nSqlString.trim = (val) => {\n  if (val.charAt(0) == \"'\")\n    return val.substring(1, val.length-1);\n  else\n    return val;\n};\n\nSqlString.escapeLike = (val, any_start = true, any_end = true) => {\n  // normal escape\n  let res = SqlString.escape(val);\n  // unwrap ''\n  res = SqlString.trim(res);\n  // escape % and _\n  res = res.replace(/[%_]/g, \"\\\\$&\");\n  // wrap with % for LIKE\n  res = (any_start ? \"%\" : \"\") + res + (any_end ? \"%\" : \"\");\n  // wrap ''\n  res = \"'\" + res + \"'\";\n  return res;\n};\n\nconst sqlEmptyValue = (fieldDef) => {\n  let v = \"''\";\n  const type = fieldDef?.type;\n  if (type == \"date\") {\n    //todo: support other SQL dialects?  0001-01-01 for oracle, 1970-01-01 for timestamp\n    v = \"'0000-00-00'\";\n  } else if (type == \"datetime\") {\n    v = \"'0000-00-00 00:00'\";\n  } else if (type == \"time\") {\n    v = \"'00:00'\";\n  } else if (type == \"number\") {\n    v = \"0\";\n  }\n  return v;\n};\n\nconst mongoEmptyValue = (fieldDef) => {\n  let v = \"\";\n  const type = fieldDef?.type;\n  if (type == \"number\") {\n    v = 0;\n  }\n  return v;\n};\n\n\nconst spelEscapeString = (val) => {\n  // Strings are delimited by single quotes. To put a single quote itself in a string, use two single quote characters. \n  return \"'\" + val.replace(/'/g, \"''\") + \"'\";\n};\n\nconst spelInlineList = (vals, toArray = false) => {\n  // find java type of values\n  let javaType;\n  let jt;\n  const numberJavaTypes = [\"int\", \"float\"];\n  vals.map(v => {\n    if (v !== undefined && v !== null) {\n      if (typeof v === \"string\") {\n        jt = \"String\";\n      } else if (typeof v === \"number\") {\n        jt = Number.isInteger(v) ? \"int\" : \"float\";\n      } else throw new Error(`spelEscape: Can't use value ${v} in array`);\n\n      if (!javaType) {\n        javaType = jt;\n      } else if (javaType != jt) {\n        if (numberJavaTypes.includes(javaType) && numberJavaTypes.includes(jt)) {\n          // found int and float in collecton - use float\n          javaType = \"float\";\n        } else throw new Error(`spelEscape: Can't use different types in array: found ${javaType} and ${jt}`);\n      }\n    }\n  });\n  if (!javaType) {\n    javaType = \"String\"; //default if empty array\n  }\n\n  // for floats we should add 'f' to all items\n  let escapedVals;\n  if (javaType == \"float\") {\n    escapedVals = vals.map(v => spelEscape(v, true));\n  } else {\n    escapedVals = vals.map(v => spelEscape(v));\n  }\n\n  // build inline list or array\n  let res;\n  if (toArray) {\n    res = `new ${javaType}[]{${escapedVals.join(\", \")}}`;\n  } else {\n    res = `{${escapedVals.join(\", \")}}`;\n  }\n  \n  return res;\n};\n\nconst spelFixList = (val) => {\n  // `{1,2}.contains(1)` NOT works\n  // `{1,2}.?[true].contains(1)` works\n  return `${val}.?[true]`;\n};\n\nconst spelEscape = (val, numberToFloat = false, arrayToArray = false) => {\n  // https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions-ref-literal\n  if (val === undefined || val === null) {\n    return \"null\";\n  }\n  switch (typeof val) {\n  case \"boolean\":\n    return (val) ? \"true\" : \"false\";\n  case \"number\":\n    if (!Number.isFinite(val) || isNaN(val))\n      return undefined;\n    return val + (!Number.isInteger(val) || numberToFloat ? \"f\" : \"\");\n  case \"object\":\n    if (Array.isArray(val)) {\n      return spelInlineList(val, arrayToArray);\n    } else {\n      // see `spelFormatValue` for Date, LocalTime\n      throw new Error(\"spelEscape: Object is not supported\");\n    }\n  default: return spelEscapeString(val);\n  }\n};\n\nconst spelFormatConcat = (parts) => {\n  if (parts && Array.isArray(parts) && parts.length) {\n    return parts\n      .map(part => {\n        if (part.type == \"const\") {\n          return spelEscape(part.value);\n        } else if (part.type == \"property\") {\n          return \"\"+part.value;\n        } else if (part.type == \"variable\") {\n          return \"#\"+part.value;\n        } return undefined;\n      })\n      .filter(r => r != undefined)\n      .join(\" + \");\n  } else {\n    return \"null\";\n  }\n};\n\n// `val` is {value, valueType, valueSrc}\n// If `valueType` == \"case_value\", `value` is array of such items (to be considered as concatenation)\nconst spelImportConcat = (val) => {\n  if (val == undefined)\n    return [undefined, []];\n  let errors = [];\n  const parts = val.valueType == \"case_value\" ? val.value : [val];\n  const res = parts.map(child => {\n    if (child.valueSrc == \"value\") {\n      if (child.value === null) {\n        return undefined;\n      } else {\n        return {\n          type: \"const\", \n          value: child.value\n        };\n      }\n    } else if (child.valueSrc == \"field\") {\n      return {\n        type: (child.isVariable ? \"variable\" : \"property\"), \n        value: child.value\n      };\n    } else {\n      errors.push(`Unsupported valueSrc ${child.valueSrc} in concatenation`);\n    }\n  }).filter(v => v != undefined);\n  return [res, errors];\n};\n\nexport {\n  SqlString, sqlEmptyValue, \n  mongoEmptyValue, spelEscape, spelFixList, spelFormatConcat, spelImportConcat\n};\n","\nimport {getFieldConfig, getFuncConfig} from \"../utils/configUtils\";\nimport {filterValueSourcesForField} from \"../utils/ruleUtils\";\nimport Immutable from \"immutable\";\n\n// helpers\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\n/**\n * @param {*} value\n * @param {string} valueSrc - 'value' | 'field' | 'func'\n * @param {object} config\n * @return {* | undefined} - undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport const completeValue = (value, valueSrc, config) => {\n  if (valueSrc == \"func\")\n    return completeFuncValue(value, config);\n  else\n    return value;\n};\n\n/**\n * @param {Immutable.Map} value\n * @param {object} config\n * @return {Immutable.Map | undefined} - undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport const completeFuncValue = (value, config) => {\n  const _checkFuncValue = (value) => {\n    if (!value)\n      return undefined;\n    const funcKey = value.get(\"func\");\n    const funcConfig = funcKey && getFuncConfig(config, funcKey);\n    if (!funcConfig)\n      return undefined;\n    let complValue = value;\n    let tmpHasOptional = false;\n    for (const argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      const {valueSources, isOptional, defaultValue} = argConfig;\n      const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n      const args = complValue.get(\"args\");\n      const argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n      const argVal = args ? args.get(argKey) : undefined;\n      const argValue = argVal ? argVal.get(\"value\") : undefined;\n      const argValueSrc = (argVal ? argVal.get(\"valueSrc\") : undefined) || argDefaultValueSrc;\n      if (argValue !== undefined) {\n        const completeArgValue = completeValue(argValue, argValueSrc, config);\n        if (completeArgValue === undefined) {\n          return undefined;\n        } else if (completeArgValue !== argValue) {\n          complValue = complValue.setIn([\"args\", argKey, \"value\"], completeArgValue);\n        }\n        if (tmpHasOptional) {\n          // has gap\n          return undefined;\n        }\n      } else if (defaultValue !== undefined && !isObject(defaultValue)) {\n        complValue = complValue.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n        complValue = complValue.setIn([\"args\", argKey, \"valueSrc\"], \"value\");\n      } else if (isOptional) {\n        // optional\n        tmpHasOptional = true;\n      } else {\n        // missing value\n        return undefined;\n      }\n    }\n    return complValue;\n  };\n\n  return _checkFuncValue(value);\n};\n\n\n/**\n * @param {Immutable.Map} value \n * @return {array} - [usedFields, badFields]\n */\nconst getUsedFieldsInFuncValue = (value, config) => {\n  let usedFields = [];\n  let badFields = [];\n\n  const _traverse = (value) => {\n    const args = value && value.get(\"args\");\n    if (!args) return;\n    for (const arg of args.values()) {\n      if (arg.get(\"valueSrc\") == \"field\") {\n        const rightField = arg.get(\"value\");\n        if (rightField) {\n          const rightFieldDefinition = config ? getFieldConfig(config, rightField) : undefined;\n          if (config && !rightFieldDefinition)\n            badFields.push(rightField);\n          else\n            usedFields.push(rightField);\n        }\n      } else if (arg.get(\"valueSrc\") == \"func\") {\n        _traverse(arg.get(\"value\"));\n      }\n    }\n  };\n\n  _traverse(value);\n\n  return [usedFields, badFields];\n};\n\n\n/**\n * Used @ FuncWidget\n * @param {Immutable.Map} value \n * @param {string} funcKey \n * @param {object} config \n */\nexport const setFunc = (value, funcKey, config) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  value = value || new Immutable.Map();\n  if (Array.isArray(funcKey)) {\n    // fix for cascader\n    funcKey = funcKey.join(fieldSeparator);\n  }\n  value = value.set(\"func\", funcKey);\n  value = value.set(\"args\", new Immutable.Map());\n\n  // defaults\n  const funcConfig = funcKey && getFuncConfig(config, funcKey);\n  if (funcConfig) {\n    for (const argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      const {valueSources, defaultValue} = argConfig;\n      const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n      const firstValueSrc = filteredValueSources.length ? filteredValueSources[0] : undefined;\n      const defaultValueSrc = defaultValue ? (isObject(defaultValue) && !!defaultValue.func ? \"func\" : \"value\") : undefined;\n      const argDefaultValueSrc = defaultValueSrc || firstValueSrc;\n      if (defaultValue !== undefined) {\n        value = value.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n      }\n      if (argDefaultValueSrc) {\n        value = value.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n      }\n    }\n  }\n\n  return value;\n};\n\nconst getDefaultArgValue = ({defaultValue: value}) => {\n  if (isObject(value) && !Immutable.Map.isMap(value) && value.func) {\n    return Immutable.fromJS(value, function (k, v) {\n      return Immutable.Iterable.isIndexed(v) ? v.toList() : v.toOrderedMap();\n    });\n  }\n  return value;\n};\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {*} argVal \n* @param {object} argConfig \n*/\nexport const setArgValue = (value, argKey, argVal, argConfig, config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey, \"value\"], argVal);\n\n    // set default arg value sorce\n    const {valueSources} = argConfig;\n    const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n    const argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n    if (argDefaultValueSrc) {\n      value = value.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n    }\n  }\n  return value;\n};\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {string} argValSrc \n* @param {object} argConfig \n*/\nexport const setArgValueSrc = (value, argKey, argValSrc, _argConfig, _config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey], new Immutable.Map({valueSrc: argValSrc}));\n  }\n  return value;\n};\n","import React from \"react\";\nimport mapValues from \"lodash/mapValues\";\nimport {shallowEqual} from \"./stuff\";\n\nconst getReactContainerType = (el) => {\n  if (el._reactRootContainer) {\n    return \"root\";\n  }\n  if (Object.getOwnPropertyNames(el).filter(k => k.startsWith(\"__reactContainer\")).length > 0) {\n    return \"container\";\n  }\n  return undefined;\n};\n\nconst getReactRootNodeType = (node) => {\n  if (!node) {\n    return undefined;\n  }\n  const type = getReactContainerType(node);\n  if (type !== undefined) {\n    return type;\n  } else {\n    return getReactRootNodeType(node.parentNode);\n  }\n};\n\nexport const isUsingLegacyReactDomRender = (node) => {\n  return getReactRootNodeType(node) === \"root\";\n};\n\n\nexport const liteShouldComponentUpdate = (self, config) => (nextProps, nextState) => {\n  const prevProps = self.props;\n  const prevState = self.state;\n\n  let should = nextProps != prevProps || nextState != prevState;\n  if (should) {\n    if (prevState == nextState && prevProps != nextProps) {\n      let chs = [];\n      for (let k in nextProps) {\n        let changed = (nextProps[k] != prevProps[k]);\n        if (changed) {\n          if (config[k] == \"ignore\")\n            changed = false;\n          else if (config[k] == \"shallow_deep\")\n            changed = !shallowEqual(nextProps[k], prevProps[k], true);\n          else if (config[k] == \"shallow\")\n            changed = !shallowEqual(nextProps[k], prevProps[k]);\n          else if (typeof config[k] == \"function\")\n            changed = config[k](nextProps[k], prevProps[k], nextState);\n        }\n        if (changed)\n          chs.push(k);\n      }\n      if (!chs.length)\n        should = false;\n    }\n  }\n  return should;\n};\n\nexport const pureShouldComponentUpdate = (self) => function(nextProps, nextState) {\n  return (\n    !shallowEqual(self.props, nextProps)\n    || !shallowEqual(self.state, nextState)\n  );\n};\n\nconst canUseUnsafe = () => {\n  const v = React.version.split(\".\").map(parseInt.bind(null, 10));\n  return v[0] == 16 && v[1] >= 3 || v[0] > 16;\n};\n\nexport const useOnPropsChanged = (obj) => {\n  if (canUseUnsafe) {\n    obj.UNSAFE_componentWillReceiveProps = (nextProps) => {\n      obj.onPropsChanged(nextProps);\n    };\n  } else {\n    obj.componentWillReceiveProps = (nextProps) => {\n      obj.onPropsChanged(nextProps);\n    };\n  }\n};\n\nexport const bindActionCreators = (actionCreators, config, dispatch) =>\n  mapValues(actionCreators, (actionCreator) =>\n    (...args) => dispatch(actionCreator(config, ...args))\n  );\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFieldRawConfig\n} from \"./configUtils\";\nimport {defaultValue, getFirstDefined} from \"../utils/stuff\";\nimport Immutable from \"immutable\";\nimport {validateValue} from \"../utils/validation\";\nimport last from \"lodash/last\";\n\nconst selectTypes = [\n  \"select\",\n  \"multiselect\",\n  \"treeselect\",\n  \"treemultiselect\",\n];\n\n/**\n * @param {object} config\n * @param {object} oldConfig\n * @param {Immutable.Map} current\n * @param {string} newField\n * @param {string} newOperator\n * @param {string} changedProp\n * @return {object} - {canReuseValue, newValue, newValueSrc, newValueType, newValueError}\n */\nexport const getNewValueForFieldOp = function (config, oldConfig = null, current, newField, newOperator, changedProp = null, canFix = true, isEndValue = false) {\n  if (!oldConfig)\n    oldConfig = config;\n  const currentField = current.get(\"field\");\n  const currentOperator = current.get(\"operator\");\n  const currentValue = current.get(\"value\");\n  const currentValueSrc = current.get(\"valueSrc\", new Immutable.List());\n  const currentValueType = current.get(\"valueType\", new Immutable.List());\n  const currentAsyncListValues = current.get(\"asyncListValues\");\n\n  //const isValidatingTree = (changedProp === null);\n  const {convertableWidgets, clearValueOnChangeField, clearValueOnChangeOp, showErrorMessage} = config.settings;\n\n  //const currentOperatorConfig = getOperatorConfig(oldConfig, currentOperator, currentField);\n  const newOperatorConfig = getOperatorConfig(config, newOperator, newField);\n  //const currentOperatorCardinality = currentOperator ? defaultValue(currentOperatorConfig.cardinality, 1) : null;\n  const operatorCardinality = newOperator ? defaultValue(newOperatorConfig.cardinality, 1) : null;\n  const currentFieldConfig = getFieldConfig(oldConfig, currentField);\n  const newFieldConfig = getFieldConfig(config, newField);\n\n  let canReuseValue = currentField && currentOperator && newOperator && currentValue != undefined\n    && (!changedProp \n      || changedProp == \"field\" && !clearValueOnChangeField \n      || changedProp == \"operator\" && !clearValueOnChangeOp)\n    && (currentFieldConfig && newFieldConfig && currentFieldConfig.type == newFieldConfig.type);\n  if (canReuseValue && selectTypes.includes(currentFieldConfig.type) && changedProp == \"field\") {\n    // different fields of select types has different listValues\n    canReuseValue = false;\n  }\n\n  // compare old & new widgets\n  for (let i = 0 ; i < operatorCardinality ; i++) {\n    const vs = currentValueSrc.get(i) || null;\n    const currentWidget = getWidgetForFieldOp(oldConfig, currentField, currentOperator, vs);\n    const newWidget = getWidgetForFieldOp(config, newField, newOperator, vs);\n    // need to also check value widgets if we changed operator and current value source was 'field'\n    // cause for select type op '=' requires single value and op 'in' requires array value\n    const currentValueWidget = vs == \"value\" ? currentWidget : getWidgetForFieldOp(oldConfig, currentField, currentOperator, \"value\");\n    const newValueWidget = vs == \"value\" ? newWidget : getWidgetForFieldOp(config, newField, newOperator, \"value\");\n\n    const canReuseWidget = newValueWidget == currentValueWidget || (convertableWidgets[currentValueWidget] || []).includes(newValueWidget);\n    if (!canReuseWidget)\n      canReuseValue = false;\n  }\n\n  if (currentOperator != newOperator && [currentOperator, newOperator].includes(\"proximity\"))\n    canReuseValue = false;\n\n  const firstWidgetConfig = getFieldWidgetConfig(config, newField, newOperator, null, currentValueSrc.first());\n  const valueSources = getValueSourcesForFieldOp(config, newField, newOperator);\n  \n  let valueFixes = {};\n  let valueErrors = Array.from({length: operatorCardinality}, () => null);\n  if (canReuseValue) {\n    for (let i = 0 ; i < operatorCardinality ; i++) {\n      const v = currentValue.get(i);\n      const vType = currentValueType.get(i) || null;\n      const vSrc = currentValueSrc.get(i) || null;\n      let isValidSrc = (valueSources.find(v => v == vSrc) != null);\n      if (!isValidSrc && i > 0 && vSrc == null)\n        isValidSrc = true; // make exception for range widgets (when changing op from '==' to 'between')\n      const asyncListValues = currentAsyncListValues;\n      const [validateError, fixedValue] = validateValue(\n        config, newField, newField, newOperator, v, vType, vSrc, asyncListValues, canFix, isEndValue\n      );\n      const isValid = !validateError;\n      // Allow bad value with error message\n      // But not on field change - in that case just drop bad value that can't be reused\n      // ? Maybe we should also drop bad value on op change?\n      // For bad multiselect value we have both error message + fixed value.\n      //  If we show error message, it will gone on next tree validation\n      const fixValue = fixedValue !== v;\n      const dropValue = !isValidSrc || !isValid && (changedProp == \"field\" || !showErrorMessage && !fixValue);\n      const showValueError = !!validateError && showErrorMessage && !dropValue && !fixValue;\n      if (showValueError) {\n        valueErrors[i] = validateError;\n      }\n      if (fixValue) {\n        valueFixes[i] = fixedValue;\n      }\n      if (dropValue) {\n        canReuseValue = false;\n        break;\n      }\n    }\n  }\n\n  // reuse value OR get defaultValue for cardinality 1 (it means default range values is not supported yet, todo)\n  let newValue = null, newValueSrc = null, newValueType = null, newValueError = null;\n  newValue = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n    let v = undefined;\n    if (canReuseValue) {\n      if (i < currentValue.size) {\n        v = currentValue.get(i);\n        if (valueFixes[i] !== undefined) {\n          v = valueFixes[i];\n        }\n      }\n    } else if (operatorCardinality == 1) {\n      v = getFirstDefined([\n        newFieldConfig?.defaultValue,\n        newFieldConfig?.fieldSettings?.defaultValue,\n        firstWidgetConfig?.defaultValue\n      ]);\n    }\n    return v;\n  }));\n\n  newValueSrc = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n    let vs = null;\n    if (canReuseValue) {\n      if (i < currentValueSrc.size)\n        vs = currentValueSrc.get(i);\n    } else if (valueSources.length == 1) {\n      vs = valueSources[0];\n    } else if (valueSources.length > 1) {\n      vs = valueSources[0];\n    }\n    return vs;\n  }));\n\n  if (showErrorMessage) {\n    if (newOperatorConfig && newOperatorConfig.validateValues && newValueSrc.toJS().filter(vs => vs == \"value\" || vs == null).length == operatorCardinality) {\n      // last element in `valueError` list is for range validation error\n      const jsValues = firstWidgetConfig && firstWidgetConfig.toJS \n        ? newValue.toJS().map(v => firstWidgetConfig.toJS(v, firstWidgetConfig)) \n        : newValue.toJS();\n      const rangeValidateError = newOperatorConfig.validateValues(jsValues);\n      if (showErrorMessage) {\n        valueErrors.push(rangeValidateError);\n      }\n    }\n    newValueError = new Immutable.List(valueErrors);\n  }\n\n  newValueType = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n    let vt = null;\n    if (canReuseValue) {\n      if (i < currentValueType.size)\n        vt = currentValueType.get(i);\n    } else if (operatorCardinality == 1 && firstWidgetConfig && firstWidgetConfig.type !== undefined) {\n      vt = firstWidgetConfig.type;\n    } else if (operatorCardinality == 1 && newFieldConfig && newFieldConfig.type !== undefined) {\n      vt = newFieldConfig.type == \"!group\" ? \"number\" : newFieldConfig.type;\n    }\n    return vt;\n  }));\n\n  return {canReuseValue, newValue, newValueSrc, newValueType, newValueError, operatorCardinality};\n};\n\nexport const getFirstField = (config, parentRuleGroupPath = null) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parentPathArr = typeof parentRuleGroupPath == \"string\" ? parentRuleGroupPath.split(fieldSeparator) : parentRuleGroupPath;\n  const parentField = parentRuleGroupPath ? getFieldRawConfig(config, parentRuleGroupPath) : config;\n\n  let firstField = parentField, key = null, keysPath = [];\n  do {\n    const subfields = firstField === config ? config.fields : firstField.subfields;\n    if (!subfields || !Object.keys(subfields).length) {\n      firstField = key = null;\n      break;\n    }\n    key = Object.keys(subfields)[0];\n    keysPath.push(key);\n    firstField = subfields[key];\n  } while (firstField.type == \"!struct\" || firstField.type == \"!group\");\n  return (parentPathArr || []).concat(keysPath).join(fieldSeparator);\n};\n\nexport const getOperatorsForField = (config, field) => {\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldOps = fieldConfig ? fieldConfig.operators : [];\n  return fieldOps;\n};\n\nexport const getFirstOperator = (config, field) => {\n  const fieldOps = getOperatorsForField(config, field);\n  return fieldOps ? fieldOps[0] : null;\n};\n\nexport const getFieldPath = (field, config, onlyKeys = false) => {\n  if (!field)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = Array.isArray(field) ? field : field.split(fieldSeparator);\n  if (onlyKeys)\n    return parts;\n  else\n    return parts\n      .map((_curr, ind, arr) => arr.slice(0, ind+1))\n      .map((parts) => parts.join(fieldSeparator));\n};\n\nexport const getFuncPathLabels = (field, config, parentField = null) => {\n  return getFieldPathLabels(field, config, parentField, \"funcs\", \"subfields\");\n};\n\nexport const getFieldPathLabels = (field, config, parentField = null, fieldsKey = \"fields\", subfieldsKey = \"subfields\") => {\n  if (!field)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = Array.isArray(field) ? field : field.split(fieldSeparator);\n  const parentParts = parentField ? (Array.isArray(parentField) ? parentField : parentField.split(fieldSeparator)) : [];\n  return parts\n    .slice(parentParts.length)\n    .map((_curr, ind, arr) => arr.slice(0, ind+1))\n    .map((parts) => [...parentParts, ...parts].join(fieldSeparator))\n    .map(part => {\n      const cnf = getFieldRawConfig(config, part, fieldsKey, subfieldsKey);\n      return cnf && cnf.label || cnf && last(part.split(fieldSeparator));\n    })\n    .filter(label => label != null);\n};\n\nexport const getFieldPartsConfigs = (field, config, parentField = null) => {\n  if (!field)\n    return null;\n  const parentFieldDef = parentField && getFieldRawConfig(config, parentField) || null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = Array.isArray(field) ? field : field.split(fieldSeparator);\n  const parentParts = parentField ? (Array.isArray(parentField) ? parentField : parentField.split(fieldSeparator)) : [];\n  return parts\n    .slice(parentParts.length)\n    .map((_curr, ind, arr) => arr.slice(0, ind+1))\n    .map((parts) => ({\n      part: [...parentParts, ...parts].join(fieldSeparator),\n      key: parts[parts.length - 1]\n    }))\n    .map(({part, key}) => {\n      const cnf = getFieldRawConfig(config, part);\n      return {key, cnf};\n    })\n    .map(({key, cnf}, ind, arr) => {\n      const parentCnf = ind > 0 ? arr[ind - 1].cnf : parentFieldDef;\n      return [key, cnf, parentCnf];\n    });\n};\n\nexport const getValueLabel = (config, field, operator, delta, valueSrc = null, isSpecialRange = false) => {\n  const isFuncArg = field && typeof field == \"object\" && !!field.func && !!field.arg;\n  const {showLabels} = config.settings;\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldWidgetConfig = getFieldWidgetConfig(config, field, operator, null, valueSrc) || {};\n  const mergedOpConfig = getOperatorConfig(config, operator, field) || {};\n    \n  const cardinality = isSpecialRange ? 1 : mergedOpConfig.cardinality;\n  let ret = null;\n  if (cardinality > 1) {\n    const valueLabels = fieldWidgetConfig.valueLabels || mergedOpConfig.valueLabels;\n    if (valueLabels)\n      ret = valueLabels[delta];\n    if (ret && typeof ret != \"object\") {\n      ret = {label: ret, placeholder: ret};\n    }\n    if (!ret) {\n      ret = {\n        label: config.settings.valueLabel + \" \" + (delta+1),\n        placeholder: config.settings.valuePlaceholder + \" \" + (delta+1),\n      };\n    }\n  } else {\n    let label = fieldWidgetConfig.valueLabel;\n    let placeholder = fieldWidgetConfig.valuePlaceholder;\n    if (isFuncArg) {\n      if (!label)\n        label = fieldConfig.label || field.arg;\n      if (!placeholder && !showLabels)\n        placeholder = fieldConfig.label || field.arg;\n    }\n\n    ret = {\n      label: label || config.settings.valueLabel, \n      placeholder: placeholder || config.settings.valuePlaceholder,\n    };\n  }\n  return ret;\n};\n\nfunction _getWidgetsAndSrcsForFieldOp (config, field, operator = null, valueSrc = null) {\n  let widgets = [];\n  let valueSrcs = [];\n  if (!field)\n    return {widgets, valueSrcs};\n  const isFuncArg = typeof field == \"object\" && (!!field.func && !!field.arg || field._isFuncArg);\n  const fieldConfig = getFieldConfig(config, field);\n  const opConfig = operator ? config.operators[operator] : null;\n  \n  if (fieldConfig && fieldConfig.widgets) {\n    for (const widget in fieldConfig.widgets) {\n      const widgetConfig = fieldConfig.widgets[widget];\n      // if (!config.widgets[widget]) {\n      //   continue;\n      // }\n      const widgetValueSrc = config.widgets[widget].valueSrc || \"value\";\n      let canAdd = true;\n      if (widget == \"field\") {\n        canAdd = canAdd && filterValueSourcesForField(config, [\"field\"], fieldConfig).length > 0;\n      }\n      if (widget == \"func\") {\n        canAdd = canAdd && filterValueSourcesForField(config, [\"func\"], fieldConfig).length > 0;\n      }\n      // If can't check operators, don't add\n      // Func args don't have operators\n      if (valueSrc == \"value\" && !widgetConfig.operators && !isFuncArg && field != \"!case_value\")\n        canAdd = false;\n      if (widgetConfig.operators && operator)\n        canAdd = canAdd && widgetConfig.operators.indexOf(operator) != -1;\n      if (valueSrc && valueSrc != widgetValueSrc && valueSrc != \"const\")\n        canAdd = false;\n      if (opConfig && opConfig.cardinality == 0 && (widgetValueSrc != \"value\"))\n        canAdd = false;\n      if (canAdd) {\n        widgets.push(widget);\n        let canAddValueSrc = fieldConfig.valueSources && fieldConfig.valueSources.indexOf(widgetValueSrc) != -1;\n        if (opConfig && opConfig.valueSources && opConfig.valueSources.indexOf(widgetValueSrc) == -1)\n          canAddValueSrc = false;\n        if (canAddValueSrc && !valueSrcs.find(v => v == widgetValueSrc))\n          valueSrcs.push(widgetValueSrc);\n      }\n    }\n  }\n\n  const widgetWeight = (w) => {\n    let wg = 0;\n    if (fieldConfig.preferWidgets) {\n      if (fieldConfig.preferWidgets.includes(w))\n        wg += (10 - fieldConfig.preferWidgets.indexOf(w));\n    } else if (w == fieldConfig.mainWidget) {\n      wg += 100;\n    }\n    if (w == \"field\") {\n      wg -= 1;\n    }\n    if (w == \"func\") {\n      wg -= 2;\n    }\n    return wg;\n  };\n\n  widgets.sort((w1, w2) => (widgetWeight(w2) - widgetWeight(w1)));\n    \n  return {widgets, valueSrcs};\n}\n\nexport const getWidgetsForFieldOp = (config, field, operator, valueSrc = null) => {\n  const {widgets} = _getWidgetsAndSrcsForFieldOp(config, field, operator, valueSrc);\n  return widgets;\n};\n\nexport const filterValueSourcesForField = (config, valueSrcs, fieldDefinition) => {\n  if (!fieldDefinition)\n    return valueSrcs;\n  return valueSrcs.filter(vs => {\n    let canAdd = true;\n    if (vs == \"field\") {\n      if (config._fieldsCntByType) {\n        // tip: LHS field can be used as arg in RHS function\n        const minCnt = fieldDefinition._isFuncArg ? 0 : 1;\n        canAdd = canAdd && config._fieldsCntByType[fieldDefinition.type] > minCnt;\n      }\n    }\n    if (vs == \"func\") {\n      if (config._funcsCntByType)\n        canAdd = canAdd && !!config._funcsCntByType[fieldDefinition.type];\n      if (fieldDefinition.funcs)\n        canAdd = canAdd && fieldDefinition.funcs.length > 0;\n    }\n    return canAdd;\n  });\n};\n\nexport const getValueSourcesForFieldOp = (config, field, operator, fieldDefinition = null, leftFieldForFunc = null) => {\n  const {valueSrcs} = _getWidgetsAndSrcsForFieldOp(config, field, operator, null);\n  const filteredValueSrcs = filterValueSourcesForField(config, valueSrcs, fieldDefinition);\n  return filteredValueSrcs;\n};\n\nexport const getWidgetForFieldOp = (config, field, operator, valueSrc = null) => {\n  const {widgets} = _getWidgetsAndSrcsForFieldOp(config, field, operator, valueSrc);\n  let widget = null;\n  if (widgets.length)\n    widget = widgets[0];\n  return widget;\n};\n\nexport const formatFieldName = (field, config, meta, parentField = null) => {\n  if (!field) return;\n  const fieldDef = getFieldConfig(config, field) || {};\n  const {fieldSeparator} = config.settings;\n  const fieldParts = Array.isArray(field) ? field : field.split(fieldSeparator);\n  let fieldName = Array.isArray(field) ? field.join(fieldSeparator) : field;\n  if (fieldDef.tableName) { // legacy\n    const fieldPartsCopy = [...fieldParts];\n    fieldPartsCopy[0] = fieldDef.tableName;\n    fieldName = fieldPartsCopy.join(fieldSeparator);\n  }\n  if (fieldDef.fieldName) {\n    fieldName = fieldDef.fieldName;\n  }\n  if (parentField) {\n    const parentFieldDef = getFieldConfig(config, parentField) || {};\n    let parentFieldName = parentField;\n    if (parentFieldDef.fieldName) {\n      parentFieldName = parentFieldDef.fieldName;\n    }\n    if (fieldName.indexOf(parentFieldName + fieldSeparator) == 0) {\n      fieldName = fieldName.slice((parentFieldName + fieldSeparator).length);\n    } else {\n      meta.errors.push(`Can't cut group ${parentFieldName} from field ${fieldName}`);\n    }\n  }\n  return fieldName;\n};\n\n","import Immutable, { Map } from \"immutable\";\n\n// RegExp.quote = function (str) {\n//     return str.replace(/([.?*+^$[\\]\\\\(){}|-])/g, \"\\\\$1\");\n// };\n\nexport const defaultValue = (value, _default) => {\n  return (typeof value === \"undefined\") ? _default : value;\n};\n\nexport const truncateString = (str, n, useWordBoundary) => {\n  if (!n || str.length <= n) { return str; }\n  var subString = str.substr(0, n-1);\n  return (useWordBoundary \n    ? subString.substr(0, subString.lastIndexOf(\" \")) \n    : subString) + \"...\";\n};\n\nexport const immutableEqual = function(v1, v2) {\n  if (v1 === v2) {\n    return true;\n  } else {\n    return v1.equals(v2);\n  }\n};\n\nexport const deepEqual = function(v1, v2) {\n  if (v1 === v2) {\n    return true;\n  } else if (Map.isMap(v1)) {\n    return v1.equals(v2);\n  } else {\n    return JSON.stringify(v1) == JSON.stringify(v2);\n  }\n};\n\n//Do sets have same values?\nexport const eqSet = function (as, bs) {\n  if (as.size !== bs.size) return false;\n  for (var a of as) if (!bs.has(a)) return false;\n  return true;\n};\n\n\n//Do arrays have same values?\nexport const eqArrSet = function (arr1, arr2) {\n  return eqSet(new Set(arr1), new Set(arr2));\n};\n\nexport const shallowEqual = (a, b, deep = false) => {\n  if (a === b) {\n    return true;\n  } else if (Array.isArray(a))\n    return shallowEqualArrays(a, b, deep);\n  else if (Map.isMap(a))\n    return a.equals(b);\n  else if (typeof a == \"object\")\n    return shallowEqualObjects(a, b, deep);\n  else\n    return a === b;\n};\n\nfunction shallowEqualArrays(arrA, arrB, deep = false) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var isEqual = deep ? shallowEqual(arrA[i], arrB[i], deep) : arrA[i] === arrB[i];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowEqualObjects(objA, objB, deep = false) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n    var isEqual = deep ? shallowEqual(objA[key], objB[key], deep) : objA[key] === objB[key];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport const escapeRegExp = (string) => {\n  return string.replace(/[.*+?^${}()|[\\]\\\\/]/g, \"\\\\$&\"); // $& means the whole matched string\n};\n\n\nconst isObject = (v) => (typeof v == \"object\" && v !== null); // object or array\nconst listValue = (v, title) => (isObject(v) ? v : {value: v, title: (title !== undefined ? title : v)});\n\n// convert {<value>: <title>, ..} or [value, ..] to normal [{value, title}, ..]\nexport const listValuesToArray = (listValuesObj) => {\n  if (!isObject(listValuesObj))\n    return listValuesObj;\n  if (Array.isArray(listValuesObj))\n    return listValuesObj.map(v => listValue(v));\n  \n  let listValuesArr = [];\n  for (let v in listValuesObj) {\n    const title = listValuesObj[v];\n    listValuesArr.push(listValue(v, title));\n  }\n  return listValuesArr;\n};\n\n// listValues can be {<value>: <title>, ..} or [{value, title}, ..] or [value, ..]\nexport const getItemInListValues = (listValues, value) => {\n  if (Array.isArray(listValues)) {\n    const values = listValues.map(v => listValue(v));\n    return values.find(v => (v.value === value)) || values.find(v => (`${v.value}` === value));\n  } else {\n    return listValues[value] !== undefined ? listValue(value, listValues[value]) : undefined;\n  }\n};\n\nexport const getTitleInListValues = (listValues, value) => {\n  if (listValues == undefined)\n    return value;\n  const it = getItemInListValues(listValues, value);\n  return it !== undefined ? it.title : value;\n};\n\nexport const getValueInListValues = (listValues, value) => {\n  if (listValues == undefined)\n    return value;\n  const it = getItemInListValues(listValues, value);\n  return it !== undefined ? it.value : value;\n};\n\nexport const mapListValues = (listValues, mapFn) => {\n  let ret = [];\n  if (Array.isArray(listValues)) {\n    for (let v of listValues) {\n      const lv = mapFn(listValue(v));\n      if (lv != null)\n        ret.push(lv);\n    }\n  } else {\n    for (let value in listValues) {\n      const lv = mapFn(listValue(value, listValues[value]));\n      if (lv != null)\n        ret.push(lv);\n    }\n  }\n  return ret;\n};\n\nexport const defaultTreeDataMap = {id: \"value\", pId: \"parent\", rootPId: undefined};\n\n// converts from treeData to treeDataSimpleMode format (https://ant.design/components/tree-select/)\n// ! modifies value of `treeData`\nexport const flatizeTreeData = (treeData) => {\n  const tdm = defaultTreeDataMap;\n\n  let rind;\n  let len;\n\n  const _flatize = (node, root, lev) => {\n    if (node.children) {\n      if (lev == 1)\n        node[tdm.pId] = tdm.rootPId; //optional?\n      const childrenCount = node.children.length;\n      for (let c of node.children) {\n        c[tdm.pId] = node[tdm.id];\n        rind++;\n        root.splice(rind, 0, c); //instead of just push\n        len++;\n        _flatize(c, root, lev + 1);\n      }\n      delete node.children;\n      if (childrenCount == 0) {\n        root.splice(rind, 1);\n        rind--;\n        len--;\n      }\n    }\n  };\n\n  if (Array.isArray(treeData)) {\n    len = treeData.length;\n    for (rind = 0 ; rind < len ; rind++) {\n      const c = treeData[rind];\n      if (!isObject(c))\n        continue;\n      if (c[tdm.pId] !== undefined && c[tdm.pId] != tdm.rootPId)\n        continue; //not lev 1\n      _flatize(c, treeData, 1);\n    }\n  }\n  \n  return treeData;\n};\n\nconst getPathInListValues = (listValues, value) => {\n  const tdm = defaultTreeDataMap;\n  const it = getItemInListValues(listValues, value);\n  const parentId = it ? it[tdm.pId] : undefined;\n  const parent = parentId ? listValues.find(v => v[tdm.id] === parentId) : undefined;\n  return parent ? [parent.value, ...getPathInListValues(listValues, parent.value)] : [];\n};\n\nconst getChildrenInListValues = (listValues, value) => {\n  const tdm = defaultTreeDataMap;\n  const it = getItemInListValues(listValues, value);\n  return it ? listValues.filter(v => v[tdm.pId] === it[tdm.id]).map(v => v.value) : [];\n};\n\n// ! modifies value of `treeData`\nconst extendTreeData = (treeData, fieldSettings, isMulti) => {\n  for (let node of treeData) {\n    node.path = getPathInListValues(treeData, node.value);\n    if (fieldSettings.treeSelectOnlyLeafs != false) {\n      const childrenValues = getChildrenInListValues(treeData, node.value);\n      if (!isMulti) {\n        node.selectable = (childrenValues.length == 0);\n      }\n    }\n  }\n  return treeData;\n};\n\nexport const normalizeListValues = (listValues, type, fieldSettings) => {\n  const isTree = [\"treeselect\", \"treemultiselect\"].includes(type);\n  const isMulti = [\"multiselect\", \"treemultiselect\"].includes(type);\n  if (isTree) {\n    listValues = listValuesToArray(listValues);\n    listValues = flatizeTreeData(listValues);\n    listValues = extendTreeData(listValues, fieldSettings, isMulti);\n  }\n  return listValues;\n};\n\nexport const removePrefixPath = (selectedPath, parentPath) => {\n  if (!selectedPath)\n    return selectedPath;\n  let isPrefix = true;\n  for (let i = 0 ; i < parentPath.length ; i++) {\n    const part = parentPath[i];\n    if (selectedPath[i] !== undefined && part == selectedPath[i]) {\n      //ok\n    } else {\n      isPrefix = false;\n      break;\n    }\n  }\n  return isPrefix ? selectedPath.slice(parentPath.length) : selectedPath;\n};\n\nexport const isJsonLogic = (logic) => (\n  typeof logic === \"object\" // An object\n  && logic !== null // but not null\n  && !Array.isArray(logic) // and not an array\n  && Object.keys(logic).length === 1 // with exactly one key\n);\n\nexport function sleep(delay) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\nexport const isImmutable = (v) => {\n  return typeof v === \"object\" && v !== null && typeof v.toJS === \"function\";\n};\n\nexport function applyToJS(v) {\n  return (isImmutable(v) ? v.toJS() : v);\n}\n\nexport function toImmutableList(v) {\n  return (isImmutable(v) ? v : new Immutable.List(v));\n}\n\n// [1, 4, 9] + [1, 5, 9] => [1, 4, 5, 9]\n// Used for merging arrays of operators for different widgets of 1 type\nexport function mergeArraysSmart(arr1, arr2) {\n  if (!arr1) arr1 = [];\n  if (!arr2) arr2 = [];\n  return arr2\n    .map(op => [op, arr1.indexOf(op)])\n    .map(([op, ind], i, orig) => {\n      if (ind == -1) {\n        const next = orig.slice(i+1);\n        const prev = orig.slice(0, i);\n        const after = prev.reverse().find(([_cop, ci]) => ci != -1);\n        const before = next.find(([_cop, ci]) => ci != -1);\n        if (before)\n          return [op, \"before\", before[0]];\n        else if (after)\n          return [op, \"after\", after[0]];\n        else\n          return [op, \"append\", null];\n      } else {\n      // already exists\n        return null;\n      }\n    })\n    .filter(x => x !== null)\n    .reduce((acc, [newOp, rel, relOp]) => {\n      const ind = acc.indexOf(relOp);\n      if (acc.indexOf(newOp) == -1) {\n        if (ind > -1) {\n        // insert after or before\n          acc.splice( ind + (rel == \"after\" ? 1 : 0), 0, newOp );\n        } else {\n        // insert to end or start\n          acc.splice( (rel == \"append\" ? Infinity : 0), 0, newOp );\n        }\n      }\n      return acc;\n    }, arr1.slice());\n}\n\nconst isDev = () => (typeof process !== \"undefined\" && process.env && process.env.NODE_ENV == \"development\");\n\nexport const getLogger = (devMode = false) => {\n  const verbose = devMode != undefined ? devMode : isDev(); \n  return verbose ? console : {\n    error: () => {},\n    log: () => {},\n    warn: () => {},\n    debug: () => {},\n    info: () => {},\n  };\n};\n\nexport const getFirstDefined = (arr = []) => {\n  let ret;\n  for (let i = 0 ; i < arr.length ; i++) {\n    const v = arr[i];\n    if (v !== undefined) {\n      ret = v;\n      break;\n    }\n  }\n  return ret;\n};\n\nexport const logger = getLogger();\n\n","import Immutable  from \"immutable\";\n\n/**\n * @param {Immutable.List} path\n * @param {...string} suffix\n * @return {Immutable.List}\n */\nexport const expandTreePath = (path, ...suffix) =>\n  path.interpose(\"children1\").withMutations((list) => {\n    list.skip(1);\n    list.push.apply(list, suffix);\n    return list;\n  });\n\n\n/**\n * @param {Immutable.List} path\n * @param {...string} suffix\n * @return {Immutable.List}\n */\nexport const expandTreeSubpath = (path, ...suffix) =>\n  path.interpose(\"children1\").withMutations((list) => {\n    list.push.apply(list, suffix);\n    return list;\n  });\n\n\n/**\n * @param {Immutable.Map} path\n * @param {Immutable.List} path\n * @return {Immutable.Map}\n */\nexport const getItemByPath = (tree, path) => {\n  let children = new Immutable.OrderedMap({ [tree.get(\"id\")] : tree });\n  let res = tree;\n  path.forEach((id) => {\n    res = children.get(id);\n    children = res.get(\"children1\");\n  });\n  return res;\n};\n\n\n/**\n * Remove `path` in every item\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const removePathsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path) {\n    const itemPath = path.push(item.get(\"id\"));\n    if (item.get(\"path\")) {\n      newTree = newTree.removeIn(expandTreePath(itemPath, \"path\"));\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      children.map((child, _childId) => {\n        _processNode(child, itemPath);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List());\n\n  return newTree;\n};\n\n\n/**\n * Remove `isLocked` in items that inherit parent's `isLocked`\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const removeIsLockedInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, isParentLocked = false) {\n    const itemPath = path.push(item.get(\"id\"));\n    const isLocked = item.getIn([\"properties\", \"isLocked\"]);\n    if (isParentLocked && isLocked) {\n      newTree = newTree.deleteIn(expandTreePath(itemPath, \"properties\", \"isLocked\"));\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      children.map((child, _childId) => {\n        _processNode(child, itemPath, isLocked || isParentLocked);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List());\n\n  return newTree;\n};\n\n\n/**\n * Set correct `path` and `id` in every item\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const fixPathsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, lev, nodeId) {\n    if (!item) return;\n    const currPath = item.get(\"path\");\n    const currId = item.get(\"id\");\n    const itemId = currId || nodeId;\n    const itemPath = path.push(itemId);\n    if (!currPath || !currPath.equals(itemPath)) {\n      newTree = newTree.setIn(expandTreePath(itemPath, \"path\"), itemPath);\n    }\n    if (!currId) {\n      newTree = newTree.setIn(expandTreePath(itemPath, \"id\"), itemId);\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      if (children.constructor.name == \"Map\") {\n        // protect: should me OrderedMap, not Map (issue #501)\n        newTree = newTree.setIn(\n          expandTreePath(itemPath, \"children1\"), \n          new Immutable.OrderedMap(children)\n        );\n      }\n      children.map((child, childId) => {\n        _processNode(child, itemPath, lev + 1, childId);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List(), 0);\n\n\n  return newTree;\n};\n\nexport const fixEmptyGroupsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, lev, nodeId) {\n    if (!item) return false;\n    const itemId = item.get(\"id\") || nodeId;\n    const itemPath = path.push(itemId);\n\n    const children = item.get(\"children1\");\n    if (children) {\n      const allChildrenGone = children.map((child, childId) => {\n        return _processNode(child, itemPath, lev + 1, childId);\n      }).reduce((curr, v) => (curr && v), true);\n      if ((children.size == 0 || allChildrenGone) && lev > 0) {\n        newTree = newTree.deleteIn(expandTreePath(itemPath));\n        return true;\n      }\n    }\n    return false;\n  }\n\n  _processNode(tree, new Immutable.List(), 0);\n\n\n  return newTree;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @return {Object} {flat, items}\n */\nexport const getFlatTree = (tree) => {\n  let flat = [];\n  let items = {};\n  let realHeight = 0;\n\n  function _flatizeTree (item, path, insideCollapsed, insideLocked, insideRuleGroup, lev, info, parentType, caseId) {\n    const type = item.get(\"type\");\n    const collapsed = item.get(\"collapsed\");\n    const id = item.get(\"id\");\n    const children = item.get(\"children1\");\n    const isLocked = item.getIn([\"properties\", \"isLocked\"]);\n    const childrenIds = children ? children.map((_child, childId) => childId) : null;\n    const isRuleGroup = type == \"rule_group\";\n    // tip: count rule_group as 1 rule\n    const isLeaf = !insideRuleGroup && (!children || isRuleGroup);\n\n    const itemsBefore = flat.length;\n    const top = realHeight;\n    flat.push(id);\n    if (!insideCollapsed)\n      realHeight += 1;\n    info.height = (info.height || 0) + 1;\n\n    items[id] = {\n      type: type,\n      parent: path.length ? path[path.length-1] : null,\n      parentType: parentType,\n      caseId: type == \"case_group\" ? id : caseId,\n      isDefaultCase: type == \"case_group\" && !children,\n      path: path.concat(id),\n      lev: lev,\n      leaf: !children,\n      index: itemsBefore,\n      id: id,\n      children: childrenIds,\n      leafsCount: 0,\n      _top: itemsBefore,\n      _height: (itemsAfter - itemsBefore),\n      top: (insideCollapsed ? null : top),\n      height: height,\n      bottom: (insideCollapsed ? null : top) + height,\n      collapsed: collapsed,\n      node: item,\n      isLocked: isLocked || insideLocked,\n    };\n\n    if (children) {\n      let subinfo = {};\n      children.map((child, _childId) => {\n        _flatizeTree(\n          child, path.concat(id), \n          insideCollapsed || collapsed, insideLocked || isLocked, insideRuleGroup || isRuleGroup,\n          lev + 1, subinfo, type, type == \"case_group\" ? id : caseId\n        );\n      });\n      if (!collapsed) {\n        info.height = (info.height || 0) + (subinfo.height || 0);\n      }\n    }\n    \n    if (caseId && isLeaf) {\n      items[caseId].leafsCount++;\n    }\n\n    const itemsAfter = flat.length;\n    const _bottom = realHeight;\n    const height = info.height;\n        \n    Object.assign(items[id], {\n      _height: (itemsAfter - itemsBefore),\n      height: height,\n      bottom: (insideCollapsed ? null : top) + height,\n    });\n  }\n\n  _flatizeTree(tree, [], false, false, false, 0, {}, null, null);\n\n  for (let i = 0 ; i < flat.length ; i++) {\n    const prevId = i > 0 ? flat[i-1] : null;\n    const nextId = i < (flat.length-1) ? flat[i+1] : null;\n    let item = items[flat[i]];\n    item.prev = prevId;\n    item.next = nextId;\n  }\n\n  return {flat, items};\n};\n\n\n/**\n * Returns count of reorderable(!) nodes\n * @param {Immutable.Map} tree\n * @return {Integer}\n */\nexport const getTotalReordableNodesCountInTree = (tree) => {\n  if (!tree)\n    return -1;\n  let cnt = 0;\n\n  function _processNode (item, path, lev) {\n    let id, children, type;\n    if (typeof item.get === \"function\") {\n      id = item.get(\"id\");\n      children = item.get(\"children1\");\n      type = item.get(\"type\");\n    } else {\n      id = item.id;\n      children = item.children1;\n      type = item.type;\n    }\n    const isRuleGroup = type == \"rule_group\";\n    cnt++;\n    //tip: rules in rule-group can be reordered only inside\n    if (children && !isRuleGroup) {\n      children.map((child, _childId) => {\n        _processNode(child, path.concat(id), lev + 1);\n      });\n    }\n  }\n\n  _processNode(tree, [], 0);\n    \n  return cnt - 1; // -1 for root\n};\n\n/**\n * Returns count of rules (leafs, i.e. don't count groups)\n * @param {Immutable.Map} tree\n * @return {Integer}\n */\nexport const getTotalRulesCountInTree = (tree) => {\n  if (!tree)\n    return -1;\n  let cnt = 0;\n\n  function _processNode (item, path, lev) {\n    let id, children, type;\n    if (typeof item.get === \"function\") {\n      id = item.get(\"id\");\n      children = item.get(\"children1\");\n      type = item.get(\"type\");\n    } else {\n      id = item.id;\n      children = item.children1;\n      type = item.type;\n    }\n    \n    if (type == \"rule\" || type == \"rule_group\") {\n      // tip: count rule_group as 1 rule\n      cnt++;\n    } else if (children) {\n      children.map((child, _childId) => {\n        _processNode(child, path.concat(id), lev + 1);\n      });\n    }\n  }\n\n  _processNode(tree, [], 0);\n    \n  return cnt;\n};\n\nexport const getTreeBadFields = (tree) => {\n  let badFields = [];\n\n  function _processNode (item, path, lev) {\n    const id = item.get(\"id\");\n    const children = item.get(\"children1\");\n    const valueError = item.getIn([\"properties\", \"valueError\"]);\n    const field = item.getIn([\"properties\", \"field\"]);\n    if (valueError && valueError.size > 0 && valueError.filter(v => v != null).size > 0) {\n      badFields.push(field);\n    }\n    if (children) {\n      children.map((child, _childId) => {\n        _processNode(child, path.concat(id), lev + 1);\n      });\n    }\n  }\n\n  if (tree)\n    _processNode(tree, [], 0);\n    \n  return Array.from(new Set(badFields));\n};\n\n\n// Remove fields that can be calced: \"id\", \"path\"\n// Remove empty fields: \"operatorOptions\"\nexport const getLightTree = (tree, children1AsArray = false) => {\n  let newTree = tree;\n\n  function _processNode (item, itemId) {\n    if (item.path)\n      delete item.path;\n    if (!children1AsArray && itemId)\n      delete item.id;\n    let properties = item.properties;\n    if (properties) {\n      if (properties.operatorOptions == null)\n        delete properties.operatorOptions;\n    }\n\n    const children = item.children1;\n    if (children) {\n      for (let id in children) {\n        _processNode(children[id], id);\n      }\n      if (children1AsArray) {\n        item.children1 = Object.values(children);\n      }\n    }\n  }\n\n  _processNode(tree, null);\n\n  return newTree;\n};\n\nexport const getSwitchValues = (tree) => {\n  let vals = [];\n  const children = tree.get(\"children1\");\n  if (children) {\n    children.map((child) => {\n      const value = child.getIn([\"properties\", \"value\"]);\n      let caseValue;\n      if (value && value.size == 1) {\n        caseValue = value.get(0);\n        if (Array.isArray(caseValue) && caseValue.length == 0) {\n          caseValue = null;\n        }\n      } else {\n        caseValue = null;\n      }\n      vals = [...vals, caseValue];\n    });\n  }\n\n  return vals;\n};\n\nexport const isEmptyTree = (tree) => (!tree.get(\"children1\") || tree.get(\"children1\").size == 0);\n\nexport const hasChildren = (tree, path) => tree.getIn(expandTreePath(path, \"children1\")).size > 0;\n","// Had to make uuid use a constant seed so it would generate same sequence across runs. This was needed\n// so server side rendering and client side rendering yield same results (e.g. the uuid is used when rendering\n// the concunctions with their name and id)\nvar query_builder_seed = 0;\nexport default () => {\n  // Generate a random GUID http://stackoverflow.com/a/2117523.\n  const timePart = (new Date().getTime().toString(16)+\"FF\").substr(0,11);\n  const s = \"ssssssss-xxxx-4xxx-yxxx-x\".replace(/[xys]/g, (c) => {\n    const r = c === \"s\" ? Math.floor(Math.random() * 16) : (query_builder_seed++) & 0xf;\n    const v = c === \"x\" ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n  return s + timePart;\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig,\n} from \"./configUtils\";\nimport {getOperatorsForField, getWidgetForFieldOp, getNewValueForFieldOp} from \"../utils/ruleUtils\";\nimport {defaultValue, deepEqual, getItemInListValues, logger, immutableEqual} from \"../utils/stuff\";\nimport {defaultOperatorOptions} from \"../utils/defaultUtils\";\nimport {fixPathsInTree} from \"../utils/treeUtils\";\nimport omit from \"lodash/omit\";\nimport { List } from \"immutable\";\n\n\nconst typeOf = (v) => {\n  if (typeof v == \"object\" && v !== null && Array.isArray(v))\n    return \"array\";\n  else\n    return (typeof v);\n};\n\nconst isTypeOf = (v, type) => {\n  if (typeOf(v) == type)\n    return true;\n  if (type == \"number\" && !isNaN(v))\n    return true; //can be casted\n  return false;\n};\n\nexport const createValidationMemo = () => {\n  let originalTree;\n  let validatedTree;\n  let configId;\n\n  return (config, tree, oldConfig) => {\n    if (!tree) {\n      return null;\n    }\n    if (config.__configId === configId && (immutableEqual(tree, originalTree) || immutableEqual(tree, validatedTree))) {\n      return validatedTree;\n    } else {\n      configId = config.__configId;\n      originalTree = tree;\n      validatedTree = validateAndFixTree(tree, null, config, oldConfig || config);\n      return validatedTree;\n    }\n  };\n};\n\nexport const validateAndFixTree = (newTree, _oldTree, newConfig, oldConfig) => {\n  let tree = validateTree(newTree, _oldTree, newConfig, oldConfig);\n  tree = fixPathsInTree(tree);\n  return tree;\n};\n\nexport const validateTree = (tree, _oldTree, config, oldConfig, removeEmptyGroups, removeIncompleteRules) => {\n  if (removeEmptyGroups === undefined) {\n    removeEmptyGroups = config.settings.removeEmptyGroupsOnLoad;\n  }\n  if (removeIncompleteRules === undefined) {\n    removeIncompleteRules = config.settings.removeIncompleteRulesOnLoad;\n  }\n  const c = {\n    config, oldConfig, removeEmptyGroups, removeIncompleteRules\n  };\n  return validateItem(tree, [], null, {}, c);\n};\n\nfunction validateItem (item, path, itemId, meta, c) {\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\" || type == \"case_group\" || type == \"switch_group\") && children && children.size) {\n    return validateGroup(item, path, itemId, meta, c);\n  } else if (type === \"rule\") {\n    return validateRule(item, path, itemId, meta, c);\n  } else {\n    return item;\n  }\n}\n\nfunction validateGroup (item, path, itemId, meta, c) {\n  const {removeEmptyGroups} = c;\n  let id = item.get(\"id\");\n  let children = item.get(\"children1\");\n  const oldChildren = children;\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  }\n\n  //validate children\n  let submeta = {};\n  children = children\n    .map( (currentChild, childId) => validateItem(currentChild, path.concat(id), childId, submeta, c) );\n  if (removeEmptyGroups)\n    children = children.filter((currentChild) => (currentChild != undefined));\n  let sanitized = submeta.sanitized || (oldChildren.size != children.size);\n  if (!children.size && removeEmptyGroups && path.length) {\n    sanitized = true;\n    item = undefined;\n  }\n\n  if (sanitized)\n    meta.sanitized = true;\n  if (sanitized && item)\n    item = item.set(\"children1\", children);\n  return item;\n}\n\n\nfunction validateRule (item, path, itemId, meta, c) {\n  const {removeIncompleteRules, config, oldConfig} = c;\n  const {showErrorMessage} = config.settings;\n  let id = item.get(\"id\");\n  let properties = item.get(\"properties\");\n  let field = properties.get(\"field\") || null;\n  let operator = properties.get(\"operator\") || null;\n  let operatorOptions = properties.get(\"operatorOptions\");\n  let valueSrc = properties.get(\"valueSrc\");\n  let value = properties.get(\"value\");\n  let valueError = properties.get(\"valueError\");\n  const oldSerialized = {\n    field,\n    operator,\n    operatorOptions: operatorOptions ? operatorOptions.toJS() : {},\n    valueSrc: valueSrc ? valueSrc.toJS() : null,\n    value: value ? value.toJS() : null,\n    valueError: valueError ? valueError.toJS() : null,\n  };\n  let _wasValid = field && operator && value && !value.includes(undefined);\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  }\n\n  //validate field\n  const fieldDefinition = field ? getFieldConfig(config, field) : null;\n  if (field && !fieldDefinition) {\n    logger.warn(`No config for field ${field}`);\n    field = null;\n  }\n  if (field == null) {\n    properties = [\"operator\", \"operatorOptions\", \"valueSrc\", \"value\"].reduce((map, key) => map.delete(key), properties);\n    operator = null;\n  }\n\n  //validate operator\n  // Backward compatibility: obsolete operator range_between\n  if (operator == \"range_between\" || operator == \"range_not_between\") {\n    operator = operator == \"range_between\" ? \"between\" : \"not_between\";\n    console.info(`Fixed operator ${properties.get(\"operator\")} to ${operator}`);\n    properties = properties.set(\"operator\", operator);\n  }\n  const operatorDefinition = operator ? getOperatorConfig(config, operator, field) : null;\n  if (operator && !operatorDefinition) {\n    console.warn(`No config for operator ${operator}`);\n    operator = null;\n  }\n  const availOps = field ? getOperatorsForField(config, field) : [];\n  if (!availOps) {\n    console.warn(`Type of field ${field} is not supported`);\n    operator = null;\n  } else if (operator && availOps.indexOf(operator) == -1) {\n    if (operator == \"is_empty\" || operator == \"is_not_empty\") {\n      // Backward compatibility: is_empty #494\n      operator = operator == \"is_empty\" ? \"is_null\" : \"is_not_null\";\n      console.info(`Fixed operator ${properties.get(\"operator\")} to ${operator} for ${field}`);\n      properties = properties.set(\"operator\", operator);\n    } else {\n      console.warn(`Operator ${operator} is not supported for field ${field}`);\n      operator = null;\n    }\n  }\n  if (operator == null) {\n    properties = properties.delete(\"operatorOptions\");\n    properties = properties.delete(\"valueSrc\");\n    properties = properties.delete(\"value\");\n  }\n\n  //validate operator options\n  operatorOptions = properties.get(\"operatorOptions\");\n  let _operatorCardinality = operator ? defaultValue(operatorDefinition.cardinality, 1) : null;\n  if (!operator || operatorOptions && !operatorDefinition.options) {\n    operatorOptions = null;\n    properties = properties.delete(\"operatorOptions\");\n  } else if (operator && !operatorOptions && operatorDefinition.options) {\n    operatorOptions = defaultOperatorOptions(config, operator, field);\n    properties = properties.set(\"operatorOptions\", operatorOptions);\n  }\n\n  //validate values\n  valueSrc = properties.get(\"valueSrc\");\n  value = properties.get(\"value\");\n  const canFix = !showErrorMessage;\n  const isEndValue = true;\n  let {newValue, newValueSrc, newValueError} = getNewValueForFieldOp(config, oldConfig, properties, field, operator, null, canFix, isEndValue);\n  value = newValue;\n  valueSrc = newValueSrc;\n  valueError = newValueError;\n  properties = properties.set(\"value\", value);\n  properties = properties.set(\"valueSrc\", valueSrc);\n  if (showErrorMessage) {\n    properties = properties.set(\"valueError\", valueError);\n  }\n\n  const newSerialized = {\n    field,\n    operator,\n    operatorOptions: operatorOptions ? operatorOptions.toJS() : {},\n    valueSrc: valueSrc ? valueSrc.toJS() : null,\n    value: value ? value.toJS() : null,\n    valueError: valueError ? valueError.toJS() : null,\n  };\n  const sanitized = !deepEqual(oldSerialized, newSerialized);\n  const isComplete = field && operator && value && !value.includes(undefined);\n  if (sanitized)\n    meta.sanitized = true;\n  if (!isComplete && removeIncompleteRules)\n    item = undefined;\n  else if (sanitized)\n    item = item.set(\"properties\", properties);\n\n  return item;\n}\n\n\n/**\n * \n * @param {bool} canFix true is useful for func values to remove bad args\n * @param {bool} isEndValue false if value is in process of editing by user\n * @param {bool} isRawValue false is used only internally from validateFuncValue\n * @return {array} [validError, fixedValue] - if validError === null and canFix == true, fixedValue can differ from value if was fixed\n */\nexport const validateValue = (config, leftField, field, operator, value, valueType, valueSrc, asyncListValues, canFix = false, isEndValue = false, isRawValue = true) => {\n  let validError = null;\n  let fixedValue = value;\n\n  if (value != null) {\n    if (valueSrc == \"field\") {\n      [validError, fixedValue] = validateFieldValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, isEndValue, canFix);\n    } else if (valueSrc == \"func\") {\n      [validError, fixedValue] = validateFuncValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, isEndValue, canFix);\n    } else if (valueSrc == \"value\" || !valueSrc) {\n      [validError, fixedValue] = validateNormalValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, isEndValue, canFix);\n    }\n\n    if (!validError) {\n      const fieldConfig = getFieldConfig(config, field);\n      const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const operatorDefinition = operator ? getOperatorConfig(config, operator, field) : null;\n      const fieldWidgetDefinition = omit(getFieldWidgetConfig(config, field, operator, w, valueSrc), [\"factory\"]);\n      const rightFieldDefinition = (valueSrc == \"field\" ? getFieldConfig(config, value) : null);\n      const fieldSettings = fieldWidgetDefinition; // widget definition merged with fieldSettings\n\n      const fn = fieldWidgetDefinition.validateValue;\n      if (typeof fn == \"function\") {\n        const args = [\n          fixedValue, \n          fieldSettings,\n          operator,\n          operatorDefinition\n        ];\n        if (valueSrc == \"field\")\n          args.push(rightFieldDefinition);\n        const validResult = fn(...args);\n        if (typeof validResult == \"boolean\") {\n          if (validResult == false)\n            validError = \"Invalid value\";\n        } else {\n          validError = validResult;\n        }\n      }\n    }\n  }\n\n  if (isRawValue && validError) {\n    console.warn(\"[RAQB validate]\", `Field ${field}: ${validError}`);\n  }\n  \n  return [validError, fixedValue];\n};\n\nconst validateValueInList = (value, listValues, canFix, isEndValue, removeInvalidMultiSelectValuesOnLoad) => {\n  const values = List.isList(value) ? value.toJS() : (value instanceof Array ? [...value] : undefined);\n  if (values) {\n    const [goodValues, badValues] = values.reduce(([goodVals, badVals], val) => {\n      const vv = getItemInListValues(listValues, val);\n      if (vv == undefined) {\n        return [goodVals, [...badVals, val]];\n      } else {\n        return [[...goodVals, vv.value], badVals];\n      }\n    }, [[], []]);\n    const plural = badValues.length > 1;\n    const err = badValues.length ? `${plural ? \"Values\" : \"Value\"} ${badValues.join(\", \")} ${plural ? \"are\" : \"is\"} not in list of values` : null;\n    // always remove bad values at tree validation as user can't unselect them (except AntDesign widget)\n    if (removeInvalidMultiSelectValuesOnLoad !== undefined) {\n      canFix = removeInvalidMultiSelectValuesOnLoad;\n    } else {\n      canFix = canFix || isEndValue;\n    }\n    return [err, canFix ? goodValues : value];\n  } else {\n    const vv = getItemInListValues(listValues, value);\n    if (vv == undefined) {\n      return [`Value ${value} is not in list of values`, value];\n    } else {\n      value = vv.value;\n    }\n    return [null, value];\n  }\n};\n\n/**\n* \n*/\nconst validateNormalValue = (leftField, field, value, valueSrc, valueType, asyncListValues, config, operator = null, isEndValue = false, canFix = false) => {\n  if (field) {\n    const fieldConfig = getFieldConfig(config, field);\n    const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const wConfig = config.widgets[w];\n    const wType = wConfig.type;\n    const jsType = wConfig.jsType;\n    const fieldSettings = fieldConfig.fieldSettings;\n\n    if (valueType != wType)\n      return [`Value should have type ${wType}, but got value of type ${valueType}`, value];\n    if (jsType && !isTypeOf(value, jsType) && !fieldSettings.listValues) { //tip: can skip tye check for listValues\n      return [`Value should have JS type ${jsType}, but got value of type ${typeof value}`, value];\n    }\n\n    if (fieldSettings) {\n      const listValues = asyncListValues || fieldSettings.listValues;\n      if (listValues && !fieldSettings.allowCustomValues) {\n        return validateValueInList(value, listValues, canFix, isEndValue, config.settings.removeInvalidMultiSelectValuesOnLoad);\n      }\n      if (fieldSettings.min != null && value < fieldSettings.min) {\n        return [`Value ${value} < min ${fieldSettings.min}`, canFix ? fieldSettings.min : value];\n      }\n      if (fieldSettings.max != null && value > fieldSettings.max) {\n        return [`Value ${value} > max ${fieldSettings.max}`, canFix ? fieldSettings.max : value];\n      }\n    }\n  }\n\n  return [null, value];\n};\n\n\n/**\n* \n*/\nconst validateFieldValue = (leftField, field, value, _valueSrc, valueType, asyncListValues, config, operator = null, isEndValue = false, canFix = false) => {\n  const {fieldSeparator} = config.settings;\n  const isFuncArg = typeof field == \"object\" && field?._isFuncArg;\n  const leftFieldStr = Array.isArray(leftField) ? leftField.join(fieldSeparator) : leftField;\n  const rightFieldStr = Array.isArray(value) ? value.join(fieldSeparator) : value;\n  const rightFieldDefinition = getFieldConfig(config, value);\n  if (!rightFieldDefinition)\n    return [`Unknown field ${value}`, value];\n  if (rightFieldStr == leftFieldStr && !isFuncArg)\n    return [`Can't compare field ${leftField} with itself`, value];\n  if (valueType && valueType != rightFieldDefinition.type)\n    return [`Field ${value} is of type ${rightFieldDefinition.type}, but expected ${valueType}`, value];\n  return [null, value];\n};\n\n/**\n* \n*/\nconst validateFuncValue = (leftField, field, value, _valueSrc, valueType, asyncListValues, config, operator = null, isEndValue = false, canFix = false) => {\n  let fixedValue = value;\n\n  if (value) {\n    const funcKey = value.get(\"func\");\n    if (funcKey) {\n      const funcConfig = getFuncConfig(config, funcKey);\n      if (funcConfig) {\n        if (valueType && funcConfig.returnType != valueType)\n          return [`Function ${funcKey} should return value of type ${funcConfig.returnType}, but got ${valueType}`, value];\n        for (const argKey in funcConfig.args) {\n          const argConfig = funcConfig.args[argKey];\n          const args = fixedValue.get(\"args\");\n          const argVal = args ? args.get(argKey) : undefined;\n          const fieldDef = getFieldConfig(config, argConfig);\n          const argValue = argVal ? argVal.get(\"value\") : undefined;\n          const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n          if (argValue !== undefined) {\n            const [argValidError, fixedArgVal] = validateValue(\n              config, leftField, fieldDef, operator, argValue, argConfig.type, argValueSrc, asyncListValues, canFix, isEndValue, false\n            );\n            if (argValidError !== null) {\n              if (canFix) {\n                fixedValue = fixedValue.deleteIn([\"args\", argKey]);\n                if (argConfig.defaultValue !== undefined) {\n                  fixedValue = fixedValue.setIn([\"args\", argKey, \"value\"], argConfig.defaultValue);\n                  fixedValue = fixedValue.setIn([\"args\", argKey, \"valueSrc\"], \"value\");\n                }\n              } else {\n                return [`Invalid value of arg ${argKey} for func ${funcKey}: ${argValidError}`, value];\n              }\n            } else if (fixedArgVal !== argValue) {\n              fixedValue = fixedValue.setIn([\"args\", argKey, \"value\"], fixedArgVal);\n            }\n          } else if (isEndValue && argConfig.defaultValue === undefined && !canFix) {\n            return [`Value of arg ${argKey} for func ${funcKey} is required`, value];\n          }\n        }\n      } else return [`Unknown function ${funcKey}`, value];\n    } // else it's not function value\n  } // empty value\n\n  return [null, fixedValue];\n};\n","var map = {\n\t\"./es-us\": 73099,\n\t\"./es-us.js\": 73099,\n\t\"./ru\": 21753,\n\t\"./ru.js\": 21753,\n\t\"moment/locale/es-us\": 73099,\n\t\"moment/locale/es-us.js\": 73099,\n\t\"moment/locale/ru\": 21753,\n\t\"moment/locale/ru.js\": 21753\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 13837;"],"names":["Proximity","handleChange","value","props","setOption","parseInt","this","defaults","options","config","optionLabel","optionPlaceholder","customProps","minProximity","maxProximity","optionTextBefore","readonly","settings","widgets","defaultProximity","proximity","undefined","showLabels","selectedProximity","get","proxValues","range","map","item","title","Select","select","factory","className","listValues","setValue","placeholder","children","PureComponent","propTypes","PropTypes","defaultProps","delta","isFuncArg","immValue","valueSrc","immValueError","valueError","asyncListValues","isSpecialRange","fieldDefinition","widgetDefinition","widget","widgetValueLabel","valueLabels","textSeparators","setValueHandler","field","operator","parentField","parentFuncs","id","groupId","widgetFactory","fieldWidgetProps","isConst","valueSources","length","defaultValue","fieldSettings","widgetProps","Object","assign","label","placeholders","labelYes","labelNo","Array","isArray","v","getTitleInListValues","join","funcArgDummyOpDef","cardinality","Widget","_setValue","widgetType","__isInternal","oldRange","_onChangeValueSrc","srcKey","setValueSrc","renderWidget","meta","leftField","values","iValues","aField","valueLabel","widgetLabel","key","WidgetFactory","pick","renderValueSources","setValueSrcHandler","valueSourcesInfo","ValueSources","valueSourcesOptions","sourceLabel","valueSourcesPopupTitle","renderSep","sepText","sepLabel","renderWidgetDelta","useOnPropsChanged","onPropsChanged","nextProps","prevProps","k","filter","ch","getMeta","simpleField","fieldFunc","fieldArg","valueSrcs","isForRuleGruop","isCaseValue","func","arg","iValueSrcs","Immutable","getFieldConfig","defaultWidget","getWidgetForFieldOp","operatorDefinition","getWidgetsForFieldOp","getOperatorConfig","isSpecialRangeForSrcField","isTrueSpecialRange","getValueSourcesForFieldOp","getFieldWidgetConfig","singleWidget","type","getValueLabel","bind","name","toUpperCase","Col","dummyFn","DragIcon","xmlns","viewBox","fill","width","height","d","ConfirmFn","Cmp","useConfirm","confirmFn","ValueField","needUpdateItems","items","needUpdateMeta","getItems","canCompareFieldWithField","fieldSeparator","parentFieldPath","split","parentFieldConfig","sourceFields","subfields","fields","filteredFields","filterFields","buildOptions","customPlaceholder","fieldPlaceholder","fieldSeparatorDisplay","selectedKey","isFieldSelected","leftFieldWidgetField","leftFieldWidgetFieldProps","valuePlaceholder","currField","selectedOpts","selectedKeys","getFieldPath","selectedPath","selectedLabel","getFieldLabel","partsLabels","getFieldPathLabels","selectedFullLabel","selectedAltLabel","label2","leftFieldFullkey","clone","expectedType","leftFieldConfig","_filter","list","path","rightFieldKey","subpath","concat","rightFieldFullkey","rightFieldConfig","canUse","fn","keys","optGroupLabel","prefix","fieldKey","fullLabel","altLabel","tooltip","hideForCompare","grouplabel","o","fieldOpts","maxLabelsLength","fieldParts","last","truncateString","renderField","renderProps","setField","FuncSelect","canUseFuncForField","filteredFuncs","filterFuncs","funcs","funcPlaceholder","selectedFuncKey","isFuncSelected","currFunc","getFuncConfig","getFuncLabel","getFuncPathLabels","targetDefinition","funcKey","funcFullkey","funcConfig","returnType","includes","allowSelfNesting","funcOpts","funcParts","renderFunc","FuncWidget","setFunc","setArgValue","argKey","argVal","argDefinition","funcDefinition","args","setArgValueSrc","argValSrc","renderFuncSelect","selectProps","funcLabel","renderArgLabel","showPrefix","renderArgLabelSep","renderArgVal","getIn","defaultValueSource","ArgWidget","renderArgSep","argIndex","renderSeps","renderBracketBefore","renderBrackets","renderBracketAfter","renderFuncArgs","_delta","_widgetType","customRadioYesProps","radioYes","customRadioNoProps","radioNo","onRadioChange","e","target","uuid","id2","checked","disabled","onChange","style","display","htmlFor","maxLength","textValue","val","fullWidth","maxRows","valueFormat","use12Hours","dtValue","moment","format","Date","allowCustomValues","multiple","multiselect","i","opt","selected","push","getMultiSelectValues","omit","mapListValues","hasValue","min","max","step","numberValue","Number","customInputProps","input","customSliderProps","slider","renderOptions","postfix","not","setNot","conjunctionOptions","setConjunction","showNot","notLabel","conjsCount","lessThenTwo","showConj","forceShowConj","isDummyFn","onClick","btnLabel","info","onOk","okText","cancelText","confirm","VanillaProvider","VanillaBooleanWidget","Widgets","VanillaTextWidget","VanillaTextAreaWidget","VanillaDateWidget","VanillaTimeWidget","VanillaDateTimeWidget","VanillaMultiSelectWidget","VanillaSelectWidget","VanillaNumberWidget","VanillaSliderWidget","ValueFieldWidget","ProximityOperator","Operators","mongoFormatOp1","mop","mc","_op","useExpr","valueType","opDef","operatorOptions","fieldDef","$field","startsWith","mv","mongoFormatOp2","mops","valueTypes","operators","equal","labelForFormat","sqlOp","spelOp","spelOps","reversedOp","formatOp","op","isForDisplay","opStr","mongoFormatOp","jsonLogic","elasticSearchQueryType","not_equal","isNotOp","less","less_or_equal","greater","greater_or_equal","like","escapeRegExp","_jsonLogicIsRevArgs","not_like","starts_with","ends_with","between","valFrom","first","valTo","spelFormatOp","validateValues","not_between","is_empty","sqlFormatOp","empty","sqlEmptyValue","mongoEmptyValue","is_not_empty","is_null","is_not_null","select_equals","select_not_equals","select_any_in","select_not_any_in","multiselect_contains","jsonLogic2","vals","multiselect_not_contains","multiselect_equals","SqlString","multiselect_not_equals","val1","val2","prox","aVal1","aVal2","some","filteredSize","all","fullSize","none","stringifyForDisplay","toString","conjunctions","AND","mongoConj","jsonLogicConj","sqlConj","spelConj","spelConjs","reversedConj","formatConj","conj","size","sqlFormatConj","spelFormatConj","omitBrackets","OR","text","jsType","formatValue","wgtDef","JSON","stringify","spelFormatValue","regex","spelEscape","sqlFormatValue","toJS","mongoFormatValue","textarea","number","isFloat","isInteger","valLabel","valsLabels","isCallable","res","spelFixList","date","dateFormat","useKeyboard","dateVal","toDate","isValid","time","timeFormat","elasticSearchFormatValue","queryType","fieldName","script","source","params","datetime","boolean","rightFieldDef","showSearch","case_value","spelImportValue","types","defaultOperator","mainWidget","opProps","defaultSettings","formatField","parts","formatSpelField","partsExt","ind","parent","isSpelVariable","sqlFormatReverse","q","spelFormatReverse","formatReverse","revOperatorDefinition","formatAggr","whereStr","aggrField","aggrFieldDef","cond","rightField","customFieldSelectProps","defaultSliderWidth","defaultSelectWidth","defaultSearchWidth","defaultMaxRows","VanillaFieldSelect","VanillaConjs","VanillaButton","VanillaButtonGroup","VanillaValueSources","vanillaConfirm","VanillaSwitch","renderOperator","renderConjs","renderSwitch","renderButton","renderButtonGroup","renderProvider","renderConfirm","renderSwitchPrefix","renderSize","canReorder","canRegroup","showLock","canDeleteLocked","canLeaveEmptyGroup","shouldCreateEmptyGroup","canShortMongoQuery","removeEmptyGroupsOnLoad","removeIncompleteRulesOnLoad","removeInvalidMultiSelectValuesOnLoad","groupActionsPosition","setOpOnChangeField","groupOperators","convertableWidgets","locale","fieldLabel","operatorLabel","operatorPlaceholder","lockLabel","lockedLabel","deleteLabel","addGroupLabel","addCaseLabel","addDefaultCaseLabel","defaultCaseLabel","addRuleLabel","addSubRuleLabel","delGroupLabel","removeRuleConfirmOptions","removeGroupConfirmOptions","defaultGroupConjunction","groupVarKey","altVarKey","lockedOp","nonCheckedIcon","CheckBoxOutlineBlank","fontSize","checkedIcon","CheckBox","defaultFilterOptions","createFilterOptions","emptyArray","selectedValue","groupBy","filterOptionsConfig","filterOptionsFn","useListValuesAutocomplete","debounceTimeout","open","onOpen","onClose","onInputChange","inputValue","isInitialLoading","isLoading","aPlaceholder","extendOptions","getOptionSelected","getOptionDisabled","getOptionLabel","showCheckboxes","rest","inputWidth","customAutocompleteProps","minWidth","useStyles","makeStyles","theme","classesChip","root","marginTop","marginBottom","useStylesChip","classes","FormControl","Autocomplete","disableCloseOnSelect","freeSolo","loading","readOnly","renderInput","TextField","InputProps","endAdornment","CircularProgress","color","renderTags","getTagProps","option","index","Chip","renderOption","specialValue","renderTitle","Checkbox","icon","marginRight","filterOptions","filtered","itemsToListValues","level","repeat","groupTitle","flat","Infinity","paper","padding","spacing","MaterialTextWidget","inputProps","MaterialTextAreaWidget","multiline","MaterialDateWidget","Picker","KeyboardDatePicker","DatePicker","formatSingleValue","MaterialDateTimeWidget","KeyboardDateTimePicker","DateTimePicker","dateTimeFormat","ampm","MaterialTimeWidget","KeyboardTimePicker","TimePicker","hasSeconds","indexOf","timeValue","views","MaterialSelectWidget","autoWidth","displayEmpty","renderValue","shift","getListValueTitle","MenuItem","MaterialNumberWidget","MaterialSliderWidget","marks","sliderValue","muiMarks","InputCmp","onBlur","SliderCmp","Slider","_e","newValue","valueLabelDisplay","stylesSliderWrapper","marginLeft","paddingLeft","alignItems","MaterialRangeWidget","useEffect","valueFrom","valueTo","setTimeout","oneValue","handleInputBlur","FromInputCmp","ToInputCmp","newValues","stylesInputWrapper","MaterialBooleanWidget","Typography","component","Grid","container","Switch","MaterialMultiSelectWidget","selectedValues","selectedTitles","ListItemText","primary","MaterialAutocompleteWidget","MaterialFieldSelect","findLabel","pop","ListSubheader","disableSticky","MaterialFieldAutocomplete","MaterialAutocomplete","_asyncValues","MaterialButton","typeToOnlyIcon","Delete","Add","typeToIcon","typeToColor","IconButton","Button","startIcon","MaterialButtonGroup","MaterialConjs","ButtonGroup","disableElevation","variant","MaterialSwitch","checkedLabel","hideLabel","showLabel","Lock","LockOpen","FormControlLabel","control","MaterialValueSources","React","anchorEl","setAnchorEl","handleClose","Boolean","event","currentTarget","handleOpen","ExpandMoreSharp","Popover","anchorOrigin","vertical","horizontal","transformOrigin","disablePortal","FormLabel","RadioGroup","Radio","MaterialConfirm","description","confirmationText","cancellationText","then","MaterialUseConfirm","MaterialProvider","settingsTheme","settingsLocale","themeConfig","material","createTheme","base","withProviders","M","utils","MomentUtils","ThemeProvider","MaterialWidgets","BasicConfig","asyncFetch","rangeslider","useLoadMore","useAsyncSearch","forceAsyncSearch","selectedAsyncListValues","staticListValues","knownSpecialValues","loadMoreTitle","loadingMoreTitle","setOpen","asyncFetchMeta","setAsyncFetchMeta","loadingCnt","setLoadingCnt","isLoadingMore","setIsLoadingMore","setInputValue","setAsyncListValues","asyncFectchCnt","componentIsMounted","isSelectedLoadMore","nSelectedAsyncListValues","listValuesToArray","mergeListValues","canInitialLoad","canLoadMore","hasMore","canShowLoadMore","listValueToOption","fetchListValues","isLoadMore","offset","pageSize","newAsyncFetchCnt","current","newMeta","nValues","assumeHasMore","realNewMeta","loadListValues","x","loadListValuesDebounced","debounce","find","newSelectedListValues","getListValue","customItem","newSelectedValues","newInputValue","onSearch","onDropdownVisibleChange","isSpecialValue","valueOrOption","ADD_GROUP","ADD_CASE_GROUP","REMOVE_GROUP","SET_CONJUNCTION","SET_NOT","ADD_RULE","REMOVE_RULE","SET_FIELD","SET_OPERATOR","SET_VALUE","SET_VALUE_SRC","SET_OPERATOR_OPTION","SET_LOCK","SET_TREE","MOVE_ITEM","PLACEMENT_AFTER","PLACEMENT_BEFORE","PLACEMENT_APPEND","PLACEMENT_PREPEND","SET_DRAG_PROGRESS","SET_DRAG_START","SET_DRAG_END","addNewGroup","state","groupUuid","properties","groupPath","canAddNewRule","isDefaultCase","origState","addItem","defaultGroupProperties","merge","setIn","expandTreePath","defaultRuleProperties","fixPathsInTree","removeGroup","removeItem","parentPath","slice","hasChildren","fixEmptyGroupsInTree","isEmptyTree","removeRule","parentOperator","parentOperatorConfig","hasGroupCountRule","isParentRuleGroup","isEmptyParentGroup","canLeaveEmpty","initialEmptyWhere","deleteIn","setLock","lock","removeIsLockedInTree","conjunction","_addChildren1","children1","reduce","it","id1","it1","defaultItemProperties","Error","currentNumber","maxNumber","maxNumberOfCases","maxNumberOfRules","maxNesting","rootType","isTernary","targetItem","caseGroup","take","childrenPath","targetChildren","targetChildrenSize","getTotalRulesCountInTree","canAdd","isLastDefaultCase","newChildren","newChildrenWithLast","mergeIn","moveItem","fromPath","toPath","placement","from","getItemByPath","sourcePath","sourceChildren","to","targetPath","constants","isSameParent","isSourceInsideTarget","deepEqual","toArray","isTargetInsideSource","sourceSubpathFromTarget","targetSubpathFromSource","newTargetChildren","newSourceChildren","updateIn","expandTreeSubpath","_oldChildren","withMutations","r","entries","itemId","set","newField","showErrorMessage","currentType","currentProperties","wasRuleGroup","newFieldConfig","isRuleGroup","isRuleGroupExt","mode","isChangeToAnotherType","currentOperator","currentOperatorOptions","lastOp","newOperator","availOps","getOperatorsForField","strategy","getFirstOperator","console","warn","getNewValueForFieldOp","canReuseValue","newValueSrc","newValueType","operatorCardinality","groupProperties","newValueError","newOperatorOptions","defaultOperatorOptions","setOperator","currentField","operatorConfig","isInternalValueChange","calculatedValueType","calculateValueType","validateValue","validateError","fixedValue","w","fieldWidgetDefinition","_","vs","jsValues","rangeValidateError","isLastEmpty","isLastError","tree","setOperatorOption","checkEmptyGroups","fieldConfig","emptyDrag","dragging","y","h","mousePos","dragStart","getActionMeta","action","actionTypesToIgnore","mapValues","applyToJS","affectedField","getField","setTree","addRule","ruleType","toImmutableList","addDefaultCaseGroup","addCaseGroup","addGroup","setDragProgress","setDragStart","setDragEnd","Query","shouldComponentUpdate","liteShouldComponentUpdate","nextValue","oldValidatedTree","validatedTree","_updateActions","getMemoizedTree","dispatch","actions","bindActionCreators","oldConfig","newTree","newConfig","immutableEqual","__lastAction","renderBuilder","__isInternalValueChange","Component","ConnectedQuery","connect","context","displayName","QueryContainer","prevValue","getMemoizedConfig","createConfigMemo","createValidationMemo","reducer","emptyTree","defaultRoot","emptyState","unset","actionMeta","treeStoreReducer","store","createStore","nextConfig","isConfigChanged","storeValue","getState","isTreeChanged","currentTree","setState","Promise","resolve","get_children","QueryWrapper","classNames","require","_isReorderingTree","createSortableContainer","Builder","CanMoveFn","_getEventTarget","__mocked_window","document","body","window","onDragStart","dom","treeEl","closest","_isUsingLegacyReactDomRender","isUsingLegacyReactDomRender","classList","add","groupPadding","treeElContainer","scrollTop","_getScrollParent","tmpAllGroups","_getDraggableNodeEl","_getPlaceholderNodeEl","querySelectorAll","anyGroup","getComputedStyle","getPropertyValue","offsetLeft","offsetTop","offsetWidth","offsetHeight","itemInfo","clientX","clientY","eventTarget","addEventListener","onDrag","onDragEnd","doHandleDrag","startDragging","startMousePos","__mock_dom","dragEl","plhEl","plX","getBoundingClientRect","left","scrollX","plY","top","scrollY","startX","startY","startClientX","startClientY","startScrollTop","pos","moved","handleDrag","preventDefault","remove","_cacheEls","removeEventListener","getFlatTree","nextState","prevState","should","pureShouldComponentUpdate","chs","_prevProps","_prevState","oldPlX","oldPlY","indexId","ignoreCache","el","contains","querySelector","els","getElementsByClassName","node","overflowY","scrollHeight","_isScrollable","parentNode","dragInfo","canMoveFn","dragRect","plhRect","hovRect","treeRect","moveInfo","dragId","dragDirs","hrz","vrt","bottom","hovCNodeEl","trgCoord","right","__mocked_hov_container","hovNodeEl","elementFromPoint","rootGroupContainer","firstChild","isGroup","hovNodeId","getAttribute","hovEl","doAppend","doPrepend","hovHeight","hovII","trgRect","trgEl","trgII","altII","hovInnerEl","hovEl2","hovRect2","hovHeight2","lev","isSamePos","dragLeftOffset","dragLev","Math","round","availMoves","altMoves","isToRoot","isToCase","prevCaseId","prev","caseId","nextCaseId","next","prevCase","nextCase","addCaseII","am","toII","fromCaseII","toCaseII","bestMode","filteredMoves","trg","collapsed","isInside","tmp","toParentII","canMove","levs","curLev","allLevs","closestDragLev","logger","move","fromII","canRegroupCases","canLeaveEmptyCase","newLev","isBeforeAfter","isPend","isLev1","isParentChange","isStructChange","isForbiddenStructChange","parentType","isLockedChange","isLocked","isLastFromCase","_height","newRulesInTargetCase","leafsCount","GroupOrRule","handleDraggerMouseDown","nodeId","wrapper","isDraggingTempo","isDraggingMe","otherProps","isTrueLocked","styles","cn","ref","Operator","selectedField","selectedOperator","pickBy","_opts","isOpSelected","ops","sort","a","b","OperatorWrapper","selectedFieldPartsLabels","showOperator","showOperatorLabel","selectedFieldWidgetConfig","operatorInlineLabel","Field","hideForSelect","FieldWrapper","classname","OperatorOptions","operatorDefinitions","optionsFactory","basicOptionsProps","optionsCmp","Rule","ConnectedRuleContainer","removeSelf","changed","isInDraggingTempo","hasError","reordableNodesCnt","totalRulesCnt","parentReordableNodesCnt","createRuleContainer","RuleContainer","Draggable","selectedFieldConfig","isSelectedGroup","isFieldAndOpSelected","selectedOperatorConfig","selectedOperatorHasOptions","hideOperator","showDragIcon","showWidget","showOperatorOptions","confirmOptions","doRemove","isEmptyCurrentRule","onCancel","immutableFieldsMode","immutableOpsMode","immutableValuesMode","opOpts","renderBeforeWidget","renderAfterWidget","renderRuleError","oneValueError","error","onMouseDown","immutableGroupsMode","Btn","canShrinkValue","BtnGrp","renderOperatorOptions","renderError","drag","renderDrag","renderLock","del","renderDel","Group","ConnectedGroupContainer","_selectedConjunction","selectedConjunction","_getConjunctionOptions","oldConjunction","currentNesting","allowFurtherNesting","isRoot","createGroupContainer","groupActionsPositionList","topLeft","topCenter","topRight","bottomLeft","bottomCenter","bottomRight","GroupActions","canAddGroup","canAddRule","canDeleteGroup","position","setLockSwitch","addRuleBtn","addGroupBtn","delGroupBtn","BasicGroup","childrenClassName","renderBeforeActions","BeforeActions","renderAfterActions","AfterActions","renderItem","isEmptyCurrentGroup","isEmpty","isEmptyGroup","isEmptyRule","group","rule","renderHeaderWrapper","renderChildrenWrapper","renderFooterWrapper","showConjs","isOneChild","renderChildren","isGroupTopPosition","renderHeader","renderActions","toList","Item","extraPropsForItem","reordableNodesCntForItem","totalRulesCntForItem","isParentLocked","_item","Conjs","GroupContainer","RuleGroupActions","RuleGroup","RuleGroupExtActions","RuleGroupExt","renderGroupField","SwitchGroupActions","canAddDefault","addCaseGroupBtn","addDefaultCaseGroupBtn","SwitchGroup","hasDefaultCase","c","totalCasesCnt","casesToReorder","cnt","getTotalReordableNodesCountInTree","CaseGroup","renderHeaderLeft","renderHeaderCenter","renderCondition","getProperties","toObject","result","typeMap","rule_group","rule_group_ext","switch_group","case_group","itemComponent","isRequired","ConnectedSortableContainer","SortableContainer","_updPath","Map","queryBuilderFormat","usedFields","formatItem","formatGroup","formatRule","currentChild","defaultConjunction","rules","condition","hasUndefinedValues","fieldType","typeConfig","formatFieldName","secondField","ruleQuery","jsonLogicFormat","errors","logic","data","ff","p","pdef","ret","conjunctionDefinition","toLowerCase","groupField","groupOperator","groupOperatorDefinition","formattedValue","formatItemValue","isGroup0","resultQuery","formattedField","count","var","formatLogic","isRev","iValueSrc","iValueType","iValue","oldUsedFields","fvalue","currentValue","cValue","completeValue","fieldWidgetDef","fv","operatorDef","formatFunc","formattedArgs","argConfig","argValue","argValueSrc","formattedArgVal","formattedArgsArr","funcName","isMethod","jsonLogicIsMethod","obj","parentFieldDef","parentFieldName","varName","jsonLogicVar","buildFnToFormatOp","formatteOp","isReverseArgs","rangeOps","eqOps","isObject","mongodbFormat","_mongodbFormat","returnErrors","parents","_not","_canWrapExpr","_fieldName","_value","hasParentRuleGroup","realParentPath","groupFieldName","groupFieldDef","canHaveEmptyChildren","f","canShort","acc","totalQuery","filterQuery","as","_f","fvUseExpr","wrapExpr","formatRightField","rightFieldDefinition","fieldPartsLabels","fieldFullLabel","mongoFunc","mongoArgsAsObject","argsCnt","lastArg","argAsyncListValues","mongoFormatFunc","sqlFormat","_sqlFormat","revOpDef","canFormatOp","canFormatRevOp","valFieldDefinition","sqlFunc","sqlFormatFunc","argsStr","spelFormat","_spelFormat","formatSwitch","formatCase","cases","filteredCases","isRuleGroupArray","isSpelArray","realGroupOperator","checkOp","isGroupOpRev","realGroupOperatorDefinition","getSize","groupValue","formatExpression","objectIsFirstArg","isFunction","substring","sop","realOp","expectedValueType","fieldPartsConfigs","getFieldPartsConfigs","formatFieldFn","fieldPartsMeta","cnf","parentCnf","isSpelMap","isSpelItemMap","spelFunc","spelFormatFunc","queryString","conjStr","aggrArgs","_operator","fop","returnArgs","revOperatorDef","cutParentField","fieldLabel2","funcValue","formattedArgsWithNames","argName","buildEsRule","opConfig","widgetConfig","parameters","textField","determineField","elasticSearchScript","geoPointString","coordsNumberArray","top_left","lat","lon","bottom_right","buildEsGeoPoint","gte","lte","dateTime","lt","gt","buildEsRangeParameters","buildEsWildcardParameters","buildRegexpParameters","buildParameters","bool","must_not","elasticSearchFormat","recursiveFxn","childrenArray","valueSeq","occurrence","combinator","determineOccurrence","resultFlat","buildEsGroup","getTree","immutableTree","light","children1AsArray","getLightTree","loadTree","serTree","isImmutableTree","isTree","jsTreeToImmutable","parse","checkTree","extendedConfig","extendConfig","validateTree","isValidTree","getTreeBadFields","fromJS","outValue","toOrderedMap","valueJs","child","arrayUniq","arr","Set","loadFromJsonLogic","logicTree","_loadFromJsonLogic","conv","buildConv","jsTree","convertFromLogic","wrapInDefaultConj","immTree","opKey","opk","conjKey","fk","varKeys","isJsonLogic","beforeErrorsCnt","isEmptyOp","convertField","convertFunc","convertVal","convertConj","convertOp","afterErrorsCnt","floor","m","s","setMilliseconds","setHours","setMinutes","setSeconds","toISOString","normalizeField","argsArr","opts","funcKeys","fc","jsonLogicImport","parsed","argKeys","complexFields","complexFieldsGroupAncestors","fromEntries","ancs","fp","usedRuleGroups","topLevelFieldsFilter","groupToId","groupAncestors","at","parentFieldParts","shallowEqual","gf","gfc","j","splice","wrapInDefaultConjRuleGroup","parseRule","arity","_parseRule","isRevArgs","opKeys","jlField","having","init","op2","parseRes","havingVals","canRev","convertedArgs","asyncListValuesArr","loadFromSpel","_loadFromSpel","spelStr","compiledExpression","convertedObj","compileRes","SpelExpressionEvaluator","_compiledExpression","convertCompiled","convertToTree","expr","parentExpr","getType","getChildren","selection","lastChild","isSize","methodName","isLength","sourceParts","isThis","itype","getRaw","getValue","flatizeTernary","functionName","qid","cls","isVar","_processTernaryChildren","tern","if_val","else_val","forEach","convertPath","isError","convertArg","spel","parentSpel","literalTypes","string","null","groupFieldParts","_groupField","fullParts","isVariable","isUnary","funcToOpMap","buildRule","dateString","timeString","buildCaseValueConcat","buildRuleGroup","groupFilter","groupFieldValue","groupOpRule","compareArgs","leftSource","rightSource","leftVal","rightVal","isBetweenNormal","isBetweenRev","isBetween","isNumbers","isSameSource","oneSpel","convertChildren","fieldObj","opArg","ws","buildSimpleSwitch","caseI","buildCase","sw","valProperties","buildCaseValProperties","_processConcatChildren","convertedChild","convVal","widgetDef","importCaseValue","normVal","normErrors","NOW","jsonLogicCustomOps","now","RELATIVE_DATETIME","dim","abs","date_add","replace","mainWidgetProps","plus","minus","day","week","month","year","LOWER","str","UPPER","LINEAR_REGRESSION","coef","bias","Utils","BasicUtils","Export","Import","simulateAsyncFetch","cPageSize","delay","search","ceil","currentOffset","newOffset","debug","sleep","toStart","old","newFiltered","av","merged","lv","configKeys","configStore","configId","pickConfig","findConfig","savedConfig","findExtended","extendAndStore","__configId","_fieldsCntByType","_funcsCntByType","typesConfig","_extendTypeConfig","_extendTypesConfig","__fieldNames","_extendFieldsConfig","_extendFuncArgsConfig","defineProperty","enumerable","writable","typeWidgetConfig","typeWidgetOperators","excludeOperators","mergeArraysSmart","subconfig","_extendFieldConfig","funcDef","tmpIsOptional","reverse","argDef","isOptional","excludeOperatorsForField","keysToPutInFieldSettings","normalizeListValues","_isFuncArg","excludeOperatorsForType","fieldWidgetConfig","shouldIncludeOperators","preferWidgets","addOperators","computedFieldName","computeFieldName","getFieldRawConfig","fieldsKey","subfieldsKey","targetFields","part","pathKey","fConfig","l","unshift","fieldStr","getFuncArgConfig","mergeWith","objValue","srcValue","_key","_object","_source","_stack","widgetOpProps","fieldWidgetOpProps","mergedOpConfig","valueFieldSettings","mergedConfig","defaultField","canGetFirst","parentRuleGroupPath","getFirstField","fieldOperators","fieldDefaultOperator","setDefaultFieldAndOp","conjs","defaultRule","trim","charAt","escapeLike","any_start","any_end","escape","spelEscapeString","spelInlineList","javaType","jt","escapedVals","numberJavaTypes","numberToFloat","arrayToArray","isFinite","isNaN","spelFormatConcat","spelImportConcat","completeFuncValue","complValue","tmpHasOptional","filteredValueSources","filterValueSourcesForField","argDefaultValueSrc","completeArgValue","getDefaultArgValue","_checkFuncValue","firstValueSrc","_argConfig","_config","getReactRootNodeType","_reactRootContainer","getOwnPropertyNames","self","canUseUnsafe","UNSAFE_componentWillReceiveProps","componentWillReceiveProps","actionCreators","actionCreator","selectTypes","changedProp","canFix","isEndValue","currentValueSrc","currentValueType","currentAsyncListValues","clearValueOnChangeField","clearValueOnChangeOp","newOperatorConfig","currentFieldConfig","currentWidget","newWidget","currentValueWidget","newValueWidget","canReuseWidget","firstWidgetConfig","valueFixes","valueErrors","vType","vSrc","isValidSrc","fixValue","dropValue","_ignore","getFirstDefined","vt","parentPathArr","firstField","keysPath","fieldOps","onlyKeys","_curr","parentParts","_getWidgetsAndSrcsForFieldOp","widgetValueSrc","canAddValueSrc","widgetWeight","wg","w1","w2","minCnt","filteredValueSrcs","tableName","fieldPartsCopy","_default","n","useWordBoundary","subString","substr","lastIndexOf","v1","v2","equals","deep","shallowEqualArrays","shallowEqualObjects","arrA","arrB","len","isEqual","objA","objB","aKeys","bKeys","listValue","listValuesObj","listValuesArr","getItemInListValues","mapFn","defaultTreeDataMap","pId","rootPId","getPathInListValues","tdm","parentId","getChildrenInListValues","isMulti","treeData","treeSelectOnlyLeafs","childrenValues","selectable","extendTreeData","rind","_flatize","childrenCount","flatizeTreeData","removePrefixPath","isPrefix","isImmutable","arr1","arr2","orig","after","before","newOp","rel","relOp","isDev","process","devMode","verbose","log","getLogger","suffix","interpose","skip","apply","removePathsInTree","_processNode","itemPath","removeIn","_childId","currPath","currId","constructor","childId","allChildrenGone","curr","realHeight","_flatizeTree","insideCollapsed","insideLocked","insideRuleGroup","childrenIds","_child","isLeaf","itemsBefore","leaf","_top","itemsAfter","subinfo","prevId","nextId","badFields","getSwitchValues","caseValue","query_builder_seed","timePart","getTime","random","isTypeOf","typeOf","originalTree","validateAndFixTree","_oldTree","removeEmptyGroups","removeIncompleteRules","validateItem","oldChildren","sanitized","submeta","validateGroup","oldSerialized","newSerialized","isComplete","validateRule","isRawValue","validError","validateFieldValue","validateFuncValue","validateNormalValue","validResult","validateValueInList","List","goodVals","badVals","vv","goodValues","badValues","plural","wConfig","wType","_valueSrc","leftFieldStr","rightFieldStr","argValidError","fixedArgVal","webpackContext","req","webpackContextResolve","__webpack_require__","code","module","exports"],"sourceRoot":""}